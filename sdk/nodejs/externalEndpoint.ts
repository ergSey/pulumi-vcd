// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ExternalEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ExternalEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExternalEndpointState, opts?: pulumi.CustomResourceOptions): ExternalEndpoint {
        return new ExternalEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/externalEndpoint:ExternalEndpoint';

    /**
     * Returns true if the given object is an instance of ExternalEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExternalEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExternalEndpoint.__pulumiType;
    }

    /**
     * Description of the External Endpoint
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
     * It is `false` by default
     */
    public readonly disableOnRemoval!: pulumi.Output<boolean | undefined>;
    /**
     * Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
     * To disable it automatically on removal, set `disable_on_removal=true` (see below)
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The endpoint which requests will be redirected to. Must use HTTPS protocol
     */
    public readonly rootUrl!: pulumi.Output<string>;
    /**
     * The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
     */
    public readonly vendor!: pulumi.Output<string>;
    /**
     * The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
     */
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a ExternalEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExternalEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExternalEndpointArgs | ExternalEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExternalEndpointState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disableOnRemoval"] = state ? state.disableOnRemoval : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rootUrl"] = state ? state.rootUrl : undefined;
            resourceInputs["vendor"] = state ? state.vendor : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ExternalEndpointArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.rootUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rootUrl'");
            }
            if ((!args || args.vendor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vendor'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disableOnRemoval"] = args ? args.disableOnRemoval : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rootUrl"] = args ? args.rootUrl : undefined;
            resourceInputs["vendor"] = args ? args.vendor : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExternalEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExternalEndpoint resources.
 */
export interface ExternalEndpointState {
    /**
     * Description of the External Endpoint
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
     * It is `false` by default
     */
    disableOnRemoval?: pulumi.Input<boolean>;
    /**
     * Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
     * To disable it automatically on removal, set `disable_on_removal=true` (see below)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
     */
    name?: pulumi.Input<string>;
    /**
     * The endpoint which requests will be redirected to. Must use HTTPS protocol
     */
    rootUrl?: pulumi.Input<string>;
    /**
     * The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
     */
    vendor?: pulumi.Input<string>;
    /**
     * The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExternalEndpoint resource.
 */
export interface ExternalEndpointArgs {
    /**
     * Description of the External Endpoint
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
     * It is `false` by default
     */
    disableOnRemoval?: pulumi.Input<boolean>;
    /**
     * Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
     * To disable it automatically on removal, set `disable_on_removal=true` (see below)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
     */
    name?: pulumi.Input<string>;
    /**
     * The endpoint which requests will be redirected to. Must use HTTPS protocol
     */
    rootUrl: pulumi.Input<string>;
    /**
     * The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
     */
    vendor: pulumi.Input<string>;
    /**
     * The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
     */
    version: pulumi.Input<string>;
}
