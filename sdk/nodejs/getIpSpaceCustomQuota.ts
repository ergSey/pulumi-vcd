// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a data source to read Custom Quotas for a given Org in a particular IP Space.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const org1 = vcd.getIpSpaceCustomQuota({
 *     orgId: org1VcdOrg.id,
 *     ipSpaceId: space1.id,
 * });
 * ```
 */
export function getIpSpaceCustomQuota(args: GetIpSpaceCustomQuotaArgs, opts?: pulumi.InvokeOptions): Promise<GetIpSpaceCustomQuotaResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getIpSpaceCustomQuota:getIpSpaceCustomQuota", {
        "ipSpaceId": args.ipSpaceId,
        "orgId": args.orgId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpSpaceCustomQuota.
 */
export interface GetIpSpaceCustomQuotaArgs {
    /**
     * IP Space ID to read Custom Quotas
     */
    ipSpaceId: string;
    /**
     * Organization ID, for which the Custom Quota should be read
     */
    orgId: string;
}

/**
 * A collection of values returned by getIpSpaceCustomQuota.
 */
export interface GetIpSpaceCustomQuotaResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipPrefixQuotas: outputs.GetIpSpaceCustomQuotaIpPrefixQuota[];
    readonly ipRangeQuota: string;
    readonly ipSpaceId: string;
    readonly orgId: string;
}
/**
 * Provides a data source to read Custom Quotas for a given Org in a particular IP Space.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const org1 = vcd.getIpSpaceCustomQuota({
 *     orgId: org1VcdOrg.id,
 *     ipSpaceId: space1.id,
 * });
 * ```
 */
export function getIpSpaceCustomQuotaOutput(args: GetIpSpaceCustomQuotaOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIpSpaceCustomQuotaResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getIpSpaceCustomQuota:getIpSpaceCustomQuota", {
        "ipSpaceId": args.ipSpaceId,
        "orgId": args.orgId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpSpaceCustomQuota.
 */
export interface GetIpSpaceCustomQuotaOutputArgs {
    /**
     * IP Space ID to read Custom Quotas
     */
    ipSpaceId: pulumi.Input<string>;
    /**
     * Organization ID, for which the Custom Quota should be read
     */
    orgId: pulumi.Input<string>;
}
