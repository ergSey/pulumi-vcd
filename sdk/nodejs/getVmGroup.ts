// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director VM Group data source. This can be used to fetch vSphere VM Groups and create VM Placement Policies with them.
 *
 * Supported in provider *v3.8+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_vdc = vcd.getProviderVdc({
 *     name: "my-pvdc",
 * });
 * const vm_group = my_vdc.then(my_vdc => vcd.getVmGroup({
 *     name: "vmware-license-group",
 *     providerVdcId: my_vdc.id,
 * }));
 * ```
 *
 * ## Attributes reference
 *
 * * `clusterName` - Name of the vSphere cluster associated to this VM Group.
 * * `namedVmGroupId` - ID of the named VM Group. Used to create Logical VM Groups.
 * * `vcenterId` - ID of the vCenter server.
 * * `clusterMoref` - Managed object reference of the vSphere cluster associated to this VM Group.
 */
export function getVmGroup(args: GetVmGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetVmGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getVmGroup:getVmGroup", {
        "name": args.name,
        "providerVdcId": args.providerVdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmGroup.
 */
export interface GetVmGroupArgs {
    /**
     * The name of VM Group to fetch from vSphere.
     */
    name: string;
    /**
     * The ID of [Provider VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc) to which the VM Group belongs.
     */
    providerVdcId: string;
}

/**
 * A collection of values returned by getVmGroup.
 */
export interface GetVmGroupResult {
    readonly clusterMoref: string;
    readonly clusterName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly namedVmGroupId: string;
    readonly providerVdcId: string;
    readonly vcenterId: string;
}
/**
 * Provides a VMware Cloud Director VM Group data source. This can be used to fetch vSphere VM Groups and create VM Placement Policies with them.
 *
 * Supported in provider *v3.8+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_vdc = vcd.getProviderVdc({
 *     name: "my-pvdc",
 * });
 * const vm_group = my_vdc.then(my_vdc => vcd.getVmGroup({
 *     name: "vmware-license-group",
 *     providerVdcId: my_vdc.id,
 * }));
 * ```
 *
 * ## Attributes reference
 *
 * * `clusterName` - Name of the vSphere cluster associated to this VM Group.
 * * `namedVmGroupId` - ID of the named VM Group. Used to create Logical VM Groups.
 * * `vcenterId` - ID of the vCenter server.
 * * `clusterMoref` - Managed object reference of the vSphere cluster associated to this VM Group.
 */
export function getVmGroupOutput(args: GetVmGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVmGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getVmGroup:getVmGroup", {
        "name": args.name,
        "providerVdcId": args.providerVdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmGroup.
 */
export interface GetVmGroupOutputArgs {
    /**
     * The name of VM Group to fetch from vSphere.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of [Provider VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc) to which the VM Group belongs.
     */
    providerVdcId: pulumi.Input<string>;
}
