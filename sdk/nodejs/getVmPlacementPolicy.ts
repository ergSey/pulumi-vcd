// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director VM Placement Policy data source. This can be used to read a VM Placement Policy.
 *
 * Supported in provider *v3.8+* and requires VCD 10.2+
 *
 * > **Note:** This resource can be used by both system administrators and tenant users.
 *
 * ## Example Usage
 *
 * ### System Administrators
 *
 * System administrators have full privileges to retrieve information of the Provider VDC to which the VM Placement Policy
 * belongs. The way to fetch a VM Placement Policy in this case would be:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_vdc = vcd.getOrgVdc({
 *     org: "test",
 *     name: "vdc-test",
 * });
 * const my_pvdc = my_vdc.then(my_vdc => vcd.getProviderVdc({
 *     name: my_vdc.providerVdcName,
 * }));
 * const tf_policy_name = my_pvdc.then(my_pvdc => vcd.getVmPlacementPolicy({
 *     name: "my-policy",
 *     providerVdcId: my_pvdc.id,
 * }));
 * export const policyId = tf_policy_name.then(tf_policy_name => tf_policy_name.id);
 * ```
 *
 * ### Tenant Users
 *
 * Tenant users don't have access to Provider VDC information so the only way to retrieve VM Placement Policies is to
 * fetch them using the VDC information. The only constraint is that the desired VM Placement Policy **must be assigned
 * to the VDC**.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_vdc = vcd.getOrgVdc({
 *     org: "test",
 *     name: "vdc-test",
 * });
 * const tf_policy_name = my_vdc.then(my_vdc => vcd.getVmPlacementPolicy({
 *     name: "my-policy",
 *     vdcId: my_vdc.id,
 * }));
 * export const policyId = tf_policy_name.then(tf_policy_name => tf_policy_name.id);
 * ```
 */
export function getVmPlacementPolicy(args: GetVmPlacementPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetVmPlacementPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getVmPlacementPolicy:getVmPlacementPolicy", {
        "name": args.name,
        "providerVdcId": args.providerVdcId,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmPlacementPolicy.
 */
export interface GetVmPlacementPolicyArgs {
    /**
     * The name VM Placement Policy.
     */
    name: string;
    /**
     * The ID of the [Provider VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc) to which the VM Placement Policy belongs.
     */
    providerVdcId?: string;
    /**
     * The ID of the [VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org_vdc) to which the VM Placement Policy is assigned.
     */
    vdcId?: string;
}

/**
 * A collection of values returned by getVmPlacementPolicy.
 */
export interface GetVmPlacementPolicyResult {
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * This attribute can't be retrieved if the data source is used by a tenant user when fetching by `vdcId`.
     */
    readonly logicalVmGroupIds: string[];
    readonly name: string;
    readonly providerVdcId?: string;
    readonly vdcId?: string;
    /**
     * This attribute can't be retrieved if the data source is used by a tenant user when fetching by `vdcId`.
     */
    readonly vmGroupIds: string[];
}
/**
 * Provides a VMware Cloud Director VM Placement Policy data source. This can be used to read a VM Placement Policy.
 *
 * Supported in provider *v3.8+* and requires VCD 10.2+
 *
 * > **Note:** This resource can be used by both system administrators and tenant users.
 *
 * ## Example Usage
 *
 * ### System Administrators
 *
 * System administrators have full privileges to retrieve information of the Provider VDC to which the VM Placement Policy
 * belongs. The way to fetch a VM Placement Policy in this case would be:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_vdc = vcd.getOrgVdc({
 *     org: "test",
 *     name: "vdc-test",
 * });
 * const my_pvdc = my_vdc.then(my_vdc => vcd.getProviderVdc({
 *     name: my_vdc.providerVdcName,
 * }));
 * const tf_policy_name = my_pvdc.then(my_pvdc => vcd.getVmPlacementPolicy({
 *     name: "my-policy",
 *     providerVdcId: my_pvdc.id,
 * }));
 * export const policyId = tf_policy_name.then(tf_policy_name => tf_policy_name.id);
 * ```
 *
 * ### Tenant Users
 *
 * Tenant users don't have access to Provider VDC information so the only way to retrieve VM Placement Policies is to
 * fetch them using the VDC information. The only constraint is that the desired VM Placement Policy **must be assigned
 * to the VDC**.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_vdc = vcd.getOrgVdc({
 *     org: "test",
 *     name: "vdc-test",
 * });
 * const tf_policy_name = my_vdc.then(my_vdc => vcd.getVmPlacementPolicy({
 *     name: "my-policy",
 *     vdcId: my_vdc.id,
 * }));
 * export const policyId = tf_policy_name.then(tf_policy_name => tf_policy_name.id);
 * ```
 */
export function getVmPlacementPolicyOutput(args: GetVmPlacementPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVmPlacementPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getVmPlacementPolicy:getVmPlacementPolicy", {
        "name": args.name,
        "providerVdcId": args.providerVdcId,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmPlacementPolicy.
 */
export interface GetVmPlacementPolicyOutputArgs {
    /**
     * The name VM Placement Policy.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the [Provider VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc) to which the VM Placement Policy belongs.
     */
    providerVdcId?: pulumi.Input<string>;
    /**
     * The ID of the [VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org_vdc) to which the VM Placement Policy is assigned.
     */
    vdcId?: pulumi.Input<string>;
}
