// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a data source for available rights.
 *
 * Supported in provider *v3.3+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * export = async () => {
 *     const some_right = await vcd.getRight({
 *         name: "Catalog: Add vApp from My Cloud",
 *     });
 *     return {
 *         "some-right": some_right,
 *     };
 * }
 * ```
 *
 * ## More information
 *
 * See [Roles management](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/roles_management) for a broader description of how roles and
 * rights work together.
 */
export function getRight(args: GetRightArgs, opts?: pulumi.InvokeOptions): Promise<GetRightResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getRight:getRight", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRight.
 */
export interface GetRightArgs {
    /**
     * The name of the right.
     */
    name: string;
}

/**
 * A collection of values returned by getRight.
 */
export interface GetRightResult {
    /**
     * Key used for internationalization
     * * `right type` - Type of the right (VIEW or MODIFY)
     */
    readonly bundleKey: string;
    /**
     * The ID of the category for this right
     */
    readonly categoryId: string;
    /**
     * A description of the right
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of rights that are implied with this one
     */
    readonly impliedRights: outputs.GetRightImpliedRight[];
    readonly name: string;
    readonly rightType: string;
}
/**
 * Provides a data source for available rights.
 *
 * Supported in provider *v3.3+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * export = async () => {
 *     const some_right = await vcd.getRight({
 *         name: "Catalog: Add vApp from My Cloud",
 *     });
 *     return {
 *         "some-right": some_right,
 *     };
 * }
 * ```
 *
 * ## More information
 *
 * See [Roles management](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/roles_management) for a broader description of how roles and
 * rights work together.
 */
export function getRightOutput(args: GetRightOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRightResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getRight:getRight", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRight.
 */
export interface GetRightOutputArgs {
    /**
     * The name of the right.
     */
    name: pulumi.Input<string>;
}
