// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director NSX-V Distributed Firewall data source used to read an existing application group.
 *
 * Supported in provider *v3.9+*
 */
export function getNsxvApplicationGroup(args: GetNsxvApplicationGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxvApplicationGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxvApplicationGroup:getNsxvApplicationGroup", {
        "name": args.name,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxvApplicationGroup.
 */
export interface GetNsxvApplicationGroupArgs {
    /**
     * The name of the application group
     */
    name: string;
    /**
     * The ID of VDC to use
     */
    vdcId: string;
}

/**
 * A collection of values returned by getNsxvApplicationGroup.
 */
export interface GetNsxvApplicationGroupResult {
    /**
     * The list of the applications belonging to this group. For each one we get the following:
     */
    readonly applications: outputs.GetNsxvApplicationGroupApplication[];
    /**
     * The identifier of the application groups
     */
    readonly id: string;
    /**
     * The name of the application
     */
    readonly name: string;
    readonly vdcId: string;
}
/**
 * Provides a VMware Cloud Director NSX-V Distributed Firewall data source used to read an existing application group.
 *
 * Supported in provider *v3.9+*
 */
export function getNsxvApplicationGroupOutput(args: GetNsxvApplicationGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNsxvApplicationGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNsxvApplicationGroup:getNsxvApplicationGroup", {
        "name": args.name,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxvApplicationGroup.
 */
export interface GetNsxvApplicationGroupOutputArgs {
    /**
     * The name of the application group
     */
    name: pulumi.Input<string>;
    /**
     * The ID of VDC to use
     */
    vdcId: pulumi.Input<string>;
}
