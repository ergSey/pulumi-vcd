// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a data source to read a VMware Cloud Director Org association data to be used for association with another Org.
 *
 * Supported in provider *v3.13+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_org = vcd.getOrg({
 *     name: "my-org",
 * });
 * const currentOrg = my_org.then(my_org => vcd.getMultisiteOrgData({
 *     orgId: my_org.id,
 *     downloadToFile: "filename.xml",
 * }));
 * ```
 *
 * ## More information
 *
 * See [Site and Org association](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/site_org_association) for a broader description
 * of association workflows.
 */
export function getMultisiteOrgData(args: GetMultisiteOrgDataArgs, opts?: pulumi.InvokeOptions): Promise<GetMultisiteOrgDataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getMultisiteOrgData:getMultisiteOrgData", {
        "downloadToFile": args.downloadToFile,
        "orgId": args.orgId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMultisiteOrgData.
 */
export interface GetMultisiteOrgDataArgs {
    /**
     * Name of the file that will contain the data needed to associate this Org to another one, 
     * either on the same VCD or in a different one.
     * Contains the same data returned in `associationData`.
     */
    downloadToFile?: string;
    /**
     * The ID of the organization for which we need to collect the data.
     */
    orgId: string;
}

/**
 * A collection of values returned by getMultisiteOrgData.
 */
export interface GetMultisiteOrgDataResult {
    /**
     * The data needed to associate this Org to another one. Contains the same data that would be saved into
     * the file defined in `downloadToFile`.
     */
    readonly associationData: string;
    /**
     * An alphabetically sorted list of current associations.
     */
    readonly associations: string[];
    readonly downloadToFile?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The number of current associations with other Orgs.
     */
    readonly numberOfAssociations: number;
    readonly orgId: string;
}
/**
 * Provides a data source to read a VMware Cloud Director Org association data to be used for association with another Org.
 *
 * Supported in provider *v3.13+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_org = vcd.getOrg({
 *     name: "my-org",
 * });
 * const currentOrg = my_org.then(my_org => vcd.getMultisiteOrgData({
 *     orgId: my_org.id,
 *     downloadToFile: "filename.xml",
 * }));
 * ```
 *
 * ## More information
 *
 * See [Site and Org association](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/site_org_association) for a broader description
 * of association workflows.
 */
export function getMultisiteOrgDataOutput(args: GetMultisiteOrgDataOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMultisiteOrgDataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getMultisiteOrgData:getMultisiteOrgData", {
        "downloadToFile": args.downloadToFile,
        "orgId": args.orgId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMultisiteOrgData.
 */
export interface GetMultisiteOrgDataOutputArgs {
    /**
     * Name of the file that will contain the data needed to associate this Org to another one, 
     * either on the same VCD or in a different one.
     * Contains the same data returned in `associationData`.
     */
    downloadToFile?: pulumi.Input<string>;
    /**
     * The ID of the organization for which we need to collect the data.
     */
    orgId: pulumi.Input<string>;
}
