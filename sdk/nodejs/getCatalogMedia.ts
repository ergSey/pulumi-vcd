// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director Catalog media data source. A Catalog media can be used to reference a catalog media and use its
 * data within other resources or data sources.
 *
 * Supported in provider *v2.5+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_catalog = vcd.getCatalog({
 *     org: "my-org",
 *     name: "my-catalog",
 * });
 * const existing_media = my_catalog.then(my_catalog => vcd.getCatalogMedia({
 *     org: "my-org",
 *     catalogId: my_catalog.id,
 *     name: "my-media",
 * }));
 * export const mediaSize = existing_media.then(existing_media => existing_media.size);
 * export const typeIsIso = existing_media.then(existing_media => existing_media.isIso);
 * ```
 *
 * ## Filter arguments
 *
 * (Supported in provider *v2.9+*)
 *
 * * `nameRegex` - (Optional) matches the name using a regular expression.
 * * `date` - (Optional) is an expression starting with an operator (`>`, `<`, `>=`, `<=`, `==`), followed by a date, with
 *   optional spaces in between. For example: `> 2020-02-01 12:35:00.523Z`
 *   The filter recognizes several formats, but one of `yyyy-mm-dd [hh:mm[:ss[.nnnZ]]]` or `dd-MMM-yyyy [hh:mm[:ss[.nnnZ]]]`
 *   is recommended.
 *   Comparison with equality operator (`==`) need to define the date to the microseconds.
 * * `latest` - (Optional) If `true`, retrieve the latest item among the ones matching other parameters. If no other parameters
 *   are set, it retrieves the newest item.
 * * `earliest` - (Optional) If `true`, retrieve the earliest item among the ones matching other parameters. If no other parameters
 *   are set, it retrieves the oldest item.
 * * `metadata` - (Optional) One or more parameters that will match metadata contents.
 *
 * See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
 */
export function getCatalogMedia(args?: GetCatalogMediaArgs, opts?: pulumi.InvokeOptions): Promise<GetCatalogMediaResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getCatalogMedia:getCatalogMedia", {
        "catalog": args.catalog,
        "catalogId": args.catalogId,
        "downloadToFile": args.downloadToFile,
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getCatalogMedia.
 */
export interface GetCatalogMediaArgs {
    /**
     * The name of the catalog to which media file belongs. It's mandatory if `catalogId` is not used.
     *
     * @deprecated use catalogId instead, especially if using a shared catalog
     */
    catalog?: string;
    /**
     * The ID of the catalog to which the media file belongs. It's mandatory if `catalog` field is not used.
     */
    catalogId?: string;
    downloadToFile?: string;
    /**
     * Retrieves the data source using one or more filter parameters
     */
    filter?: inputs.GetCatalogMediaFilter;
    /**
     * Media name in catalog (optional when `filter` is used)
     */
    name?: string;
    /**
     * The name of organization to use, optional if defined at provider level
     */
    org?: string;
}

/**
 * A collection of values returned by getCatalogMedia.
 */
export interface GetCatalogMediaResult {
    /**
     * @deprecated use catalogId instead, especially if using a shared catalog
     */
    readonly catalog: string;
    readonly catalogId?: string;
    readonly catalogItemId: string;
    readonly creationDate: string;
    readonly description: string;
    readonly downloadToFile?: string;
    readonly filter?: outputs.GetCatalogMediaFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isIso: boolean;
    readonly isPublished: boolean;
    /**
     * @deprecated Use metadataEntry instead
     */
    readonly metadata: {[key: string]: string};
    readonly metadataEntries: outputs.GetCatalogMediaMetadataEntry[];
    readonly name?: string;
    readonly org?: string;
    readonly ownerName: string;
    readonly size: number;
    readonly status: string;
    readonly storageProfileName: string;
}
/**
 * Provides a VMware Cloud Director Catalog media data source. A Catalog media can be used to reference a catalog media and use its
 * data within other resources or data sources.
 *
 * Supported in provider *v2.5+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_catalog = vcd.getCatalog({
 *     org: "my-org",
 *     name: "my-catalog",
 * });
 * const existing_media = my_catalog.then(my_catalog => vcd.getCatalogMedia({
 *     org: "my-org",
 *     catalogId: my_catalog.id,
 *     name: "my-media",
 * }));
 * export const mediaSize = existing_media.then(existing_media => existing_media.size);
 * export const typeIsIso = existing_media.then(existing_media => existing_media.isIso);
 * ```
 *
 * ## Filter arguments
 *
 * (Supported in provider *v2.9+*)
 *
 * * `nameRegex` - (Optional) matches the name using a regular expression.
 * * `date` - (Optional) is an expression starting with an operator (`>`, `<`, `>=`, `<=`, `==`), followed by a date, with
 *   optional spaces in between. For example: `> 2020-02-01 12:35:00.523Z`
 *   The filter recognizes several formats, but one of `yyyy-mm-dd [hh:mm[:ss[.nnnZ]]]` or `dd-MMM-yyyy [hh:mm[:ss[.nnnZ]]]`
 *   is recommended.
 *   Comparison with equality operator (`==`) need to define the date to the microseconds.
 * * `latest` - (Optional) If `true`, retrieve the latest item among the ones matching other parameters. If no other parameters
 *   are set, it retrieves the newest item.
 * * `earliest` - (Optional) If `true`, retrieve the earliest item among the ones matching other parameters. If no other parameters
 *   are set, it retrieves the oldest item.
 * * `metadata` - (Optional) One or more parameters that will match metadata contents.
 *
 * See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
 */
export function getCatalogMediaOutput(args?: GetCatalogMediaOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCatalogMediaResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getCatalogMedia:getCatalogMedia", {
        "catalog": args.catalog,
        "catalogId": args.catalogId,
        "downloadToFile": args.downloadToFile,
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getCatalogMedia.
 */
export interface GetCatalogMediaOutputArgs {
    /**
     * The name of the catalog to which media file belongs. It's mandatory if `catalogId` is not used.
     *
     * @deprecated use catalogId instead, especially if using a shared catalog
     */
    catalog?: pulumi.Input<string>;
    /**
     * The ID of the catalog to which the media file belongs. It's mandatory if `catalog` field is not used.
     */
    catalogId?: pulumi.Input<string>;
    downloadToFile?: pulumi.Input<string>;
    /**
     * Retrieves the data source using one or more filter parameters
     */
    filter?: pulumi.Input<inputs.GetCatalogMediaFilterArgs>;
    /**
     * Media name in catalog (optional when `filter` is used)
     */
    name?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level
     */
    org?: pulumi.Input<string>;
}
