// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NsxvSnat extends pulumi.CustomResource {
    /**
     * Get an existing NsxvSnat resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NsxvSnatState, opts?: pulumi.CustomResourceOptions): NsxvSnat {
        return new NsxvSnat(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/nsxvSnat:NsxvSnat';

    /**
     * Returns true if the given object is an instance of NsxvSnat.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NsxvSnat {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NsxvSnat.__pulumiType;
    }

    /**
     * Free text description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the edge gateway on which to apply the SNAT rule.
     */
    public readonly edgeGateway!: pulumi.Output<string>;
    /**
     * Defines if the rule is enabaled. Default `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Defines if the logging for this rule is enabaled. Default `false`.
     */
    public readonly loggingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the network on which to apply the SNAT rule.
     */
    public readonly networkName!: pulumi.Output<string>;
    /**
     * Type of the network on which to apply the DNAT rule. Possible values
     * `org` or `ext`.
     */
    public readonly networkType!: pulumi.Output<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful
     * when connected as sysadmin working across different organisations.
     */
    public readonly org!: pulumi.Output<string | undefined>;
    /**
     * IP address, range or subnet. These addresses are the IP addresses
     * of one or more virtual machines for which you are configuring the SNAT rule so that they can send
     * traffic to the external network.
     */
    public readonly originalAddress!: pulumi.Output<string>;
    /**
     * This can be used to specify user-controlled rule tag. If not specified,
     * it will report rule ID after creation. Must be between 65537-131072.
     */
    public readonly ruleTag!: pulumi.Output<number>;
    /**
     * Possible values - `user`, `internalHigh`.
     */
    public readonly ruleType!: pulumi.Output<string>;
    /**
     * IP address, range or subnet. This address is always the public
     * IP address of the gateway for which you are configuring the SNAT rule. Specifies the IP address to
     * which source addresses (the virtual machines) on outbound packets are translated to when they send
     * traffic to the external network.
     */
    public readonly translatedAddress!: pulumi.Output<string | undefined>;
    /**
     * The name of VDC to use, optional if defined at provider level.
     */
    public readonly vdc!: pulumi.Output<string | undefined>;

    /**
     * Create a NsxvSnat resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NsxvSnatArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NsxvSnatArgs | NsxvSnatState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NsxvSnatState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["edgeGateway"] = state ? state.edgeGateway : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["loggingEnabled"] = state ? state.loggingEnabled : undefined;
            resourceInputs["networkName"] = state ? state.networkName : undefined;
            resourceInputs["networkType"] = state ? state.networkType : undefined;
            resourceInputs["org"] = state ? state.org : undefined;
            resourceInputs["originalAddress"] = state ? state.originalAddress : undefined;
            resourceInputs["ruleTag"] = state ? state.ruleTag : undefined;
            resourceInputs["ruleType"] = state ? state.ruleType : undefined;
            resourceInputs["translatedAddress"] = state ? state.translatedAddress : undefined;
            resourceInputs["vdc"] = state ? state.vdc : undefined;
        } else {
            const args = argsOrState as NsxvSnatArgs | undefined;
            if ((!args || args.edgeGateway === undefined) && !opts.urn) {
                throw new Error("Missing required property 'edgeGateway'");
            }
            if ((!args || args.networkName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkName'");
            }
            if ((!args || args.networkType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkType'");
            }
            if ((!args || args.originalAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originalAddress'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["edgeGateway"] = args ? args.edgeGateway : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["loggingEnabled"] = args ? args.loggingEnabled : undefined;
            resourceInputs["networkName"] = args ? args.networkName : undefined;
            resourceInputs["networkType"] = args ? args.networkType : undefined;
            resourceInputs["org"] = args ? args.org : undefined;
            resourceInputs["originalAddress"] = args ? args.originalAddress : undefined;
            resourceInputs["ruleTag"] = args ? args.ruleTag : undefined;
            resourceInputs["ruleType"] = args ? args.ruleType : undefined;
            resourceInputs["translatedAddress"] = args ? args.translatedAddress : undefined;
            resourceInputs["vdc"] = args ? args.vdc : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NsxvSnat.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NsxvSnat resources.
 */
export interface NsxvSnatState {
    /**
     * Free text description.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the edge gateway on which to apply the SNAT rule.
     */
    edgeGateway?: pulumi.Input<string>;
    /**
     * Defines if the rule is enabaled. Default `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Defines if the logging for this rule is enabaled. Default `false`.
     */
    loggingEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the network on which to apply the SNAT rule.
     */
    networkName?: pulumi.Input<string>;
    /**
     * Type of the network on which to apply the DNAT rule. Possible values
     * `org` or `ext`.
     */
    networkType?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful
     * when connected as sysadmin working across different organisations.
     */
    org?: pulumi.Input<string>;
    /**
     * IP address, range or subnet. These addresses are the IP addresses
     * of one or more virtual machines for which you are configuring the SNAT rule so that they can send
     * traffic to the external network.
     */
    originalAddress?: pulumi.Input<string>;
    /**
     * This can be used to specify user-controlled rule tag. If not specified,
     * it will report rule ID after creation. Must be between 65537-131072.
     */
    ruleTag?: pulumi.Input<number>;
    /**
     * Possible values - `user`, `internalHigh`.
     */
    ruleType?: pulumi.Input<string>;
    /**
     * IP address, range or subnet. This address is always the public
     * IP address of the gateway for which you are configuring the SNAT rule. Specifies the IP address to
     * which source addresses (the virtual machines) on outbound packets are translated to when they send
     * traffic to the external network.
     */
    translatedAddress?: pulumi.Input<string>;
    /**
     * The name of VDC to use, optional if defined at provider level.
     */
    vdc?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NsxvSnat resource.
 */
export interface NsxvSnatArgs {
    /**
     * Free text description.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the edge gateway on which to apply the SNAT rule.
     */
    edgeGateway: pulumi.Input<string>;
    /**
     * Defines if the rule is enabaled. Default `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Defines if the logging for this rule is enabaled. Default `false`.
     */
    loggingEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the network on which to apply the SNAT rule.
     */
    networkName: pulumi.Input<string>;
    /**
     * Type of the network on which to apply the DNAT rule. Possible values
     * `org` or `ext`.
     */
    networkType: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful
     * when connected as sysadmin working across different organisations.
     */
    org?: pulumi.Input<string>;
    /**
     * IP address, range or subnet. These addresses are the IP addresses
     * of one or more virtual machines for which you are configuring the SNAT rule so that they can send
     * traffic to the external network.
     */
    originalAddress: pulumi.Input<string>;
    /**
     * This can be used to specify user-controlled rule tag. If not specified,
     * it will report rule ID after creation. Must be between 65537-131072.
     */
    ruleTag?: pulumi.Input<number>;
    /**
     * Possible values - `user`, `internalHigh`.
     */
    ruleType?: pulumi.Input<string>;
    /**
     * IP address, range or subnet. This address is always the public
     * IP address of the gateway for which you are configuring the SNAT rule. Specifies the IP address to
     * which source addresses (the virtual machines) on outbound packets are translated to when they send
     * traffic to the external network.
     */
    translatedAddress?: pulumi.Input<string>;
    /**
     * The name of VDC to use, optional if defined at provider level.
     */
    vdc?: pulumi.Input<string>;
}
