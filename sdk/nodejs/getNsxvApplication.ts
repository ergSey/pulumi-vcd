// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director data source for reading NSX-V distributed firewall applications.
 *
 * Supported in provider *v3.9+*
 */
export function getNsxvApplication(args: GetNsxvApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxvApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxvApplication:getNsxvApplication", {
        "name": args.name,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxvApplication.
 */
export interface GetNsxvApplicationArgs {
    /**
     * The name of the application
     */
    name: string;
    /**
     * The ID of VDC to use
     */
    vdcId: string;
}

/**
 * A collection of values returned by getNsxvApplication.
 */
export interface GetNsxvApplicationResult {
    /**
     * The application identifier, when available
     */
    readonly appGuid: string;
    /**
     * The identifier of the application
     */
    readonly id: string;
    readonly name: string;
    /**
     * The ports used by the application. Could be a number, a list of numbers, or a range
     */
    readonly ports: string;
    /**
     * The protocol used by the application
     */
    readonly protocol: string;
    /**
     * The source port used by this application. Not all applications provide one
     */
    readonly sourcePort: string;
    readonly vdcId: string;
}
/**
 * Provides a VMware Cloud Director data source for reading NSX-V distributed firewall applications.
 *
 * Supported in provider *v3.9+*
 */
export function getNsxvApplicationOutput(args: GetNsxvApplicationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNsxvApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNsxvApplication:getNsxvApplication", {
        "name": args.name,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxvApplication.
 */
export interface GetNsxvApplicationOutputArgs {
    /**
     * The name of the application
     */
    name: pulumi.Input<string>;
    /**
     * The ID of VDC to use
     */
    vdcId: pulumi.Input<string>;
}
