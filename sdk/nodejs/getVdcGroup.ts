// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Supported in provider *v3.5+* and VCD 10.2+.
 *
 * Provides a data source to read NSX-T VDC group and reference in other resources.
 *
 * > Only `System Administrator` and `Org Users` with right `View VDC Group` can access VDC groups using this data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const startVdc = vcd.getVdcGroup({
 *     org: "myOrg",
 *     name: "myVDC",
 * });
 * ```
 */
export function getVdcGroup(args?: GetVdcGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetVdcGroupResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getVdcGroup:getVdcGroup", {
        "defaultPolicyStatus": args.defaultPolicyStatus,
        "description": args.description,
        "errorMessage": args.errorMessage,
        "id": args.id,
        "localEgress": args.localEgress,
        "name": args.name,
        "networkPoolId": args.networkPoolId,
        "networkPoolUniversalId": args.networkPoolUniversalId,
        "networkProviderType": args.networkProviderType,
        "org": args.org,
        "status": args.status,
        "type": args.type,
        "universalNetworkingEnabled": args.universalNetworkingEnabled,
    }, opts);
}

/**
 * A collection of arguments for invoking getVdcGroup.
 */
export interface GetVdcGroupArgs {
    defaultPolicyStatus?: boolean;
    description?: string;
    errorMessage?: string;
    /**
     * ID of VDC group
     *
     * Either `name` or `id` must be used. If both are missing, an error arises.
     */
    id?: string;
    localEgress?: boolean;
    /**
     * Name of VDC group
     */
    name?: string;
    networkPoolId?: string;
    networkPoolUniversalId?: string;
    networkProviderType?: string;
    org?: string;
    status?: string;
    type?: string;
    universalNetworkingEnabled?: boolean;
}

/**
 * A collection of values returned by getVdcGroup.
 */
export interface GetVdcGroupResult {
    readonly defaultPolicyStatus: boolean;
    readonly description: string;
    readonly dfwEnabled: boolean;
    readonly errorMessage: string;
    readonly id: string;
    readonly localEgress: boolean;
    readonly name: string;
    readonly networkPoolId: string;
    readonly networkPoolUniversalId: string;
    readonly networkProviderType: string;
    readonly org?: string;
    readonly participatingOrgVdcs: outputs.GetVdcGroupParticipatingOrgVdc[];
    readonly status: string;
    readonly type: string;
    readonly universalNetworkingEnabled: boolean;
}
/**
 * Supported in provider *v3.5+* and VCD 10.2+.
 *
 * Provides a data source to read NSX-T VDC group and reference in other resources.
 *
 * > Only `System Administrator` and `Org Users` with right `View VDC Group` can access VDC groups using this data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const startVdc = vcd.getVdcGroup({
 *     org: "myOrg",
 *     name: "myVDC",
 * });
 * ```
 */
export function getVdcGroupOutput(args?: GetVdcGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVdcGroupResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getVdcGroup:getVdcGroup", {
        "defaultPolicyStatus": args.defaultPolicyStatus,
        "description": args.description,
        "errorMessage": args.errorMessage,
        "id": args.id,
        "localEgress": args.localEgress,
        "name": args.name,
        "networkPoolId": args.networkPoolId,
        "networkPoolUniversalId": args.networkPoolUniversalId,
        "networkProviderType": args.networkProviderType,
        "org": args.org,
        "status": args.status,
        "type": args.type,
        "universalNetworkingEnabled": args.universalNetworkingEnabled,
    }, opts);
}

/**
 * A collection of arguments for invoking getVdcGroup.
 */
export interface GetVdcGroupOutputArgs {
    defaultPolicyStatus?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    errorMessage?: pulumi.Input<string>;
    /**
     * ID of VDC group
     *
     * Either `name` or `id` must be used. If both are missing, an error arises.
     */
    id?: pulumi.Input<string>;
    localEgress?: pulumi.Input<boolean>;
    /**
     * Name of VDC group
     */
    name?: pulumi.Input<string>;
    networkPoolId?: pulumi.Input<string>;
    networkPoolUniversalId?: pulumi.Input<string>;
    networkProviderType?: pulumi.Input<string>;
    org?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    universalNetworkingEnabled?: pulumi.Input<boolean>;
}
