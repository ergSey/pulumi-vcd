// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides the capability of fetching an existing Runtime Defined Entity Interface from VMware Cloud Director.
 *
 * Supported in provider *v3.9+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const myInterface = vcd.getRdeInterface({
 *     vendor: "bigcorp",
 *     nss: "tech",
 *     version: "1.2.3",
 * });
 * export const interfaceName = myInterface.then(myInterface => myInterface.name);
 * export const interfaceId = myInterface.then(myInterface => myInterface.id);
 * ```
 */
export function getRdeInterface(args: GetRdeInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetRdeInterfaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getRdeInterface:getRdeInterface", {
        "nss": args.nss,
        "vendor": args.vendor,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getRdeInterface.
 */
export interface GetRdeInterfaceArgs {
    /**
     * A unique namespace associated with the RDE Interface.
     */
    nss: string;
    /**
     * The vendor of the RDE Interface.
     */
    vendor: string;
    /**
     * The version of the RDE Interface. Must follow [semantic versioning](https://semver.org/) syntax.
     */
    version: string;
}

/**
 * A collection of values returned by getRdeInterface.
 */
export interface GetRdeInterfaceResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly nss: string;
    readonly readonly: boolean;
    readonly vendor: string;
    readonly version: string;
}
/**
 * Provides the capability of fetching an existing Runtime Defined Entity Interface from VMware Cloud Director.
 *
 * Supported in provider *v3.9+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const myInterface = vcd.getRdeInterface({
 *     vendor: "bigcorp",
 *     nss: "tech",
 *     version: "1.2.3",
 * });
 * export const interfaceName = myInterface.then(myInterface => myInterface.name);
 * export const interfaceId = myInterface.then(myInterface => myInterface.id);
 * ```
 */
export function getRdeInterfaceOutput(args: GetRdeInterfaceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRdeInterfaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getRdeInterface:getRdeInterface", {
        "nss": args.nss,
        "vendor": args.vendor,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getRdeInterface.
 */
export interface GetRdeInterfaceOutputArgs {
    /**
     * A unique namespace associated with the RDE Interface.
     */
    nss: pulumi.Input<string>;
    /**
     * The vendor of the RDE Interface.
     */
    vendor: pulumi.Input<string>;
    /**
     * The version of the RDE Interface. Must follow [semantic versioning](https://semver.org/) syntax.
     */
    version: pulumi.Input<string>;
}
