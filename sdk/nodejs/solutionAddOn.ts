// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SolutionAddOn extends pulumi.CustomResource {
    /**
     * Get an existing SolutionAddOn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SolutionAddOnState, opts?: pulumi.CustomResourceOptions): SolutionAddOn {
        return new SolutionAddOn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/solutionAddOn:SolutionAddOn';

    /**
     * Returns true if the given object is an instance of SolutionAddOn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SolutionAddOn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SolutionAddOn.__pulumiType;
    }

    /**
     * Local filesystem path of Solution Add-On. The Add-On image is required
     * locally as some of the metadata must be extracted for creating the Solution Add-On entry in Cloud
     * Director.
     */
    public readonly addOnPath!: pulumi.Output<string>;
    /**
     * Plugin can automatically trust the certificate of Solution
     * Add-On. This is required for Solution Add-Ons to work and one will have to do it manually before
     * using the Solution Add-On if not enabled here.
     */
    public readonly autoTrustCertificate!: pulumi.Output<boolean | undefined>;
    /**
     * The catalog item ID of Solution Add-On. It can be uploaded using
     * [`vcd.CatalogMedia`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/catalog_media)
     */
    public readonly catalogItemId!: pulumi.Output<string>;
    /**
     * reports the name of Solution Add-On as defined in the system. This name can be also used
     * in data source
     * [`vcd.SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/solution_add_on)
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Parent RDE state
     */
    public /*out*/ readonly rdeState!: pulumi.Output<string>;

    /**
     * Create a SolutionAddOn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SolutionAddOnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SolutionAddOnArgs | SolutionAddOnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SolutionAddOnState | undefined;
            resourceInputs["addOnPath"] = state ? state.addOnPath : undefined;
            resourceInputs["autoTrustCertificate"] = state ? state.autoTrustCertificate : undefined;
            resourceInputs["catalogItemId"] = state ? state.catalogItemId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rdeState"] = state ? state.rdeState : undefined;
        } else {
            const args = argsOrState as SolutionAddOnArgs | undefined;
            if ((!args || args.addOnPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addOnPath'");
            }
            if ((!args || args.catalogItemId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'catalogItemId'");
            }
            resourceInputs["addOnPath"] = args ? args.addOnPath : undefined;
            resourceInputs["autoTrustCertificate"] = args ? args.autoTrustCertificate : undefined;
            resourceInputs["catalogItemId"] = args ? args.catalogItemId : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["rdeState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SolutionAddOn.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SolutionAddOn resources.
 */
export interface SolutionAddOnState {
    /**
     * Local filesystem path of Solution Add-On. The Add-On image is required
     * locally as some of the metadata must be extracted for creating the Solution Add-On entry in Cloud
     * Director.
     */
    addOnPath?: pulumi.Input<string>;
    /**
     * Plugin can automatically trust the certificate of Solution
     * Add-On. This is required for Solution Add-Ons to work and one will have to do it manually before
     * using the Solution Add-On if not enabled here.
     */
    autoTrustCertificate?: pulumi.Input<boolean>;
    /**
     * The catalog item ID of Solution Add-On. It can be uploaded using
     * [`vcd.CatalogMedia`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/catalog_media)
     */
    catalogItemId?: pulumi.Input<string>;
    /**
     * reports the name of Solution Add-On as defined in the system. This name can be also used
     * in data source
     * [`vcd.SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/solution_add_on)
     */
    name?: pulumi.Input<string>;
    /**
     * Parent RDE state
     */
    rdeState?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SolutionAddOn resource.
 */
export interface SolutionAddOnArgs {
    /**
     * Local filesystem path of Solution Add-On. The Add-On image is required
     * locally as some of the metadata must be extracted for creating the Solution Add-On entry in Cloud
     * Director.
     */
    addOnPath: pulumi.Input<string>;
    /**
     * Plugin can automatically trust the certificate of Solution
     * Add-On. This is required for Solution Add-Ons to work and one will have to do it manually before
     * using the Solution Add-On if not enabled here.
     */
    autoTrustCertificate?: pulumi.Input<boolean>;
    /**
     * The catalog item ID of Solution Add-On. It can be uploaded using
     * [`vcd.CatalogMedia`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/catalog_media)
     */
    catalogItemId: pulumi.Input<string>;
}
