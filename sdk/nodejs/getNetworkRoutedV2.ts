// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director Org VDC routed Network data source to read data or reference  existing network
 * (backed by NSX-T or NSX-V).
 *
 * Supported in provider *v3.2+* for both NSX-T and NSX-V VDCs.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const main = vcd.getNsxtEdgegateway({
 *     org: "my-org",
 *     name: "main-edge",
 * });
 * const net = main.then(main => vcd.getNetworkRoutedV2({
 *     org: "my-org",
 *     edgeGatewayId: main.id,
 *     name: "my-net",
 * }));
 * ```
 *
 * ## Filter arguments
 *
 * * `nameRegex` - (Optional) matches the name using a regular expression.
 * * `ip` - (Optional) matches the IP of the resource using a regular expression.
 *
 * See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
 */
export function getNetworkRoutedV2(args?: GetNetworkRoutedV2Args, opts?: pulumi.InvokeOptions): Promise<GetNetworkRoutedV2Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNetworkRoutedV2:getNetworkRoutedV2", {
        "edgeGatewayId": args.edgeGatewayId,
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkRoutedV2.
 */
export interface GetNetworkRoutedV2Args {
    /**
     * Replaces `vdc` field and helps to identify exact Org
     * Network
     */
    edgeGatewayId?: string;
    /**
     * Retrieves the data source using one or more filter parameters. **Note**
     * filters do not support searching for networks in VDC Groups.
     */
    filter?: inputs.GetNetworkRoutedV2Filter;
    /**
     * A unique name for the network (optional when `filter` is used)
     */
    name?: string;
    /**
     * The name of organization to use, optional if defined at provider level
     */
    org?: string;
    /**
     * The name of VDC to use, optional if defined at provider level. **Deprecated**
     * in favor of `edgeGatewayId` field.
     *
     * @deprecated Deprecated in favor of `edgeGatewayId`. Routed networks will inherit VDC from parent Edge Gateway.
     */
    vdc?: string;
}

/**
 * A collection of values returned by getNetworkRoutedV2.
 */
export interface GetNetworkRoutedV2Result {
    readonly description: string;
    readonly dns1: string;
    readonly dns2: string;
    readonly dnsSuffix: string;
    readonly dualStackEnabled: boolean;
    readonly edgeGatewayId: string;
    readonly filter?: outputs.GetNetworkRoutedV2Filter;
    readonly gateway: string;
    readonly guestVlanAllowed: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly interfaceType: string;
    /**
     * @deprecated Use metadataEntry instead
     */
    readonly metadata: {[key: string]: string};
    readonly metadataEntries: outputs.GetNetworkRoutedV2MetadataEntry[];
    readonly name?: string;
    readonly org?: string;
    /**
     * Parent VDC or VDC Group ID.
     */
    readonly ownerId: string;
    readonly prefixLength: number;
    readonly routeAdvertisementEnabled: boolean;
    readonly secondaryGateway: string;
    readonly secondaryPrefixLength: string;
    readonly secondaryStaticIpPools: outputs.GetNetworkRoutedV2SecondaryStaticIpPool[];
    readonly staticIpPools: outputs.GetNetworkRoutedV2StaticIpPool[];
    /**
     * @deprecated Deprecated in favor of `edgeGatewayId`. Routed networks will inherit VDC from parent Edge Gateway.
     */
    readonly vdc?: string;
}
/**
 * Provides a VMware Cloud Director Org VDC routed Network data source to read data or reference  existing network
 * (backed by NSX-T or NSX-V).
 *
 * Supported in provider *v3.2+* for both NSX-T and NSX-V VDCs.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const main = vcd.getNsxtEdgegateway({
 *     org: "my-org",
 *     name: "main-edge",
 * });
 * const net = main.then(main => vcd.getNetworkRoutedV2({
 *     org: "my-org",
 *     edgeGatewayId: main.id,
 *     name: "my-net",
 * }));
 * ```
 *
 * ## Filter arguments
 *
 * * `nameRegex` - (Optional) matches the name using a regular expression.
 * * `ip` - (Optional) matches the IP of the resource using a regular expression.
 *
 * See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
 */
export function getNetworkRoutedV2Output(args?: GetNetworkRoutedV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkRoutedV2Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNetworkRoutedV2:getNetworkRoutedV2", {
        "edgeGatewayId": args.edgeGatewayId,
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkRoutedV2.
 */
export interface GetNetworkRoutedV2OutputArgs {
    /**
     * Replaces `vdc` field and helps to identify exact Org
     * Network
     */
    edgeGatewayId?: pulumi.Input<string>;
    /**
     * Retrieves the data source using one or more filter parameters. **Note**
     * filters do not support searching for networks in VDC Groups.
     */
    filter?: pulumi.Input<inputs.GetNetworkRoutedV2FilterArgs>;
    /**
     * A unique name for the network (optional when `filter` is used)
     */
    name?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level
     */
    org?: pulumi.Input<string>;
    /**
     * The name of VDC to use, optional if defined at provider level. **Deprecated**
     * in favor of `edgeGatewayId` field.
     *
     * @deprecated Deprecated in favor of `edgeGatewayId`. Routed networks will inherit VDC from parent Edge Gateway.
     */
    vdc?: pulumi.Input<string>;
}
