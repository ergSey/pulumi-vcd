// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

export class NsxvFirewallRule extends pulumi.CustomResource {
    /**
     * Get an existing NsxvFirewallRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NsxvFirewallRuleState, opts?: pulumi.CustomResourceOptions): NsxvFirewallRule {
        return new NsxvFirewallRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/nsxvFirewallRule:NsxvFirewallRule';

    /**
     * Returns true if the given object is an instance of NsxvFirewallRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NsxvFirewallRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NsxvFirewallRule.__pulumiType;
    }

    /**
     * This can be used to alter default rule placement order. By default
     * every rule is appended to the end of firewall rule list. When a value of another rule is set - this
     * rule will be placed above the specified rule.
     */
    public readonly aboveRuleId!: pulumi.Output<string | undefined>;
    /**
     * Defines if the rule is set to `accept` or `deny` traffic. Default `accept`
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * Exactly one block to define source criteria for firewall. See
     * Endpoint and example for usage details.
     */
    public readonly destination!: pulumi.Output<outputs.NsxvFirewallRuleDestination>;
    /**
     * The name of the edge gateway on which to apply the firewall rule.
     */
    public readonly edgeGateway!: pulumi.Output<string>;
    /**
     * Defines if the rule is enabaled. Default `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Defines if the logging for this rule is enabaled. Default `false`.
     */
    public readonly loggingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Free text name. Can be duplicate.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful
     * when connected as sysadmin working across different organisations.
     */
    public readonly org!: pulumi.Output<string | undefined>;
    /**
     * This can be used to specify user-controlled rule tag. If not specified,
     * it will report rule ID after creation. Must be between 65537-131072.
     */
    public readonly ruleTag!: pulumi.Output<number>;
    /**
     * Possible values - `user`, `internalHigh`.
     */
    public readonly ruleType!: pulumi.Output<string>;
    /**
     * One or more blocks to define protocol and port details. Use multiple blocks
     * if you want to define multiple port/protocol combinations for the same rule. See
     * Service and example for usage details.
     *
     *
     * <a id="endpoint"></a>
     */
    public readonly services!: pulumi.Output<outputs.NsxvFirewallRuleService[]>;
    /**
     * Exactly one block to define source criteria for firewall. See
     * Endpoint and example for usage details.
     */
    public readonly source!: pulumi.Output<outputs.NsxvFirewallRuleSource>;
    /**
     * The name of VDC to use, optional if defined at provider level.
     */
    public readonly vdc!: pulumi.Output<string | undefined>;

    /**
     * Create a NsxvFirewallRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NsxvFirewallRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NsxvFirewallRuleArgs | NsxvFirewallRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NsxvFirewallRuleState | undefined;
            resourceInputs["aboveRuleId"] = state ? state.aboveRuleId : undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["edgeGateway"] = state ? state.edgeGateway : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["loggingEnabled"] = state ? state.loggingEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["org"] = state ? state.org : undefined;
            resourceInputs["ruleTag"] = state ? state.ruleTag : undefined;
            resourceInputs["ruleType"] = state ? state.ruleType : undefined;
            resourceInputs["services"] = state ? state.services : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["vdc"] = state ? state.vdc : undefined;
        } else {
            const args = argsOrState as NsxvFirewallRuleArgs | undefined;
            if ((!args || args.destination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            if ((!args || args.edgeGateway === undefined) && !opts.urn) {
                throw new Error("Missing required property 'edgeGateway'");
            }
            if ((!args || args.services === undefined) && !opts.urn) {
                throw new Error("Missing required property 'services'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["aboveRuleId"] = args ? args.aboveRuleId : undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["edgeGateway"] = args ? args.edgeGateway : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["loggingEnabled"] = args ? args.loggingEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["org"] = args ? args.org : undefined;
            resourceInputs["ruleTag"] = args ? args.ruleTag : undefined;
            resourceInputs["ruleType"] = args ? args.ruleType : undefined;
            resourceInputs["services"] = args ? args.services : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["vdc"] = args ? args.vdc : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NsxvFirewallRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NsxvFirewallRule resources.
 */
export interface NsxvFirewallRuleState {
    /**
     * This can be used to alter default rule placement order. By default
     * every rule is appended to the end of firewall rule list. When a value of another rule is set - this
     * rule will be placed above the specified rule.
     */
    aboveRuleId?: pulumi.Input<string>;
    /**
     * Defines if the rule is set to `accept` or `deny` traffic. Default `accept`
     */
    action?: pulumi.Input<string>;
    /**
     * Exactly one block to define source criteria for firewall. See
     * Endpoint and example for usage details.
     */
    destination?: pulumi.Input<inputs.NsxvFirewallRuleDestination>;
    /**
     * The name of the edge gateway on which to apply the firewall rule.
     */
    edgeGateway?: pulumi.Input<string>;
    /**
     * Defines if the rule is enabaled. Default `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Defines if the logging for this rule is enabaled. Default `false`.
     */
    loggingEnabled?: pulumi.Input<boolean>;
    /**
     * Free text name. Can be duplicate.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful
     * when connected as sysadmin working across different organisations.
     */
    org?: pulumi.Input<string>;
    /**
     * This can be used to specify user-controlled rule tag. If not specified,
     * it will report rule ID after creation. Must be between 65537-131072.
     */
    ruleTag?: pulumi.Input<number>;
    /**
     * Possible values - `user`, `internalHigh`.
     */
    ruleType?: pulumi.Input<string>;
    /**
     * One or more blocks to define protocol and port details. Use multiple blocks
     * if you want to define multiple port/protocol combinations for the same rule. See
     * Service and example for usage details.
     *
     *
     * <a id="endpoint"></a>
     */
    services?: pulumi.Input<pulumi.Input<inputs.NsxvFirewallRuleService>[]>;
    /**
     * Exactly one block to define source criteria for firewall. See
     * Endpoint and example for usage details.
     */
    source?: pulumi.Input<inputs.NsxvFirewallRuleSource>;
    /**
     * The name of VDC to use, optional if defined at provider level.
     */
    vdc?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NsxvFirewallRule resource.
 */
export interface NsxvFirewallRuleArgs {
    /**
     * This can be used to alter default rule placement order. By default
     * every rule is appended to the end of firewall rule list. When a value of another rule is set - this
     * rule will be placed above the specified rule.
     */
    aboveRuleId?: pulumi.Input<string>;
    /**
     * Defines if the rule is set to `accept` or `deny` traffic. Default `accept`
     */
    action?: pulumi.Input<string>;
    /**
     * Exactly one block to define source criteria for firewall. See
     * Endpoint and example for usage details.
     */
    destination: pulumi.Input<inputs.NsxvFirewallRuleDestination>;
    /**
     * The name of the edge gateway on which to apply the firewall rule.
     */
    edgeGateway: pulumi.Input<string>;
    /**
     * Defines if the rule is enabaled. Default `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Defines if the logging for this rule is enabaled. Default `false`.
     */
    loggingEnabled?: pulumi.Input<boolean>;
    /**
     * Free text name. Can be duplicate.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful
     * when connected as sysadmin working across different organisations.
     */
    org?: pulumi.Input<string>;
    /**
     * This can be used to specify user-controlled rule tag. If not specified,
     * it will report rule ID after creation. Must be between 65537-131072.
     */
    ruleTag?: pulumi.Input<number>;
    /**
     * Possible values - `user`, `internalHigh`.
     */
    ruleType?: pulumi.Input<string>;
    /**
     * One or more blocks to define protocol and port details. Use multiple blocks
     * if you want to define multiple port/protocol combinations for the same rule. See
     * Service and example for usage details.
     *
     *
     * <a id="endpoint"></a>
     */
    services: pulumi.Input<pulumi.Input<inputs.NsxvFirewallRuleService>[]>;
    /**
     * Exactly one block to define source criteria for firewall. See
     * Endpoint and example for usage details.
     */
    source: pulumi.Input<inputs.NsxvFirewallRuleSource>;
    /**
     * The name of VDC to use, optional if defined at provider level.
     */
    vdc?: pulumi.Input<string>;
}
