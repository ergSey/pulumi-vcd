// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ApiFilter extends pulumi.CustomResource {
    /**
     * Get an existing ApiFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiFilterState, opts?: pulumi.CustomResourceOptions): ApiFilter {
        return new ApiFilter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/apiFilter:ApiFilter';

    /**
     * Returns true if the given object is an instance of ApiFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiFilter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiFilter.__pulumiType;
    }

    /**
     * ID of the [External Endpoint](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/external_endpoint) where this API Filter will process the requests to
     */
    public readonly externalEndpointId!: pulumi.Output<string>;
    /**
     * Request URL pattern, written as a regular expression. This argument cannot exceed 1024 characters.
     * In most cases, it should end with `.*` (it is like a suffix) which specifies that all the parts of the URL coming after (like parameters) will be redirected to an external endpoint.
     * It is important to note that in the case of `url_matcher_scope=EXT_UI_TENANT`, the tenant name is not part of the pattern, it will match the request after the tenant name - if request
     * is *"/ext-ui/tenant/testOrg/custom/test"*, the pattern will match against *&#47;custom/test*
     */
    public readonly urlMatcherPattern!: pulumi.Output<string>;
    /**
     * Allowed values are `EXT_API`, `EXT_UI_PROVIDER`, `EXT_UI_TENANT` corresponding to
     * *&#47;ext-api*, *&#47;ext-ui/provider*, *&#47;ext-ui/tenant/<tenant-name>*
     */
    public readonly urlMatcherScope!: pulumi.Output<string>;

    /**
     * Create a ApiFilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiFilterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiFilterArgs | ApiFilterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiFilterState | undefined;
            resourceInputs["externalEndpointId"] = state ? state.externalEndpointId : undefined;
            resourceInputs["urlMatcherPattern"] = state ? state.urlMatcherPattern : undefined;
            resourceInputs["urlMatcherScope"] = state ? state.urlMatcherScope : undefined;
        } else {
            const args = argsOrState as ApiFilterArgs | undefined;
            if ((!args || args.externalEndpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'externalEndpointId'");
            }
            if ((!args || args.urlMatcherPattern === undefined) && !opts.urn) {
                throw new Error("Missing required property 'urlMatcherPattern'");
            }
            if ((!args || args.urlMatcherScope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'urlMatcherScope'");
            }
            resourceInputs["externalEndpointId"] = args ? args.externalEndpointId : undefined;
            resourceInputs["urlMatcherPattern"] = args ? args.urlMatcherPattern : undefined;
            resourceInputs["urlMatcherScope"] = args ? args.urlMatcherScope : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiFilter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiFilter resources.
 */
export interface ApiFilterState {
    /**
     * ID of the [External Endpoint](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/external_endpoint) where this API Filter will process the requests to
     */
    externalEndpointId?: pulumi.Input<string>;
    /**
     * Request URL pattern, written as a regular expression. This argument cannot exceed 1024 characters.
     * In most cases, it should end with `.*` (it is like a suffix) which specifies that all the parts of the URL coming after (like parameters) will be redirected to an external endpoint.
     * It is important to note that in the case of `url_matcher_scope=EXT_UI_TENANT`, the tenant name is not part of the pattern, it will match the request after the tenant name - if request
     * is *"/ext-ui/tenant/testOrg/custom/test"*, the pattern will match against *&#47;custom/test*
     */
    urlMatcherPattern?: pulumi.Input<string>;
    /**
     * Allowed values are `EXT_API`, `EXT_UI_PROVIDER`, `EXT_UI_TENANT` corresponding to
     * *&#47;ext-api*, *&#47;ext-ui/provider*, *&#47;ext-ui/tenant/<tenant-name>*
     */
    urlMatcherScope?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApiFilter resource.
 */
export interface ApiFilterArgs {
    /**
     * ID of the [External Endpoint](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/external_endpoint) where this API Filter will process the requests to
     */
    externalEndpointId: pulumi.Input<string>;
    /**
     * Request URL pattern, written as a regular expression. This argument cannot exceed 1024 characters.
     * In most cases, it should end with `.*` (it is like a suffix) which specifies that all the parts of the URL coming after (like parameters) will be redirected to an external endpoint.
     * It is important to note that in the case of `url_matcher_scope=EXT_UI_TENANT`, the tenant name is not part of the pattern, it will match the request after the tenant name - if request
     * is *"/ext-ui/tenant/testOrg/custom/test"*, the pattern will match against *&#47;custom/test*
     */
    urlMatcherPattern: pulumi.Input<string>;
    /**
     * Allowed values are `EXT_API`, `EXT_UI_PROVIDER`, `EXT_UI_TENANT` corresponding to
     * *&#47;ext-api*, *&#47;ext-ui/provider*, *&#47;ext-ui/tenant/<tenant-name>*
     */
    urlMatcherScope: pulumi.Input<string>;
}
