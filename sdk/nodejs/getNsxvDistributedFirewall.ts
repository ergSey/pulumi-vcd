// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * The NSX-V Distributed Firewall data source reads all defined rules for a particular VDC.
 *
 * Supported in provider *v3.9+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_vdc = vcd.getOrgVdc({
 *     org: "my-org",
 *     name: "my-vdc",
 * });
 * const dfw1 = my_vdc.then(my_vdc => vcd.getNsxvDistributedFirewall({
 *     vdcId: my_vdc.id,
 * }));
 * ```
 *
 * ## Attributes reference
 *
 * All the arguments and attributes defined for the `vcd.NsxvDistributedFirewall` resource are reported as attributes for this data source.
 */
export function getNsxvDistributedFirewall(args: GetNsxvDistributedFirewallArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxvDistributedFirewallResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxvDistributedFirewall:getNsxvDistributedFirewall", {
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxvDistributedFirewall.
 */
export interface GetNsxvDistributedFirewallArgs {
    /**
     * The ID of VDC to manage the Distributed Firewall in. Can be looked up using a `vcd.OrgVdc` data source
     */
    vdcId: string;
}

/**
 * A collection of values returned by getNsxvDistributedFirewall.
 */
export interface GetNsxvDistributedFirewallResult {
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly rules: outputs.GetNsxvDistributedFirewallRule[];
    readonly vdcId: string;
}
/**
 * The NSX-V Distributed Firewall data source reads all defined rules for a particular VDC.
 *
 * Supported in provider *v3.9+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_vdc = vcd.getOrgVdc({
 *     org: "my-org",
 *     name: "my-vdc",
 * });
 * const dfw1 = my_vdc.then(my_vdc => vcd.getNsxvDistributedFirewall({
 *     vdcId: my_vdc.id,
 * }));
 * ```
 *
 * ## Attributes reference
 *
 * All the arguments and attributes defined for the `vcd.NsxvDistributedFirewall` resource are reported as attributes for this data source.
 */
export function getNsxvDistributedFirewallOutput(args: GetNsxvDistributedFirewallOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNsxvDistributedFirewallResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNsxvDistributedFirewall:getNsxvDistributedFirewall", {
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxvDistributedFirewall.
 */
export interface GetNsxvDistributedFirewallOutputArgs {
    /**
     * The ID of VDC to manage the Distributed Firewall in. Can be looked up using a `vcd.OrgVdc` data source
     */
    vdcId: pulumi.Input<string>;
}
