// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Supported in provider *3.11* and VCD *10.4.0+*.
 *
 * > **Note:** This data source requires system administrator privileges.
 *
 * Provides a datasource to read vGPU profiles in VMware Cloud Director.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const profile_name = vcd.getVgpuProfile({
 *     name: "my-profile",
 * });
 * export const profileId = profile_name.then(profile_name => profile_name.id);
 * ```
 */
export function getVgpuProfile(args: GetVgpuProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetVgpuProfileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getVgpuProfile:getVgpuProfile", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getVgpuProfile.
 */
export interface GetVgpuProfileArgs {
    /**
     * The name of the vGPU profile.
     */
    name: string;
}

/**
 * A collection of values returned by getVgpuProfile.
 */
export interface GetVgpuProfileResult {
    /**
     * ID of the vGPU profile.
     */
    readonly id: string;
    /**
     * Instructions for the vGPU profile.
     */
    readonly instructions: string;
    readonly name: string;
    /**
     * Tenant facing name of the vGPU profile.
     */
    readonly tenantFacingName: string;
}
/**
 * Supported in provider *3.11* and VCD *10.4.0+*.
 *
 * > **Note:** This data source requires system administrator privileges.
 *
 * Provides a datasource to read vGPU profiles in VMware Cloud Director.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const profile_name = vcd.getVgpuProfile({
 *     name: "my-profile",
 * });
 * export const profileId = profile_name.then(profile_name => profile_name.id);
 * ```
 */
export function getVgpuProfileOutput(args: GetVgpuProfileOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVgpuProfileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getVgpuProfile:getVgpuProfile", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getVgpuProfile.
 */
export interface GetVgpuProfileOutputArgs {
    /**
     * The name of the vGPU profile.
     */
    name: pulumi.Input<string>;
}
