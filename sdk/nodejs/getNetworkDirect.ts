// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director Org VDC Network data source directly connected to an external network. This can be used to reference
 * internal networks for vApps to connect.
 *
 * Supported in provider *v2.5+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const net = vcd.getNetworkDirect({
 *     org: "my-org",
 *     vdc: "my-vdc",
 *     name: "my-net",
 * });
 * export const externalNetwork = net.then(net => net.externalNetwork);
 * const externalNetwork1 = net.then(net => vcd.getExternalNetwork({
 *     name: net.externalNetwork,
 * }));
 * export const gateway = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.gateway);
 * export const externalNetworkGateway = net.then(net => net.externalNetworkGateway);
 * export const netmask = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.netmask);
 * export const externalNetworkNetmask = net.then(net => net.externalNetworkNetmask);
 * export const DNS = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.dns1);
 * export const externalNetworkDns = net.then(net => net.externalNetworkDns1);
 * export const externalIp = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.staticIpPools?.[0]?.startAddress);
 * ```
 *
 * ## Filter arguments
 *
 * (Supported in provider *v2.9+*)
 *
 * * `nameRegex` - (Optional) matches the name using a regular expression.
 * * `ip` - (Optional) matches the IP of the resource using a regular expression.
 * * `metadata` - (Optional) One or more parameters that will match metadata contents.
 *
 * See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
 */
export function getNetworkDirect(args?: GetNetworkDirectArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkDirectResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNetworkDirect:getNetworkDirect", {
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkDirect.
 */
export interface GetNetworkDirectArgs {
    /**
     * Retrieves the data source using one or more filter parameters
     */
    filter?: inputs.GetNetworkDirectFilter;
    /**
     * A unique name for the network (optional when `filter` is used)
     */
    name?: string;
    /**
     * The name of organization to use, optional if defined at provider level.
     */
    org?: string;
    /**
     * The name of VDC to use, optional if defined at provider level.
     */
    vdc?: string;
}

/**
 * A collection of values returned by getNetworkDirect.
 */
export interface GetNetworkDirectResult {
    readonly description: string;
    /**
     * The name of the external network.
     */
    readonly externalNetwork: string;
    readonly externalNetworkDns1: string;
    readonly externalNetworkDns2: string;
    readonly externalNetworkDnsSuffix: string;
    readonly externalNetworkGateway: string;
    readonly externalNetworkNetmask: string;
    readonly filter?: outputs.GetNetworkDirectFilter;
    readonly href: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * @deprecated Use metadataEntry instead
     */
    readonly metadata: {[key: string]: string};
    readonly metadataEntries: outputs.GetNetworkDirectMetadataEntry[];
    readonly name?: string;
    readonly org?: string;
    /**
     * Defines if this network is shared between multiple vDCs in the vOrg.
     */
    readonly shared: boolean;
    readonly vdc?: string;
}
/**
 * Provides a VMware Cloud Director Org VDC Network data source directly connected to an external network. This can be used to reference
 * internal networks for vApps to connect.
 *
 * Supported in provider *v2.5+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const net = vcd.getNetworkDirect({
 *     org: "my-org",
 *     vdc: "my-vdc",
 *     name: "my-net",
 * });
 * export const externalNetwork = net.then(net => net.externalNetwork);
 * const externalNetwork1 = net.then(net => vcd.getExternalNetwork({
 *     name: net.externalNetwork,
 * }));
 * export const gateway = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.gateway);
 * export const externalNetworkGateway = net.then(net => net.externalNetworkGateway);
 * export const netmask = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.netmask);
 * export const externalNetworkNetmask = net.then(net => net.externalNetworkNetmask);
 * export const DNS = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.dns1);
 * export const externalNetworkDns = net.then(net => net.externalNetworkDns1);
 * export const externalIp = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.staticIpPools?.[0]?.startAddress);
 * ```
 *
 * ## Filter arguments
 *
 * (Supported in provider *v2.9+*)
 *
 * * `nameRegex` - (Optional) matches the name using a regular expression.
 * * `ip` - (Optional) matches the IP of the resource using a regular expression.
 * * `metadata` - (Optional) One or more parameters that will match metadata contents.
 *
 * See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
 */
export function getNetworkDirectOutput(args?: GetNetworkDirectOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkDirectResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNetworkDirect:getNetworkDirect", {
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkDirect.
 */
export interface GetNetworkDirectOutputArgs {
    /**
     * Retrieves the data source using one or more filter parameters
     */
    filter?: pulumi.Input<inputs.GetNetworkDirectFilterArgs>;
    /**
     * A unique name for the network (optional when `filter` is used)
     */
    name?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level.
     */
    org?: pulumi.Input<string>;
    /**
     * The name of VDC to use, optional if defined at provider level.
     */
    vdc?: pulumi.Input<string>;
}
