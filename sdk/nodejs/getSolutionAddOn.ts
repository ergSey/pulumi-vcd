// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Supported in provider *v3.13+* and VCD 10.4.1+.
 *
 * Provides a data source to read Solution Add-Ons in Cloud Director. A Solution Add-On is the
 * representation of a solution that is custom built for Cloud Director in the Cloud
 * Director extensibility ecosystem. A Solution Add-On can encapsulate UI and API Cloud Director
 * extensions together with their backend services and lifecycle management. Solution аdd-оns are
 * distributed as .iso files. A Solution Add-On can contain numerous elements: UI plugins, vApps,
 * users, roles, runtime defined entities, and more.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const dse14 = vcd.getSolutionAddOn({
 *     name: "vmware.ds-1.4.0-23376809",
 * });
 * ```
 */
export function getSolutionAddOn(args: GetSolutionAddOnArgs, opts?: pulumi.InvokeOptions): Promise<GetSolutionAddOnResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getSolutionAddOn:getSolutionAddOn", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSolutionAddOn.
 */
export interface GetSolutionAddOnArgs {
    /**
     * Solution Add-On name, e.g. `vmware.ds-1.4.0-23376809`. Solution Add-On
     * resource [`vcd.SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
     * `import` with `list@` capability can help listing available names.
     */
    name: string;
}

/**
 * A collection of values returned by getSolutionAddOn.
 */
export interface GetSolutionAddOnResult {
    readonly catalogItemId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly rdeState: string;
}
/**
 * Supported in provider *v3.13+* and VCD 10.4.1+.
 *
 * Provides a data source to read Solution Add-Ons in Cloud Director. A Solution Add-On is the
 * representation of a solution that is custom built for Cloud Director in the Cloud
 * Director extensibility ecosystem. A Solution Add-On can encapsulate UI and API Cloud Director
 * extensions together with their backend services and lifecycle management. Solution аdd-оns are
 * distributed as .iso files. A Solution Add-On can contain numerous elements: UI plugins, vApps,
 * users, roles, runtime defined entities, and more.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const dse14 = vcd.getSolutionAddOn({
 *     name: "vmware.ds-1.4.0-23376809",
 * });
 * ```
 */
export function getSolutionAddOnOutput(args: GetSolutionAddOnOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSolutionAddOnResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getSolutionAddOn:getSolutionAddOn", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSolutionAddOn.
 */
export interface GetSolutionAddOnOutputArgs {
    /**
     * Solution Add-On name, e.g. `vmware.ds-1.4.0-23376809`. Solution Add-On
     * resource [`vcd.SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
     * `import` with `list@` capability can help listing available names.
     */
    name: pulumi.Input<string>;
}
