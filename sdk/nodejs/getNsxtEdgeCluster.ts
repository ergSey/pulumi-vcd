// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a data source for available NSX-T Edge Clusters.
 *
 * Supported in provider *v3.1+*
 *
 * > **Note:** This data source uses new VMware Cloud Director
 * [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
 * requires at least VCD *10.1.1+* and NSX-T *3.0+*.
 *
 * ## Example Usage
 *
 * ### With VDC ID)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const existing = vcd.getOrgVdc({
 *     org: "my-org",
 *     name: "nsxt-vdc-1",
 * });
 * const first = existing.then(existing => vcd.getNsxtEdgeCluster({
 *     org: "my-org",
 *     vdcId: existing.id,
 *     name: "edge-cluster-one",
 * }));
 * ```
 *
 * ### With VDC Group ID)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const existing = vcd.getVdcGroup({
 *     org: "my-org",
 *     name: "nsxt-vdc-group-1",
 * });
 * const first = existing.then(existing => vcd.getNsxtEdgeCluster({
 *     org: "my-org",
 *     vdcGroupId: existing.id,
 *     name: "edge-cluster-one",
 * }));
 * ```
 *
 * ### With Provider VDC ID)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const nsxt_pvdc = vcd.getProviderVdc({
 *     name: "nsxt-provider-vdc",
 * });
 * const first = nsxt_pvdc.then(nsxt_pvdc => vcd.getNsxtEdgeCluster({
 *     org: "my-org",
 *     providerVdcId: nsxt_pvdc.id,
 *     name: "edge-cluster-one",
 * }));
 * ```
 */
export function getNsxtEdgeCluster(args: GetNsxtEdgeClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxtEdgeClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxtEdgeCluster:getNsxtEdgeCluster", {
        "name": args.name,
        "org": args.org,
        "providerVdcId": args.providerVdcId,
        "vdc": args.vdc,
        "vdcGroupId": args.vdcGroupId,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtEdgeCluster.
 */
export interface GetNsxtEdgeClusterArgs {
    /**
     * NSX-T Edge Cluster name. **Note.** NSX-T does allow to have duplicate names therefore to be able
     * to correctly use this data source there should not be multiple NSX-T Edge Clusters with the same name defined.
     */
    name: string;
    /**
     * The name of organization to which edge cluster belongs. Optional if defined at provider level.
     */
    org?: string;
    /**
     * The ID of VDC Group for lookup. Data source `vcd.ProviderVdc` can be used to get ID.
     */
    providerVdcId?: string;
    /**
     * The name of VDC that owns the edge cluster. Optional if defined at provider level.
     *
     * @deprecated This field is deprecated in favor of 'vdc_id', 'vdc_group_id', and 'provider_vdc_id' which accept IDs of VDC, VDC Group and Provider VDC respectively
     */
    vdc?: string;
    /**
     * The ID of VDC Group for lookup. Data source `vcd.VdcGroup` can be used to get ID.
     */
    vdcGroupId?: string;
    /**
     * The ID of VDC for lookup. Data source `vcd.OrgVdc` can be used to get ID.
     */
    vdcId?: string;
}

/**
 * A collection of values returned by getNsxtEdgeCluster.
 */
export interface GetNsxtEdgeClusterResult {
    /**
     * Deployment type of Edge Cluster.
     */
    readonly deploymentType: string;
    /**
     * Edge Cluster description in NSX-T manager.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * Number of nodes in Edge Cluster.
     */
    readonly nodeCount: number;
    /**
     * Type of nodes in Edge Cluster.
     */
    readonly nodeType: string;
    readonly org?: string;
    readonly providerVdcId?: string;
    /**
     * @deprecated This field is deprecated in favor of 'vdc_id', 'vdc_group_id', and 'provider_vdc_id' which accept IDs of VDC, VDC Group and Provider VDC respectively
     */
    readonly vdc?: string;
    readonly vdcGroupId?: string;
    readonly vdcId?: string;
}
/**
 * Provides a data source for available NSX-T Edge Clusters.
 *
 * Supported in provider *v3.1+*
 *
 * > **Note:** This data source uses new VMware Cloud Director
 * [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
 * requires at least VCD *10.1.1+* and NSX-T *3.0+*.
 *
 * ## Example Usage
 *
 * ### With VDC ID)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const existing = vcd.getOrgVdc({
 *     org: "my-org",
 *     name: "nsxt-vdc-1",
 * });
 * const first = existing.then(existing => vcd.getNsxtEdgeCluster({
 *     org: "my-org",
 *     vdcId: existing.id,
 *     name: "edge-cluster-one",
 * }));
 * ```
 *
 * ### With VDC Group ID)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const existing = vcd.getVdcGroup({
 *     org: "my-org",
 *     name: "nsxt-vdc-group-1",
 * });
 * const first = existing.then(existing => vcd.getNsxtEdgeCluster({
 *     org: "my-org",
 *     vdcGroupId: existing.id,
 *     name: "edge-cluster-one",
 * }));
 * ```
 *
 * ### With Provider VDC ID)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const nsxt_pvdc = vcd.getProviderVdc({
 *     name: "nsxt-provider-vdc",
 * });
 * const first = nsxt_pvdc.then(nsxt_pvdc => vcd.getNsxtEdgeCluster({
 *     org: "my-org",
 *     providerVdcId: nsxt_pvdc.id,
 *     name: "edge-cluster-one",
 * }));
 * ```
 */
export function getNsxtEdgeClusterOutput(args: GetNsxtEdgeClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNsxtEdgeClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNsxtEdgeCluster:getNsxtEdgeCluster", {
        "name": args.name,
        "org": args.org,
        "providerVdcId": args.providerVdcId,
        "vdc": args.vdc,
        "vdcGroupId": args.vdcGroupId,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtEdgeCluster.
 */
export interface GetNsxtEdgeClusterOutputArgs {
    /**
     * NSX-T Edge Cluster name. **Note.** NSX-T does allow to have duplicate names therefore to be able
     * to correctly use this data source there should not be multiple NSX-T Edge Clusters with the same name defined.
     */
    name: pulumi.Input<string>;
    /**
     * The name of organization to which edge cluster belongs. Optional if defined at provider level.
     */
    org?: pulumi.Input<string>;
    /**
     * The ID of VDC Group for lookup. Data source `vcd.ProviderVdc` can be used to get ID.
     */
    providerVdcId?: pulumi.Input<string>;
    /**
     * The name of VDC that owns the edge cluster. Optional if defined at provider level.
     *
     * @deprecated This field is deprecated in favor of 'vdc_id', 'vdc_group_id', and 'provider_vdc_id' which accept IDs of VDC, VDC Group and Provider VDC respectively
     */
    vdc?: pulumi.Input<string>;
    /**
     * The ID of VDC Group for lookup. Data source `vcd.VdcGroup` can be used to get ID.
     */
    vdcGroupId?: pulumi.Input<string>;
    /**
     * The ID of VDC for lookup. Data source `vcd.OrgVdc` can be used to get ID.
     */
    vdcId?: pulumi.Input<string>;
}
