// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director External Network data source (version 2). New version of this data source uses new VCD
 * API and is capable of handling NSX-T backed external networks as well as port group backed ones.
 *
 * > **Note:** This resource uses new VMware Cloud Director
 * [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
 * requires at least VCD *10.0+*. It supports both NSX-T and NSX-V backed networks (NSX-T *3.0+* requires VCD *10.1.1+*)
 *
 * Supported in provider *v3.0+*.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const extNet = vcd.getExternalNetworkV2({
 *     name: "my-nsxt-net",
 * });
 * ```
 */
export function getExternalNetworkV2(args: GetExternalNetworkV2Args, opts?: pulumi.InvokeOptions): Promise<GetExternalNetworkV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getExternalNetworkV2:getExternalNetworkV2", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getExternalNetworkV2.
 */
export interface GetExternalNetworkV2Args {
    /**
     * external network name
     */
    name: string;
}

/**
 * A collection of values returned by getExternalNetworkV2.
 */
export interface GetExternalNetworkV2Result {
    readonly dedicatedOrgId: string;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipScopes: outputs.GetExternalNetworkV2IpScope[];
    readonly name: string;
    readonly natAndFirewallServiceIntention: string;
    readonly nsxtNetworks: outputs.GetExternalNetworkV2NsxtNetwork[];
    readonly routeAdvertisementIntention: string;
    readonly useIpSpaces: boolean;
    readonly vsphereNetworks: outputs.GetExternalNetworkV2VsphereNetwork[];
}
/**
 * Provides a VMware Cloud Director External Network data source (version 2). New version of this data source uses new VCD
 * API and is capable of handling NSX-T backed external networks as well as port group backed ones.
 *
 * > **Note:** This resource uses new VMware Cloud Director
 * [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
 * requires at least VCD *10.0+*. It supports both NSX-T and NSX-V backed networks (NSX-T *3.0+* requires VCD *10.1.1+*)
 *
 * Supported in provider *v3.0+*.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const extNet = vcd.getExternalNetworkV2({
 *     name: "my-nsxt-net",
 * });
 * ```
 */
export function getExternalNetworkV2Output(args: GetExternalNetworkV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetExternalNetworkV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getExternalNetworkV2:getExternalNetworkV2", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getExternalNetworkV2.
 */
export interface GetExternalNetworkV2OutputArgs {
    /**
     * external network name
     */
    name: pulumi.Input<string>;
}
