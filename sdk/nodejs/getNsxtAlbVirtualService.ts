// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Supported in provider *v3.5+* and VCD 10.2+ with NSX-T and ALB.
 *
 * Provides a data source to read ALB Virtual services for particular NSX-T Edge Gateway. A virtual service
 * advertises an IP address and ports to the external world and listens for client traffic. When a virtual service receives
 * traffic, it directs it to members in ALB Pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const existing = vcd.getNsxtEdgegateway({
 *     org: "my-org",
 *     vdc: "nsxt-vdc",
 *     name: "nsxt-gw",
 * });
 * const test = vcd.getNsxtAlbVirtualService({
 *     org: "dainius",
 *     edgeGatewayId: existingVcdNsxtEdgegateway.id,
 *     name: "virutal-service-name",
 * });
 * ```
 */
export function getNsxtAlbVirtualService(args: GetNsxtAlbVirtualServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxtAlbVirtualServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxtAlbVirtualService:getNsxtAlbVirtualService", {
        "edgeGatewayId": args.edgeGatewayId,
        "name": args.name,
        "org": args.org,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtAlbVirtualService.
 */
export interface GetNsxtAlbVirtualServiceArgs {
    /**
     * An ID of NSX-T Edge Gateway. Can be looked up using
     * [vcd.NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
     */
    edgeGatewayId: string;
    /**
     * The name of ALB Virtual Service
     */
    name: string;
    /**
     * The name of organization to which the edge gateway belongs. Optional if defined at provider level
     */
    org?: string;
    /**
     * @deprecated Edge Gateway will be looked up based on 'edge_gateway_id' field
     */
    vdc?: string;
}

/**
 * A collection of values returned by getNsxtAlbVirtualService.
 */
export interface GetNsxtAlbVirtualServiceResult {
    readonly applicationProfileType: string;
    readonly caCertificateId: string;
    readonly description: string;
    readonly edgeGatewayId: string;
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipv6VirtualIpAddress: string;
    readonly isTransparentModeEnabled: boolean;
    readonly name: string;
    readonly org?: string;
    readonly poolId: string;
    readonly serviceEngineGroupId: string;
    readonly servicePorts: outputs.GetNsxtAlbVirtualServiceServicePort[];
    /**
     * @deprecated Edge Gateway will be looked up based on 'edge_gateway_id' field
     */
    readonly vdc: string;
    readonly virtualIpAddress: string;
}
/**
 * Supported in provider *v3.5+* and VCD 10.2+ with NSX-T and ALB.
 *
 * Provides a data source to read ALB Virtual services for particular NSX-T Edge Gateway. A virtual service
 * advertises an IP address and ports to the external world and listens for client traffic. When a virtual service receives
 * traffic, it directs it to members in ALB Pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const existing = vcd.getNsxtEdgegateway({
 *     org: "my-org",
 *     vdc: "nsxt-vdc",
 *     name: "nsxt-gw",
 * });
 * const test = vcd.getNsxtAlbVirtualService({
 *     org: "dainius",
 *     edgeGatewayId: existingVcdNsxtEdgegateway.id,
 *     name: "virutal-service-name",
 * });
 * ```
 */
export function getNsxtAlbVirtualServiceOutput(args: GetNsxtAlbVirtualServiceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNsxtAlbVirtualServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNsxtAlbVirtualService:getNsxtAlbVirtualService", {
        "edgeGatewayId": args.edgeGatewayId,
        "name": args.name,
        "org": args.org,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtAlbVirtualService.
 */
export interface GetNsxtAlbVirtualServiceOutputArgs {
    /**
     * An ID of NSX-T Edge Gateway. Can be looked up using
     * [vcd.NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
     */
    edgeGatewayId: pulumi.Input<string>;
    /**
     * The name of ALB Virtual Service
     */
    name: pulumi.Input<string>;
    /**
     * The name of organization to which the edge gateway belongs. Optional if defined at provider level
     */
    org?: pulumi.Input<string>;
    /**
     * @deprecated Edge Gateway will be looked up based on 'edge_gateway_id' field
     */
    vdc?: pulumi.Input<string>;
}
