// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director NSX-V edge gateway data source, directly connected to one or more external networks. This can be used to reference
 * edge gateways for Org VDC networks to connect.
 *
 * Supported in provider *v2.5+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const mygw = vcd.getEdgegateway({
 *     name: "mygw",
 *     org: "myorg",
 *     vdc: "myvdc",
 * });
 * export const edgeGatewayId = mygw.then(mygw => mygw.id);
 * // Get the name of the default gateway from the data source
 * // and use it to establish a second data source
 * const externalNetwork1 = mygw.then(mygw => vcd.getExternalNetwork({
 *     name: mygw.externalNetworks?.name,
 * }));
 * export const gateway = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.gateway);
 * export const netmask = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.netmask);
 * export const DNS = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.dns1);
 * export const externalIp = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.staticIpPools?.[0]?.startAddress);
 * ```
 *
 * ## Filter arguments
 *
 * (Supported in provider *v2.9+*)
 *
 * * `nameRegex` - (Optional) matches the name using a regular expression.
 *
 * See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
 */
export function getEdgegateway(args?: GetEdgegatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetEdgegatewayResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getEdgegateway:getEdgegateway", {
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getEdgegateway.
 */
export interface GetEdgegatewayArgs {
    /**
     * Retrieves the data source using one or more filter parameters
     */
    filter?: inputs.GetEdgegatewayFilter;
    /**
     * A unique name for the edge gateway (optional when `filter` is used)
     */
    name?: string;
    /**
     * The name of organization to which the VDC belongs. Optional if defined at provider level.
     */
    org?: string;
    /**
     * The name of VDC that owns the edge gateway. Optional if defined at provider level.
     */
    vdc?: string;
}

/**
 * A collection of values returned by getEdgegateway.
 */
export interface GetEdgegatewayResult {
    readonly configuration: string;
    readonly defaultExternalNetworkIp: string;
    readonly description: string;
    readonly distributedRouting: boolean;
    readonly externalNetworkIps: string[];
    readonly externalNetworks: outputs.GetEdgegatewayExternalNetwork[];
    readonly filter?: outputs.GetEdgegatewayFilter;
    readonly fipsModeEnabled: boolean;
    readonly fwDefaultRuleAction: string;
    readonly fwDefaultRuleLoggingEnabled: boolean;
    readonly fwEnabled: boolean;
    readonly haEnabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lbAccelerationEnabled: boolean;
    readonly lbEnabled: boolean;
    readonly lbLoggingEnabled: boolean;
    readonly lbLoglevel: string;
    readonly name?: string;
    readonly org?: string;
    readonly useDefaultRouteForDnsRelay: boolean;
    readonly vdc?: string;
}
/**
 * Provides a VMware Cloud Director NSX-V edge gateway data source, directly connected to one or more external networks. This can be used to reference
 * edge gateways for Org VDC networks to connect.
 *
 * Supported in provider *v2.5+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const mygw = vcd.getEdgegateway({
 *     name: "mygw",
 *     org: "myorg",
 *     vdc: "myvdc",
 * });
 * export const edgeGatewayId = mygw.then(mygw => mygw.id);
 * // Get the name of the default gateway from the data source
 * // and use it to establish a second data source
 * const externalNetwork1 = mygw.then(mygw => vcd.getExternalNetwork({
 *     name: mygw.externalNetworks?.name,
 * }));
 * export const gateway = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.gateway);
 * export const netmask = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.netmask);
 * export const DNS = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.dns1);
 * export const externalIp = externalNetwork1.then(externalNetwork1 => externalNetwork1.ipScopes?.[0]?.staticIpPools?.[0]?.startAddress);
 * ```
 *
 * ## Filter arguments
 *
 * (Supported in provider *v2.9+*)
 *
 * * `nameRegex` - (Optional) matches the name using a regular expression.
 *
 * See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
 */
export function getEdgegatewayOutput(args?: GetEdgegatewayOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEdgegatewayResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getEdgegateway:getEdgegateway", {
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getEdgegateway.
 */
export interface GetEdgegatewayOutputArgs {
    /**
     * Retrieves the data source using one or more filter parameters
     */
    filter?: pulumi.Input<inputs.GetEdgegatewayFilterArgs>;
    /**
     * A unique name for the edge gateway (optional when `filter` is used)
     */
    name?: pulumi.Input<string>;
    /**
     * The name of organization to which the VDC belongs. Optional if defined at provider level.
     */
    org?: pulumi.Input<string>;
    /**
     * The name of VDC that owns the edge gateway. Optional if defined at provider level.
     */
    vdc?: pulumi.Input<string>;
}
