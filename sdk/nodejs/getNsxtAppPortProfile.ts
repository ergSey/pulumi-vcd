// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Supported in provider *v3.3+* and VCD 10.1+ with NSX-T backed VDCs.
 *
 * Provides a data source to read NSX-T Application Port Profiles. Application Port Profiles include a
 * combination of a protocol and a port, or a group of ports, that is used for Firewall and NAT
 * services on the Edge Gateway.
 *
 * ## Example Usage
 *
 * ### 1 (Find An Application Port Profile Defined By Provider)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const custom = vcd.getNsxtAppPortProfile({
 *     org: "System",
 *     contextId: first.id,
 *     name: "WINS",
 *     scope: "PROVIDER",
 * });
 * ```
 *
 * ### 2 (Find An Application Port Profile Defined By Tenant In A VDC Group)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const g1 = vcd.getVdcGroup({
 *     org: "myOrg",
 *     name: "myVDC",
 * });
 * const custom = g1.then(g1 => vcd.getNsxtAppPortProfile({
 *     org: "my-org",
 *     contextId: g1.id,
 *     name: "SSH-custom",
 *     scope: "TENANT",
 * }));
 * ```
 *
 * ### 3 (Find A System Defined Application Port Profile)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const vdc1 = vcd.getOrgVdc({
 *     org: "myOrg",
 *     name: "myVDC",
 * });
 * const custom = vdc1.then(vdc1 => vcd.getNsxtAppPortProfile({
 *     contextId: vdc1.id,
 *     scope: "SYSTEM",
 *     name: "SSH",
 * }));
 * ```
 */
export function getNsxtAppPortProfile(args: GetNsxtAppPortProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxtAppPortProfileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxtAppPortProfile:getNsxtAppPortProfile", {
        "contextId": args.contextId,
        "name": args.name,
        "nsxtManagerId": args.nsxtManagerId,
        "org": args.org,
        "scope": args.scope,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtAppPortProfile.
 */
export interface GetNsxtAppPortProfileArgs {
    /**
     * ID of NSX-T Manager, VDC or VDC Group. Replaces deprecated field `vdc`. Required if using more than one NSX-T Manager.
     */
    contextId?: string;
    /**
     * Unique name of existing Security Group.
     */
    name: string;
    /**
     * @deprecated Deprecated in favor of 'context_id'
     */
    nsxtManagerId?: string;
    /**
     * The name of organization to use, optional if defined at provider level. Useful
     * when connected as sysadmin working across different organisations.
     */
    org?: string;
    /**
     * `SYSTEM`, `PROVIDER`, or `TENANT`.
     */
    scope: string;
    /**
     * The name of VDC to use, optional if defined at provider level.
     * Deprecated and replaced by `contextId`
     *
     * @deprecated Deprecated in favor of 'context_id'
     */
    vdc?: string;
}

/**
 * A collection of values returned by getNsxtAppPortProfile.
 */
export interface GetNsxtAppPortProfileResult {
    readonly appPorts: outputs.GetNsxtAppPortProfileAppPort[];
    readonly contextId: string;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * @deprecated Deprecated in favor of 'context_id'
     */
    readonly nsxtManagerId?: string;
    readonly org?: string;
    readonly scope: string;
    /**
     * @deprecated Deprecated in favor of 'context_id'
     */
    readonly vdc?: string;
}
/**
 * Supported in provider *v3.3+* and VCD 10.1+ with NSX-T backed VDCs.
 *
 * Provides a data source to read NSX-T Application Port Profiles. Application Port Profiles include a
 * combination of a protocol and a port, or a group of ports, that is used for Firewall and NAT
 * services on the Edge Gateway.
 *
 * ## Example Usage
 *
 * ### 1 (Find An Application Port Profile Defined By Provider)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const custom = vcd.getNsxtAppPortProfile({
 *     org: "System",
 *     contextId: first.id,
 *     name: "WINS",
 *     scope: "PROVIDER",
 * });
 * ```
 *
 * ### 2 (Find An Application Port Profile Defined By Tenant In A VDC Group)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const g1 = vcd.getVdcGroup({
 *     org: "myOrg",
 *     name: "myVDC",
 * });
 * const custom = g1.then(g1 => vcd.getNsxtAppPortProfile({
 *     org: "my-org",
 *     contextId: g1.id,
 *     name: "SSH-custom",
 *     scope: "TENANT",
 * }));
 * ```
 *
 * ### 3 (Find A System Defined Application Port Profile)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const vdc1 = vcd.getOrgVdc({
 *     org: "myOrg",
 *     name: "myVDC",
 * });
 * const custom = vdc1.then(vdc1 => vcd.getNsxtAppPortProfile({
 *     contextId: vdc1.id,
 *     scope: "SYSTEM",
 *     name: "SSH",
 * }));
 * ```
 */
export function getNsxtAppPortProfileOutput(args: GetNsxtAppPortProfileOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNsxtAppPortProfileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNsxtAppPortProfile:getNsxtAppPortProfile", {
        "contextId": args.contextId,
        "name": args.name,
        "nsxtManagerId": args.nsxtManagerId,
        "org": args.org,
        "scope": args.scope,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtAppPortProfile.
 */
export interface GetNsxtAppPortProfileOutputArgs {
    /**
     * ID of NSX-T Manager, VDC or VDC Group. Replaces deprecated field `vdc`. Required if using more than one NSX-T Manager.
     */
    contextId?: pulumi.Input<string>;
    /**
     * Unique name of existing Security Group.
     */
    name: pulumi.Input<string>;
    /**
     * @deprecated Deprecated in favor of 'context_id'
     */
    nsxtManagerId?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful
     * when connected as sysadmin working across different organisations.
     */
    org?: pulumi.Input<string>;
    /**
     * `SYSTEM`, `PROVIDER`, or `TENANT`.
     */
    scope: pulumi.Input<string>;
    /**
     * The name of VDC to use, optional if defined at provider level.
     * Deprecated and replaced by `contextId`
     *
     * @deprecated Deprecated in favor of 'context_id'
     */
    vdc?: pulumi.Input<string>;
}
