// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director generic structure data source. It shows the structure of any VCD resource.
 *
 * Supported in provider *v3.1+*
 *
 * ## Example Usage
 *
 * ### 1
 *
 * Showing a structure with simple attributes only
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * export = async () => {
 *     const orgStruct = await vcd.getResourceSchema({
 *         name: "org_struct",
 *         resourceType: "vcd_org",
 *     });
 *     return {
 *         orgStruct: orgStruct.attributes,
 *     };
 * }
 * ```
 *
 * ### 2
 *
 * Showing a structure with both simple and compound attributes
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const networkIsolatedStruct = vcd.getResourceSchema({
 *     name: "net_struct",
 *     resourceType: "vcd_network_isolated",
 * });
 * export const netStruct = netStructVcdResourceSchema;
 * ```
 */
export function getResourceSchema(args: GetResourceSchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceSchemaResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getResourceSchema:getResourceSchema", {
        "name": args.name,
        "resourceType": args.resourceType,
    }, opts);
}

/**
 * A collection of arguments for invoking getResourceSchema.
 */
export interface GetResourceSchemaArgs {
    /**
     * An unique name to identify the data source
     */
    name: string;
    /**
     * Which resource we want to list. It needs to use the full name of the resource (i.e. "vcd.Org",
     * not simply "org")
     */
    resourceType: string;
}

/**
 * A collection of values returned by getResourceSchema.
 */
export interface GetResourceSchemaResult {
    /**
     * (Computed) Same composition of the simple `attributes` above.
     */
    readonly attributes: outputs.GetResourceSchemaAttribute[];
    /**
     * (Computed) The list of compound attributes
     * Each bock attribute is made of:
     */
    readonly blockAttributes: outputs.GetResourceSchemaBlockAttribute[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * the attribute name
     */
    readonly name: string;
    readonly resourceType: string;
}
/**
 * Provides a VMware Cloud Director generic structure data source. It shows the structure of any VCD resource.
 *
 * Supported in provider *v3.1+*
 *
 * ## Example Usage
 *
 * ### 1
 *
 * Showing a structure with simple attributes only
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * export = async () => {
 *     const orgStruct = await vcd.getResourceSchema({
 *         name: "org_struct",
 *         resourceType: "vcd_org",
 *     });
 *     return {
 *         orgStruct: orgStruct.attributes,
 *     };
 * }
 * ```
 *
 * ### 2
 *
 * Showing a structure with both simple and compound attributes
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const networkIsolatedStruct = vcd.getResourceSchema({
 *     name: "net_struct",
 *     resourceType: "vcd_network_isolated",
 * });
 * export const netStruct = netStructVcdResourceSchema;
 * ```
 */
export function getResourceSchemaOutput(args: GetResourceSchemaOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResourceSchemaResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getResourceSchema:getResourceSchema", {
        "name": args.name,
        "resourceType": args.resourceType,
    }, opts);
}

/**
 * A collection of arguments for invoking getResourceSchema.
 */
export interface GetResourceSchemaOutputArgs {
    /**
     * An unique name to identify the data source
     */
    name: pulumi.Input<string>;
    /**
     * Which resource we want to list. It needs to use the full name of the resource (i.e. "vcd.Org",
     * not simply "org")
     */
    resourceType: pulumi.Input<string>;
}
