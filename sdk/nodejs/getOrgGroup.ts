// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a data source for VMware Cloud Director Organization Groups. This can be used to fetch organization groups already defined in `SAML`, `OAUTH` or `LDAP`.
 *
 * Supported in provider *v3.6+*
 *
 * ## Example Usage
 *
 * ### To Fetch An Organization Group
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const org1 = vcd.getOrgGroup({
 *     org: "org1",
 *     name: "Org1-AdminGroup",
 * });
 * export const groupRole = org1.then(org1 => org1.role);
 * ```
 */
export function getOrgGroup(args: GetOrgGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getOrgGroup:getOrgGroup", {
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrgGroup.
 */
export interface GetOrgGroupArgs {
    /**
     * A unique name for the group.
     */
    name: string;
    /**
     * The name of organization to which the VDC belongs. Optional if defined at provider level.
     */
    org?: string;
}

/**
 * A collection of values returned by getOrgGroup.
 */
export interface GetOrgGroupResult {
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly org?: string;
    readonly providerType: string;
    readonly role: string;
    readonly userNames: string[];
}
/**
 * Provides a data source for VMware Cloud Director Organization Groups. This can be used to fetch organization groups already defined in `SAML`, `OAUTH` or `LDAP`.
 *
 * Supported in provider *v3.6+*
 *
 * ## Example Usage
 *
 * ### To Fetch An Organization Group
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const org1 = vcd.getOrgGroup({
 *     org: "org1",
 *     name: "Org1-AdminGroup",
 * });
 * export const groupRole = org1.then(org1 => org1.role);
 * ```
 */
export function getOrgGroupOutput(args: GetOrgGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrgGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getOrgGroup:getOrgGroup", {
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrgGroup.
 */
export interface GetOrgGroupOutputArgs {
    /**
     * A unique name for the group.
     */
    name: pulumi.Input<string>;
    /**
     * The name of organization to which the VDC belongs. Optional if defined at provider level.
     */
    org?: pulumi.Input<string>;
}
