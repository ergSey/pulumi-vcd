// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director Organization VDC data source. An Organization VDC can be used to
 * reference a VDC and use its data within other resources or data sources.
 *
 * > **Note:** This resource supports NSX-T and NSX-V based Org VDCs
 *
 * Supported in provider *v2.5+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_org_vdc = vcd.getOrgVdc({
 *     org: "my-org",
 *     name: "my-vdc",
 * });
 * export const providerVdc = my_org_vdc.then(my_org_vdc => my_org_vdc.providerVdcName);
 * ```
 */
export function getOrgVdc(args: GetOrgVdcArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgVdcResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getOrgVdc:getOrgVdc", {
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrgVdc.
 */
export interface GetOrgVdcArgs {
    /**
     * Organization VDC name
     */
    name: string;
    /**
     * Org name
     */
    org?: string;
}

/**
 * A collection of values returned by getOrgVdc.
 */
export interface GetOrgVdcResult {
    readonly allocationModel: string;
    readonly allowOverCommit: boolean;
    readonly computeCapacities: outputs.GetOrgVdcComputeCapacity[];
    readonly cpuGuaranteed: number;
    readonly cpuSpeed: number;
    readonly defaultComputePolicyId: string;
    /**
     * @deprecated Use `defaultComputePolicyId` attribute instead, which can support VM Sizing Policies, VM Placement Policies and vGPU Policies
     */
    readonly defaultVmSizingPolicyId: string;
    readonly description: string;
    /**
     * (*v3.8+*, *VCD 10.3+*) An ID of NSX-T Edge Cluster which should provide vApp
     * Networking Services or DHCP for Isolated Networks. This value **might be unavailable** in data
     * source if user has insufficient rights.
     */
    readonly edgeClusterId: string;
    readonly elasticity: boolean;
    readonly enableFastProvisioning: boolean;
    readonly enableNsxvDistributedFirewall: boolean;
    readonly enableThinProvisioning: boolean;
    readonly enableVmDiscovery: boolean;
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includeVmMemoryOverhead: boolean;
    readonly memoryGuaranteed: number;
    /**
     * @deprecated Use metadataEntry instead
     */
    readonly metadata: {[key: string]: string};
    readonly metadataEntries: outputs.GetOrgVdcMetadataEntry[];
    readonly name: string;
    readonly networkPoolName: string;
    readonly networkQuota: number;
    readonly nicQuota: number;
    readonly org?: string;
    readonly providerVdcName: string;
    readonly storageProfiles: outputs.GetOrgVdcStorageProfile[];
    readonly vmPlacementPolicyIds: string[];
    readonly vmQuota: number;
    readonly vmSizingPolicyIds: string[];
    readonly vmVgpuPolicyIds: string[];
}
/**
 * Provides a VMware Cloud Director Organization VDC data source. An Organization VDC can be used to
 * reference a VDC and use its data within other resources or data sources.
 *
 * > **Note:** This resource supports NSX-T and NSX-V based Org VDCs
 *
 * Supported in provider *v2.5+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_org_vdc = vcd.getOrgVdc({
 *     org: "my-org",
 *     name: "my-vdc",
 * });
 * export const providerVdc = my_org_vdc.then(my_org_vdc => my_org_vdc.providerVdcName);
 * ```
 */
export function getOrgVdcOutput(args: GetOrgVdcOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrgVdcResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getOrgVdc:getOrgVdc", {
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrgVdc.
 */
export interface GetOrgVdcOutputArgs {
    /**
     * Organization VDC name
     */
    name: pulumi.Input<string>;
    /**
     * Org name
     */
    org?: pulumi.Input<string>;
}
