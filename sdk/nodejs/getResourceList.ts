// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getResourceList(args: GetResourceListArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getResourceList:getResourceList", {
        "importFileName": args.importFileName,
        "listMode": args.listMode,
        "name": args.name,
        "nameIdSeparator": args.nameIdSeparator,
        "nameRegex": args.nameRegex,
        "org": args.org,
        "parent": args.parent,
        "resourceType": args.resourceType,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getResourceList.
 */
export interface GetResourceListArgs {
    /**
     * Name of the file containing the import block. (Requires `listMode = "import"`).
     * See [Importing resources][import-resources] for more information on importing.
     */
    importFileName?: string;
    /**
     * How the list should be built. One of:
     */
    listMode?: string;
    /**
     * An unique name to identify the data source
     */
    name: string;
    /**
     * A string separating name and ID in the list. Default is "  " (two spaces)
     */
    nameIdSeparator?: string;
    /**
     * If set, will restrict the list of resources to the ones whose name matches the given regular expression.
     */
    nameRegex?: string;
    /**
     * The name of organization to use, optional if defined at provider level
     */
    org?: string;
    /**
     * The resource parent, such as vApp, catalog, or edge gateway name, when needed.
     */
    parent?: string;
    /**
     * Which resource we want to list. Supported keywords are:
     */
    resourceType: string;
    /**
     * The name of VDC to use, optional if defined at provider level
     */
    vdc?: string;
}

/**
 * A collection of values returned by getResourceList.
 */
export interface GetResourceListResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly importFileName?: string;
    readonly listMode?: string;
    /**
     * (Computed) The list of requested resources in the chosen format.
     */
    readonly lists: string[];
    readonly name: string;
    readonly nameIdSeparator?: string;
    readonly nameRegex?: string;
    readonly org?: string;
    readonly parent?: string;
    readonly resourceType: string;
    readonly vdc?: string;
}
export function getResourceListOutput(args: GetResourceListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResourceListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getResourceList:getResourceList", {
        "importFileName": args.importFileName,
        "listMode": args.listMode,
        "name": args.name,
        "nameIdSeparator": args.nameIdSeparator,
        "nameRegex": args.nameRegex,
        "org": args.org,
        "parent": args.parent,
        "resourceType": args.resourceType,
        "vdc": args.vdc,
    }, opts);
}

/**
 * A collection of arguments for invoking getResourceList.
 */
export interface GetResourceListOutputArgs {
    /**
     * Name of the file containing the import block. (Requires `listMode = "import"`).
     * See [Importing resources][import-resources] for more information on importing.
     */
    importFileName?: pulumi.Input<string>;
    /**
     * How the list should be built. One of:
     */
    listMode?: pulumi.Input<string>;
    /**
     * An unique name to identify the data source
     */
    name: pulumi.Input<string>;
    /**
     * A string separating name and ID in the list. Default is "  " (two spaces)
     */
    nameIdSeparator?: pulumi.Input<string>;
    /**
     * If set, will restrict the list of resources to the ones whose name matches the given regular expression.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level
     */
    org?: pulumi.Input<string>;
    /**
     * The resource parent, such as vApp, catalog, or edge gateway name, when needed.
     */
    parent?: pulumi.Input<string>;
    /**
     * Which resource we want to list. Supported keywords are:
     */
    resourceType: pulumi.Input<string>;
    /**
     * The name of VDC to use, optional if defined at provider level
     */
    vdc?: pulumi.Input<string>;
}
