// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director VM sizing policy data source. This can be
 * used to read VM sizing policy.
 *
 * Supported in provider *v3.0+* and requires VCD 10.0+
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const tf_policy_name = vcd.getVmSizingPolicy({
 *     name: "my-rule",
 * });
 * export const policyId = tf_policy_name.then(tf_policy_name => tf_policy_name.id);
 * ```
 */
export function getVmSizingPolicy(args: GetVmSizingPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetVmSizingPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getVmSizingPolicy:getVmSizingPolicy", {
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmSizingPolicy.
 */
export interface GetVmSizingPolicyArgs {
    /**
     * The name VM sizing policy
     *
     * > **Note:**
     * Previously, it was incorrectly stated that the `org` argument was required. In fact, it is not, and it has been deprecated in the resource schema.
     * To preserve compatibility until the next release, though, the parameter is still parsed, but ignored.
     *
     * All arguments defined in [`vcd.VmSizingPolicy`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vm_sizing_policy#argument-reference) are supported.
     */
    name: string;
    /**
     * @deprecated Unneeded property, which was included by mistake
     */
    org?: string;
}

/**
 * A collection of values returned by getVmSizingPolicy.
 */
export interface GetVmSizingPolicyResult {
    readonly cpus: outputs.GetVmSizingPolicyCpus[];
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly memories: outputs.GetVmSizingPolicyMemory[];
    readonly name: string;
    /**
     * @deprecated Unneeded property, which was included by mistake
     */
    readonly org?: string;
}
/**
 * Provides a VMware Cloud Director VM sizing policy data source. This can be
 * used to read VM sizing policy.
 *
 * Supported in provider *v3.0+* and requires VCD 10.0+
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const tf_policy_name = vcd.getVmSizingPolicy({
 *     name: "my-rule",
 * });
 * export const policyId = tf_policy_name.then(tf_policy_name => tf_policy_name.id);
 * ```
 */
export function getVmSizingPolicyOutput(args: GetVmSizingPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVmSizingPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getVmSizingPolicy:getVmSizingPolicy", {
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmSizingPolicy.
 */
export interface GetVmSizingPolicyOutputArgs {
    /**
     * The name VM sizing policy
     *
     * > **Note:**
     * Previously, it was incorrectly stated that the `org` argument was required. In fact, it is not, and it has been deprecated in the resource schema.
     * To preserve compatibility until the next release, though, the parameter is still parsed, but ignored.
     *
     * All arguments defined in [`vcd.VmSizingPolicy`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vm_sizing_policy#argument-reference) are supported.
     */
    name: pulumi.Input<string>;
    /**
     * @deprecated Unneeded property, which was included by mistake
     */
    org?: pulumi.Input<string>;
}
