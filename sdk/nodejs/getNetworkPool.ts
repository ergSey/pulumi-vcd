// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a data source for a network pool attached to a VCD.
 *
 * Supported in provider *v3.10+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const np1 = vcd.getNetworkPool({
 *     name: "NSX-T Overlay 1",
 * });
 * ```
 */
export function getNetworkPool(args: GetNetworkPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkPoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNetworkPool:getNetworkPool", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkPool.
 */
export interface GetNetworkPoolArgs {
    /**
     * network pool name.
     */
    name: string;
}

/**
 * A collection of values returned by getNetworkPool.
 */
export interface GetNetworkPoolResult {
    readonly backings: outputs.GetNetworkPoolBacking[];
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly networkProviderId: string;
    readonly networkProviderName: string;
    readonly networkProviderType: string;
    readonly promiscuousMode: boolean;
    readonly status: string;
    readonly totalBackingsCount: number;
    readonly type: string;
    readonly usedBackingsCount: number;
}
/**
 * Provides a data source for a network pool attached to a VCD.
 *
 * Supported in provider *v3.10+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const np1 = vcd.getNetworkPool({
 *     name: "NSX-T Overlay 1",
 * });
 * ```
 */
export function getNetworkPoolOutput(args: GetNetworkPoolOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkPoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNetworkPool:getNetworkPool", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkPool.
 */
export interface GetNetworkPoolOutputArgs {
    /**
     * network pool name.
     */
    name: pulumi.Input<string>;
}
