// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Supported in provider *v3.10+*.
 *
 * Provides a data source to read SAML configuration for an organization.
 *
 * > **Note:** This data source requires system administrator privileges.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_org = vcd.getOrg({
 *     name: "my-org",
 * });
 * const first = my_org.then(my_org => vcd.getOrgSaml({
 *     orgId: my_org.id,
 * }));
 * ```
 */
export function getOrgSaml(args: GetOrgSamlArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgSamlResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getOrgSaml:getOrgSaml", {
        "orgId": args.orgId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrgSaml.
 */
export interface GetOrgSamlArgs {
    /**
     * ID of the organization containing the SAML settings
     */
    orgId: string;
}

/**
 * A collection of values returned by getOrgSaml.
 */
export interface GetOrgSamlResult {
    /**
     * The name of the SAML attribute that returns the email address of the user
     */
    readonly email: string;
    /**
     * Shows whether the SAML identity service is used for authentication
     */
    readonly enabled: boolean;
    /**
     * Your service provider entity ID
     */
    readonly entityId: string;
    /**
     * The name of the SAML attribute that returns the first name of the user
     */
    readonly firstName: string;
    /**
     * The name of the SAML attribute that returns the full name of the user
     */
    readonly fullName: string;
    /**
     * The name of the SAML attribute that returns the identifiers of all the groups of which the user is a member
     */
    readonly group: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly orgId: string;
    /**
     * The name of the SAML attribute that returns the identifiers of all roles of the user
     */
    readonly role: string;
    /**
     * The name of the SAML attribute that returns the surname of the user
     */
    readonly surname: string;
    /**
     * The name of the SAML attribute that returns the username of the user
     */
    readonly userName: string;
}
/**
 * Supported in provider *v3.10+*.
 *
 * Provides a data source to read SAML configuration for an organization.
 *
 * > **Note:** This data source requires system administrator privileges.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_org = vcd.getOrg({
 *     name: "my-org",
 * });
 * const first = my_org.then(my_org => vcd.getOrgSaml({
 *     orgId: my_org.id,
 * }));
 * ```
 */
export function getOrgSamlOutput(args: GetOrgSamlOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrgSamlResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getOrgSaml:getOrgSaml", {
        "orgId": args.orgId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrgSaml.
 */
export interface GetOrgSamlOutputArgs {
    /**
     * ID of the organization containing the SAML settings
     */
    orgId: pulumi.Input<string>;
}
