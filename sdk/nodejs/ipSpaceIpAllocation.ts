// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IpSpaceIpAllocation extends pulumi.CustomResource {
    /**
     * Get an existing IpSpaceIpAllocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpSpaceIpAllocationState, opts?: pulumi.CustomResourceOptions): IpSpaceIpAllocation {
        return new IpSpaceIpAllocation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/ipSpaceIpAllocation:IpSpaceIpAllocation';

    /**
     * Returns true if the given object is an instance of IpSpaceIpAllocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpSpaceIpAllocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpSpaceIpAllocation.__pulumiType;
    }

    /**
     * allocation date in formated as `2023-06-07T09:57:58.721Z` (ISO 8601)
     */
    public /*out*/ readonly allocationDate!: pulumi.Output<string>;
    /**
     * Can only be set when `usage_state=USED_MANUAL`
     *
     * > IP Allocation resources can be created only if there is a NSX-T Edge Gateway
     * (`vcd.NsxtEdgegateway`) that is backed by the Provider Gateway (`vcd.ExternalNetworkV2`) with IP
     * Space Uplinks (`vcd.IpSpaceUplink`). Attempting to allocate IP Addresses before having an
     * Edge Gateway withing VDC will return errors of type `This operation is denied`.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * convenience field. For `type=IP_PREFIX` it will contain only the IP from CIDR returned
     */
    public /*out*/ readonly ip!: pulumi.Output<string>;
    /**
     * IP address or CIDR
     */
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    /**
     * IP Space ID to use for IP Allocations
     */
    public readonly ipSpaceId!: pulumi.Output<string | undefined>;
    /**
     * Org ID in which the IP is allocated
     */
    public readonly orgId!: pulumi.Output<string>;
    /**
     * Required when `type=IP_PREFIX`
     */
    public readonly prefixLength!: pulumi.Output<string>;
    /**
     * One of `FLOATING_IP`, `IP_PREFIX`
     * * `FLOATING_IP` - allocates single IP from defined ranges in IP Space
     * * `IP_PREFIX` - allocates subnets. **Note** field `prefixLength` is required to allocate IP
     * Prefix
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * (Optional) Only used with manual reservations. Value `USED_MANUAL`
     * enables manual IP reservation. Value `UNUSED` is set to release manual allocation of IP.
     */
    public readonly usageState!: pulumi.Output<string>;
    /**
     * contains entity ID that is using the IP if `usage_state=USED`
     */
    public /*out*/ readonly usedById!: pulumi.Output<string>;
    /**
     * An option to request a specific IP or subnet from IP Space.
     * **Note:** This field does not support IP ranges because it would cause multiple allocations
     * created in one resource. Please use multiple resource instances to allocate IP ranges.
     */
    public readonly value!: pulumi.Output<string | undefined>;

    /**
     * Create a IpSpaceIpAllocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpSpaceIpAllocationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpSpaceIpAllocationArgs | IpSpaceIpAllocationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpSpaceIpAllocationState | undefined;
            resourceInputs["allocationDate"] = state ? state.allocationDate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["ipSpaceId"] = state ? state.ipSpaceId : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["prefixLength"] = state ? state.prefixLength : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["usageState"] = state ? state.usageState : undefined;
            resourceInputs["usedById"] = state ? state.usedById : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as IpSpaceIpAllocationArgs | undefined;
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipSpaceId"] = args ? args.ipSpaceId : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["prefixLength"] = args ? args.prefixLength : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["usageState"] = args ? args.usageState : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["allocationDate"] = undefined /*out*/;
            resourceInputs["ip"] = undefined /*out*/;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["usedById"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpSpaceIpAllocation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpSpaceIpAllocation resources.
 */
export interface IpSpaceIpAllocationState {
    /**
     * allocation date in formated as `2023-06-07T09:57:58.721Z` (ISO 8601)
     */
    allocationDate?: pulumi.Input<string>;
    /**
     * Can only be set when `usage_state=USED_MANUAL`
     *
     * > IP Allocation resources can be created only if there is a NSX-T Edge Gateway
     * (`vcd.NsxtEdgegateway`) that is backed by the Provider Gateway (`vcd.ExternalNetworkV2`) with IP
     * Space Uplinks (`vcd.IpSpaceUplink`). Attempting to allocate IP Addresses before having an
     * Edge Gateway withing VDC will return errors of type `This operation is denied`.
     */
    description?: pulumi.Input<string>;
    /**
     * convenience field. For `type=IP_PREFIX` it will contain only the IP from CIDR returned
     */
    ip?: pulumi.Input<string>;
    /**
     * IP address or CIDR
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * IP Space ID to use for IP Allocations
     */
    ipSpaceId?: pulumi.Input<string>;
    /**
     * Org ID in which the IP is allocated
     */
    orgId?: pulumi.Input<string>;
    /**
     * Required when `type=IP_PREFIX`
     */
    prefixLength?: pulumi.Input<string>;
    /**
     * One of `FLOATING_IP`, `IP_PREFIX`
     * * `FLOATING_IP` - allocates single IP from defined ranges in IP Space
     * * `IP_PREFIX` - allocates subnets. **Note** field `prefixLength` is required to allocate IP
     * Prefix
     */
    type?: pulumi.Input<string>;
    /**
     * (Optional) Only used with manual reservations. Value `USED_MANUAL`
     * enables manual IP reservation. Value `UNUSED` is set to release manual allocation of IP.
     */
    usageState?: pulumi.Input<string>;
    /**
     * contains entity ID that is using the IP if `usage_state=USED`
     */
    usedById?: pulumi.Input<string>;
    /**
     * An option to request a specific IP or subnet from IP Space.
     * **Note:** This field does not support IP ranges because it would cause multiple allocations
     * created in one resource. Please use multiple resource instances to allocate IP ranges.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpSpaceIpAllocation resource.
 */
export interface IpSpaceIpAllocationArgs {
    /**
     * Can only be set when `usage_state=USED_MANUAL`
     *
     * > IP Allocation resources can be created only if there is a NSX-T Edge Gateway
     * (`vcd.NsxtEdgegateway`) that is backed by the Provider Gateway (`vcd.ExternalNetworkV2`) with IP
     * Space Uplinks (`vcd.IpSpaceUplink`). Attempting to allocate IP Addresses before having an
     * Edge Gateway withing VDC will return errors of type `This operation is denied`.
     */
    description?: pulumi.Input<string>;
    /**
     * IP Space ID to use for IP Allocations
     */
    ipSpaceId?: pulumi.Input<string>;
    /**
     * Org ID in which the IP is allocated
     */
    orgId: pulumi.Input<string>;
    /**
     * Required when `type=IP_PREFIX`
     */
    prefixLength?: pulumi.Input<string>;
    /**
     * One of `FLOATING_IP`, `IP_PREFIX`
     * * `FLOATING_IP` - allocates single IP from defined ranges in IP Space
     * * `IP_PREFIX` - allocates subnets. **Note** field `prefixLength` is required to allocate IP
     * Prefix
     */
    type: pulumi.Input<string>;
    /**
     * (Optional) Only used with manual reservations. Value `USED_MANUAL`
     * enables manual IP reservation. Value `UNUSED` is set to release manual allocation of IP.
     */
    usageState?: pulumi.Input<string>;
    /**
     * An option to request a specific IP or subnet from IP Space.
     * **Note:** This field does not support IP ranges because it would cause multiple allocations
     * created in one resource. Please use multiple resource instances to allocate IP ranges.
     */
    value?: pulumi.Input<string>;
}
