// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director Catalog data source. A Catalog can be used to manage catalog items and media items.
 *
 * Supported in provider *v2.5+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_cat = vcd.getCatalog({
 *     org: "my-org",
 *     name: "my-cat",
 * });
 * const myItem = new vcd.CatalogItem("myItem", {
 *     org: my_cat.then(my_cat => my_cat.org),
 *     catalog: my_cat.then(my_cat => my_cat.name),
 *     name: "myItem",
 *     description: my_cat.then(my_cat => `Belongs to ${my_cat.id}`),
 *     ovaPath: "/path/to/test_vapp_template.ova",
 *     uploadPieceSize: 5,
 * });
 * ```
 *
 * ## Metadata
 *
 * The `metadataEntry` (*v3.8+*) is a set of metadata entries that have the following structure:
 *
 * * `key` - Key of this metadata entry.
 * * `value` - Value of this metadata entry.
 * * `type` - Type of this metadata entry. One of: `MetadataStringValue`, `MetadataNumberValue`, `MetadataDateTimeValue`, `MetadataBooleanValue`.
 * * `userAccess` - User access level for this metadata entry. One of: `PRIVATE` (hidden), `READONLY` (read only), `READWRITE` (read/write).
 * * `isSystem` - Domain for this metadata entry. true if it belongs to `SYSTEM`, false if it belongs to `GENERAL`.
 *
 * ## Filter arguments
 *
 * (Supported in provider *v2.9+*)
 *
 * * `nameRegex` (Optional) matches the name using a regular expression.
 * * `date` (Optional) is an expression starting with an operator (`>`, `<`, `>=`, `<=`, `==`), followed by a date, with
 *   optional spaces in between. For example: `> 2020-02-01 12:35:00.523Z`
 *   The filter recognizes several formats, but one of `yyyy-mm-dd [hh:mm[:ss[.nnnZ]]]` or `dd-MMM-yyyy [hh:mm[:ss[.nnnZ]]]`
 *   is recommended.
 *   Comparison with equality operator (`==`) need to define the date to the microseconds.
 * * `latest` (Optional) If `true`, retrieve the latest item among the ones matching other parameters. If no other parameters
 *   are set, it retrieves the newest item.
 * * `earliest` (Optional) If `true`, retrieve the earliest item among the ones matching other parameters. If no other parameters
 *   are set, it retrieves the oldest item.
 * * `metadata` (Optional) One or more parameters that will match metadata contents.
 *
 * See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
 */
export function getCatalog(args?: GetCatalogArgs, opts?: pulumi.InvokeOptions): Promise<GetCatalogResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getCatalog:getCatalog", {
        "description": args.description,
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getCatalog.
 */
export interface GetCatalogArgs {
    /**
     * Catalog description.
     */
    description?: string;
    /**
     * Retrieves the data source using one or more filter parameters
     */
    filter?: inputs.GetCatalogFilter;
    /**
     * Catalog name (optional when `filter` is used)
     */
    name?: string;
    /**
     * Org name
     */
    org?: string;
}

/**
 * A collection of values returned by getCatalog.
 */
export interface GetCatalogResult {
    /**
     * (*v3.6+*) Enable early catalog export to optimize synchronization. Default is `false`.
     */
    readonly cacheEnabled: boolean;
    /**
     * (*v3.6+*) Version number from this catalog.
     */
    readonly catalogVersion: number;
    /**
     * (*v3.6+*) Date and time of catalog creation
     */
    readonly created: string;
    /**
     * Catalog description.
     */
    readonly description: string;
    readonly filter?: outputs.GetCatalogFilter;
    readonly href: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (*v3.8.1+*) Indicates if this catalog was created in the current organization.
     */
    readonly isLocal: boolean;
    /**
     * (*v3.6+*) Indicates if this catalog is shared to all organizations.
     */
    readonly isPublished: boolean;
    /**
     * (*v3.6+*) Indicates if the catalog is shared.
     */
    readonly isShared: boolean;
    /**
     * (*v3.8+*) List of media item names in this catalog, in alphabetical order.
     */
    readonly mediaItemLists: string[];
    /**
     * (Deprecated; *v3.6+*) Use `metadataEntry` instead. Key value map of metadata.
     *
     * @deprecated Use metadataEntry instead
     */
    readonly metadata: {[key: string]: string};
    /**
     * A set of metadata entries assigned to this Catalog. See Metadata section for details.
     */
    readonly metadataEntries: outputs.GetCatalogMetadataEntry[];
    readonly name?: string;
    /**
     * (*v3.6+*) Number of media items available in this catalog.
     */
    readonly numberOfMedia: number;
    /**
     * (*v3.6+*) Number of vApp templates available in this catalog.
     */
    readonly numberOfVappTemplates: number;
    readonly org?: string;
    /**
     * (*v3.6+*) Owner of the catalog.
     */
    readonly ownerName: string;
    /**
     * (*v3.6+*) Enable include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the portability of the package and you should use it only when necessary. Default is `false`.
     */
    readonly preserveIdentityInformation: boolean;
    /**
     * (*v3.6+*) Enable allows to publish a catalog externally to make its vApp templates and media files available for subscription by organizations outside the Cloud Director installation. Default is `false`.
     */
    readonly publishEnabled: boolean;
    /**
     * (*v3.6+*) Shows if the catalog is `PUBLISHED`, if it is a subscription from another one (`SUBSCRIBED`), or none of those (`UNPUBLISHED`).
     */
    readonly publishSubscriptionType: string;
    /**
     * (*v3.8+*) URL to which other catalogs can subscribe.
     */
    readonly publishSubscriptionUrl: string;
    readonly storageProfileId: string;
    /**
     * (*v3.8+*) List of vApp template names in this catalog, in alphabetical order.
     */
    readonly vappTemplateLists: string[];
}
/**
 * Provides a VMware Cloud Director Catalog data source. A Catalog can be used to manage catalog items and media items.
 *
 * Supported in provider *v2.5+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const my_cat = vcd.getCatalog({
 *     org: "my-org",
 *     name: "my-cat",
 * });
 * const myItem = new vcd.CatalogItem("myItem", {
 *     org: my_cat.then(my_cat => my_cat.org),
 *     catalog: my_cat.then(my_cat => my_cat.name),
 *     name: "myItem",
 *     description: my_cat.then(my_cat => `Belongs to ${my_cat.id}`),
 *     ovaPath: "/path/to/test_vapp_template.ova",
 *     uploadPieceSize: 5,
 * });
 * ```
 *
 * ## Metadata
 *
 * The `metadataEntry` (*v3.8+*) is a set of metadata entries that have the following structure:
 *
 * * `key` - Key of this metadata entry.
 * * `value` - Value of this metadata entry.
 * * `type` - Type of this metadata entry. One of: `MetadataStringValue`, `MetadataNumberValue`, `MetadataDateTimeValue`, `MetadataBooleanValue`.
 * * `userAccess` - User access level for this metadata entry. One of: `PRIVATE` (hidden), `READONLY` (read only), `READWRITE` (read/write).
 * * `isSystem` - Domain for this metadata entry. true if it belongs to `SYSTEM`, false if it belongs to `GENERAL`.
 *
 * ## Filter arguments
 *
 * (Supported in provider *v2.9+*)
 *
 * * `nameRegex` (Optional) matches the name using a regular expression.
 * * `date` (Optional) is an expression starting with an operator (`>`, `<`, `>=`, `<=`, `==`), followed by a date, with
 *   optional spaces in between. For example: `> 2020-02-01 12:35:00.523Z`
 *   The filter recognizes several formats, but one of `yyyy-mm-dd [hh:mm[:ss[.nnnZ]]]` or `dd-MMM-yyyy [hh:mm[:ss[.nnnZ]]]`
 *   is recommended.
 *   Comparison with equality operator (`==`) need to define the date to the microseconds.
 * * `latest` (Optional) If `true`, retrieve the latest item among the ones matching other parameters. If no other parameters
 *   are set, it retrieves the newest item.
 * * `earliest` (Optional) If `true`, retrieve the earliest item among the ones matching other parameters. If no other parameters
 *   are set, it retrieves the oldest item.
 * * `metadata` (Optional) One or more parameters that will match metadata contents.
 *
 * See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
 */
export function getCatalogOutput(args?: GetCatalogOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCatalogResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getCatalog:getCatalog", {
        "description": args.description,
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getCatalog.
 */
export interface GetCatalogOutputArgs {
    /**
     * Catalog description.
     */
    description?: pulumi.Input<string>;
    /**
     * Retrieves the data source using one or more filter parameters
     */
    filter?: pulumi.Input<inputs.GetCatalogFilterArgs>;
    /**
     * Catalog name (optional when `filter` is used)
     */
    name?: pulumi.Input<string>;
    /**
     * Org name
     */
    org?: pulumi.Input<string>;
}
