// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides the capability of fetching an existing Runtime Defined Entity Type from VMware Cloud Director.
 *
 * Supported in provider *v3.9+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * export = async () => {
 *     const myRdeType = await vcd.getRdeType({
 *         vendor: "bigcorp",
 *         nss: "tech",
 *         version: "1.2.3",
 *     });
 *     return {
 *         "type-name": myRdeType.name,
 *         "type-id": myRdeType.id,
 *     };
 * }
 * ```
 */
export function getRdeType(args: GetRdeTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetRdeTypeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getRdeType:getRdeType", {
        "nss": args.nss,
        "vendor": args.vendor,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getRdeType.
 */
export interface GetRdeTypeArgs {
    /**
     * A unique namespace associated with the Runtime Defined Entity Type.
     */
    nss: string;
    /**
     * The vendor of the Runtime Defined Entity Type.
     */
    vendor: string;
    /**
     * The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
     */
    version: string;
}

/**
 * A collection of values returned by getRdeType.
 */
export interface GetRdeTypeResult {
    readonly description: string;
    readonly externalId: string;
    readonly hooks: outputs.GetRdeTypeHook[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly inheritedVersion: string;
    readonly interfaceIds: string[];
    readonly name: string;
    readonly nss: string;
    readonly readonly: boolean;
    readonly schema: string;
    readonly vendor: string;
    readonly version: string;
}
/**
 * Provides the capability of fetching an existing Runtime Defined Entity Type from VMware Cloud Director.
 *
 * Supported in provider *v3.9+*
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * export = async () => {
 *     const myRdeType = await vcd.getRdeType({
 *         vendor: "bigcorp",
 *         nss: "tech",
 *         version: "1.2.3",
 *     });
 *     return {
 *         "type-name": myRdeType.name,
 *         "type-id": myRdeType.id,
 *     };
 * }
 * ```
 */
export function getRdeTypeOutput(args: GetRdeTypeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRdeTypeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getRdeType:getRdeType", {
        "nss": args.nss,
        "vendor": args.vendor,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getRdeType.
 */
export interface GetRdeTypeOutputArgs {
    /**
     * A unique namespace associated with the Runtime Defined Entity Type.
     */
    nss: pulumi.Input<string>;
    /**
     * The vendor of the Runtime Defined Entity Type.
     */
    vendor: pulumi.Input<string>;
    /**
     * The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
     */
    version: pulumi.Input<string>;
}
