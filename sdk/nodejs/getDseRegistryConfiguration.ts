// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Supported in provider *v3.13+* with Data Solution Extension.
 *
 * Provides a data source to read Data Solution Extension (DSE) registry configuration.
 *
 * > Only `System Administrator` can use this data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const mongodb = vcd.getDseRegistryConfiguration({
 *     name: "MongoDB",
 * });
 * ```
 */
export function getDseRegistryConfiguration(args: GetDseRegistryConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetDseRegistryConfigurationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getDseRegistryConfiguration:getDseRegistryConfiguration", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDseRegistryConfiguration.
 */
export interface GetDseRegistryConfigurationArgs {
    /**
     * The name of Data Solution as it appears in repository configuration
     */
    name: string;
}

/**
 * A collection of values returned by getDseRegistryConfiguration.
 */
export interface GetDseRegistryConfigurationResult {
    readonly chartRepository: string;
    readonly compatibleVersionConstraints: string[];
    readonly containerRegistries: outputs.GetDseRegistryConfigurationContainerRegistry[];
    readonly defaultChartRepository: string;
    readonly defaultPackageName: string;
    readonly defaultRepository: string;
    readonly defaultVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly packageName: string;
    readonly packageRepository: string;
    readonly rdeState: string;
    readonly requiresVersionCompatibility: boolean;
    readonly type: string;
    readonly version: string;
}
/**
 * Supported in provider *v3.13+* with Data Solution Extension.
 *
 * Provides a data source to read Data Solution Extension (DSE) registry configuration.
 *
 * > Only `System Administrator` can use this data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const mongodb = vcd.getDseRegistryConfiguration({
 *     name: "MongoDB",
 * });
 * ```
 */
export function getDseRegistryConfigurationOutput(args: GetDseRegistryConfigurationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDseRegistryConfigurationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getDseRegistryConfiguration:getDseRegistryConfiguration", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDseRegistryConfiguration.
 */
export interface GetDseRegistryConfigurationOutputArgs {
    /**
     * The name of Data Solution as it appears in repository configuration
     */
    name: pulumi.Input<string>;
}
