// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director NSX-T MAC Discovery Profile data source. This can be used to read NSX-T Segment Profile definitions.
 *
 * Supported in provider *v3.11+*.
 *
 * ## Example Usage
 *
 * ### MAC Discovery Profile)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const nsxt = vcd.getNsxtManager({
 *     name: "nsxManager1",
 * });
 * const first = nsxt.then(nsxt => vcd.getNsxtSegmentMacDiscoveryProfile({
 *     name: "mac-discovery-profile-0",
 *     nsxtManagerId: nsxt.id,
 * }));
 * ```
 */
export function getNsxtSegmentMacDiscoveryProfile(args: GetNsxtSegmentMacDiscoveryProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxtSegmentMacDiscoveryProfileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxtSegmentMacDiscoveryProfile:getNsxtSegmentMacDiscoveryProfile", {
        "name": args.name,
        "nsxtManagerId": args.nsxtManagerId,
        "vdcGroupId": args.vdcGroupId,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtSegmentMacDiscoveryProfile.
 */
export interface GetNsxtSegmentMacDiscoveryProfileArgs {
    /**
     * The name of Segment Profile
     */
    name: string;
    /**
     * Segment Profile search context. Use when searching by NSX-T manager
     */
    nsxtManagerId?: string;
    /**
     * Segment Profile search context. Use when searching by VDC group
     *
     * > Note: only one of `nsxtManagerId`, `vdcId`, `vdcGroupId` can be used
     */
    vdcGroupId?: string;
    /**
     * Segment Profile search context. Use when searching by VDC
     */
    vdcId?: string;
}

/**
 * A collection of values returned by getNsxtSegmentMacDiscoveryProfile.
 */
export interface GetNsxtSegmentMacDiscoveryProfileResult {
    /**
     * Description of MAC Discovery Profile
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Defines whether source MAC address change is enabled
     */
    readonly isMacChangeEnabled: boolean;
    /**
     * Defines whether source MAC address learning is enabled
     */
    readonly isMacLearningEnabled: boolean;
    /**
     * Defines whether unknown unicast flooding rule is enabled
     * This allows flooding for unlearned MAC for ingress traffic
     */
    readonly isUnknownUnicastFloodingEnabled: boolean;
    /**
     * Aging time in seconds for learned MAC address. Indicates how long
     * learned MAC address remain
     */
    readonly macLearningAgingTime: number;
    /**
     * The maximum number of MAC addresses that can be learned on this port
     */
    readonly macLimit: number;
    /**
     * The policy after MAC Limit is exceeded. It can be either `ALLOW` or `DROP`
     */
    readonly macPolicy: string;
    readonly name: string;
    readonly nsxtManagerId?: string;
    readonly vdcGroupId?: string;
    readonly vdcId?: string;
}
/**
 * Provides a VMware Cloud Director NSX-T MAC Discovery Profile data source. This can be used to read NSX-T Segment Profile definitions.
 *
 * Supported in provider *v3.11+*.
 *
 * ## Example Usage
 *
 * ### MAC Discovery Profile)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const nsxt = vcd.getNsxtManager({
 *     name: "nsxManager1",
 * });
 * const first = nsxt.then(nsxt => vcd.getNsxtSegmentMacDiscoveryProfile({
 *     name: "mac-discovery-profile-0",
 *     nsxtManagerId: nsxt.id,
 * }));
 * ```
 */
export function getNsxtSegmentMacDiscoveryProfileOutput(args: GetNsxtSegmentMacDiscoveryProfileOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNsxtSegmentMacDiscoveryProfileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNsxtSegmentMacDiscoveryProfile:getNsxtSegmentMacDiscoveryProfile", {
        "name": args.name,
        "nsxtManagerId": args.nsxtManagerId,
        "vdcGroupId": args.vdcGroupId,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtSegmentMacDiscoveryProfile.
 */
export interface GetNsxtSegmentMacDiscoveryProfileOutputArgs {
    /**
     * The name of Segment Profile
     */
    name: pulumi.Input<string>;
    /**
     * Segment Profile search context. Use when searching by NSX-T manager
     */
    nsxtManagerId?: pulumi.Input<string>;
    /**
     * Segment Profile search context. Use when searching by VDC group
     *
     * > Note: only one of `nsxtManagerId`, `vdcId`, `vdcGroupId` can be used
     */
    vdcGroupId?: pulumi.Input<string>;
    /**
     * Segment Profile search context. Use when searching by VDC
     */
    vdcId?: pulumi.Input<string>;
}
