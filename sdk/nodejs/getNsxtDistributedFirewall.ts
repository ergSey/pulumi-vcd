// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * The Distributed Firewall data source reads all defined rules for a particular VDC Group.
 *
 * > There is a different data source
 * [`vcd.NsxtDistributedFirewallRule`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_distributed_firewall_rule)
 * resource are available that can fetch a single firewall rule by name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const g1 = vcd.getVdcGroup({
 *     org: "my-org",
 *     name: "my-vdc-group",
 * });
 * const t1 = g1.then(g1 => vcd.getNsxtDistributedFirewall({
 *     org: "my-org",
 *     vdcGroupId: g1.id,
 * }));
 * ```
 */
export function getNsxtDistributedFirewall(args: GetNsxtDistributedFirewallArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxtDistributedFirewallResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxtDistributedFirewall:getNsxtDistributedFirewall", {
        "org": args.org,
        "vdcGroupId": args.vdcGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtDistributedFirewall.
 */
export interface GetNsxtDistributedFirewallArgs {
    /**
     * The name of organization in which Distributed Firewall is located. Optional if
     * defined at provider level.
     */
    org?: string;
    /**
     * The ID of a VDC Group
     */
    vdcGroupId: string;
}

/**
 * A collection of values returned by getNsxtDistributedFirewall.
 */
export interface GetNsxtDistributedFirewallResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly org?: string;
    readonly rules: outputs.GetNsxtDistributedFirewallRule[];
    readonly vdcGroupId: string;
}
/**
 * The Distributed Firewall data source reads all defined rules for a particular VDC Group.
 *
 * > There is a different data source
 * [`vcd.NsxtDistributedFirewallRule`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_distributed_firewall_rule)
 * resource are available that can fetch a single firewall rule by name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const g1 = vcd.getVdcGroup({
 *     org: "my-org",
 *     name: "my-vdc-group",
 * });
 * const t1 = g1.then(g1 => vcd.getNsxtDistributedFirewall({
 *     org: "my-org",
 *     vdcGroupId: g1.id,
 * }));
 * ```
 */
export function getNsxtDistributedFirewallOutput(args: GetNsxtDistributedFirewallOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNsxtDistributedFirewallResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNsxtDistributedFirewall:getNsxtDistributedFirewall", {
        "org": args.org,
        "vdcGroupId": args.vdcGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtDistributedFirewall.
 */
export interface GetNsxtDistributedFirewallOutputArgs {
    /**
     * The name of organization in which Distributed Firewall is located. Optional if
     * defined at provider level.
     */
    org?: pulumi.Input<string>;
    /**
     * The ID of a VDC Group
     */
    vdcGroupId: pulumi.Input<string>;
}
