// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a VMware Cloud Director NSX-V distributed firewall applications and application groups finder
 * used to retrieve existing ones by regular expressions.
 *
 * Supported in provider *v3.9+*
 *
 * ## Example Usage
 *
 * ### 2
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const applications = vcd.getNsxvApplicationFinder({
 *     vdcId: my_vdc.id,
 *     searchExpression: "dns",
 *     caseSensitive: false,
 *     type: "application",
 * });
 * ```
 *
 * Sample output:
 *
 * ## Search expressions
 *
 * To search for an application or application group, we can use simple or complex [regular expressions](https://en.wikipedia.org/wiki/Regular_expression).
 * The expressions in this data source follow the [PCRE](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions) standard.
 *
 * A **simple** regular expression is a (short) text that we expect to find within the application name. For example, the
 * expression `sql` will find, among others, `Oracle i*SQLPlus` and `MSSQL Server Database Engine`, because the search, by default,
 * ignores the case of the searched text.
 *
 * A more complex regular expression could use meta-characters and regular expression directives to search more precisely.
 * For example, the expression `^server` tells the search to find a name that starts (`^`) with "server", thus finding
 * "Server Message Block (SMB)" (starts with `server`), but not  "SAP MDM Server" (where `server` is not at the beginning
 * of the name).
 *
 * If we want to search with even more accuracy, we could set the property `caseSensitive = true`, where the case of the
 * text matters. Thus, searching for `VMware` would find `VMware-SRM-Replication` and `VMware-VCO-Messaging`, but not
 * `Vmware-VC-WebAccess` (lowercase `m` after `V`).
 */
export function getNsxvApplicationFinder(args: GetNsxvApplicationFinderArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxvApplicationFinderResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxvApplicationFinder:getNsxvApplicationFinder", {
        "caseSensitive": args.caseSensitive,
        "searchExpression": args.searchExpression,
        "type": args.type,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxvApplicationFinder.
 */
export interface GetNsxvApplicationFinderArgs {
    /**
     * Makes the search case-sensitive. By default, it is false
     */
    caseSensitive?: boolean;
    /**
     * The regular expression that will be used to search the applications. See Search Expressions below
     */
    searchExpression: string;
    /**
     * What kind of application we seek. One of `application`, `applicationGroup`
     */
    type: string;
    /**
     * The ID of VDC to use
     */
    vdcId: string;
}

/**
 * A collection of values returned by getNsxvApplicationFinder.
 */
export interface GetNsxvApplicationFinderResult {
    readonly caseSensitive?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of objects found by the search expression. Each one contains the following properties:
     */
    readonly objects: outputs.GetNsxvApplicationFinderObject[];
    readonly searchExpression: string;
    /**
     * the type of the object (`Application` or `ApplicationGroup`)
     */
    readonly type: string;
    readonly vdcId: string;
}
/**
 * Provides a VMware Cloud Director NSX-V distributed firewall applications and application groups finder
 * used to retrieve existing ones by regular expressions.
 *
 * Supported in provider *v3.9+*
 *
 * ## Example Usage
 *
 * ### 2
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vcd from "@pulumi/vcd";
 *
 * const applications = vcd.getNsxvApplicationFinder({
 *     vdcId: my_vdc.id,
 *     searchExpression: "dns",
 *     caseSensitive: false,
 *     type: "application",
 * });
 * ```
 *
 * Sample output:
 *
 * ## Search expressions
 *
 * To search for an application or application group, we can use simple or complex [regular expressions](https://en.wikipedia.org/wiki/Regular_expression).
 * The expressions in this data source follow the [PCRE](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions) standard.
 *
 * A **simple** regular expression is a (short) text that we expect to find within the application name. For example, the
 * expression `sql` will find, among others, `Oracle i*SQLPlus` and `MSSQL Server Database Engine`, because the search, by default,
 * ignores the case of the searched text.
 *
 * A more complex regular expression could use meta-characters and regular expression directives to search more precisely.
 * For example, the expression `^server` tells the search to find a name that starts (`^`) with "server", thus finding
 * "Server Message Block (SMB)" (starts with `server`), but not  "SAP MDM Server" (where `server` is not at the beginning
 * of the name).
 *
 * If we want to search with even more accuracy, we could set the property `caseSensitive = true`, where the case of the
 * text matters. Thus, searching for `VMware` would find `VMware-SRM-Replication` and `VMware-VCO-Messaging`, but not
 * `Vmware-VC-WebAccess` (lowercase `m` after `V`).
 */
export function getNsxvApplicationFinderOutput(args: GetNsxvApplicationFinderOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNsxvApplicationFinderResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vcd:index/getNsxvApplicationFinder:getNsxvApplicationFinder", {
        "caseSensitive": args.caseSensitive,
        "searchExpression": args.searchExpression,
        "type": args.type,
        "vdcId": args.vdcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxvApplicationFinder.
 */
export interface GetNsxvApplicationFinderOutputArgs {
    /**
     * Makes the search case-sensitive. By default, it is false
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * The regular expression that will be used to search the applications. See Search Expressions below
     */
    searchExpression: pulumi.Input<string>;
    /**
     * What kind of application we seek. One of `application`, `applicationGroup`
     */
    type: pulumi.Input<string>;
    /**
     * The ID of VDC to use
     */
    vdcId: pulumi.Input<string>;
}
