// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director VM sizing policy data source. This can be
// used to read VM sizing policy.
//
// Supported in provider *v3.0+* and requires VCD 10.0+
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tf_policy_name, err := vcd.LookupVmSizingPolicy(ctx, &vcd.LookupVmSizingPolicyArgs{
//				Name: "my-rule",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("policyId", tf_policy_name.Id)
//			return nil
//		})
//	}
//
// ```
func LookupVmSizingPolicy(ctx *pulumi.Context, args *LookupVmSizingPolicyArgs, opts ...pulumi.InvokeOption) (*LookupVmSizingPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVmSizingPolicyResult
	err := ctx.Invoke("vcd:index/getVmSizingPolicy:getVmSizingPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVmSizingPolicy.
type LookupVmSizingPolicyArgs struct {
	// The name VM sizing policy
	//
	// > **Note:**
	// Previously, it was incorrectly stated that the `org` argument was required. In fact, it is not, and it has been deprecated in the resource schema.
	// To preserve compatibility until the next release, though, the parameter is still parsed, but ignored.
	//
	// All arguments defined in [`VmSizingPolicy`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vm_sizing_policy#argument-reference) are supported.
	Name string `pulumi:"name"`
	// Deprecated: Unneeded property, which was included by mistake
	Org *string `pulumi:"org"`
}

// A collection of values returned by getVmSizingPolicy.
type LookupVmSizingPolicyResult struct {
	Cpus        []GetVmSizingPolicyCpus `pulumi:"cpus"`
	Description string                  `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id       string                    `pulumi:"id"`
	Memories []GetVmSizingPolicyMemory `pulumi:"memories"`
	Name     string                    `pulumi:"name"`
	// Deprecated: Unneeded property, which was included by mistake
	Org *string `pulumi:"org"`
}

func LookupVmSizingPolicyOutput(ctx *pulumi.Context, args LookupVmSizingPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupVmSizingPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVmSizingPolicyResultOutput, error) {
			args := v.(LookupVmSizingPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getVmSizingPolicy:getVmSizingPolicy", args, LookupVmSizingPolicyResultOutput{}, options).(LookupVmSizingPolicyResultOutput), nil
		}).(LookupVmSizingPolicyResultOutput)
}

// A collection of arguments for invoking getVmSizingPolicy.
type LookupVmSizingPolicyOutputArgs struct {
	// The name VM sizing policy
	//
	// > **Note:**
	// Previously, it was incorrectly stated that the `org` argument was required. In fact, it is not, and it has been deprecated in the resource schema.
	// To preserve compatibility until the next release, though, the parameter is still parsed, but ignored.
	//
	// All arguments defined in [`VmSizingPolicy`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vm_sizing_policy#argument-reference) are supported.
	Name pulumi.StringInput `pulumi:"name"`
	// Deprecated: Unneeded property, which was included by mistake
	Org pulumi.StringPtrInput `pulumi:"org"`
}

func (LookupVmSizingPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVmSizingPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getVmSizingPolicy.
type LookupVmSizingPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupVmSizingPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVmSizingPolicyResult)(nil)).Elem()
}

func (o LookupVmSizingPolicyResultOutput) ToLookupVmSizingPolicyResultOutput() LookupVmSizingPolicyResultOutput {
	return o
}

func (o LookupVmSizingPolicyResultOutput) ToLookupVmSizingPolicyResultOutputWithContext(ctx context.Context) LookupVmSizingPolicyResultOutput {
	return o
}

func (o LookupVmSizingPolicyResultOutput) Cpus() GetVmSizingPolicyCpusArrayOutput {
	return o.ApplyT(func(v LookupVmSizingPolicyResult) []GetVmSizingPolicyCpus { return v.Cpus }).(GetVmSizingPolicyCpusArrayOutput)
}

func (o LookupVmSizingPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmSizingPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVmSizingPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmSizingPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVmSizingPolicyResultOutput) Memories() GetVmSizingPolicyMemoryArrayOutput {
	return o.ApplyT(func(v LookupVmSizingPolicyResult) []GetVmSizingPolicyMemory { return v.Memories }).(GetVmSizingPolicyMemoryArrayOutput)
}

func (o LookupVmSizingPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmSizingPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: Unneeded property, which was included by mistake
func (o LookupVmSizingPolicyResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVmSizingPolicyResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVmSizingPolicyResultOutput{})
}
