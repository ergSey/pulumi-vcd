// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Supported in provider *v3.10+* and VCD 10.3.1+ with NSX-T.
//
// Provides a data source to read NSX-T Edge Gateway DHCP forwarding configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			v1, err := vcd.LookupOrgVdc(ctx, &vcd.LookupOrgVdcArgs{
//				Org:  pulumi.StringRef("datacloud"),
//				Name: "nsxt-vdc-datacloud",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			testing_in_vdc, err := vcd.LookupNsxtEdgegateway(ctx, &vcd.LookupNsxtEdgegatewayArgs{
//				Org:     pulumi.StringRef("datacloud"),
//				OwnerId: pulumi.StringRef(v1.Id),
//				Name:    "nsxt-gw-datacloud",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = vcd.LookupNsxtEdgegatewayDhcpForwarding(ctx, &vcd.LookupNsxtEdgegatewayDhcpForwardingArgs{
//				Org:           pulumi.StringRef("datacloud"),
//				EdgeGatewayId: testing_in_vdc.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNsxtEdgegatewayDhcpForwarding(ctx *pulumi.Context, args *LookupNsxtEdgegatewayDhcpForwardingArgs, opts ...pulumi.InvokeOption) (*LookupNsxtEdgegatewayDhcpForwardingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNsxtEdgegatewayDhcpForwardingResult
	err := ctx.Invoke("vcd:index/getNsxtEdgegatewayDhcpForwarding:getNsxtEdgegatewayDhcpForwarding", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxtEdgegatewayDhcpForwarding.
type LookupNsxtEdgegatewayDhcpForwardingArgs struct {
	// NSX-T Edge Gateway ID.
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	// Org in which the NSX-T Edge Gateway is located, required
	// if not set in the provider section.
	Org *string `pulumi:"org"`
}

// A collection of values returned by getNsxtEdgegatewayDhcpForwarding.
type LookupNsxtEdgegatewayDhcpForwardingResult struct {
	DhcpServers   []string `pulumi:"dhcpServers"`
	EdgeGatewayId string   `pulumi:"edgeGatewayId"`
	Enabled       bool     `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id  string  `pulumi:"id"`
	Org *string `pulumi:"org"`
}

func LookupNsxtEdgegatewayDhcpForwardingOutput(ctx *pulumi.Context, args LookupNsxtEdgegatewayDhcpForwardingOutputArgs, opts ...pulumi.InvokeOption) LookupNsxtEdgegatewayDhcpForwardingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNsxtEdgegatewayDhcpForwardingResultOutput, error) {
			args := v.(LookupNsxtEdgegatewayDhcpForwardingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxtEdgegatewayDhcpForwarding:getNsxtEdgegatewayDhcpForwarding", args, LookupNsxtEdgegatewayDhcpForwardingResultOutput{}, options).(LookupNsxtEdgegatewayDhcpForwardingResultOutput), nil
		}).(LookupNsxtEdgegatewayDhcpForwardingResultOutput)
}

// A collection of arguments for invoking getNsxtEdgegatewayDhcpForwarding.
type LookupNsxtEdgegatewayDhcpForwardingOutputArgs struct {
	// NSX-T Edge Gateway ID.
	EdgeGatewayId pulumi.StringInput `pulumi:"edgeGatewayId"`
	// Org in which the NSX-T Edge Gateway is located, required
	// if not set in the provider section.
	Org pulumi.StringPtrInput `pulumi:"org"`
}

func (LookupNsxtEdgegatewayDhcpForwardingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtEdgegatewayDhcpForwardingArgs)(nil)).Elem()
}

// A collection of values returned by getNsxtEdgegatewayDhcpForwarding.
type LookupNsxtEdgegatewayDhcpForwardingResultOutput struct{ *pulumi.OutputState }

func (LookupNsxtEdgegatewayDhcpForwardingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtEdgegatewayDhcpForwardingResult)(nil)).Elem()
}

func (o LookupNsxtEdgegatewayDhcpForwardingResultOutput) ToLookupNsxtEdgegatewayDhcpForwardingResultOutput() LookupNsxtEdgegatewayDhcpForwardingResultOutput {
	return o
}

func (o LookupNsxtEdgegatewayDhcpForwardingResultOutput) ToLookupNsxtEdgegatewayDhcpForwardingResultOutputWithContext(ctx context.Context) LookupNsxtEdgegatewayDhcpForwardingResultOutput {
	return o
}

func (o LookupNsxtEdgegatewayDhcpForwardingResultOutput) DhcpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayDhcpForwardingResult) []string { return v.DhcpServers }).(pulumi.StringArrayOutput)
}

func (o LookupNsxtEdgegatewayDhcpForwardingResultOutput) EdgeGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayDhcpForwardingResult) string { return v.EdgeGatewayId }).(pulumi.StringOutput)
}

func (o LookupNsxtEdgegatewayDhcpForwardingResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayDhcpForwardingResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNsxtEdgegatewayDhcpForwardingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayDhcpForwardingResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNsxtEdgegatewayDhcpForwardingResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayDhcpForwardingResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNsxtEdgegatewayDhcpForwardingResultOutput{})
}
