// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director NSX-V Distributed Firewall data source used to read an existing application group.
//
// Supported in provider *v3.9+*
func GetNsxvApplicationGroup(ctx *pulumi.Context, args *GetNsxvApplicationGroupArgs, opts ...pulumi.InvokeOption) (*GetNsxvApplicationGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNsxvApplicationGroupResult
	err := ctx.Invoke("vcd:index/getNsxvApplicationGroup:getNsxvApplicationGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxvApplicationGroup.
type GetNsxvApplicationGroupArgs struct {
	// The name of the application group
	Name string `pulumi:"name"`
	// The ID of VDC to use
	VdcId string `pulumi:"vdcId"`
}

// A collection of values returned by getNsxvApplicationGroup.
type GetNsxvApplicationGroupResult struct {
	// The list of the applications belonging to this group. For each one we get the following:
	Applications []GetNsxvApplicationGroupApplication `pulumi:"applications"`
	// The identifier of the application groups
	Id string `pulumi:"id"`
	// The name of the application
	Name  string `pulumi:"name"`
	VdcId string `pulumi:"vdcId"`
}

func GetNsxvApplicationGroupOutput(ctx *pulumi.Context, args GetNsxvApplicationGroupOutputArgs, opts ...pulumi.InvokeOption) GetNsxvApplicationGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNsxvApplicationGroupResultOutput, error) {
			args := v.(GetNsxvApplicationGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxvApplicationGroup:getNsxvApplicationGroup", args, GetNsxvApplicationGroupResultOutput{}, options).(GetNsxvApplicationGroupResultOutput), nil
		}).(GetNsxvApplicationGroupResultOutput)
}

// A collection of arguments for invoking getNsxvApplicationGroup.
type GetNsxvApplicationGroupOutputArgs struct {
	// The name of the application group
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of VDC to use
	VdcId pulumi.StringInput `pulumi:"vdcId"`
}

func (GetNsxvApplicationGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvApplicationGroupArgs)(nil)).Elem()
}

// A collection of values returned by getNsxvApplicationGroup.
type GetNsxvApplicationGroupResultOutput struct{ *pulumi.OutputState }

func (GetNsxvApplicationGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvApplicationGroupResult)(nil)).Elem()
}

func (o GetNsxvApplicationGroupResultOutput) ToGetNsxvApplicationGroupResultOutput() GetNsxvApplicationGroupResultOutput {
	return o
}

func (o GetNsxvApplicationGroupResultOutput) ToGetNsxvApplicationGroupResultOutputWithContext(ctx context.Context) GetNsxvApplicationGroupResultOutput {
	return o
}

// The list of the applications belonging to this group. For each one we get the following:
func (o GetNsxvApplicationGroupResultOutput) Applications() GetNsxvApplicationGroupApplicationArrayOutput {
	return o.ApplyT(func(v GetNsxvApplicationGroupResult) []GetNsxvApplicationGroupApplication { return v.Applications }).(GetNsxvApplicationGroupApplicationArrayOutput)
}

// The identifier of the application groups
func (o GetNsxvApplicationGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the application
func (o GetNsxvApplicationGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNsxvApplicationGroupResultOutput) VdcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationGroupResult) string { return v.VdcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNsxvApplicationGroupResultOutput{})
}
