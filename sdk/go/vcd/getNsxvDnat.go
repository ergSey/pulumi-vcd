// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director DNAT data source for advanced edge gateways (NSX-V). This can be used to
// read existing rule by ID and use its attributes in other resources.
//
// > **Note:** This data source requires advanced edge gateway.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupNsxvDnat(ctx, &vcd.LookupNsxvDnatArgs{
//				Org:         pulumi.StringRef("my-org"),
//				Vdc:         pulumi.StringRef("my-org-vdc"),
//				EdgeGateway: "my-edge-gw",
//				RuleId:      "197864",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNsxvDnat(ctx *pulumi.Context, args *LookupNsxvDnatArgs, opts ...pulumi.InvokeOption) (*LookupNsxvDnatResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNsxvDnatResult
	err := ctx.Invoke("vcd:index/getNsxvDnat:getNsxvDnat", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxvDnat.
type LookupNsxvDnatArgs struct {
	// The name of the edge gateway on which to apply the DNAT rule.
	EdgeGateway string `pulumi:"edgeGateway"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations.
	Org *string `pulumi:"org"`
	// ID of DNAT rule as shown in the UI.
	RuleId string `pulumi:"ruleId"`
	// The name of VDC to use, optional if defined at provider level.
	Vdc *string `pulumi:"vdc"`
}

// A collection of values returned by getNsxvDnat.
type LookupNsxvDnatResult struct {
	Description string `pulumi:"description"`
	EdgeGateway string `pulumi:"edgeGateway"`
	Enabled     bool   `pulumi:"enabled"`
	IcmpType    string `pulumi:"icmpType"`
	// The provider-assigned unique ID for this managed resource.
	Id                string  `pulumi:"id"`
	LoggingEnabled    bool    `pulumi:"loggingEnabled"`
	NetworkName       string  `pulumi:"networkName"`
	NetworkType       string  `pulumi:"networkType"`
	Org               *string `pulumi:"org"`
	OriginalAddress   string  `pulumi:"originalAddress"`
	OriginalPort      string  `pulumi:"originalPort"`
	Protocol          string  `pulumi:"protocol"`
	RuleId            string  `pulumi:"ruleId"`
	RuleTag           int     `pulumi:"ruleTag"`
	RuleType          string  `pulumi:"ruleType"`
	TranslatedAddress string  `pulumi:"translatedAddress"`
	TranslatedPort    string  `pulumi:"translatedPort"`
	Vdc               *string `pulumi:"vdc"`
}

func LookupNsxvDnatOutput(ctx *pulumi.Context, args LookupNsxvDnatOutputArgs, opts ...pulumi.InvokeOption) LookupNsxvDnatResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNsxvDnatResultOutput, error) {
			args := v.(LookupNsxvDnatArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxvDnat:getNsxvDnat", args, LookupNsxvDnatResultOutput{}, options).(LookupNsxvDnatResultOutput), nil
		}).(LookupNsxvDnatResultOutput)
}

// A collection of arguments for invoking getNsxvDnat.
type LookupNsxvDnatOutputArgs struct {
	// The name of the edge gateway on which to apply the DNAT rule.
	EdgeGateway pulumi.StringInput `pulumi:"edgeGateway"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations.
	Org pulumi.StringPtrInput `pulumi:"org"`
	// ID of DNAT rule as shown in the UI.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The name of VDC to use, optional if defined at provider level.
	Vdc pulumi.StringPtrInput `pulumi:"vdc"`
}

func (LookupNsxvDnatOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxvDnatArgs)(nil)).Elem()
}

// A collection of values returned by getNsxvDnat.
type LookupNsxvDnatResultOutput struct{ *pulumi.OutputState }

func (LookupNsxvDnatResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxvDnatResult)(nil)).Elem()
}

func (o LookupNsxvDnatResultOutput) ToLookupNsxvDnatResultOutput() LookupNsxvDnatResultOutput {
	return o
}

func (o LookupNsxvDnatResultOutput) ToLookupNsxvDnatResultOutputWithContext(ctx context.Context) LookupNsxvDnatResultOutput {
	return o
}

func (o LookupNsxvDnatResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) EdgeGateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.EdgeGateway }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupNsxvDnatResultOutput) IcmpType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.IcmpType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNsxvDnatResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) LoggingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) bool { return v.LoggingEnabled }).(pulumi.BoolOutput)
}

func (o LookupNsxvDnatResultOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.NetworkName }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.NetworkType }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupNsxvDnatResultOutput) OriginalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.OriginalAddress }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) OriginalPort() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.OriginalPort }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.RuleId }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) RuleTag() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) int { return v.RuleTag }).(pulumi.IntOutput)
}

func (o LookupNsxvDnatResultOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.RuleType }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) TranslatedAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.TranslatedAddress }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) TranslatedPort() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) string { return v.TranslatedPort }).(pulumi.StringOutput)
}

func (o LookupNsxvDnatResultOutput) Vdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxvDnatResult) *string { return v.Vdc }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNsxvDnatResultOutput{})
}
