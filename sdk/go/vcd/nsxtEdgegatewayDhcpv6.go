// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NsxtEdgegatewayDhcpv6 struct {
	pulumi.CustomResourceState

	// Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
	DnsServers pulumi.StringArrayOutput `pulumi:"dnsServers"`
	// Set of domain names (only applicable for `DHCPv6` mode)
	DomainNames pulumi.StringArrayOutput `pulumi:"domainNames"`
	// NSX-T Edge Gateway ID
	EdgeGatewayId pulumi.StringOutput `pulumi:"edgeGatewayId"`
	// One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
	// Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
	// will also disable DHCPv6.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Org in which the NSX-T Edge Gateway is located
	Org pulumi.StringPtrOutput `pulumi:"org"`
}

// NewNsxtEdgegatewayDhcpv6 registers a new resource with the given unique name, arguments, and options.
func NewNsxtEdgegatewayDhcpv6(ctx *pulumi.Context,
	name string, args *NsxtEdgegatewayDhcpv6Args, opts ...pulumi.ResourceOption) (*NsxtEdgegatewayDhcpv6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EdgeGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'EdgeGatewayId'")
	}
	if args.Mode == nil {
		return nil, errors.New("invalid value for required argument 'Mode'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NsxtEdgegatewayDhcpv6
	err := ctx.RegisterResource("vcd:index/nsxtEdgegatewayDhcpv6:NsxtEdgegatewayDhcpv6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNsxtEdgegatewayDhcpv6 gets an existing NsxtEdgegatewayDhcpv6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNsxtEdgegatewayDhcpv6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NsxtEdgegatewayDhcpv6State, opts ...pulumi.ResourceOption) (*NsxtEdgegatewayDhcpv6, error) {
	var resource NsxtEdgegatewayDhcpv6
	err := ctx.ReadResource("vcd:index/nsxtEdgegatewayDhcpv6:NsxtEdgegatewayDhcpv6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NsxtEdgegatewayDhcpv6 resources.
type nsxtEdgegatewayDhcpv6State struct {
	// Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
	DnsServers []string `pulumi:"dnsServers"`
	// Set of domain names (only applicable for `DHCPv6` mode)
	DomainNames []string `pulumi:"domainNames"`
	// NSX-T Edge Gateway ID
	EdgeGatewayId *string `pulumi:"edgeGatewayId"`
	// One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
	// Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
	// will also disable DHCPv6.
	Mode *string `pulumi:"mode"`
	// Org in which the NSX-T Edge Gateway is located
	Org *string `pulumi:"org"`
}

type NsxtEdgegatewayDhcpv6State struct {
	// Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
	DnsServers pulumi.StringArrayInput
	// Set of domain names (only applicable for `DHCPv6` mode)
	DomainNames pulumi.StringArrayInput
	// NSX-T Edge Gateway ID
	EdgeGatewayId pulumi.StringPtrInput
	// One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
	// Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
	// will also disable DHCPv6.
	Mode pulumi.StringPtrInput
	// Org in which the NSX-T Edge Gateway is located
	Org pulumi.StringPtrInput
}

func (NsxtEdgegatewayDhcpv6State) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtEdgegatewayDhcpv6State)(nil)).Elem()
}

type nsxtEdgegatewayDhcpv6Args struct {
	// Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
	DnsServers []string `pulumi:"dnsServers"`
	// Set of domain names (only applicable for `DHCPv6` mode)
	DomainNames []string `pulumi:"domainNames"`
	// NSX-T Edge Gateway ID
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	// One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
	// Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
	// will also disable DHCPv6.
	Mode string `pulumi:"mode"`
	// Org in which the NSX-T Edge Gateway is located
	Org *string `pulumi:"org"`
}

// The set of arguments for constructing a NsxtEdgegatewayDhcpv6 resource.
type NsxtEdgegatewayDhcpv6Args struct {
	// Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
	DnsServers pulumi.StringArrayInput
	// Set of domain names (only applicable for `DHCPv6` mode)
	DomainNames pulumi.StringArrayInput
	// NSX-T Edge Gateway ID
	EdgeGatewayId pulumi.StringInput
	// One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
	// Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
	// will also disable DHCPv6.
	Mode pulumi.StringInput
	// Org in which the NSX-T Edge Gateway is located
	Org pulumi.StringPtrInput
}

func (NsxtEdgegatewayDhcpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtEdgegatewayDhcpv6Args)(nil)).Elem()
}

type NsxtEdgegatewayDhcpv6Input interface {
	pulumi.Input

	ToNsxtEdgegatewayDhcpv6Output() NsxtEdgegatewayDhcpv6Output
	ToNsxtEdgegatewayDhcpv6OutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpv6Output
}

func (*NsxtEdgegatewayDhcpv6) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegatewayDhcpv6)(nil)).Elem()
}

func (i *NsxtEdgegatewayDhcpv6) ToNsxtEdgegatewayDhcpv6Output() NsxtEdgegatewayDhcpv6Output {
	return i.ToNsxtEdgegatewayDhcpv6OutputWithContext(context.Background())
}

func (i *NsxtEdgegatewayDhcpv6) ToNsxtEdgegatewayDhcpv6OutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDhcpv6Output)
}

// NsxtEdgegatewayDhcpv6ArrayInput is an input type that accepts NsxtEdgegatewayDhcpv6Array and NsxtEdgegatewayDhcpv6ArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayDhcpv6ArrayInput` via:
//
//	NsxtEdgegatewayDhcpv6Array{ NsxtEdgegatewayDhcpv6Args{...} }
type NsxtEdgegatewayDhcpv6ArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewayDhcpv6ArrayOutput() NsxtEdgegatewayDhcpv6ArrayOutput
	ToNsxtEdgegatewayDhcpv6ArrayOutputWithContext(context.Context) NsxtEdgegatewayDhcpv6ArrayOutput
}

type NsxtEdgegatewayDhcpv6Array []NsxtEdgegatewayDhcpv6Input

func (NsxtEdgegatewayDhcpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtEdgegatewayDhcpv6)(nil)).Elem()
}

func (i NsxtEdgegatewayDhcpv6Array) ToNsxtEdgegatewayDhcpv6ArrayOutput() NsxtEdgegatewayDhcpv6ArrayOutput {
	return i.ToNsxtEdgegatewayDhcpv6ArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayDhcpv6Array) ToNsxtEdgegatewayDhcpv6ArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDhcpv6ArrayOutput)
}

// NsxtEdgegatewayDhcpv6MapInput is an input type that accepts NsxtEdgegatewayDhcpv6Map and NsxtEdgegatewayDhcpv6MapOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayDhcpv6MapInput` via:
//
//	NsxtEdgegatewayDhcpv6Map{ "key": NsxtEdgegatewayDhcpv6Args{...} }
type NsxtEdgegatewayDhcpv6MapInput interface {
	pulumi.Input

	ToNsxtEdgegatewayDhcpv6MapOutput() NsxtEdgegatewayDhcpv6MapOutput
	ToNsxtEdgegatewayDhcpv6MapOutputWithContext(context.Context) NsxtEdgegatewayDhcpv6MapOutput
}

type NsxtEdgegatewayDhcpv6Map map[string]NsxtEdgegatewayDhcpv6Input

func (NsxtEdgegatewayDhcpv6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtEdgegatewayDhcpv6)(nil)).Elem()
}

func (i NsxtEdgegatewayDhcpv6Map) ToNsxtEdgegatewayDhcpv6MapOutput() NsxtEdgegatewayDhcpv6MapOutput {
	return i.ToNsxtEdgegatewayDhcpv6MapOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayDhcpv6Map) ToNsxtEdgegatewayDhcpv6MapOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpv6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDhcpv6MapOutput)
}

type NsxtEdgegatewayDhcpv6Output struct{ *pulumi.OutputState }

func (NsxtEdgegatewayDhcpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegatewayDhcpv6)(nil)).Elem()
}

func (o NsxtEdgegatewayDhcpv6Output) ToNsxtEdgegatewayDhcpv6Output() NsxtEdgegatewayDhcpv6Output {
	return o
}

func (o NsxtEdgegatewayDhcpv6Output) ToNsxtEdgegatewayDhcpv6OutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpv6Output {
	return o
}

// Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
func (o NsxtEdgegatewayDhcpv6Output) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDhcpv6) pulumi.StringArrayOutput { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Set of domain names (only applicable for `DHCPv6` mode)
func (o NsxtEdgegatewayDhcpv6Output) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDhcpv6) pulumi.StringArrayOutput { return v.DomainNames }).(pulumi.StringArrayOutput)
}

// NSX-T Edge Gateway ID
func (o NsxtEdgegatewayDhcpv6Output) EdgeGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDhcpv6) pulumi.StringOutput { return v.EdgeGatewayId }).(pulumi.StringOutput)
}

// One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
// Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
// will also disable DHCPv6.
func (o NsxtEdgegatewayDhcpv6Output) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDhcpv6) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// Org in which the NSX-T Edge Gateway is located
func (o NsxtEdgegatewayDhcpv6Output) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDhcpv6) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

type NsxtEdgegatewayDhcpv6ArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayDhcpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtEdgegatewayDhcpv6)(nil)).Elem()
}

func (o NsxtEdgegatewayDhcpv6ArrayOutput) ToNsxtEdgegatewayDhcpv6ArrayOutput() NsxtEdgegatewayDhcpv6ArrayOutput {
	return o
}

func (o NsxtEdgegatewayDhcpv6ArrayOutput) ToNsxtEdgegatewayDhcpv6ArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpv6ArrayOutput {
	return o
}

func (o NsxtEdgegatewayDhcpv6ArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewayDhcpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NsxtEdgegatewayDhcpv6 {
		return vs[0].([]*NsxtEdgegatewayDhcpv6)[vs[1].(int)]
	}).(NsxtEdgegatewayDhcpv6Output)
}

type NsxtEdgegatewayDhcpv6MapOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayDhcpv6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtEdgegatewayDhcpv6)(nil)).Elem()
}

func (o NsxtEdgegatewayDhcpv6MapOutput) ToNsxtEdgegatewayDhcpv6MapOutput() NsxtEdgegatewayDhcpv6MapOutput {
	return o
}

func (o NsxtEdgegatewayDhcpv6MapOutput) ToNsxtEdgegatewayDhcpv6MapOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpv6MapOutput {
	return o
}

func (o NsxtEdgegatewayDhcpv6MapOutput) MapIndex(k pulumi.StringInput) NsxtEdgegatewayDhcpv6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NsxtEdgegatewayDhcpv6 {
		return vs[0].(map[string]*NsxtEdgegatewayDhcpv6)[vs[1].(string)]
	}).(NsxtEdgegatewayDhcpv6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayDhcpv6Input)(nil)).Elem(), &NsxtEdgegatewayDhcpv6{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayDhcpv6ArrayInput)(nil)).Elem(), NsxtEdgegatewayDhcpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayDhcpv6MapInput)(nil)).Elem(), NsxtEdgegatewayDhcpv6Map{})
	pulumi.RegisterOutputType(NsxtEdgegatewayDhcpv6Output{})
	pulumi.RegisterOutputType(NsxtEdgegatewayDhcpv6ArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayDhcpv6MapOutput{})
}
