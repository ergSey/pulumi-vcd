// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ExternalEndpoint struct {
	pulumi.CustomResourceState

	// Description of the External Endpoint
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
	// It is `false` by default
	DisableOnRemoval pulumi.BoolPtrOutput `pulumi:"disableOnRemoval"`
	// Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
	// To disable it automatically on removal, set `disable_on_removal=true` (see below)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Name pulumi.StringOutput `pulumi:"name"`
	// The endpoint which requests will be redirected to. Must use HTTPS protocol
	RootUrl pulumi.StringOutput `pulumi:"rootUrl"`
	// The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Vendor pulumi.StringOutput `pulumi:"vendor"`
	// The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewExternalEndpoint registers a new resource with the given unique name, arguments, and options.
func NewExternalEndpoint(ctx *pulumi.Context,
	name string, args *ExternalEndpointArgs, opts ...pulumi.ResourceOption) (*ExternalEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.RootUrl == nil {
		return nil, errors.New("invalid value for required argument 'RootUrl'")
	}
	if args.Vendor == nil {
		return nil, errors.New("invalid value for required argument 'Vendor'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalEndpoint
	err := ctx.RegisterResource("vcd:index/externalEndpoint:ExternalEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalEndpoint gets an existing ExternalEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalEndpointState, opts ...pulumi.ResourceOption) (*ExternalEndpoint, error) {
	var resource ExternalEndpoint
	err := ctx.ReadResource("vcd:index/externalEndpoint:ExternalEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalEndpoint resources.
type externalEndpointState struct {
	// Description of the External Endpoint
	Description *string `pulumi:"description"`
	// Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
	// It is `false` by default
	DisableOnRemoval *bool `pulumi:"disableOnRemoval"`
	// Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
	// To disable it automatically on removal, set `disable_on_removal=true` (see below)
	Enabled *bool `pulumi:"enabled"`
	// The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Name *string `pulumi:"name"`
	// The endpoint which requests will be redirected to. Must use HTTPS protocol
	RootUrl *string `pulumi:"rootUrl"`
	// The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Vendor *string `pulumi:"vendor"`
	// The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Version *string `pulumi:"version"`
}

type ExternalEndpointState struct {
	// Description of the External Endpoint
	Description pulumi.StringPtrInput
	// Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
	// It is `false` by default
	DisableOnRemoval pulumi.BoolPtrInput
	// Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
	// To disable it automatically on removal, set `disable_on_removal=true` (see below)
	Enabled pulumi.BoolPtrInput
	// The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Name pulumi.StringPtrInput
	// The endpoint which requests will be redirected to. Must use HTTPS protocol
	RootUrl pulumi.StringPtrInput
	// The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Vendor pulumi.StringPtrInput
	// The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Version pulumi.StringPtrInput
}

func (ExternalEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalEndpointState)(nil)).Elem()
}

type externalEndpointArgs struct {
	// Description of the External Endpoint
	Description *string `pulumi:"description"`
	// Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
	// It is `false` by default
	DisableOnRemoval *bool `pulumi:"disableOnRemoval"`
	// Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
	// To disable it automatically on removal, set `disable_on_removal=true` (see below)
	Enabled bool `pulumi:"enabled"`
	// The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Name *string `pulumi:"name"`
	// The endpoint which requests will be redirected to. Must use HTTPS protocol
	RootUrl string `pulumi:"rootUrl"`
	// The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Vendor string `pulumi:"vendor"`
	// The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a ExternalEndpoint resource.
type ExternalEndpointArgs struct {
	// Description of the External Endpoint
	Description pulumi.StringPtrInput
	// Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
	// It is `false` by default
	DisableOnRemoval pulumi.BoolPtrInput
	// Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
	// To disable it automatically on removal, set `disable_on_removal=true` (see below)
	Enabled pulumi.BoolInput
	// The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Name pulumi.StringPtrInput
	// The endpoint which requests will be redirected to. Must use HTTPS protocol
	RootUrl pulumi.StringInput
	// The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Vendor pulumi.StringInput
	// The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
	Version pulumi.StringInput
}

func (ExternalEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalEndpointArgs)(nil)).Elem()
}

type ExternalEndpointInput interface {
	pulumi.Input

	ToExternalEndpointOutput() ExternalEndpointOutput
	ToExternalEndpointOutputWithContext(ctx context.Context) ExternalEndpointOutput
}

func (*ExternalEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalEndpoint)(nil)).Elem()
}

func (i *ExternalEndpoint) ToExternalEndpointOutput() ExternalEndpointOutput {
	return i.ToExternalEndpointOutputWithContext(context.Background())
}

func (i *ExternalEndpoint) ToExternalEndpointOutputWithContext(ctx context.Context) ExternalEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalEndpointOutput)
}

// ExternalEndpointArrayInput is an input type that accepts ExternalEndpointArray and ExternalEndpointArrayOutput values.
// You can construct a concrete instance of `ExternalEndpointArrayInput` via:
//
//	ExternalEndpointArray{ ExternalEndpointArgs{...} }
type ExternalEndpointArrayInput interface {
	pulumi.Input

	ToExternalEndpointArrayOutput() ExternalEndpointArrayOutput
	ToExternalEndpointArrayOutputWithContext(context.Context) ExternalEndpointArrayOutput
}

type ExternalEndpointArray []ExternalEndpointInput

func (ExternalEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalEndpoint)(nil)).Elem()
}

func (i ExternalEndpointArray) ToExternalEndpointArrayOutput() ExternalEndpointArrayOutput {
	return i.ToExternalEndpointArrayOutputWithContext(context.Background())
}

func (i ExternalEndpointArray) ToExternalEndpointArrayOutputWithContext(ctx context.Context) ExternalEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalEndpointArrayOutput)
}

// ExternalEndpointMapInput is an input type that accepts ExternalEndpointMap and ExternalEndpointMapOutput values.
// You can construct a concrete instance of `ExternalEndpointMapInput` via:
//
//	ExternalEndpointMap{ "key": ExternalEndpointArgs{...} }
type ExternalEndpointMapInput interface {
	pulumi.Input

	ToExternalEndpointMapOutput() ExternalEndpointMapOutput
	ToExternalEndpointMapOutputWithContext(context.Context) ExternalEndpointMapOutput
}

type ExternalEndpointMap map[string]ExternalEndpointInput

func (ExternalEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalEndpoint)(nil)).Elem()
}

func (i ExternalEndpointMap) ToExternalEndpointMapOutput() ExternalEndpointMapOutput {
	return i.ToExternalEndpointMapOutputWithContext(context.Background())
}

func (i ExternalEndpointMap) ToExternalEndpointMapOutputWithContext(ctx context.Context) ExternalEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalEndpointMapOutput)
}

type ExternalEndpointOutput struct{ *pulumi.OutputState }

func (ExternalEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalEndpoint)(nil)).Elem()
}

func (o ExternalEndpointOutput) ToExternalEndpointOutput() ExternalEndpointOutput {
	return o
}

func (o ExternalEndpointOutput) ToExternalEndpointOutputWithContext(ctx context.Context) ExternalEndpointOutput {
	return o
}

// Description of the External Endpoint
func (o ExternalEndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalEndpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
// It is `false` by default
func (o ExternalEndpointOutput) DisableOnRemoval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalEndpoint) pulumi.BoolPtrOutput { return v.DisableOnRemoval }).(pulumi.BoolPtrOutput)
}

// Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
// To disable it automatically on removal, set `disable_on_removal=true` (see below)
func (o ExternalEndpointOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExternalEndpoint) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
func (o ExternalEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The endpoint which requests will be redirected to. Must use HTTPS protocol
func (o ExternalEndpointOutput) RootUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalEndpoint) pulumi.StringOutput { return v.RootUrl }).(pulumi.StringOutput)
}

// The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
func (o ExternalEndpointOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalEndpoint) pulumi.StringOutput { return v.Vendor }).(pulumi.StringOutput)
}

// The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
func (o ExternalEndpointOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalEndpoint) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type ExternalEndpointArrayOutput struct{ *pulumi.OutputState }

func (ExternalEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalEndpoint)(nil)).Elem()
}

func (o ExternalEndpointArrayOutput) ToExternalEndpointArrayOutput() ExternalEndpointArrayOutput {
	return o
}

func (o ExternalEndpointArrayOutput) ToExternalEndpointArrayOutputWithContext(ctx context.Context) ExternalEndpointArrayOutput {
	return o
}

func (o ExternalEndpointArrayOutput) Index(i pulumi.IntInput) ExternalEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalEndpoint {
		return vs[0].([]*ExternalEndpoint)[vs[1].(int)]
	}).(ExternalEndpointOutput)
}

type ExternalEndpointMapOutput struct{ *pulumi.OutputState }

func (ExternalEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalEndpoint)(nil)).Elem()
}

func (o ExternalEndpointMapOutput) ToExternalEndpointMapOutput() ExternalEndpointMapOutput {
	return o
}

func (o ExternalEndpointMapOutput) ToExternalEndpointMapOutputWithContext(ctx context.Context) ExternalEndpointMapOutput {
	return o
}

func (o ExternalEndpointMapOutput) MapIndex(k pulumi.StringInput) ExternalEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalEndpoint {
		return vs[0].(map[string]*ExternalEndpoint)[vs[1].(string)]
	}).(ExternalEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalEndpointInput)(nil)).Elem(), &ExternalEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalEndpointArrayInput)(nil)).Elem(), ExternalEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalEndpointMapInput)(nil)).Elem(), ExternalEndpointMap{})
	pulumi.RegisterOutputType(ExternalEndpointOutput{})
	pulumi.RegisterOutputType(ExternalEndpointArrayOutput{})
	pulumi.RegisterOutputType(ExternalEndpointMapOutput{})
}
