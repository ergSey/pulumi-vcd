// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director data source for reading route advertisement in an NSX-T Edge Gateway.
//
// ## Example Usage
//
// ### Reading Route Advertisement From NSX-T Edge Gateway)
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			group1, err := vcd.LookupVdcGroup(ctx, &vcd.LookupVdcGroupArgs{
//				Name: pulumi.StringRef("my-vdc-group"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			t1, err := vcd.LookupNsxtEdgegateway(ctx, &vcd.LookupNsxtEdgegatewayArgs{
//				OwnerId: pulumi.StringRef(group1.Id),
//				Name:    "my-nsxt-edge-gateway",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = vcd.LookupNsxtRouteAdvertisement(ctx, &vcd.LookupNsxtRouteAdvertisementArgs{
//				EdgeGatewayId: t1.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNsxtRouteAdvertisement(ctx *pulumi.Context, args *LookupNsxtRouteAdvertisementArgs, opts ...pulumi.InvokeOption) (*LookupNsxtRouteAdvertisementResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNsxtRouteAdvertisementResult
	err := ctx.Invoke("vcd:index/getNsxtRouteAdvertisement:getNsxtRouteAdvertisement", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxtRouteAdvertisement.
type LookupNsxtRouteAdvertisementArgs struct {
	// NSX-T Edge Gateway ID in which route advertisement is located.
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organizations.
	Org *string `pulumi:"org"`
}

// A collection of values returned by getNsxtRouteAdvertisement.
type LookupNsxtRouteAdvertisementResult struct {
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	Enabled       bool   `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id      string   `pulumi:"id"`
	Org     *string  `pulumi:"org"`
	Subnets []string `pulumi:"subnets"`
}

func LookupNsxtRouteAdvertisementOutput(ctx *pulumi.Context, args LookupNsxtRouteAdvertisementOutputArgs, opts ...pulumi.InvokeOption) LookupNsxtRouteAdvertisementResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNsxtRouteAdvertisementResultOutput, error) {
			args := v.(LookupNsxtRouteAdvertisementArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxtRouteAdvertisement:getNsxtRouteAdvertisement", args, LookupNsxtRouteAdvertisementResultOutput{}, options).(LookupNsxtRouteAdvertisementResultOutput), nil
		}).(LookupNsxtRouteAdvertisementResultOutput)
}

// A collection of arguments for invoking getNsxtRouteAdvertisement.
type LookupNsxtRouteAdvertisementOutputArgs struct {
	// NSX-T Edge Gateway ID in which route advertisement is located.
	EdgeGatewayId pulumi.StringInput `pulumi:"edgeGatewayId"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organizations.
	Org pulumi.StringPtrInput `pulumi:"org"`
}

func (LookupNsxtRouteAdvertisementOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtRouteAdvertisementArgs)(nil)).Elem()
}

// A collection of values returned by getNsxtRouteAdvertisement.
type LookupNsxtRouteAdvertisementResultOutput struct{ *pulumi.OutputState }

func (LookupNsxtRouteAdvertisementResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtRouteAdvertisementResult)(nil)).Elem()
}

func (o LookupNsxtRouteAdvertisementResultOutput) ToLookupNsxtRouteAdvertisementResultOutput() LookupNsxtRouteAdvertisementResultOutput {
	return o
}

func (o LookupNsxtRouteAdvertisementResultOutput) ToLookupNsxtRouteAdvertisementResultOutputWithContext(ctx context.Context) LookupNsxtRouteAdvertisementResultOutput {
	return o
}

func (o LookupNsxtRouteAdvertisementResultOutput) EdgeGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtRouteAdvertisementResult) string { return v.EdgeGatewayId }).(pulumi.StringOutput)
}

func (o LookupNsxtRouteAdvertisementResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxtRouteAdvertisementResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNsxtRouteAdvertisementResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtRouteAdvertisementResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNsxtRouteAdvertisementResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxtRouteAdvertisementResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupNsxtRouteAdvertisementResultOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNsxtRouteAdvertisementResult) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNsxtRouteAdvertisementResultOutput{})
}
