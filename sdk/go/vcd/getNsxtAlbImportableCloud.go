// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Supported in provider *v3.4+* and VCD 10.2+ with NSX-T and ALB.
//
// Provides a data source to reference existing ALB Importable Clouds. An NSX-T Importable Cloud is a reference to a
// Cloud configured in ALB Controller.
//
// > Only `System Administrator` can use this data source.
//
// > VCD 10.3.0 has a caching bug which prevents listing importable clouds immediately after [ALB
// Controller](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_alb_controller) is created. This data should be
// available 15 minutes after the Controller is created.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			first, err := vcd.LookupNsxtAlbController(ctx, &vcd.LookupNsxtAlbControllerArgs{
//				Name: "alb-controller",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = vcd.GetNsxtAlbImportableCloud(ctx, &vcd.GetNsxtAlbImportableCloudArgs{
//				Name:         "NSXT Importable Cloud",
//				ControllerId: first.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNsxtAlbImportableCloud(ctx *pulumi.Context, args *GetNsxtAlbImportableCloudArgs, opts ...pulumi.InvokeOption) (*GetNsxtAlbImportableCloudResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNsxtAlbImportableCloudResult
	err := ctx.Invoke("vcd:index/getNsxtAlbImportableCloud:getNsxtAlbImportableCloud", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxtAlbImportableCloud.
type GetNsxtAlbImportableCloudArgs struct {
	// ALB Controller ID
	ControllerId string `pulumi:"controllerId"`
	// Name of ALB Importable Cloud
	Name string `pulumi:"name"`
}

// A collection of values returned by getNsxtAlbImportableCloud.
type GetNsxtAlbImportableCloudResult struct {
	// boolean value which displays if the ALB Importable Cloud is already consumed
	AlreadyImported bool   `pulumi:"alreadyImported"`
	ControllerId    string `pulumi:"controllerId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// backing network pool ID
	NetworkPoolId string `pulumi:"networkPoolId"`
	// backing network pool ID
	NetworkPoolName string `pulumi:"networkPoolName"`
	// backing transport zone name
	TransportZoneName string `pulumi:"transportZoneName"`
}

func GetNsxtAlbImportableCloudOutput(ctx *pulumi.Context, args GetNsxtAlbImportableCloudOutputArgs, opts ...pulumi.InvokeOption) GetNsxtAlbImportableCloudResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNsxtAlbImportableCloudResultOutput, error) {
			args := v.(GetNsxtAlbImportableCloudArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxtAlbImportableCloud:getNsxtAlbImportableCloud", args, GetNsxtAlbImportableCloudResultOutput{}, options).(GetNsxtAlbImportableCloudResultOutput), nil
		}).(GetNsxtAlbImportableCloudResultOutput)
}

// A collection of arguments for invoking getNsxtAlbImportableCloud.
type GetNsxtAlbImportableCloudOutputArgs struct {
	// ALB Controller ID
	ControllerId pulumi.StringInput `pulumi:"controllerId"`
	// Name of ALB Importable Cloud
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNsxtAlbImportableCloudOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbImportableCloudArgs)(nil)).Elem()
}

// A collection of values returned by getNsxtAlbImportableCloud.
type GetNsxtAlbImportableCloudResultOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbImportableCloudResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbImportableCloudResult)(nil)).Elem()
}

func (o GetNsxtAlbImportableCloudResultOutput) ToGetNsxtAlbImportableCloudResultOutput() GetNsxtAlbImportableCloudResultOutput {
	return o
}

func (o GetNsxtAlbImportableCloudResultOutput) ToGetNsxtAlbImportableCloudResultOutputWithContext(ctx context.Context) GetNsxtAlbImportableCloudResultOutput {
	return o
}

// boolean value which displays if the ALB Importable Cloud is already consumed
func (o GetNsxtAlbImportableCloudResultOutput) AlreadyImported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbImportableCloudResult) bool { return v.AlreadyImported }).(pulumi.BoolOutput)
}

func (o GetNsxtAlbImportableCloudResultOutput) ControllerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbImportableCloudResult) string { return v.ControllerId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNsxtAlbImportableCloudResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbImportableCloudResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNsxtAlbImportableCloudResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbImportableCloudResult) string { return v.Name }).(pulumi.StringOutput)
}

// backing network pool ID
func (o GetNsxtAlbImportableCloudResultOutput) NetworkPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbImportableCloudResult) string { return v.NetworkPoolId }).(pulumi.StringOutput)
}

// backing network pool ID
func (o GetNsxtAlbImportableCloudResultOutput) NetworkPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbImportableCloudResult) string { return v.NetworkPoolName }).(pulumi.StringOutput)
}

// backing transport zone name
func (o GetNsxtAlbImportableCloudResultOutput) TransportZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbImportableCloudResult) string { return v.TransportZoneName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNsxtAlbImportableCloudResultOutput{})
}
