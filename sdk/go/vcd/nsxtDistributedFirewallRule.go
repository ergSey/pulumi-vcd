// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NsxtDistributedFirewallRule struct {
	pulumi.CustomResourceState

	// ID of an existing `NsxtDistributedFirewallRule` entry, above
	// which the newly created firewall rule will be positioned. **Note.** By default, new rule will be
	// created at the bottom of the list
	//
	// > When activating Distributed Firewall with resource
	// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group), there is a default firewall
	// rule created which can make inconvenient to use this resource. For that reason, resource
	// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group) has a parameter
	// `removeDefaultFirewallRule` which can remove default firewall rule.
	AboveRuleId pulumi.StringPtrOutput `pulumi:"aboveRuleId"`
	// Defines if it should `ALLOW`, `DROP`, `REJECT` traffic. `REJECT` is only
	// supported in VCD 10.2.2+
	Action pulumi.StringOutput `pulumi:"action"`
	// An optional set of Application Port Profiles.
	AppPortProfileIds pulumi.StringArrayOutput `pulumi:"appPortProfileIds"`
	// Comment field shown in UI
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Description of firewall rule (not shown in UI)
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// reverses value of `destinationIds` for
	// the rule to match everything except specified IDs.
	DestinationGroupsExcluded pulumi.BoolPtrOutput `pulumi:"destinationGroupsExcluded"`
	// A set of source object Firewall Groups (`IP Sets` or `Security
	// groups`). Leaving it empty matches `Any` (all)
	DestinationIds pulumi.StringArrayOutput `pulumi:"destinationIds"`
	// One of `IN`, `OUT`, or `IN_OUT`. (default `IN_OUT`)
	Direction pulumi.StringPtrOutput `pulumi:"direction"`
	// Defines if the rule is enabled (default `true`)
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// One of `IPV4`,  `IPV6`, or `IPV4_IPV6` (default `IPV4_IPV6`)
	IpProtocol pulumi.StringPtrOutput `pulumi:"ipProtocol"`
	// Defines if logging for this rule is enabled (default `false`)
	Logging pulumi.BoolPtrOutput `pulumi:"logging"`
	// Explanatory name for firewall rule (uniqueness not enforced)
	Name pulumi.StringOutput `pulumi:"name"`
	// An optional set of Network Context Profiles. Can be
	// looked up using `getNsxtNetworkContextProfile` data source.
	NetworkContextProfileIds pulumi.StringArrayOutput `pulumi:"networkContextProfileIds"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations.
	Org pulumi.StringPtrOutput `pulumi:"org"`
	// reverses value of `sourceIds` for the rule to
	// match everything except specified IDs.
	SourceGroupsExcluded pulumi.BoolPtrOutput `pulumi:"sourceGroupsExcluded"`
	// A set of source object Firewall Groups (`IP Sets` or `Security groups`).
	// Leaving it empty matches `Any` (all)
	SourceIds pulumi.StringArrayOutput `pulumi:"sourceIds"`
	// The ID of VDC Group to manage Distributed Firewall in. Can be looked
	// up using `VdcGroup` resource or data source.
	VdcGroupId pulumi.StringOutput `pulumi:"vdcGroupId"`
}

// NewNsxtDistributedFirewallRule registers a new resource with the given unique name, arguments, and options.
func NewNsxtDistributedFirewallRule(ctx *pulumi.Context,
	name string, args *NsxtDistributedFirewallRuleArgs, opts ...pulumi.ResourceOption) (*NsxtDistributedFirewallRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.VdcGroupId == nil {
		return nil, errors.New("invalid value for required argument 'VdcGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NsxtDistributedFirewallRule
	err := ctx.RegisterResource("vcd:index/nsxtDistributedFirewallRule:NsxtDistributedFirewallRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNsxtDistributedFirewallRule gets an existing NsxtDistributedFirewallRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNsxtDistributedFirewallRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NsxtDistributedFirewallRuleState, opts ...pulumi.ResourceOption) (*NsxtDistributedFirewallRule, error) {
	var resource NsxtDistributedFirewallRule
	err := ctx.ReadResource("vcd:index/nsxtDistributedFirewallRule:NsxtDistributedFirewallRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NsxtDistributedFirewallRule resources.
type nsxtDistributedFirewallRuleState struct {
	// ID of an existing `NsxtDistributedFirewallRule` entry, above
	// which the newly created firewall rule will be positioned. **Note.** By default, new rule will be
	// created at the bottom of the list
	//
	// > When activating Distributed Firewall with resource
	// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group), there is a default firewall
	// rule created which can make inconvenient to use this resource. For that reason, resource
	// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group) has a parameter
	// `removeDefaultFirewallRule` which can remove default firewall rule.
	AboveRuleId *string `pulumi:"aboveRuleId"`
	// Defines if it should `ALLOW`, `DROP`, `REJECT` traffic. `REJECT` is only
	// supported in VCD 10.2.2+
	Action *string `pulumi:"action"`
	// An optional set of Application Port Profiles.
	AppPortProfileIds []string `pulumi:"appPortProfileIds"`
	// Comment field shown in UI
	Comment *string `pulumi:"comment"`
	// Description of firewall rule (not shown in UI)
	Description *string `pulumi:"description"`
	// reverses value of `destinationIds` for
	// the rule to match everything except specified IDs.
	DestinationGroupsExcluded *bool `pulumi:"destinationGroupsExcluded"`
	// A set of source object Firewall Groups (`IP Sets` or `Security
	// groups`). Leaving it empty matches `Any` (all)
	DestinationIds []string `pulumi:"destinationIds"`
	// One of `IN`, `OUT`, or `IN_OUT`. (default `IN_OUT`)
	Direction *string `pulumi:"direction"`
	// Defines if the rule is enabled (default `true`)
	Enabled *bool `pulumi:"enabled"`
	// One of `IPV4`,  `IPV6`, or `IPV4_IPV6` (default `IPV4_IPV6`)
	IpProtocol *string `pulumi:"ipProtocol"`
	// Defines if logging for this rule is enabled (default `false`)
	Logging *bool `pulumi:"logging"`
	// Explanatory name for firewall rule (uniqueness not enforced)
	Name *string `pulumi:"name"`
	// An optional set of Network Context Profiles. Can be
	// looked up using `getNsxtNetworkContextProfile` data source.
	NetworkContextProfileIds []string `pulumi:"networkContextProfileIds"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations.
	Org *string `pulumi:"org"`
	// reverses value of `sourceIds` for the rule to
	// match everything except specified IDs.
	SourceGroupsExcluded *bool `pulumi:"sourceGroupsExcluded"`
	// A set of source object Firewall Groups (`IP Sets` or `Security groups`).
	// Leaving it empty matches `Any` (all)
	SourceIds []string `pulumi:"sourceIds"`
	// The ID of VDC Group to manage Distributed Firewall in. Can be looked
	// up using `VdcGroup` resource or data source.
	VdcGroupId *string `pulumi:"vdcGroupId"`
}

type NsxtDistributedFirewallRuleState struct {
	// ID of an existing `NsxtDistributedFirewallRule` entry, above
	// which the newly created firewall rule will be positioned. **Note.** By default, new rule will be
	// created at the bottom of the list
	//
	// > When activating Distributed Firewall with resource
	// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group), there is a default firewall
	// rule created which can make inconvenient to use this resource. For that reason, resource
	// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group) has a parameter
	// `removeDefaultFirewallRule` which can remove default firewall rule.
	AboveRuleId pulumi.StringPtrInput
	// Defines if it should `ALLOW`, `DROP`, `REJECT` traffic. `REJECT` is only
	// supported in VCD 10.2.2+
	Action pulumi.StringPtrInput
	// An optional set of Application Port Profiles.
	AppPortProfileIds pulumi.StringArrayInput
	// Comment field shown in UI
	Comment pulumi.StringPtrInput
	// Description of firewall rule (not shown in UI)
	Description pulumi.StringPtrInput
	// reverses value of `destinationIds` for
	// the rule to match everything except specified IDs.
	DestinationGroupsExcluded pulumi.BoolPtrInput
	// A set of source object Firewall Groups (`IP Sets` or `Security
	// groups`). Leaving it empty matches `Any` (all)
	DestinationIds pulumi.StringArrayInput
	// One of `IN`, `OUT`, or `IN_OUT`. (default `IN_OUT`)
	Direction pulumi.StringPtrInput
	// Defines if the rule is enabled (default `true`)
	Enabled pulumi.BoolPtrInput
	// One of `IPV4`,  `IPV6`, or `IPV4_IPV6` (default `IPV4_IPV6`)
	IpProtocol pulumi.StringPtrInput
	// Defines if logging for this rule is enabled (default `false`)
	Logging pulumi.BoolPtrInput
	// Explanatory name for firewall rule (uniqueness not enforced)
	Name pulumi.StringPtrInput
	// An optional set of Network Context Profiles. Can be
	// looked up using `getNsxtNetworkContextProfile` data source.
	NetworkContextProfileIds pulumi.StringArrayInput
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations.
	Org pulumi.StringPtrInput
	// reverses value of `sourceIds` for the rule to
	// match everything except specified IDs.
	SourceGroupsExcluded pulumi.BoolPtrInput
	// A set of source object Firewall Groups (`IP Sets` or `Security groups`).
	// Leaving it empty matches `Any` (all)
	SourceIds pulumi.StringArrayInput
	// The ID of VDC Group to manage Distributed Firewall in. Can be looked
	// up using `VdcGroup` resource or data source.
	VdcGroupId pulumi.StringPtrInput
}

func (NsxtDistributedFirewallRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtDistributedFirewallRuleState)(nil)).Elem()
}

type nsxtDistributedFirewallRuleArgs struct {
	// ID of an existing `NsxtDistributedFirewallRule` entry, above
	// which the newly created firewall rule will be positioned. **Note.** By default, new rule will be
	// created at the bottom of the list
	//
	// > When activating Distributed Firewall with resource
	// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group), there is a default firewall
	// rule created which can make inconvenient to use this resource. For that reason, resource
	// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group) has a parameter
	// `removeDefaultFirewallRule` which can remove default firewall rule.
	AboveRuleId *string `pulumi:"aboveRuleId"`
	// Defines if it should `ALLOW`, `DROP`, `REJECT` traffic. `REJECT` is only
	// supported in VCD 10.2.2+
	Action string `pulumi:"action"`
	// An optional set of Application Port Profiles.
	AppPortProfileIds []string `pulumi:"appPortProfileIds"`
	// Comment field shown in UI
	Comment *string `pulumi:"comment"`
	// Description of firewall rule (not shown in UI)
	Description *string `pulumi:"description"`
	// reverses value of `destinationIds` for
	// the rule to match everything except specified IDs.
	DestinationGroupsExcluded *bool `pulumi:"destinationGroupsExcluded"`
	// A set of source object Firewall Groups (`IP Sets` or `Security
	// groups`). Leaving it empty matches `Any` (all)
	DestinationIds []string `pulumi:"destinationIds"`
	// One of `IN`, `OUT`, or `IN_OUT`. (default `IN_OUT`)
	Direction *string `pulumi:"direction"`
	// Defines if the rule is enabled (default `true`)
	Enabled *bool `pulumi:"enabled"`
	// One of `IPV4`,  `IPV6`, or `IPV4_IPV6` (default `IPV4_IPV6`)
	IpProtocol *string `pulumi:"ipProtocol"`
	// Defines if logging for this rule is enabled (default `false`)
	Logging *bool `pulumi:"logging"`
	// Explanatory name for firewall rule (uniqueness not enforced)
	Name *string `pulumi:"name"`
	// An optional set of Network Context Profiles. Can be
	// looked up using `getNsxtNetworkContextProfile` data source.
	NetworkContextProfileIds []string `pulumi:"networkContextProfileIds"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations.
	Org *string `pulumi:"org"`
	// reverses value of `sourceIds` for the rule to
	// match everything except specified IDs.
	SourceGroupsExcluded *bool `pulumi:"sourceGroupsExcluded"`
	// A set of source object Firewall Groups (`IP Sets` or `Security groups`).
	// Leaving it empty matches `Any` (all)
	SourceIds []string `pulumi:"sourceIds"`
	// The ID of VDC Group to manage Distributed Firewall in. Can be looked
	// up using `VdcGroup` resource or data source.
	VdcGroupId string `pulumi:"vdcGroupId"`
}

// The set of arguments for constructing a NsxtDistributedFirewallRule resource.
type NsxtDistributedFirewallRuleArgs struct {
	// ID of an existing `NsxtDistributedFirewallRule` entry, above
	// which the newly created firewall rule will be positioned. **Note.** By default, new rule will be
	// created at the bottom of the list
	//
	// > When activating Distributed Firewall with resource
	// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group), there is a default firewall
	// rule created which can make inconvenient to use this resource. For that reason, resource
	// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group) has a parameter
	// `removeDefaultFirewallRule` which can remove default firewall rule.
	AboveRuleId pulumi.StringPtrInput
	// Defines if it should `ALLOW`, `DROP`, `REJECT` traffic. `REJECT` is only
	// supported in VCD 10.2.2+
	Action pulumi.StringInput
	// An optional set of Application Port Profiles.
	AppPortProfileIds pulumi.StringArrayInput
	// Comment field shown in UI
	Comment pulumi.StringPtrInput
	// Description of firewall rule (not shown in UI)
	Description pulumi.StringPtrInput
	// reverses value of `destinationIds` for
	// the rule to match everything except specified IDs.
	DestinationGroupsExcluded pulumi.BoolPtrInput
	// A set of source object Firewall Groups (`IP Sets` or `Security
	// groups`). Leaving it empty matches `Any` (all)
	DestinationIds pulumi.StringArrayInput
	// One of `IN`, `OUT`, or `IN_OUT`. (default `IN_OUT`)
	Direction pulumi.StringPtrInput
	// Defines if the rule is enabled (default `true`)
	Enabled pulumi.BoolPtrInput
	// One of `IPV4`,  `IPV6`, or `IPV4_IPV6` (default `IPV4_IPV6`)
	IpProtocol pulumi.StringPtrInput
	// Defines if logging for this rule is enabled (default `false`)
	Logging pulumi.BoolPtrInput
	// Explanatory name for firewall rule (uniqueness not enforced)
	Name pulumi.StringPtrInput
	// An optional set of Network Context Profiles. Can be
	// looked up using `getNsxtNetworkContextProfile` data source.
	NetworkContextProfileIds pulumi.StringArrayInput
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations.
	Org pulumi.StringPtrInput
	// reverses value of `sourceIds` for the rule to
	// match everything except specified IDs.
	SourceGroupsExcluded pulumi.BoolPtrInput
	// A set of source object Firewall Groups (`IP Sets` or `Security groups`).
	// Leaving it empty matches `Any` (all)
	SourceIds pulumi.StringArrayInput
	// The ID of VDC Group to manage Distributed Firewall in. Can be looked
	// up using `VdcGroup` resource or data source.
	VdcGroupId pulumi.StringInput
}

func (NsxtDistributedFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtDistributedFirewallRuleArgs)(nil)).Elem()
}

type NsxtDistributedFirewallRuleInput interface {
	pulumi.Input

	ToNsxtDistributedFirewallRuleOutput() NsxtDistributedFirewallRuleOutput
	ToNsxtDistributedFirewallRuleOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleOutput
}

func (*NsxtDistributedFirewallRule) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtDistributedFirewallRule)(nil)).Elem()
}

func (i *NsxtDistributedFirewallRule) ToNsxtDistributedFirewallRuleOutput() NsxtDistributedFirewallRuleOutput {
	return i.ToNsxtDistributedFirewallRuleOutputWithContext(context.Background())
}

func (i *NsxtDistributedFirewallRule) ToNsxtDistributedFirewallRuleOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDistributedFirewallRuleOutput)
}

// NsxtDistributedFirewallRuleArrayInput is an input type that accepts NsxtDistributedFirewallRuleArray and NsxtDistributedFirewallRuleArrayOutput values.
// You can construct a concrete instance of `NsxtDistributedFirewallRuleArrayInput` via:
//
//	NsxtDistributedFirewallRuleArray{ NsxtDistributedFirewallRuleArgs{...} }
type NsxtDistributedFirewallRuleArrayInput interface {
	pulumi.Input

	ToNsxtDistributedFirewallRuleArrayOutput() NsxtDistributedFirewallRuleArrayOutput
	ToNsxtDistributedFirewallRuleArrayOutputWithContext(context.Context) NsxtDistributedFirewallRuleArrayOutput
}

type NsxtDistributedFirewallRuleArray []NsxtDistributedFirewallRuleInput

func (NsxtDistributedFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtDistributedFirewallRule)(nil)).Elem()
}

func (i NsxtDistributedFirewallRuleArray) ToNsxtDistributedFirewallRuleArrayOutput() NsxtDistributedFirewallRuleArrayOutput {
	return i.ToNsxtDistributedFirewallRuleArrayOutputWithContext(context.Background())
}

func (i NsxtDistributedFirewallRuleArray) ToNsxtDistributedFirewallRuleArrayOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDistributedFirewallRuleArrayOutput)
}

// NsxtDistributedFirewallRuleMapInput is an input type that accepts NsxtDistributedFirewallRuleMap and NsxtDistributedFirewallRuleMapOutput values.
// You can construct a concrete instance of `NsxtDistributedFirewallRuleMapInput` via:
//
//	NsxtDistributedFirewallRuleMap{ "key": NsxtDistributedFirewallRuleArgs{...} }
type NsxtDistributedFirewallRuleMapInput interface {
	pulumi.Input

	ToNsxtDistributedFirewallRuleMapOutput() NsxtDistributedFirewallRuleMapOutput
	ToNsxtDistributedFirewallRuleMapOutputWithContext(context.Context) NsxtDistributedFirewallRuleMapOutput
}

type NsxtDistributedFirewallRuleMap map[string]NsxtDistributedFirewallRuleInput

func (NsxtDistributedFirewallRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtDistributedFirewallRule)(nil)).Elem()
}

func (i NsxtDistributedFirewallRuleMap) ToNsxtDistributedFirewallRuleMapOutput() NsxtDistributedFirewallRuleMapOutput {
	return i.ToNsxtDistributedFirewallRuleMapOutputWithContext(context.Background())
}

func (i NsxtDistributedFirewallRuleMap) ToNsxtDistributedFirewallRuleMapOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDistributedFirewallRuleMapOutput)
}

type NsxtDistributedFirewallRuleOutput struct{ *pulumi.OutputState }

func (NsxtDistributedFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtDistributedFirewallRule)(nil)).Elem()
}

func (o NsxtDistributedFirewallRuleOutput) ToNsxtDistributedFirewallRuleOutput() NsxtDistributedFirewallRuleOutput {
	return o
}

func (o NsxtDistributedFirewallRuleOutput) ToNsxtDistributedFirewallRuleOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleOutput {
	return o
}

// ID of an existing `NsxtDistributedFirewallRule` entry, above
// which the newly created firewall rule will be positioned. **Note.** By default, new rule will be
// created at the bottom of the list
//
// > When activating Distributed Firewall with resource
// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group), there is a default firewall
// rule created which can make inconvenient to use this resource. For that reason, resource
// [`VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group) has a parameter
// `removeDefaultFirewallRule` which can remove default firewall rule.
func (o NsxtDistributedFirewallRuleOutput) AboveRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringPtrOutput { return v.AboveRuleId }).(pulumi.StringPtrOutput)
}

// Defines if it should `ALLOW`, `DROP`, `REJECT` traffic. `REJECT` is only
// supported in VCD 10.2.2+
func (o NsxtDistributedFirewallRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// An optional set of Application Port Profiles.
func (o NsxtDistributedFirewallRuleOutput) AppPortProfileIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringArrayOutput { return v.AppPortProfileIds }).(pulumi.StringArrayOutput)
}

// Comment field shown in UI
func (o NsxtDistributedFirewallRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Description of firewall rule (not shown in UI)
func (o NsxtDistributedFirewallRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// reverses value of `destinationIds` for
// the rule to match everything except specified IDs.
func (o NsxtDistributedFirewallRuleOutput) DestinationGroupsExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.BoolPtrOutput { return v.DestinationGroupsExcluded }).(pulumi.BoolPtrOutput)
}

// A set of source object Firewall Groups (`IP Sets` or `Security
// groups`). Leaving it empty matches `Any` (all)
func (o NsxtDistributedFirewallRuleOutput) DestinationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringArrayOutput { return v.DestinationIds }).(pulumi.StringArrayOutput)
}

// One of `IN`, `OUT`, or `IN_OUT`. (default `IN_OUT`)
func (o NsxtDistributedFirewallRuleOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringPtrOutput { return v.Direction }).(pulumi.StringPtrOutput)
}

// Defines if the rule is enabled (default `true`)
func (o NsxtDistributedFirewallRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// One of `IPV4`,  `IPV6`, or `IPV4_IPV6` (default `IPV4_IPV6`)
func (o NsxtDistributedFirewallRuleOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringPtrOutput { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// Defines if logging for this rule is enabled (default `false`)
func (o NsxtDistributedFirewallRuleOutput) Logging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.BoolPtrOutput { return v.Logging }).(pulumi.BoolPtrOutput)
}

// Explanatory name for firewall rule (uniqueness not enforced)
func (o NsxtDistributedFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An optional set of Network Context Profiles. Can be
// looked up using `getNsxtNetworkContextProfile` data source.
func (o NsxtDistributedFirewallRuleOutput) NetworkContextProfileIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringArrayOutput { return v.NetworkContextProfileIds }).(pulumi.StringArrayOutput)
}

// The name of organization to use, optional if defined at provider level. Useful
// when connected as sysadmin working across different organisations.
func (o NsxtDistributedFirewallRuleOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

// reverses value of `sourceIds` for the rule to
// match everything except specified IDs.
func (o NsxtDistributedFirewallRuleOutput) SourceGroupsExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.BoolPtrOutput { return v.SourceGroupsExcluded }).(pulumi.BoolPtrOutput)
}

// A set of source object Firewall Groups (`IP Sets` or `Security groups`).
// Leaving it empty matches `Any` (all)
func (o NsxtDistributedFirewallRuleOutput) SourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringArrayOutput { return v.SourceIds }).(pulumi.StringArrayOutput)
}

// The ID of VDC Group to manage Distributed Firewall in. Can be looked
// up using `VdcGroup` resource or data source.
func (o NsxtDistributedFirewallRuleOutput) VdcGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtDistributedFirewallRule) pulumi.StringOutput { return v.VdcGroupId }).(pulumi.StringOutput)
}

type NsxtDistributedFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (NsxtDistributedFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtDistributedFirewallRule)(nil)).Elem()
}

func (o NsxtDistributedFirewallRuleArrayOutput) ToNsxtDistributedFirewallRuleArrayOutput() NsxtDistributedFirewallRuleArrayOutput {
	return o
}

func (o NsxtDistributedFirewallRuleArrayOutput) ToNsxtDistributedFirewallRuleArrayOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleArrayOutput {
	return o
}

func (o NsxtDistributedFirewallRuleArrayOutput) Index(i pulumi.IntInput) NsxtDistributedFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NsxtDistributedFirewallRule {
		return vs[0].([]*NsxtDistributedFirewallRule)[vs[1].(int)]
	}).(NsxtDistributedFirewallRuleOutput)
}

type NsxtDistributedFirewallRuleMapOutput struct{ *pulumi.OutputState }

func (NsxtDistributedFirewallRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtDistributedFirewallRule)(nil)).Elem()
}

func (o NsxtDistributedFirewallRuleMapOutput) ToNsxtDistributedFirewallRuleMapOutput() NsxtDistributedFirewallRuleMapOutput {
	return o
}

func (o NsxtDistributedFirewallRuleMapOutput) ToNsxtDistributedFirewallRuleMapOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleMapOutput {
	return o
}

func (o NsxtDistributedFirewallRuleMapOutput) MapIndex(k pulumi.StringInput) NsxtDistributedFirewallRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NsxtDistributedFirewallRule {
		return vs[0].(map[string]*NsxtDistributedFirewallRule)[vs[1].(string)]
	}).(NsxtDistributedFirewallRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDistributedFirewallRuleInput)(nil)).Elem(), &NsxtDistributedFirewallRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDistributedFirewallRuleArrayInput)(nil)).Elem(), NsxtDistributedFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDistributedFirewallRuleMapInput)(nil)).Elem(), NsxtDistributedFirewallRuleMap{})
	pulumi.RegisterOutputType(NsxtDistributedFirewallRuleOutput{})
	pulumi.RegisterOutputType(NsxtDistributedFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(NsxtDistributedFirewallRuleMapOutput{})
}
