// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Supported in provider *v3.13+* and VCD 10.4.1+.
//
// Provides a data source to read Solution Add-Ons in Cloud Director. A Solution Add-On is the
// representation of a solution that is custom built for Cloud Director in the Cloud
// Director extensibility ecosystem. A Solution Add-On can encapsulate UI and API Cloud Director
// extensions together with their backend services and lifecycle management. Solution аdd-оns are
// distributed as .iso files. A Solution Add-On can contain numerous elements: UI plugins, vApps,
// users, roles, runtime defined entities, and more.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupSolutionAddOn(ctx, &vcd.LookupSolutionAddOnArgs{
//				Name: "vmware.ds-1.4.0-23376809",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSolutionAddOn(ctx *pulumi.Context, args *LookupSolutionAddOnArgs, opts ...pulumi.InvokeOption) (*LookupSolutionAddOnResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSolutionAddOnResult
	err := ctx.Invoke("vcd:index/getSolutionAddOn:getSolutionAddOn", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSolutionAddOn.
type LookupSolutionAddOnArgs struct {
	// Solution Add-On name, e.g. `vmware.ds-1.4.0-23376809`. Solution Add-On
	// resource [`SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
	// `import` with `list@` capability can help listing available names.
	Name string `pulumi:"name"`
}

// A collection of values returned by getSolutionAddOn.
type LookupSolutionAddOnResult struct {
	CatalogItemId string `pulumi:"catalogItemId"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Name     string `pulumi:"name"`
	RdeState string `pulumi:"rdeState"`
}

func LookupSolutionAddOnOutput(ctx *pulumi.Context, args LookupSolutionAddOnOutputArgs, opts ...pulumi.InvokeOption) LookupSolutionAddOnResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSolutionAddOnResultOutput, error) {
			args := v.(LookupSolutionAddOnArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getSolutionAddOn:getSolutionAddOn", args, LookupSolutionAddOnResultOutput{}, options).(LookupSolutionAddOnResultOutput), nil
		}).(LookupSolutionAddOnResultOutput)
}

// A collection of arguments for invoking getSolutionAddOn.
type LookupSolutionAddOnOutputArgs struct {
	// Solution Add-On name, e.g. `vmware.ds-1.4.0-23376809`. Solution Add-On
	// resource [`SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
	// `import` with `list@` capability can help listing available names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupSolutionAddOnOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSolutionAddOnArgs)(nil)).Elem()
}

// A collection of values returned by getSolutionAddOn.
type LookupSolutionAddOnResultOutput struct{ *pulumi.OutputState }

func (LookupSolutionAddOnResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSolutionAddOnResult)(nil)).Elem()
}

func (o LookupSolutionAddOnResultOutput) ToLookupSolutionAddOnResultOutput() LookupSolutionAddOnResultOutput {
	return o
}

func (o LookupSolutionAddOnResultOutput) ToLookupSolutionAddOnResultOutputWithContext(ctx context.Context) LookupSolutionAddOnResultOutput {
	return o
}

func (o LookupSolutionAddOnResultOutput) CatalogItemId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionAddOnResult) string { return v.CatalogItemId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSolutionAddOnResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionAddOnResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSolutionAddOnResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionAddOnResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSolutionAddOnResultOutput) RdeState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionAddOnResult) string { return v.RdeState }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSolutionAddOnResultOutput{})
}
