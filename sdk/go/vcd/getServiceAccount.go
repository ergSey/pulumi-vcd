// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a data source to read VCD Service Accounts.
//
// Supported in provider *v3.10+* and VCD 10.4+.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupServiceAccount(ctx, &vcd.LookupServiceAccountArgs{
//				Org:  pulumi.StringRef("my-org"),
//				Name: "my-parent-network",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServiceAccount(ctx *pulumi.Context, args *LookupServiceAccountArgs, opts ...pulumi.InvokeOption) (*LookupServiceAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceAccountResult
	err := ctx.Invoke("vcd:index/getServiceAccount:getServiceAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceAccount.
type LookupServiceAccountArgs struct {
	// Name of the Service Account in an organisation
	Name string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations.
	Org *string `pulumi:"org"`
}

// A collection of values returned by getServiceAccount.
type LookupServiceAccountResult struct {
	Active bool `pulumi:"active"`
	// The provider-assigned unique ID for this managed resource.
	Id              string  `pulumi:"id"`
	Name            string  `pulumi:"name"`
	Org             *string `pulumi:"org"`
	RoleId          string  `pulumi:"roleId"`
	SoftwareId      string  `pulumi:"softwareId"`
	SoftwareVersion string  `pulumi:"softwareVersion"`
	Uri             string  `pulumi:"uri"`
}

func LookupServiceAccountOutput(ctx *pulumi.Context, args LookupServiceAccountOutputArgs, opts ...pulumi.InvokeOption) LookupServiceAccountResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServiceAccountResultOutput, error) {
			args := v.(LookupServiceAccountArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getServiceAccount:getServiceAccount", args, LookupServiceAccountResultOutput{}, options).(LookupServiceAccountResultOutput), nil
		}).(LookupServiceAccountResultOutput)
}

// A collection of arguments for invoking getServiceAccount.
type LookupServiceAccountOutputArgs struct {
	// Name of the Service Account in an organisation
	Name pulumi.StringInput `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations.
	Org pulumi.StringPtrInput `pulumi:"org"`
}

func (LookupServiceAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceAccountArgs)(nil)).Elem()
}

// A collection of values returned by getServiceAccount.
type LookupServiceAccountResultOutput struct{ *pulumi.OutputState }

func (LookupServiceAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceAccountResult)(nil)).Elem()
}

func (o LookupServiceAccountResultOutput) ToLookupServiceAccountResultOutput() LookupServiceAccountResultOutput {
	return o
}

func (o LookupServiceAccountResultOutput) ToLookupServiceAccountResultOutputWithContext(ctx context.Context) LookupServiceAccountResultOutput {
	return o
}

func (o LookupServiceAccountResultOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceAccountResult) bool { return v.Active }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServiceAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupServiceAccountResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceAccountResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupServiceAccountResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceAccountResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupServiceAccountResultOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceAccountResult) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o LookupServiceAccountResultOutput) SoftwareId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceAccountResult) string { return v.SoftwareId }).(pulumi.StringOutput)
}

func (o LookupServiceAccountResultOutput) SoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceAccountResult) string { return v.SoftwareVersion }).(pulumi.StringOutput)
}

func (o LookupServiceAccountResultOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceAccountResult) string { return v.Uri }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceAccountResultOutput{})
}
