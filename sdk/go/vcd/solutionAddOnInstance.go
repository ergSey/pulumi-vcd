// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SolutionAddOnInstance struct {
	pulumi.CustomResourceState

	// Solution Add-On Instance cannot be create if EULA is not accepted.
	// Supplying a `false` value will print EULA.
	AcceptEula pulumi.BoolOutput `pulumi:"acceptEula"`
	// Existing Solution Add-On ID
	// [`SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
	AddOnId pulumi.StringOutput `pulumi:"addOnId"`
	// Just like `input` field for creation, it is a map of keys and values
	// as required for removal of a particular Solution Add-On. It will require all values that are
	// specified in a particular Add-On schema unless `validate_only_required_inputs=true` is set. Missing
	// a value will print an error message with all field descriptions and missing value. Update is a no-op
	// operation
	DeleteInput pulumi.StringMapOutput `pulumi:"deleteInput"`
	// A map of keys and values as required for a particular Solution Add-On
	// Instance. It will require all values that are specified in a particular Add-On schema unless
	// `validate_only_required_inputs=true` is set. Missing a value will print an error message with all
	// field descriptions and missing value.
	Input pulumi.StringMapOutput `pulumi:"input"`
	// Name of Solution Add-On Instance
	Name pulumi.StringOutput `pulumi:"name"`
	// reports the state of parent [Runtime Defined
	// Entity](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)
	RdeState pulumi.StringOutput `pulumi:"rdeState"`
	// By default (`false`) will check that all fields are
	// defined in `input` and `deleteInput` fields. It will only validate fields that are marked as
	// required when set to `true`. Update is a noop that will affect further operation.
	ValidateOnlyRequiredInputs pulumi.BoolPtrOutput `pulumi:"validateOnlyRequiredInputs"`
}

// NewSolutionAddOnInstance registers a new resource with the given unique name, arguments, and options.
func NewSolutionAddOnInstance(ctx *pulumi.Context,
	name string, args *SolutionAddOnInstanceArgs, opts ...pulumi.ResourceOption) (*SolutionAddOnInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AcceptEula == nil {
		return nil, errors.New("invalid value for required argument 'AcceptEula'")
	}
	if args.AddOnId == nil {
		return nil, errors.New("invalid value for required argument 'AddOnId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SolutionAddOnInstance
	err := ctx.RegisterResource("vcd:index/solutionAddOnInstance:SolutionAddOnInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSolutionAddOnInstance gets an existing SolutionAddOnInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSolutionAddOnInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SolutionAddOnInstanceState, opts ...pulumi.ResourceOption) (*SolutionAddOnInstance, error) {
	var resource SolutionAddOnInstance
	err := ctx.ReadResource("vcd:index/solutionAddOnInstance:SolutionAddOnInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SolutionAddOnInstance resources.
type solutionAddOnInstanceState struct {
	// Solution Add-On Instance cannot be create if EULA is not accepted.
	// Supplying a `false` value will print EULA.
	AcceptEula *bool `pulumi:"acceptEula"`
	// Existing Solution Add-On ID
	// [`SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
	AddOnId *string `pulumi:"addOnId"`
	// Just like `input` field for creation, it is a map of keys and values
	// as required for removal of a particular Solution Add-On. It will require all values that are
	// specified in a particular Add-On schema unless `validate_only_required_inputs=true` is set. Missing
	// a value will print an error message with all field descriptions and missing value. Update is a no-op
	// operation
	DeleteInput map[string]string `pulumi:"deleteInput"`
	// A map of keys and values as required for a particular Solution Add-On
	// Instance. It will require all values that are specified in a particular Add-On schema unless
	// `validate_only_required_inputs=true` is set. Missing a value will print an error message with all
	// field descriptions and missing value.
	Input map[string]string `pulumi:"input"`
	// Name of Solution Add-On Instance
	Name *string `pulumi:"name"`
	// reports the state of parent [Runtime Defined
	// Entity](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)
	RdeState *string `pulumi:"rdeState"`
	// By default (`false`) will check that all fields are
	// defined in `input` and `deleteInput` fields. It will only validate fields that are marked as
	// required when set to `true`. Update is a noop that will affect further operation.
	ValidateOnlyRequiredInputs *bool `pulumi:"validateOnlyRequiredInputs"`
}

type SolutionAddOnInstanceState struct {
	// Solution Add-On Instance cannot be create if EULA is not accepted.
	// Supplying a `false` value will print EULA.
	AcceptEula pulumi.BoolPtrInput
	// Existing Solution Add-On ID
	// [`SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
	AddOnId pulumi.StringPtrInput
	// Just like `input` field for creation, it is a map of keys and values
	// as required for removal of a particular Solution Add-On. It will require all values that are
	// specified in a particular Add-On schema unless `validate_only_required_inputs=true` is set. Missing
	// a value will print an error message with all field descriptions and missing value. Update is a no-op
	// operation
	DeleteInput pulumi.StringMapInput
	// A map of keys and values as required for a particular Solution Add-On
	// Instance. It will require all values that are specified in a particular Add-On schema unless
	// `validate_only_required_inputs=true` is set. Missing a value will print an error message with all
	// field descriptions and missing value.
	Input pulumi.StringMapInput
	// Name of Solution Add-On Instance
	Name pulumi.StringPtrInput
	// reports the state of parent [Runtime Defined
	// Entity](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)
	RdeState pulumi.StringPtrInput
	// By default (`false`) will check that all fields are
	// defined in `input` and `deleteInput` fields. It will only validate fields that are marked as
	// required when set to `true`. Update is a noop that will affect further operation.
	ValidateOnlyRequiredInputs pulumi.BoolPtrInput
}

func (SolutionAddOnInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*solutionAddOnInstanceState)(nil)).Elem()
}

type solutionAddOnInstanceArgs struct {
	// Solution Add-On Instance cannot be create if EULA is not accepted.
	// Supplying a `false` value will print EULA.
	AcceptEula bool `pulumi:"acceptEula"`
	// Existing Solution Add-On ID
	// [`SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
	AddOnId string `pulumi:"addOnId"`
	// Just like `input` field for creation, it is a map of keys and values
	// as required for removal of a particular Solution Add-On. It will require all values that are
	// specified in a particular Add-On schema unless `validate_only_required_inputs=true` is set. Missing
	// a value will print an error message with all field descriptions and missing value. Update is a no-op
	// operation
	DeleteInput map[string]string `pulumi:"deleteInput"`
	// A map of keys and values as required for a particular Solution Add-On
	// Instance. It will require all values that are specified in a particular Add-On schema unless
	// `validate_only_required_inputs=true` is set. Missing a value will print an error message with all
	// field descriptions and missing value.
	Input map[string]string `pulumi:"input"`
	// Name of Solution Add-On Instance
	Name *string `pulumi:"name"`
	// By default (`false`) will check that all fields are
	// defined in `input` and `deleteInput` fields. It will only validate fields that are marked as
	// required when set to `true`. Update is a noop that will affect further operation.
	ValidateOnlyRequiredInputs *bool `pulumi:"validateOnlyRequiredInputs"`
}

// The set of arguments for constructing a SolutionAddOnInstance resource.
type SolutionAddOnInstanceArgs struct {
	// Solution Add-On Instance cannot be create if EULA is not accepted.
	// Supplying a `false` value will print EULA.
	AcceptEula pulumi.BoolInput
	// Existing Solution Add-On ID
	// [`SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
	AddOnId pulumi.StringInput
	// Just like `input` field for creation, it is a map of keys and values
	// as required for removal of a particular Solution Add-On. It will require all values that are
	// specified in a particular Add-On schema unless `validate_only_required_inputs=true` is set. Missing
	// a value will print an error message with all field descriptions and missing value. Update is a no-op
	// operation
	DeleteInput pulumi.StringMapInput
	// A map of keys and values as required for a particular Solution Add-On
	// Instance. It will require all values that are specified in a particular Add-On schema unless
	// `validate_only_required_inputs=true` is set. Missing a value will print an error message with all
	// field descriptions and missing value.
	Input pulumi.StringMapInput
	// Name of Solution Add-On Instance
	Name pulumi.StringPtrInput
	// By default (`false`) will check that all fields are
	// defined in `input` and `deleteInput` fields. It will only validate fields that are marked as
	// required when set to `true`. Update is a noop that will affect further operation.
	ValidateOnlyRequiredInputs pulumi.BoolPtrInput
}

func (SolutionAddOnInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*solutionAddOnInstanceArgs)(nil)).Elem()
}

type SolutionAddOnInstanceInput interface {
	pulumi.Input

	ToSolutionAddOnInstanceOutput() SolutionAddOnInstanceOutput
	ToSolutionAddOnInstanceOutputWithContext(ctx context.Context) SolutionAddOnInstanceOutput
}

func (*SolutionAddOnInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionAddOnInstance)(nil)).Elem()
}

func (i *SolutionAddOnInstance) ToSolutionAddOnInstanceOutput() SolutionAddOnInstanceOutput {
	return i.ToSolutionAddOnInstanceOutputWithContext(context.Background())
}

func (i *SolutionAddOnInstance) ToSolutionAddOnInstanceOutputWithContext(ctx context.Context) SolutionAddOnInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionAddOnInstanceOutput)
}

// SolutionAddOnInstanceArrayInput is an input type that accepts SolutionAddOnInstanceArray and SolutionAddOnInstanceArrayOutput values.
// You can construct a concrete instance of `SolutionAddOnInstanceArrayInput` via:
//
//	SolutionAddOnInstanceArray{ SolutionAddOnInstanceArgs{...} }
type SolutionAddOnInstanceArrayInput interface {
	pulumi.Input

	ToSolutionAddOnInstanceArrayOutput() SolutionAddOnInstanceArrayOutput
	ToSolutionAddOnInstanceArrayOutputWithContext(context.Context) SolutionAddOnInstanceArrayOutput
}

type SolutionAddOnInstanceArray []SolutionAddOnInstanceInput

func (SolutionAddOnInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SolutionAddOnInstance)(nil)).Elem()
}

func (i SolutionAddOnInstanceArray) ToSolutionAddOnInstanceArrayOutput() SolutionAddOnInstanceArrayOutput {
	return i.ToSolutionAddOnInstanceArrayOutputWithContext(context.Background())
}

func (i SolutionAddOnInstanceArray) ToSolutionAddOnInstanceArrayOutputWithContext(ctx context.Context) SolutionAddOnInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionAddOnInstanceArrayOutput)
}

// SolutionAddOnInstanceMapInput is an input type that accepts SolutionAddOnInstanceMap and SolutionAddOnInstanceMapOutput values.
// You can construct a concrete instance of `SolutionAddOnInstanceMapInput` via:
//
//	SolutionAddOnInstanceMap{ "key": SolutionAddOnInstanceArgs{...} }
type SolutionAddOnInstanceMapInput interface {
	pulumi.Input

	ToSolutionAddOnInstanceMapOutput() SolutionAddOnInstanceMapOutput
	ToSolutionAddOnInstanceMapOutputWithContext(context.Context) SolutionAddOnInstanceMapOutput
}

type SolutionAddOnInstanceMap map[string]SolutionAddOnInstanceInput

func (SolutionAddOnInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SolutionAddOnInstance)(nil)).Elem()
}

func (i SolutionAddOnInstanceMap) ToSolutionAddOnInstanceMapOutput() SolutionAddOnInstanceMapOutput {
	return i.ToSolutionAddOnInstanceMapOutputWithContext(context.Background())
}

func (i SolutionAddOnInstanceMap) ToSolutionAddOnInstanceMapOutputWithContext(ctx context.Context) SolutionAddOnInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionAddOnInstanceMapOutput)
}

type SolutionAddOnInstanceOutput struct{ *pulumi.OutputState }

func (SolutionAddOnInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionAddOnInstance)(nil)).Elem()
}

func (o SolutionAddOnInstanceOutput) ToSolutionAddOnInstanceOutput() SolutionAddOnInstanceOutput {
	return o
}

func (o SolutionAddOnInstanceOutput) ToSolutionAddOnInstanceOutputWithContext(ctx context.Context) SolutionAddOnInstanceOutput {
	return o
}

// Solution Add-On Instance cannot be create if EULA is not accepted.
// Supplying a `false` value will print EULA.
func (o SolutionAddOnInstanceOutput) AcceptEula() pulumi.BoolOutput {
	return o.ApplyT(func(v *SolutionAddOnInstance) pulumi.BoolOutput { return v.AcceptEula }).(pulumi.BoolOutput)
}

// Existing Solution Add-On ID
// [`SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
func (o SolutionAddOnInstanceOutput) AddOnId() pulumi.StringOutput {
	return o.ApplyT(func(v *SolutionAddOnInstance) pulumi.StringOutput { return v.AddOnId }).(pulumi.StringOutput)
}

// Just like `input` field for creation, it is a map of keys and values
// as required for removal of a particular Solution Add-On. It will require all values that are
// specified in a particular Add-On schema unless `validate_only_required_inputs=true` is set. Missing
// a value will print an error message with all field descriptions and missing value. Update is a no-op
// operation
func (o SolutionAddOnInstanceOutput) DeleteInput() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SolutionAddOnInstance) pulumi.StringMapOutput { return v.DeleteInput }).(pulumi.StringMapOutput)
}

// A map of keys and values as required for a particular Solution Add-On
// Instance. It will require all values that are specified in a particular Add-On schema unless
// `validate_only_required_inputs=true` is set. Missing a value will print an error message with all
// field descriptions and missing value.
func (o SolutionAddOnInstanceOutput) Input() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SolutionAddOnInstance) pulumi.StringMapOutput { return v.Input }).(pulumi.StringMapOutput)
}

// Name of Solution Add-On Instance
func (o SolutionAddOnInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SolutionAddOnInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// reports the state of parent [Runtime Defined
// Entity](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)
func (o SolutionAddOnInstanceOutput) RdeState() pulumi.StringOutput {
	return o.ApplyT(func(v *SolutionAddOnInstance) pulumi.StringOutput { return v.RdeState }).(pulumi.StringOutput)
}

// By default (`false`) will check that all fields are
// defined in `input` and `deleteInput` fields. It will only validate fields that are marked as
// required when set to `true`. Update is a noop that will affect further operation.
func (o SolutionAddOnInstanceOutput) ValidateOnlyRequiredInputs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SolutionAddOnInstance) pulumi.BoolPtrOutput { return v.ValidateOnlyRequiredInputs }).(pulumi.BoolPtrOutput)
}

type SolutionAddOnInstanceArrayOutput struct{ *pulumi.OutputState }

func (SolutionAddOnInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SolutionAddOnInstance)(nil)).Elem()
}

func (o SolutionAddOnInstanceArrayOutput) ToSolutionAddOnInstanceArrayOutput() SolutionAddOnInstanceArrayOutput {
	return o
}

func (o SolutionAddOnInstanceArrayOutput) ToSolutionAddOnInstanceArrayOutputWithContext(ctx context.Context) SolutionAddOnInstanceArrayOutput {
	return o
}

func (o SolutionAddOnInstanceArrayOutput) Index(i pulumi.IntInput) SolutionAddOnInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SolutionAddOnInstance {
		return vs[0].([]*SolutionAddOnInstance)[vs[1].(int)]
	}).(SolutionAddOnInstanceOutput)
}

type SolutionAddOnInstanceMapOutput struct{ *pulumi.OutputState }

func (SolutionAddOnInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SolutionAddOnInstance)(nil)).Elem()
}

func (o SolutionAddOnInstanceMapOutput) ToSolutionAddOnInstanceMapOutput() SolutionAddOnInstanceMapOutput {
	return o
}

func (o SolutionAddOnInstanceMapOutput) ToSolutionAddOnInstanceMapOutputWithContext(ctx context.Context) SolutionAddOnInstanceMapOutput {
	return o
}

func (o SolutionAddOnInstanceMapOutput) MapIndex(k pulumi.StringInput) SolutionAddOnInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SolutionAddOnInstance {
		return vs[0].(map[string]*SolutionAddOnInstance)[vs[1].(string)]
	}).(SolutionAddOnInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionAddOnInstanceInput)(nil)).Elem(), &SolutionAddOnInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionAddOnInstanceArrayInput)(nil)).Elem(), SolutionAddOnInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionAddOnInstanceMapInput)(nil)).Elem(), SolutionAddOnInstanceMap{})
	pulumi.RegisterOutputType(SolutionAddOnInstanceOutput{})
	pulumi.RegisterOutputType(SolutionAddOnInstanceArrayOutput{})
	pulumi.RegisterOutputType(SolutionAddOnInstanceMapOutput{})
}
