// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NsxtAlbSettings struct {
	pulumi.CustomResourceState

	// An ID of NSX-T Edge Gateway. Can be looked up using
	// [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
	EdgeGatewayId pulumi.StringOutput `pulumi:"edgeGatewayId"`
	// The IPv6 network
	// definition in CIDR format which will be used by Load Balancer service in the Edge Gateway. All the
	// load balancer service engines associated with the Service Engine Group will be attached to this
	// network. This field cannot be updated
	//
	// > IPv4 service network will be used if both the `serviceNetworkSpecification` and
	// `ipv6ServiceNetworkSpecification` properties are unset. If both are set, it will still be one
	// service network with a dual IPv4 and IPv6 stack. If only `ipv6ServiceNetworkSpecification` is
	// used, then only IPv6 will be used.
	//
	// > The attribute `supportedFeatureSet` must not be used in VCD versions lower than 10.4. Starting with 10.4, it replaces `licenseType` field in [nsxtAlbController](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_alb_controller).
	Ipv6ServiceNetworkSpecification pulumi.StringOutput `pulumi:"ipv6ServiceNetworkSpecification"`
	// Boolean value `true` or `false` if ALB is enabled. **Note** Delete operation of this resource
	// will set it to `false`
	IsActive pulumi.BoolOutput `pulumi:"isActive"`
	// When enabled, it allows to
	// configure Preserve Client IP on a Virtual Service
	IsTransparentModeEnabled pulumi.BoolOutput `pulumi:"isTransparentModeEnabled"`
	// The name of organization to which the edge gateway belongs. Optional if defined at provider level.
	Org pulumi.StringPtrOutput `pulumi:"org"`
	// Gateway CIDR format which will be used by Load
	// Balancer service. All the load balancer service engines associated with the Service Engine Group
	// will be attached to this network. The subnet prefix length must be 25. If nothing is set and
	// `ipv6ServiceNetworkSpecification` is not used, the **default is 192.168.255.125/25**. This
	// field cannot be updated
	ServiceNetworkSpecification pulumi.StringOutput `pulumi:"serviceNetworkSpecification"`
	// Feature set of this Edge Gateway if ALB is enabled (`STANDARD` or `PREMIUM`)
	SupportedFeatureSet pulumi.StringOutput `pulumi:"supportedFeatureSet"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field
	Vdc pulumi.StringOutput `pulumi:"vdc"`
}

// NewNsxtAlbSettings registers a new resource with the given unique name, arguments, and options.
func NewNsxtAlbSettings(ctx *pulumi.Context,
	name string, args *NsxtAlbSettingsArgs, opts ...pulumi.ResourceOption) (*NsxtAlbSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EdgeGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'EdgeGatewayId'")
	}
	if args.IsActive == nil {
		return nil, errors.New("invalid value for required argument 'IsActive'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NsxtAlbSettings
	err := ctx.RegisterResource("vcd:index/nsxtAlbSettings:NsxtAlbSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNsxtAlbSettings gets an existing NsxtAlbSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNsxtAlbSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NsxtAlbSettingsState, opts ...pulumi.ResourceOption) (*NsxtAlbSettings, error) {
	var resource NsxtAlbSettings
	err := ctx.ReadResource("vcd:index/nsxtAlbSettings:NsxtAlbSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NsxtAlbSettings resources.
type nsxtAlbSettingsState struct {
	// An ID of NSX-T Edge Gateway. Can be looked up using
	// [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
	EdgeGatewayId *string `pulumi:"edgeGatewayId"`
	// The IPv6 network
	// definition in CIDR format which will be used by Load Balancer service in the Edge Gateway. All the
	// load balancer service engines associated with the Service Engine Group will be attached to this
	// network. This field cannot be updated
	//
	// > IPv4 service network will be used if both the `serviceNetworkSpecification` and
	// `ipv6ServiceNetworkSpecification` properties are unset. If both are set, it will still be one
	// service network with a dual IPv4 and IPv6 stack. If only `ipv6ServiceNetworkSpecification` is
	// used, then only IPv6 will be used.
	//
	// > The attribute `supportedFeatureSet` must not be used in VCD versions lower than 10.4. Starting with 10.4, it replaces `licenseType` field in [nsxtAlbController](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_alb_controller).
	Ipv6ServiceNetworkSpecification *string `pulumi:"ipv6ServiceNetworkSpecification"`
	// Boolean value `true` or `false` if ALB is enabled. **Note** Delete operation of this resource
	// will set it to `false`
	IsActive *bool `pulumi:"isActive"`
	// When enabled, it allows to
	// configure Preserve Client IP on a Virtual Service
	IsTransparentModeEnabled *bool `pulumi:"isTransparentModeEnabled"`
	// The name of organization to which the edge gateway belongs. Optional if defined at provider level.
	Org *string `pulumi:"org"`
	// Gateway CIDR format which will be used by Load
	// Balancer service. All the load balancer service engines associated with the Service Engine Group
	// will be attached to this network. The subnet prefix length must be 25. If nothing is set and
	// `ipv6ServiceNetworkSpecification` is not used, the **default is 192.168.255.125/25**. This
	// field cannot be updated
	ServiceNetworkSpecification *string `pulumi:"serviceNetworkSpecification"`
	// Feature set of this Edge Gateway if ALB is enabled (`STANDARD` or `PREMIUM`)
	SupportedFeatureSet *string `pulumi:"supportedFeatureSet"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field
	Vdc *string `pulumi:"vdc"`
}

type NsxtAlbSettingsState struct {
	// An ID of NSX-T Edge Gateway. Can be looked up using
	// [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
	EdgeGatewayId pulumi.StringPtrInput
	// The IPv6 network
	// definition in CIDR format which will be used by Load Balancer service in the Edge Gateway. All the
	// load balancer service engines associated with the Service Engine Group will be attached to this
	// network. This field cannot be updated
	//
	// > IPv4 service network will be used if both the `serviceNetworkSpecification` and
	// `ipv6ServiceNetworkSpecification` properties are unset. If both are set, it will still be one
	// service network with a dual IPv4 and IPv6 stack. If only `ipv6ServiceNetworkSpecification` is
	// used, then only IPv6 will be used.
	//
	// > The attribute `supportedFeatureSet` must not be used in VCD versions lower than 10.4. Starting with 10.4, it replaces `licenseType` field in [nsxtAlbController](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_alb_controller).
	Ipv6ServiceNetworkSpecification pulumi.StringPtrInput
	// Boolean value `true` or `false` if ALB is enabled. **Note** Delete operation of this resource
	// will set it to `false`
	IsActive pulumi.BoolPtrInput
	// When enabled, it allows to
	// configure Preserve Client IP on a Virtual Service
	IsTransparentModeEnabled pulumi.BoolPtrInput
	// The name of organization to which the edge gateway belongs. Optional if defined at provider level.
	Org pulumi.StringPtrInput
	// Gateway CIDR format which will be used by Load
	// Balancer service. All the load balancer service engines associated with the Service Engine Group
	// will be attached to this network. The subnet prefix length must be 25. If nothing is set and
	// `ipv6ServiceNetworkSpecification` is not used, the **default is 192.168.255.125/25**. This
	// field cannot be updated
	ServiceNetworkSpecification pulumi.StringPtrInput
	// Feature set of this Edge Gateway if ALB is enabled (`STANDARD` or `PREMIUM`)
	SupportedFeatureSet pulumi.StringPtrInput
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field
	Vdc pulumi.StringPtrInput
}

func (NsxtAlbSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtAlbSettingsState)(nil)).Elem()
}

type nsxtAlbSettingsArgs struct {
	// An ID of NSX-T Edge Gateway. Can be looked up using
	// [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	// The IPv6 network
	// definition in CIDR format which will be used by Load Balancer service in the Edge Gateway. All the
	// load balancer service engines associated with the Service Engine Group will be attached to this
	// network. This field cannot be updated
	//
	// > IPv4 service network will be used if both the `serviceNetworkSpecification` and
	// `ipv6ServiceNetworkSpecification` properties are unset. If both are set, it will still be one
	// service network with a dual IPv4 and IPv6 stack. If only `ipv6ServiceNetworkSpecification` is
	// used, then only IPv6 will be used.
	//
	// > The attribute `supportedFeatureSet` must not be used in VCD versions lower than 10.4. Starting with 10.4, it replaces `licenseType` field in [nsxtAlbController](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_alb_controller).
	Ipv6ServiceNetworkSpecification *string `pulumi:"ipv6ServiceNetworkSpecification"`
	// Boolean value `true` or `false` if ALB is enabled. **Note** Delete operation of this resource
	// will set it to `false`
	IsActive bool `pulumi:"isActive"`
	// When enabled, it allows to
	// configure Preserve Client IP on a Virtual Service
	IsTransparentModeEnabled *bool `pulumi:"isTransparentModeEnabled"`
	// The name of organization to which the edge gateway belongs. Optional if defined at provider level.
	Org *string `pulumi:"org"`
	// Gateway CIDR format which will be used by Load
	// Balancer service. All the load balancer service engines associated with the Service Engine Group
	// will be attached to this network. The subnet prefix length must be 25. If nothing is set and
	// `ipv6ServiceNetworkSpecification` is not used, the **default is 192.168.255.125/25**. This
	// field cannot be updated
	ServiceNetworkSpecification *string `pulumi:"serviceNetworkSpecification"`
	// Feature set of this Edge Gateway if ALB is enabled (`STANDARD` or `PREMIUM`)
	SupportedFeatureSet *string `pulumi:"supportedFeatureSet"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field
	Vdc *string `pulumi:"vdc"`
}

// The set of arguments for constructing a NsxtAlbSettings resource.
type NsxtAlbSettingsArgs struct {
	// An ID of NSX-T Edge Gateway. Can be looked up using
	// [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
	EdgeGatewayId pulumi.StringInput
	// The IPv6 network
	// definition in CIDR format which will be used by Load Balancer service in the Edge Gateway. All the
	// load balancer service engines associated with the Service Engine Group will be attached to this
	// network. This field cannot be updated
	//
	// > IPv4 service network will be used if both the `serviceNetworkSpecification` and
	// `ipv6ServiceNetworkSpecification` properties are unset. If both are set, it will still be one
	// service network with a dual IPv4 and IPv6 stack. If only `ipv6ServiceNetworkSpecification` is
	// used, then only IPv6 will be used.
	//
	// > The attribute `supportedFeatureSet` must not be used in VCD versions lower than 10.4. Starting with 10.4, it replaces `licenseType` field in [nsxtAlbController](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_alb_controller).
	Ipv6ServiceNetworkSpecification pulumi.StringPtrInput
	// Boolean value `true` or `false` if ALB is enabled. **Note** Delete operation of this resource
	// will set it to `false`
	IsActive pulumi.BoolInput
	// When enabled, it allows to
	// configure Preserve Client IP on a Virtual Service
	IsTransparentModeEnabled pulumi.BoolPtrInput
	// The name of organization to which the edge gateway belongs. Optional if defined at provider level.
	Org pulumi.StringPtrInput
	// Gateway CIDR format which will be used by Load
	// Balancer service. All the load balancer service engines associated with the Service Engine Group
	// will be attached to this network. The subnet prefix length must be 25. If nothing is set and
	// `ipv6ServiceNetworkSpecification` is not used, the **default is 192.168.255.125/25**. This
	// field cannot be updated
	ServiceNetworkSpecification pulumi.StringPtrInput
	// Feature set of this Edge Gateway if ALB is enabled (`STANDARD` or `PREMIUM`)
	SupportedFeatureSet pulumi.StringPtrInput
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field
	Vdc pulumi.StringPtrInput
}

func (NsxtAlbSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtAlbSettingsArgs)(nil)).Elem()
}

type NsxtAlbSettingsInput interface {
	pulumi.Input

	ToNsxtAlbSettingsOutput() NsxtAlbSettingsOutput
	ToNsxtAlbSettingsOutputWithContext(ctx context.Context) NsxtAlbSettingsOutput
}

func (*NsxtAlbSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbSettings)(nil)).Elem()
}

func (i *NsxtAlbSettings) ToNsxtAlbSettingsOutput() NsxtAlbSettingsOutput {
	return i.ToNsxtAlbSettingsOutputWithContext(context.Background())
}

func (i *NsxtAlbSettings) ToNsxtAlbSettingsOutputWithContext(ctx context.Context) NsxtAlbSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbSettingsOutput)
}

// NsxtAlbSettingsArrayInput is an input type that accepts NsxtAlbSettingsArray and NsxtAlbSettingsArrayOutput values.
// You can construct a concrete instance of `NsxtAlbSettingsArrayInput` via:
//
//	NsxtAlbSettingsArray{ NsxtAlbSettingsArgs{...} }
type NsxtAlbSettingsArrayInput interface {
	pulumi.Input

	ToNsxtAlbSettingsArrayOutput() NsxtAlbSettingsArrayOutput
	ToNsxtAlbSettingsArrayOutputWithContext(context.Context) NsxtAlbSettingsArrayOutput
}

type NsxtAlbSettingsArray []NsxtAlbSettingsInput

func (NsxtAlbSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtAlbSettings)(nil)).Elem()
}

func (i NsxtAlbSettingsArray) ToNsxtAlbSettingsArrayOutput() NsxtAlbSettingsArrayOutput {
	return i.ToNsxtAlbSettingsArrayOutputWithContext(context.Background())
}

func (i NsxtAlbSettingsArray) ToNsxtAlbSettingsArrayOutputWithContext(ctx context.Context) NsxtAlbSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbSettingsArrayOutput)
}

// NsxtAlbSettingsMapInput is an input type that accepts NsxtAlbSettingsMap and NsxtAlbSettingsMapOutput values.
// You can construct a concrete instance of `NsxtAlbSettingsMapInput` via:
//
//	NsxtAlbSettingsMap{ "key": NsxtAlbSettingsArgs{...} }
type NsxtAlbSettingsMapInput interface {
	pulumi.Input

	ToNsxtAlbSettingsMapOutput() NsxtAlbSettingsMapOutput
	ToNsxtAlbSettingsMapOutputWithContext(context.Context) NsxtAlbSettingsMapOutput
}

type NsxtAlbSettingsMap map[string]NsxtAlbSettingsInput

func (NsxtAlbSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtAlbSettings)(nil)).Elem()
}

func (i NsxtAlbSettingsMap) ToNsxtAlbSettingsMapOutput() NsxtAlbSettingsMapOutput {
	return i.ToNsxtAlbSettingsMapOutputWithContext(context.Background())
}

func (i NsxtAlbSettingsMap) ToNsxtAlbSettingsMapOutputWithContext(ctx context.Context) NsxtAlbSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbSettingsMapOutput)
}

type NsxtAlbSettingsOutput struct{ *pulumi.OutputState }

func (NsxtAlbSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbSettings)(nil)).Elem()
}

func (o NsxtAlbSettingsOutput) ToNsxtAlbSettingsOutput() NsxtAlbSettingsOutput {
	return o
}

func (o NsxtAlbSettingsOutput) ToNsxtAlbSettingsOutputWithContext(ctx context.Context) NsxtAlbSettingsOutput {
	return o
}

// An ID of NSX-T Edge Gateway. Can be looked up using
// [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
func (o NsxtAlbSettingsOutput) EdgeGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbSettings) pulumi.StringOutput { return v.EdgeGatewayId }).(pulumi.StringOutput)
}

// The IPv6 network
// definition in CIDR format which will be used by Load Balancer service in the Edge Gateway. All the
// load balancer service engines associated with the Service Engine Group will be attached to this
// network. This field cannot be updated
//
// > IPv4 service network will be used if both the `serviceNetworkSpecification` and
// `ipv6ServiceNetworkSpecification` properties are unset. If both are set, it will still be one
// service network with a dual IPv4 and IPv6 stack. If only `ipv6ServiceNetworkSpecification` is
// used, then only IPv6 will be used.
//
// > The attribute `supportedFeatureSet` must not be used in VCD versions lower than 10.4. Starting with 10.4, it replaces `licenseType` field in [nsxtAlbController](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_alb_controller).
func (o NsxtAlbSettingsOutput) Ipv6ServiceNetworkSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbSettings) pulumi.StringOutput { return v.Ipv6ServiceNetworkSpecification }).(pulumi.StringOutput)
}

// Boolean value `true` or `false` if ALB is enabled. **Note** Delete operation of this resource
// will set it to `false`
func (o NsxtAlbSettingsOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v *NsxtAlbSettings) pulumi.BoolOutput { return v.IsActive }).(pulumi.BoolOutput)
}

// When enabled, it allows to
// configure Preserve Client IP on a Virtual Service
func (o NsxtAlbSettingsOutput) IsTransparentModeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *NsxtAlbSettings) pulumi.BoolOutput { return v.IsTransparentModeEnabled }).(pulumi.BoolOutput)
}

// The name of organization to which the edge gateway belongs. Optional if defined at provider level.
func (o NsxtAlbSettingsOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbSettings) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

// Gateway CIDR format which will be used by Load
// Balancer service. All the load balancer service engines associated with the Service Engine Group
// will be attached to this network. The subnet prefix length must be 25. If nothing is set and
// `ipv6ServiceNetworkSpecification` is not used, the **default is 192.168.255.125/25**. This
// field cannot be updated
func (o NsxtAlbSettingsOutput) ServiceNetworkSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbSettings) pulumi.StringOutput { return v.ServiceNetworkSpecification }).(pulumi.StringOutput)
}

// Feature set of this Edge Gateway if ALB is enabled (`STANDARD` or `PREMIUM`)
func (o NsxtAlbSettingsOutput) SupportedFeatureSet() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbSettings) pulumi.StringOutput { return v.SupportedFeatureSet }).(pulumi.StringOutput)
}

// The name of VDC to use, optional if defined at provider level
//
// Deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field
func (o NsxtAlbSettingsOutput) Vdc() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbSettings) pulumi.StringOutput { return v.Vdc }).(pulumi.StringOutput)
}

type NsxtAlbSettingsArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtAlbSettings)(nil)).Elem()
}

func (o NsxtAlbSettingsArrayOutput) ToNsxtAlbSettingsArrayOutput() NsxtAlbSettingsArrayOutput {
	return o
}

func (o NsxtAlbSettingsArrayOutput) ToNsxtAlbSettingsArrayOutputWithContext(ctx context.Context) NsxtAlbSettingsArrayOutput {
	return o
}

func (o NsxtAlbSettingsArrayOutput) Index(i pulumi.IntInput) NsxtAlbSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NsxtAlbSettings {
		return vs[0].([]*NsxtAlbSettings)[vs[1].(int)]
	}).(NsxtAlbSettingsOutput)
}

type NsxtAlbSettingsMapOutput struct{ *pulumi.OutputState }

func (NsxtAlbSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtAlbSettings)(nil)).Elem()
}

func (o NsxtAlbSettingsMapOutput) ToNsxtAlbSettingsMapOutput() NsxtAlbSettingsMapOutput {
	return o
}

func (o NsxtAlbSettingsMapOutput) ToNsxtAlbSettingsMapOutputWithContext(ctx context.Context) NsxtAlbSettingsMapOutput {
	return o
}

func (o NsxtAlbSettingsMapOutput) MapIndex(k pulumi.StringInput) NsxtAlbSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NsxtAlbSettings {
		return vs[0].(map[string]*NsxtAlbSettings)[vs[1].(string)]
	}).(NsxtAlbSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbSettingsInput)(nil)).Elem(), &NsxtAlbSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbSettingsArrayInput)(nil)).Elem(), NsxtAlbSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbSettingsMapInput)(nil)).Elem(), NsxtAlbSettingsMap{})
	pulumi.RegisterOutputType(NsxtAlbSettingsOutput{})
	pulumi.RegisterOutputType(NsxtAlbSettingsArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbSettingsMapOutput{})
}
