// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RdeType struct {
	pulumi.CustomResourceState

	// The description of the Runtime Defined Entity Type.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// An external entity's ID that this Runtime Defined Entity Type may apply to.
	ExternalId pulumi.StringPtrOutput `pulumi:"externalId"`
	// Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)\
	// to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
	// automatically invoked when the corresponding event is triggered. These blocks have the following properties:
	Hooks RdeTypeHookArrayOutput `pulumi:"hooks"`
	// To be used when creating a new version of a Runtime Defined Entity Type.
	// Specifies the version of the type that will be the template for the authorization configuration of the new version.
	// The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
	// If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
	InheritedVersion pulumi.StringPtrOutput `pulumi:"inheritedVersion"`
	// The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
	InterfaceIds pulumi.StringArrayOutput `pulumi:"interfaceIds"`
	// The name of the Runtime Defined Entity Type.
	Name pulumi.StringOutput `pulumi:"name"`
	// A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
	Nss pulumi.StringOutput `pulumi:"nss"`
	// True if the Runtime Defined Entity Type cannot be modified.
	Readonly pulumi.BoolOutput `pulumi:"readonly"`
	// The JSON-Schema valid definition of the Runtime Defined Entity Type
	Schema pulumi.StringOutput `pulumi:"schema"`
	// URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
	SchemaUrl pulumi.StringPtrOutput `pulumi:"schemaUrl"`
	// The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
	Vendor pulumi.StringOutput `pulumi:"vendor"`
	// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewRdeType registers a new resource with the given unique name, arguments, and options.
func NewRdeType(ctx *pulumi.Context,
	name string, args *RdeTypeArgs, opts ...pulumi.ResourceOption) (*RdeType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Nss == nil {
		return nil, errors.New("invalid value for required argument 'Nss'")
	}
	if args.Vendor == nil {
		return nil, errors.New("invalid value for required argument 'Vendor'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RdeType
	err := ctx.RegisterResource("vcd:index/rdeType:RdeType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRdeType gets an existing RdeType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRdeType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RdeTypeState, opts ...pulumi.ResourceOption) (*RdeType, error) {
	var resource RdeType
	err := ctx.ReadResource("vcd:index/rdeType:RdeType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RdeType resources.
type rdeTypeState struct {
	// The description of the Runtime Defined Entity Type.
	Description *string `pulumi:"description"`
	// An external entity's ID that this Runtime Defined Entity Type may apply to.
	ExternalId *string `pulumi:"externalId"`
	// Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)\
	// to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
	// automatically invoked when the corresponding event is triggered. These blocks have the following properties:
	Hooks []RdeTypeHook `pulumi:"hooks"`
	// To be used when creating a new version of a Runtime Defined Entity Type.
	// Specifies the version of the type that will be the template for the authorization configuration of the new version.
	// The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
	// If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
	InheritedVersion *string `pulumi:"inheritedVersion"`
	// The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
	InterfaceIds []string `pulumi:"interfaceIds"`
	// The name of the Runtime Defined Entity Type.
	Name *string `pulumi:"name"`
	// A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
	Nss *string `pulumi:"nss"`
	// True if the Runtime Defined Entity Type cannot be modified.
	Readonly *bool `pulumi:"readonly"`
	// The JSON-Schema valid definition of the Runtime Defined Entity Type
	Schema *string `pulumi:"schema"`
	// URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
	SchemaUrl *string `pulumi:"schemaUrl"`
	// The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
	Vendor *string `pulumi:"vendor"`
	// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
	Version *string `pulumi:"version"`
}

type RdeTypeState struct {
	// The description of the Runtime Defined Entity Type.
	Description pulumi.StringPtrInput
	// An external entity's ID that this Runtime Defined Entity Type may apply to.
	ExternalId pulumi.StringPtrInput
	// Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)\
	// to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
	// automatically invoked when the corresponding event is triggered. These blocks have the following properties:
	Hooks RdeTypeHookArrayInput
	// To be used when creating a new version of a Runtime Defined Entity Type.
	// Specifies the version of the type that will be the template for the authorization configuration of the new version.
	// The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
	// If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
	InheritedVersion pulumi.StringPtrInput
	// The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
	InterfaceIds pulumi.StringArrayInput
	// The name of the Runtime Defined Entity Type.
	Name pulumi.StringPtrInput
	// A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
	Nss pulumi.StringPtrInput
	// True if the Runtime Defined Entity Type cannot be modified.
	Readonly pulumi.BoolPtrInput
	// The JSON-Schema valid definition of the Runtime Defined Entity Type
	Schema pulumi.StringPtrInput
	// URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
	SchemaUrl pulumi.StringPtrInput
	// The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
	Vendor pulumi.StringPtrInput
	// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
	Version pulumi.StringPtrInput
}

func (RdeTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*rdeTypeState)(nil)).Elem()
}

type rdeTypeArgs struct {
	// The description of the Runtime Defined Entity Type.
	Description *string `pulumi:"description"`
	// An external entity's ID that this Runtime Defined Entity Type may apply to.
	ExternalId *string `pulumi:"externalId"`
	// Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)\
	// to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
	// automatically invoked when the corresponding event is triggered. These blocks have the following properties:
	Hooks []RdeTypeHook `pulumi:"hooks"`
	// To be used when creating a new version of a Runtime Defined Entity Type.
	// Specifies the version of the type that will be the template for the authorization configuration of the new version.
	// The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
	// If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
	InheritedVersion *string `pulumi:"inheritedVersion"`
	// The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
	InterfaceIds []string `pulumi:"interfaceIds"`
	// The name of the Runtime Defined Entity Type.
	Name *string `pulumi:"name"`
	// A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
	Nss string `pulumi:"nss"`
	// The JSON-Schema valid definition of the Runtime Defined Entity Type
	Schema *string `pulumi:"schema"`
	// URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
	SchemaUrl *string `pulumi:"schemaUrl"`
	// The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
	Vendor string `pulumi:"vendor"`
	// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a RdeType resource.
type RdeTypeArgs struct {
	// The description of the Runtime Defined Entity Type.
	Description pulumi.StringPtrInput
	// An external entity's ID that this Runtime Defined Entity Type may apply to.
	ExternalId pulumi.StringPtrInput
	// Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)\
	// to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
	// automatically invoked when the corresponding event is triggered. These blocks have the following properties:
	Hooks RdeTypeHookArrayInput
	// To be used when creating a new version of a Runtime Defined Entity Type.
	// Specifies the version of the type that will be the template for the authorization configuration of the new version.
	// The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
	// If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
	InheritedVersion pulumi.StringPtrInput
	// The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
	InterfaceIds pulumi.StringArrayInput
	// The name of the Runtime Defined Entity Type.
	Name pulumi.StringPtrInput
	// A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
	Nss pulumi.StringInput
	// The JSON-Schema valid definition of the Runtime Defined Entity Type
	Schema pulumi.StringPtrInput
	// URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
	SchemaUrl pulumi.StringPtrInput
	// The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
	Vendor pulumi.StringInput
	// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
	Version pulumi.StringInput
}

func (RdeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rdeTypeArgs)(nil)).Elem()
}

type RdeTypeInput interface {
	pulumi.Input

	ToRdeTypeOutput() RdeTypeOutput
	ToRdeTypeOutputWithContext(ctx context.Context) RdeTypeOutput
}

func (*RdeType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdeType)(nil)).Elem()
}

func (i *RdeType) ToRdeTypeOutput() RdeTypeOutput {
	return i.ToRdeTypeOutputWithContext(context.Background())
}

func (i *RdeType) ToRdeTypeOutputWithContext(ctx context.Context) RdeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdeTypeOutput)
}

// RdeTypeArrayInput is an input type that accepts RdeTypeArray and RdeTypeArrayOutput values.
// You can construct a concrete instance of `RdeTypeArrayInput` via:
//
//	RdeTypeArray{ RdeTypeArgs{...} }
type RdeTypeArrayInput interface {
	pulumi.Input

	ToRdeTypeArrayOutput() RdeTypeArrayOutput
	ToRdeTypeArrayOutputWithContext(context.Context) RdeTypeArrayOutput
}

type RdeTypeArray []RdeTypeInput

func (RdeTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdeType)(nil)).Elem()
}

func (i RdeTypeArray) ToRdeTypeArrayOutput() RdeTypeArrayOutput {
	return i.ToRdeTypeArrayOutputWithContext(context.Background())
}

func (i RdeTypeArray) ToRdeTypeArrayOutputWithContext(ctx context.Context) RdeTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdeTypeArrayOutput)
}

// RdeTypeMapInput is an input type that accepts RdeTypeMap and RdeTypeMapOutput values.
// You can construct a concrete instance of `RdeTypeMapInput` via:
//
//	RdeTypeMap{ "key": RdeTypeArgs{...} }
type RdeTypeMapInput interface {
	pulumi.Input

	ToRdeTypeMapOutput() RdeTypeMapOutput
	ToRdeTypeMapOutputWithContext(context.Context) RdeTypeMapOutput
}

type RdeTypeMap map[string]RdeTypeInput

func (RdeTypeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdeType)(nil)).Elem()
}

func (i RdeTypeMap) ToRdeTypeMapOutput() RdeTypeMapOutput {
	return i.ToRdeTypeMapOutputWithContext(context.Background())
}

func (i RdeTypeMap) ToRdeTypeMapOutputWithContext(ctx context.Context) RdeTypeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdeTypeMapOutput)
}

type RdeTypeOutput struct{ *pulumi.OutputState }

func (RdeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdeType)(nil)).Elem()
}

func (o RdeTypeOutput) ToRdeTypeOutput() RdeTypeOutput {
	return o
}

func (o RdeTypeOutput) ToRdeTypeOutputWithContext(ctx context.Context) RdeTypeOutput {
	return o
}

// The description of the Runtime Defined Entity Type.
func (o RdeTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdeType) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// An external entity's ID that this Runtime Defined Entity Type may apply to.
func (o RdeTypeOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdeType) pulumi.StringPtrOutput { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)\
// to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
// automatically invoked when the corresponding event is triggered. These blocks have the following properties:
func (o RdeTypeOutput) Hooks() RdeTypeHookArrayOutput {
	return o.ApplyT(func(v *RdeType) RdeTypeHookArrayOutput { return v.Hooks }).(RdeTypeHookArrayOutput)
}

// To be used when creating a new version of a Runtime Defined Entity Type.
// Specifies the version of the type that will be the template for the authorization configuration of the new version.
// The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
// If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
func (o RdeTypeOutput) InheritedVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdeType) pulumi.StringPtrOutput { return v.InheritedVersion }).(pulumi.StringPtrOutput)
}

// The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
func (o RdeTypeOutput) InterfaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RdeType) pulumi.StringArrayOutput { return v.InterfaceIds }).(pulumi.StringArrayOutput)
}

// The name of the Runtime Defined Entity Type.
func (o RdeTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RdeType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
func (o RdeTypeOutput) Nss() pulumi.StringOutput {
	return o.ApplyT(func(v *RdeType) pulumi.StringOutput { return v.Nss }).(pulumi.StringOutput)
}

// True if the Runtime Defined Entity Type cannot be modified.
func (o RdeTypeOutput) Readonly() pulumi.BoolOutput {
	return o.ApplyT(func(v *RdeType) pulumi.BoolOutput { return v.Readonly }).(pulumi.BoolOutput)
}

// The JSON-Schema valid definition of the Runtime Defined Entity Type
func (o RdeTypeOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v *RdeType) pulumi.StringOutput { return v.Schema }).(pulumi.StringOutput)
}

// URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
func (o RdeTypeOutput) SchemaUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdeType) pulumi.StringPtrOutput { return v.SchemaUrl }).(pulumi.StringPtrOutput)
}

// The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
func (o RdeTypeOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v *RdeType) pulumi.StringOutput { return v.Vendor }).(pulumi.StringOutput)
}

// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
func (o RdeTypeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *RdeType) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type RdeTypeArrayOutput struct{ *pulumi.OutputState }

func (RdeTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdeType)(nil)).Elem()
}

func (o RdeTypeArrayOutput) ToRdeTypeArrayOutput() RdeTypeArrayOutput {
	return o
}

func (o RdeTypeArrayOutput) ToRdeTypeArrayOutputWithContext(ctx context.Context) RdeTypeArrayOutput {
	return o
}

func (o RdeTypeArrayOutput) Index(i pulumi.IntInput) RdeTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RdeType {
		return vs[0].([]*RdeType)[vs[1].(int)]
	}).(RdeTypeOutput)
}

type RdeTypeMapOutput struct{ *pulumi.OutputState }

func (RdeTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdeType)(nil)).Elem()
}

func (o RdeTypeMapOutput) ToRdeTypeMapOutput() RdeTypeMapOutput {
	return o
}

func (o RdeTypeMapOutput) ToRdeTypeMapOutputWithContext(ctx context.Context) RdeTypeMapOutput {
	return o
}

func (o RdeTypeMapOutput) MapIndex(k pulumi.StringInput) RdeTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RdeType {
		return vs[0].(map[string]*RdeType)[vs[1].(string)]
	}).(RdeTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RdeTypeInput)(nil)).Elem(), &RdeType{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdeTypeArrayInput)(nil)).Elem(), RdeTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdeTypeMapInput)(nil)).Elem(), RdeTypeMap{})
	pulumi.RegisterOutputType(RdeTypeOutput{})
	pulumi.RegisterOutputType(RdeTypeArrayOutput{})
	pulumi.RegisterOutputType(RdeTypeMapOutput{})
}
