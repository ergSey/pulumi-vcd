// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director Catalog data source. A Catalog can be used to manage catalog items and media items.
//
// Supported in provider *v2.5+*
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			my_cat, err := vcd.LookupCatalog(ctx, &vcd.LookupCatalogArgs{
//				Org:  pulumi.StringRef("my-org"),
//				Name: pulumi.StringRef("my-cat"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = vcd.NewCatalogItem(ctx, "myItem", &vcd.CatalogItemArgs{
//				Org:             pulumi.String(my_cat.Org),
//				Catalog:         pulumi.String(my_cat.Name),
//				Name:            pulumi.String("myItem"),
//				Description:     pulumi.Sprintf("Belongs to %v", my_cat.Id),
//				OvaPath:         pulumi.String("/path/to/test_vapp_template.ova"),
//				UploadPieceSize: pulumi.Int(5),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Metadata
//
// The `metadataEntry` (*v3.8+*) is a set of metadata entries that have the following structure:
//
// * `key` - Key of this metadata entry.
// * `value` - Value of this metadata entry.
// * `type` - Type of this metadata entry. One of: `MetadataStringValue`, `MetadataNumberValue`, `MetadataDateTimeValue`, `MetadataBooleanValue`.
// * `userAccess` - User access level for this metadata entry. One of: `PRIVATE` (hidden), `READONLY` (read only), `READWRITE` (read/write).
// * `isSystem` - Domain for this metadata entry. true if it belongs to `SYSTEM`, false if it belongs to `GENERAL`.
//
// ## Filter arguments
//
// (Supported in provider *v2.9+*)
//
//   - `nameRegex` (Optional) matches the name using a regular expression.
//   - `date` (Optional) is an expression starting with an operator (`>`, `<`, `>=`, `<=`, `==`), followed by a date, with
//     optional spaces in between. For example: `> 2020-02-01 12:35:00.523Z`
//     The filter recognizes several formats, but one of `yyyy-mm-dd [hh:mm[:ss[.nnnZ]]]` or `dd-MMM-yyyy [hh:mm[:ss[.nnnZ]]]`
//     is recommended.
//     Comparison with equality operator (`==`) need to define the date to the microseconds.
//   - `latest` (Optional) If `true`, retrieve the latest item among the ones matching other parameters. If no other parameters
//     are set, it retrieves the newest item.
//   - `earliest` (Optional) If `true`, retrieve the earliest item among the ones matching other parameters. If no other parameters
//     are set, it retrieves the oldest item.
//   - `metadata` (Optional) One or more parameters that will match metadata contents.
//
// See [Filters reference](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/data_source_filters) for details and examples.
func LookupCatalog(ctx *pulumi.Context, args *LookupCatalogArgs, opts ...pulumi.InvokeOption) (*LookupCatalogResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCatalogResult
	err := ctx.Invoke("vcd:index/getCatalog:getCatalog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalog.
type LookupCatalogArgs struct {
	// Catalog description.
	Description *string `pulumi:"description"`
	// Retrieves the data source using one or more filter parameters
	Filter *GetCatalogFilter `pulumi:"filter"`
	// Catalog name (optional when `filter` is used)
	Name *string `pulumi:"name"`
	// Org name
	Org *string `pulumi:"org"`
}

// A collection of values returned by getCatalog.
type LookupCatalogResult struct {
	// (*v3.6+*) Enable early catalog export to optimize synchronization. Default is `false`.
	CacheEnabled bool `pulumi:"cacheEnabled"`
	// (*v3.6+*) Version number from this catalog.
	CatalogVersion int `pulumi:"catalogVersion"`
	// (*v3.6+*) Date and time of catalog creation
	Created string `pulumi:"created"`
	// Catalog description.
	Description string            `pulumi:"description"`
	Filter      *GetCatalogFilter `pulumi:"filter"`
	Href        string            `pulumi:"href"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (*v3.8.1+*) Indicates if this catalog was created in the current organization.
	IsLocal bool `pulumi:"isLocal"`
	// (*v3.6+*) Indicates if this catalog is shared to all organizations.
	IsPublished bool `pulumi:"isPublished"`
	// (*v3.6+*) Indicates if the catalog is shared.
	IsShared bool `pulumi:"isShared"`
	// (*v3.8+*) List of media item names in this catalog, in alphabetical order.
	MediaItemLists []string `pulumi:"mediaItemLists"`
	// (Deprecated; *v3.6+*) Use `metadataEntry` instead. Key value map of metadata.
	//
	// Deprecated: Use metadataEntry instead
	Metadata map[string]string `pulumi:"metadata"`
	// A set of metadata entries assigned to this Catalog. See Metadata section for details.
	MetadataEntries []GetCatalogMetadataEntry `pulumi:"metadataEntries"`
	Name            *string                   `pulumi:"name"`
	// (*v3.6+*) Number of media items available in this catalog.
	NumberOfMedia int `pulumi:"numberOfMedia"`
	// (*v3.6+*) Number of vApp templates available in this catalog.
	NumberOfVappTemplates int     `pulumi:"numberOfVappTemplates"`
	Org                   *string `pulumi:"org"`
	// (*v3.6+*) Owner of the catalog.
	OwnerName string `pulumi:"ownerName"`
	// (*v3.6+*) Enable include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the portability of the package and you should use it only when necessary. Default is `false`.
	PreserveIdentityInformation bool `pulumi:"preserveIdentityInformation"`
	// (*v3.6+*) Enable allows to publish a catalog externally to make its vApp templates and media files available for subscription by organizations outside the Cloud Director installation. Default is `false`.
	PublishEnabled bool `pulumi:"publishEnabled"`
	// (*v3.6+*) Shows if the catalog is `PUBLISHED`, if it is a subscription from another one (`SUBSCRIBED`), or none of those (`UNPUBLISHED`).
	PublishSubscriptionType string `pulumi:"publishSubscriptionType"`
	// (*v3.8+*) URL to which other catalogs can subscribe.
	PublishSubscriptionUrl string `pulumi:"publishSubscriptionUrl"`
	StorageProfileId       string `pulumi:"storageProfileId"`
	// (*v3.8+*) List of vApp template names in this catalog, in alphabetical order.
	VappTemplateLists []string `pulumi:"vappTemplateLists"`
}

func LookupCatalogOutput(ctx *pulumi.Context, args LookupCatalogOutputArgs, opts ...pulumi.InvokeOption) LookupCatalogResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCatalogResultOutput, error) {
			args := v.(LookupCatalogArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getCatalog:getCatalog", args, LookupCatalogResultOutput{}, options).(LookupCatalogResultOutput), nil
		}).(LookupCatalogResultOutput)
}

// A collection of arguments for invoking getCatalog.
type LookupCatalogOutputArgs struct {
	// Catalog description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Retrieves the data source using one or more filter parameters
	Filter GetCatalogFilterPtrInput `pulumi:"filter"`
	// Catalog name (optional when `filter` is used)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Org name
	Org pulumi.StringPtrInput `pulumi:"org"`
}

func (LookupCatalogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogArgs)(nil)).Elem()
}

// A collection of values returned by getCatalog.
type LookupCatalogResultOutput struct{ *pulumi.OutputState }

func (LookupCatalogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogResult)(nil)).Elem()
}

func (o LookupCatalogResultOutput) ToLookupCatalogResultOutput() LookupCatalogResultOutput {
	return o
}

func (o LookupCatalogResultOutput) ToLookupCatalogResultOutputWithContext(ctx context.Context) LookupCatalogResultOutput {
	return o
}

// (*v3.6+*) Enable early catalog export to optimize synchronization. Default is `false`.
func (o LookupCatalogResultOutput) CacheEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCatalogResult) bool { return v.CacheEnabled }).(pulumi.BoolOutput)
}

// (*v3.6+*) Version number from this catalog.
func (o LookupCatalogResultOutput) CatalogVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCatalogResult) int { return v.CatalogVersion }).(pulumi.IntOutput)
}

// (*v3.6+*) Date and time of catalog creation
func (o LookupCatalogResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Created }).(pulumi.StringOutput)
}

// Catalog description.
func (o LookupCatalogResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupCatalogResultOutput) Filter() GetCatalogFilterPtrOutput {
	return o.ApplyT(func(v LookupCatalogResult) *GetCatalogFilter { return v.Filter }).(GetCatalogFilterPtrOutput)
}

func (o LookupCatalogResultOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Href }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCatalogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Id }).(pulumi.StringOutput)
}

// (*v3.8.1+*) Indicates if this catalog was created in the current organization.
func (o LookupCatalogResultOutput) IsLocal() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCatalogResult) bool { return v.IsLocal }).(pulumi.BoolOutput)
}

// (*v3.6+*) Indicates if this catalog is shared to all organizations.
func (o LookupCatalogResultOutput) IsPublished() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCatalogResult) bool { return v.IsPublished }).(pulumi.BoolOutput)
}

// (*v3.6+*) Indicates if the catalog is shared.
func (o LookupCatalogResultOutput) IsShared() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCatalogResult) bool { return v.IsShared }).(pulumi.BoolOutput)
}

// (*v3.8+*) List of media item names in this catalog, in alphabetical order.
func (o LookupCatalogResultOutput) MediaItemLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCatalogResult) []string { return v.MediaItemLists }).(pulumi.StringArrayOutput)
}

// (Deprecated; *v3.6+*) Use `metadataEntry` instead. Key value map of metadata.
//
// Deprecated: Use metadataEntry instead
func (o LookupCatalogResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCatalogResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// A set of metadata entries assigned to this Catalog. See Metadata section for details.
func (o LookupCatalogResultOutput) MetadataEntries() GetCatalogMetadataEntryArrayOutput {
	return o.ApplyT(func(v LookupCatalogResult) []GetCatalogMetadataEntry { return v.MetadataEntries }).(GetCatalogMetadataEntryArrayOutput)
}

func (o LookupCatalogResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCatalogResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (*v3.6+*) Number of media items available in this catalog.
func (o LookupCatalogResultOutput) NumberOfMedia() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCatalogResult) int { return v.NumberOfMedia }).(pulumi.IntOutput)
}

// (*v3.6+*) Number of vApp templates available in this catalog.
func (o LookupCatalogResultOutput) NumberOfVappTemplates() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCatalogResult) int { return v.NumberOfVappTemplates }).(pulumi.IntOutput)
}

func (o LookupCatalogResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCatalogResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

// (*v3.6+*) Owner of the catalog.
func (o LookupCatalogResultOutput) OwnerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.OwnerName }).(pulumi.StringOutput)
}

// (*v3.6+*) Enable include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the portability of the package and you should use it only when necessary. Default is `false`.
func (o LookupCatalogResultOutput) PreserveIdentityInformation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCatalogResult) bool { return v.PreserveIdentityInformation }).(pulumi.BoolOutput)
}

// (*v3.6+*) Enable allows to publish a catalog externally to make its vApp templates and media files available for subscription by organizations outside the Cloud Director installation. Default is `false`.
func (o LookupCatalogResultOutput) PublishEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCatalogResult) bool { return v.PublishEnabled }).(pulumi.BoolOutput)
}

// (*v3.6+*) Shows if the catalog is `PUBLISHED`, if it is a subscription from another one (`SUBSCRIBED`), or none of those (`UNPUBLISHED`).
func (o LookupCatalogResultOutput) PublishSubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.PublishSubscriptionType }).(pulumi.StringOutput)
}

// (*v3.8+*) URL to which other catalogs can subscribe.
func (o LookupCatalogResultOutput) PublishSubscriptionUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.PublishSubscriptionUrl }).(pulumi.StringOutput)
}

func (o LookupCatalogResultOutput) StorageProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.StorageProfileId }).(pulumi.StringOutput)
}

// (*v3.8+*) List of vApp template names in this catalog, in alphabetical order.
func (o LookupCatalogResultOutput) VappTemplateLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCatalogResult) []string { return v.VappTemplateLists }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCatalogResultOutput{})
}
