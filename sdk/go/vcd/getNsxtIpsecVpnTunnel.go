// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Supported in provider *v3.3+* and VCD 10.1+ with NSX-T backed VDCs.
//
// Provides a data source to read NSX-T IPsec VPN Tunnel. You can configure site-to-site connectivity between an NSX-T Data
// Center Edge Gateway and remote sites. The remote sites must use NSX-T Data Center, have third-party hardware routers,
// or VPN gateways that support IPSec.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupNsxtIpsecVpnTunnel(ctx, &vcd.LookupNsxtIpsecVpnTunnelArgs{
//				Org:           pulumi.StringRef("my-org"),
//				EdgeGatewayId: existing.Id,
//				Name:          "tunnel-1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNsxtIpsecVpnTunnel(ctx *pulumi.Context, args *LookupNsxtIpsecVpnTunnelArgs, opts ...pulumi.InvokeOption) (*LookupNsxtIpsecVpnTunnelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNsxtIpsecVpnTunnelResult
	err := ctx.Invoke("vcd:index/getNsxtIpsecVpnTunnel:getNsxtIpsecVpnTunnel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxtIpsecVpnTunnel.
type LookupNsxtIpsecVpnTunnelArgs struct {
	// The ID of the Edge Gateway (NSX-T only). Can be looked up using `NsxtEdgegateway`
	// data source
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	// Name of existing IPsec VPN Tunnel
	Name string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations.
	Org *string `pulumi:"org"`
	// Deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field
	Vdc *string `pulumi:"vdc"`
}

// A collection of values returned by getNsxtIpsecVpnTunnel.
type LookupNsxtIpsecVpnTunnelResult struct {
	AuthenticationMode string `pulumi:"authenticationMode"`
	CaCertificateId    string `pulumi:"caCertificateId"`
	CertificateId      string `pulumi:"certificateId"`
	Description        string `pulumi:"description"`
	EdgeGatewayId      string `pulumi:"edgeGatewayId"`
	Enabled            bool   `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id                            string                                              `pulumi:"id"`
	IkeFailReason                 string                                              `pulumi:"ikeFailReason"`
	IkeServiceStatus              string                                              `pulumi:"ikeServiceStatus"`
	LocalIpAddress                string                                              `pulumi:"localIpAddress"`
	LocalNetworks                 []string                                            `pulumi:"localNetworks"`
	Logging                       bool                                                `pulumi:"logging"`
	Name                          string                                              `pulumi:"name"`
	Org                           *string                                             `pulumi:"org"`
	PreSharedKey                  string                                              `pulumi:"preSharedKey"`
	RemoteId                      string                                              `pulumi:"remoteId"`
	RemoteIpAddress               string                                              `pulumi:"remoteIpAddress"`
	RemoteNetworks                []string                                            `pulumi:"remoteNetworks"`
	SecurityProfile               string                                              `pulumi:"securityProfile"`
	SecurityProfileCustomizations []GetNsxtIpsecVpnTunnelSecurityProfileCustomization `pulumi:"securityProfileCustomizations"`
	Status                        string                                              `pulumi:"status"`
	// Deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field
	Vdc *string `pulumi:"vdc"`
}

func LookupNsxtIpsecVpnTunnelOutput(ctx *pulumi.Context, args LookupNsxtIpsecVpnTunnelOutputArgs, opts ...pulumi.InvokeOption) LookupNsxtIpsecVpnTunnelResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNsxtIpsecVpnTunnelResultOutput, error) {
			args := v.(LookupNsxtIpsecVpnTunnelArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxtIpsecVpnTunnel:getNsxtIpsecVpnTunnel", args, LookupNsxtIpsecVpnTunnelResultOutput{}, options).(LookupNsxtIpsecVpnTunnelResultOutput), nil
		}).(LookupNsxtIpsecVpnTunnelResultOutput)
}

// A collection of arguments for invoking getNsxtIpsecVpnTunnel.
type LookupNsxtIpsecVpnTunnelOutputArgs struct {
	// The ID of the Edge Gateway (NSX-T only). Can be looked up using `NsxtEdgegateway`
	// data source
	EdgeGatewayId pulumi.StringInput `pulumi:"edgeGatewayId"`
	// Name of existing IPsec VPN Tunnel
	Name pulumi.StringInput `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations.
	Org pulumi.StringPtrInput `pulumi:"org"`
	// Deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field
	Vdc pulumi.StringPtrInput `pulumi:"vdc"`
}

func (LookupNsxtIpsecVpnTunnelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtIpsecVpnTunnelArgs)(nil)).Elem()
}

// A collection of values returned by getNsxtIpsecVpnTunnel.
type LookupNsxtIpsecVpnTunnelResultOutput struct{ *pulumi.OutputState }

func (LookupNsxtIpsecVpnTunnelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtIpsecVpnTunnelResult)(nil)).Elem()
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) ToLookupNsxtIpsecVpnTunnelResultOutput() LookupNsxtIpsecVpnTunnelResultOutput {
	return o
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) ToLookupNsxtIpsecVpnTunnelResultOutputWithContext(ctx context.Context) LookupNsxtIpsecVpnTunnelResultOutput {
	return o
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) AuthenticationMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.AuthenticationMode }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) CaCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.CaCertificateId }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.CertificateId }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) EdgeGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.EdgeGatewayId }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNsxtIpsecVpnTunnelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) IkeFailReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.IkeFailReason }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) IkeServiceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.IkeServiceStatus }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) LocalIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.LocalIpAddress }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) LocalNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) []string { return v.LocalNetworks }).(pulumi.StringArrayOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) Logging() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) bool { return v.Logging }).(pulumi.BoolOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) PreSharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.PreSharedKey }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.RemoteId }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) RemoteIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.RemoteIpAddress }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) RemoteNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) []string { return v.RemoteNetworks }).(pulumi.StringArrayOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) SecurityProfile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.SecurityProfile }).(pulumi.StringOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) SecurityProfileCustomizations() GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) []GetNsxtIpsecVpnTunnelSecurityProfileCustomization {
		return v.SecurityProfileCustomizations
	}).(GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput)
}

func (o LookupNsxtIpsecVpnTunnelResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) string { return v.Status }).(pulumi.StringOutput)
}

// Deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field
func (o LookupNsxtIpsecVpnTunnelResultOutput) Vdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxtIpsecVpnTunnelResult) *string { return v.Vdc }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNsxtIpsecVpnTunnelResultOutput{})
}
