// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director External Network data source (version 2). New version of this data source uses new VCD
// API and is capable of handling NSX-T backed external networks as well as port group backed ones.
//
// > **Note:** This resource uses new VMware Cloud Director
// [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
// requires at least VCD *10.0+*. It supports both NSX-T and NSX-V backed networks (NSX-T *3.0+* requires VCD *10.1.1+*)
//
// Supported in provider *v3.0+*.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupExternalNetworkV2(ctx, &vcd.LookupExternalNetworkV2Args{
//				Name: "my-nsxt-net",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupExternalNetworkV2(ctx *pulumi.Context, args *LookupExternalNetworkV2Args, opts ...pulumi.InvokeOption) (*LookupExternalNetworkV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupExternalNetworkV2Result
	err := ctx.Invoke("vcd:index/getExternalNetworkV2:getExternalNetworkV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExternalNetworkV2.
type LookupExternalNetworkV2Args struct {
	// external network name
	Name string `pulumi:"name"`
}

// A collection of values returned by getExternalNetworkV2.
type LookupExternalNetworkV2Result struct {
	DedicatedOrgId string `pulumi:"dedicatedOrgId"`
	Description    string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id                             string                               `pulumi:"id"`
	IpScopes                       []GetExternalNetworkV2IpScope        `pulumi:"ipScopes"`
	Name                           string                               `pulumi:"name"`
	NatAndFirewallServiceIntention string                               `pulumi:"natAndFirewallServiceIntention"`
	NsxtNetworks                   []GetExternalNetworkV2NsxtNetwork    `pulumi:"nsxtNetworks"`
	RouteAdvertisementIntention    string                               `pulumi:"routeAdvertisementIntention"`
	UseIpSpaces                    bool                                 `pulumi:"useIpSpaces"`
	VsphereNetworks                []GetExternalNetworkV2VsphereNetwork `pulumi:"vsphereNetworks"`
}

func LookupExternalNetworkV2Output(ctx *pulumi.Context, args LookupExternalNetworkV2OutputArgs, opts ...pulumi.InvokeOption) LookupExternalNetworkV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupExternalNetworkV2ResultOutput, error) {
			args := v.(LookupExternalNetworkV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getExternalNetworkV2:getExternalNetworkV2", args, LookupExternalNetworkV2ResultOutput{}, options).(LookupExternalNetworkV2ResultOutput), nil
		}).(LookupExternalNetworkV2ResultOutput)
}

// A collection of arguments for invoking getExternalNetworkV2.
type LookupExternalNetworkV2OutputArgs struct {
	// external network name
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupExternalNetworkV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExternalNetworkV2Args)(nil)).Elem()
}

// A collection of values returned by getExternalNetworkV2.
type LookupExternalNetworkV2ResultOutput struct{ *pulumi.OutputState }

func (LookupExternalNetworkV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExternalNetworkV2Result)(nil)).Elem()
}

func (o LookupExternalNetworkV2ResultOutput) ToLookupExternalNetworkV2ResultOutput() LookupExternalNetworkV2ResultOutput {
	return o
}

func (o LookupExternalNetworkV2ResultOutput) ToLookupExternalNetworkV2ResultOutputWithContext(ctx context.Context) LookupExternalNetworkV2ResultOutput {
	return o
}

func (o LookupExternalNetworkV2ResultOutput) DedicatedOrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalNetworkV2Result) string { return v.DedicatedOrgId }).(pulumi.StringOutput)
}

func (o LookupExternalNetworkV2ResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalNetworkV2Result) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupExternalNetworkV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalNetworkV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupExternalNetworkV2ResultOutput) IpScopes() GetExternalNetworkV2IpScopeArrayOutput {
	return o.ApplyT(func(v LookupExternalNetworkV2Result) []GetExternalNetworkV2IpScope { return v.IpScopes }).(GetExternalNetworkV2IpScopeArrayOutput)
}

func (o LookupExternalNetworkV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalNetworkV2Result) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupExternalNetworkV2ResultOutput) NatAndFirewallServiceIntention() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalNetworkV2Result) string { return v.NatAndFirewallServiceIntention }).(pulumi.StringOutput)
}

func (o LookupExternalNetworkV2ResultOutput) NsxtNetworks() GetExternalNetworkV2NsxtNetworkArrayOutput {
	return o.ApplyT(func(v LookupExternalNetworkV2Result) []GetExternalNetworkV2NsxtNetwork { return v.NsxtNetworks }).(GetExternalNetworkV2NsxtNetworkArrayOutput)
}

func (o LookupExternalNetworkV2ResultOutput) RouteAdvertisementIntention() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalNetworkV2Result) string { return v.RouteAdvertisementIntention }).(pulumi.StringOutput)
}

func (o LookupExternalNetworkV2ResultOutput) UseIpSpaces() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupExternalNetworkV2Result) bool { return v.UseIpSpaces }).(pulumi.BoolOutput)
}

func (o LookupExternalNetworkV2ResultOutput) VsphereNetworks() GetExternalNetworkV2VsphereNetworkArrayOutput {
	return o.ApplyT(func(v LookupExternalNetworkV2Result) []GetExternalNetworkV2VsphereNetwork { return v.VsphereNetworks }).(GetExternalNetworkV2VsphereNetworkArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExternalNetworkV2ResultOutput{})
}
