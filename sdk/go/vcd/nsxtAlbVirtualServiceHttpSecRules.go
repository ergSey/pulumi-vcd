// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NsxtAlbVirtualServiceHttpSecRules struct {
	pulumi.CustomResourceState

	// One or more rule blocks with matching criteria and actions.
	//
	// <a id="rule-block"></a>
	Rules NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput `pulumi:"rules"`
	// An ID of existing ALB Virtual Service.
	VirtualServiceId pulumi.StringOutput `pulumi:"virtualServiceId"`
}

// NewNsxtAlbVirtualServiceHttpSecRules registers a new resource with the given unique name, arguments, and options.
func NewNsxtAlbVirtualServiceHttpSecRules(ctx *pulumi.Context,
	name string, args *NsxtAlbVirtualServiceHttpSecRulesArgs, opts ...pulumi.ResourceOption) (*NsxtAlbVirtualServiceHttpSecRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.VirtualServiceId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NsxtAlbVirtualServiceHttpSecRules
	err := ctx.RegisterResource("vcd:index/nsxtAlbVirtualServiceHttpSecRules:NsxtAlbVirtualServiceHttpSecRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNsxtAlbVirtualServiceHttpSecRules gets an existing NsxtAlbVirtualServiceHttpSecRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNsxtAlbVirtualServiceHttpSecRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NsxtAlbVirtualServiceHttpSecRulesState, opts ...pulumi.ResourceOption) (*NsxtAlbVirtualServiceHttpSecRules, error) {
	var resource NsxtAlbVirtualServiceHttpSecRules
	err := ctx.ReadResource("vcd:index/nsxtAlbVirtualServiceHttpSecRules:NsxtAlbVirtualServiceHttpSecRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NsxtAlbVirtualServiceHttpSecRules resources.
type nsxtAlbVirtualServiceHttpSecRulesState struct {
	// One or more rule blocks with matching criteria and actions.
	//
	// <a id="rule-block"></a>
	Rules []NsxtAlbVirtualServiceHttpSecRulesRule `pulumi:"rules"`
	// An ID of existing ALB Virtual Service.
	VirtualServiceId *string `pulumi:"virtualServiceId"`
}

type NsxtAlbVirtualServiceHttpSecRulesState struct {
	// One or more rule blocks with matching criteria and actions.
	//
	// <a id="rule-block"></a>
	Rules NsxtAlbVirtualServiceHttpSecRulesRuleArrayInput
	// An ID of existing ALB Virtual Service.
	VirtualServiceId pulumi.StringPtrInput
}

func (NsxtAlbVirtualServiceHttpSecRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtAlbVirtualServiceHttpSecRulesState)(nil)).Elem()
}

type nsxtAlbVirtualServiceHttpSecRulesArgs struct {
	// One or more rule blocks with matching criteria and actions.
	//
	// <a id="rule-block"></a>
	Rules []NsxtAlbVirtualServiceHttpSecRulesRule `pulumi:"rules"`
	// An ID of existing ALB Virtual Service.
	VirtualServiceId string `pulumi:"virtualServiceId"`
}

// The set of arguments for constructing a NsxtAlbVirtualServiceHttpSecRules resource.
type NsxtAlbVirtualServiceHttpSecRulesArgs struct {
	// One or more rule blocks with matching criteria and actions.
	//
	// <a id="rule-block"></a>
	Rules NsxtAlbVirtualServiceHttpSecRulesRuleArrayInput
	// An ID of existing ALB Virtual Service.
	VirtualServiceId pulumi.StringInput
}

func (NsxtAlbVirtualServiceHttpSecRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtAlbVirtualServiceHttpSecRulesArgs)(nil)).Elem()
}

type NsxtAlbVirtualServiceHttpSecRulesInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesOutput() NsxtAlbVirtualServiceHttpSecRulesOutput
	ToNsxtAlbVirtualServiceHttpSecRulesOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesOutput
}

func (*NsxtAlbVirtualServiceHttpSecRules) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRules)(nil)).Elem()
}

func (i *NsxtAlbVirtualServiceHttpSecRules) ToNsxtAlbVirtualServiceHttpSecRulesOutput() NsxtAlbVirtualServiceHttpSecRulesOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesOutputWithContext(context.Background())
}

func (i *NsxtAlbVirtualServiceHttpSecRules) ToNsxtAlbVirtualServiceHttpSecRulesOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesOutput)
}

// NsxtAlbVirtualServiceHttpSecRulesArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesArray and NsxtAlbVirtualServiceHttpSecRulesArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesArray{ NsxtAlbVirtualServiceHttpSecRulesArgs{...} }
type NsxtAlbVirtualServiceHttpSecRulesArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesArrayOutput() NsxtAlbVirtualServiceHttpSecRulesArrayOutput
	ToNsxtAlbVirtualServiceHttpSecRulesArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesArrayOutput
}

type NsxtAlbVirtualServiceHttpSecRulesArray []NsxtAlbVirtualServiceHttpSecRulesInput

func (NsxtAlbVirtualServiceHttpSecRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtAlbVirtualServiceHttpSecRules)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesArray) ToNsxtAlbVirtualServiceHttpSecRulesArrayOutput() NsxtAlbVirtualServiceHttpSecRulesArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesArray) ToNsxtAlbVirtualServiceHttpSecRulesArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesArrayOutput)
}

// NsxtAlbVirtualServiceHttpSecRulesMapInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesMap and NsxtAlbVirtualServiceHttpSecRulesMapOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesMapInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesMap{ "key": NsxtAlbVirtualServiceHttpSecRulesArgs{...} }
type NsxtAlbVirtualServiceHttpSecRulesMapInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesMapOutput() NsxtAlbVirtualServiceHttpSecRulesMapOutput
	ToNsxtAlbVirtualServiceHttpSecRulesMapOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesMapOutput
}

type NsxtAlbVirtualServiceHttpSecRulesMap map[string]NsxtAlbVirtualServiceHttpSecRulesInput

func (NsxtAlbVirtualServiceHttpSecRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtAlbVirtualServiceHttpSecRules)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesMap) ToNsxtAlbVirtualServiceHttpSecRulesMapOutput() NsxtAlbVirtualServiceHttpSecRulesMapOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesMapOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesMap) ToNsxtAlbVirtualServiceHttpSecRulesMapOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesMapOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRules)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesOutput) ToNsxtAlbVirtualServiceHttpSecRulesOutput() NsxtAlbVirtualServiceHttpSecRulesOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesOutput) ToNsxtAlbVirtualServiceHttpSecRulesOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesOutput {
	return o
}

// One or more rule blocks with matching criteria and actions.
//
// <a id="rule-block"></a>
func (o NsxtAlbVirtualServiceHttpSecRulesOutput) Rules() NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRules) NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
		return v.Rules
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput)
}

// An ID of existing ALB Virtual Service.
func (o NsxtAlbVirtualServiceHttpSecRulesOutput) VirtualServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRules) pulumi.StringOutput { return v.VirtualServiceId }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtAlbVirtualServiceHttpSecRules)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesArrayOutput) ToNsxtAlbVirtualServiceHttpSecRulesArrayOutput() NsxtAlbVirtualServiceHttpSecRulesArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesArrayOutput) ToNsxtAlbVirtualServiceHttpSecRulesArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpSecRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NsxtAlbVirtualServiceHttpSecRules {
		return vs[0].([]*NsxtAlbVirtualServiceHttpSecRules)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpSecRulesOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesMapOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtAlbVirtualServiceHttpSecRules)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesMapOutput) ToNsxtAlbVirtualServiceHttpSecRulesMapOutput() NsxtAlbVirtualServiceHttpSecRulesMapOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesMapOutput) ToNsxtAlbVirtualServiceHttpSecRulesMapOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesMapOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesMapOutput) MapIndex(k pulumi.StringInput) NsxtAlbVirtualServiceHttpSecRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NsxtAlbVirtualServiceHttpSecRules {
		return vs[0].(map[string]*NsxtAlbVirtualServiceHttpSecRules)[vs[1].(string)]
	}).(NsxtAlbVirtualServiceHttpSecRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesInput)(nil)).Elem(), &NsxtAlbVirtualServiceHttpSecRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesMapInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesMap{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesMapOutput{})
}
