// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director Organization VDC data source. An Organization VDC can be used to
// reference a VDC and use its data within other resources or data sources.
//
// > **Note:** This resource supports NSX-T and NSX-V based Org VDCs
//
// Supported in provider *v2.5+*
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			my_org_vdc, err := vcd.LookupOrgVdc(ctx, &vcd.LookupOrgVdcArgs{
//				Org:  pulumi.StringRef("my-org"),
//				Name: "my-vdc",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("providerVdc", my_org_vdc.ProviderVdcName)
//			return nil
//		})
//	}
//
// ```
func LookupOrgVdc(ctx *pulumi.Context, args *LookupOrgVdcArgs, opts ...pulumi.InvokeOption) (*LookupOrgVdcResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrgVdcResult
	err := ctx.Invoke("vcd:index/getOrgVdc:getOrgVdc", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrgVdc.
type LookupOrgVdcArgs struct {
	// Organization VDC name
	Name string `pulumi:"name"`
	// Org name
	Org *string `pulumi:"org"`
}

// A collection of values returned by getOrgVdc.
type LookupOrgVdcResult struct {
	AllocationModel        string                     `pulumi:"allocationModel"`
	AllowOverCommit        bool                       `pulumi:"allowOverCommit"`
	ComputeCapacities      []GetOrgVdcComputeCapacity `pulumi:"computeCapacities"`
	CpuGuaranteed          float64                    `pulumi:"cpuGuaranteed"`
	CpuSpeed               int                        `pulumi:"cpuSpeed"`
	DefaultComputePolicyId string                     `pulumi:"defaultComputePolicyId"`
	// Deprecated: Use `defaultComputePolicyId` attribute instead, which can support VM Sizing Policies, VM Placement Policies and vGPU Policies
	DefaultVmSizingPolicyId string `pulumi:"defaultVmSizingPolicyId"`
	Description             string `pulumi:"description"`
	// (*v3.8+*, *VCD 10.3+*) An ID of NSX-T Edge Cluster which should provide vApp
	// Networking Services or DHCP for Isolated Networks. This value **might be unavailable** in data
	// source if user has insufficient rights.
	EdgeClusterId                 string `pulumi:"edgeClusterId"`
	Elasticity                    bool   `pulumi:"elasticity"`
	EnableFastProvisioning        bool   `pulumi:"enableFastProvisioning"`
	EnableNsxvDistributedFirewall bool   `pulumi:"enableNsxvDistributedFirewall"`
	EnableThinProvisioning        bool   `pulumi:"enableThinProvisioning"`
	EnableVmDiscovery             bool   `pulumi:"enableVmDiscovery"`
	Enabled                       bool   `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id                      string  `pulumi:"id"`
	IncludeVmMemoryOverhead bool    `pulumi:"includeVmMemoryOverhead"`
	MemoryGuaranteed        float64 `pulumi:"memoryGuaranteed"`
	// Deprecated: Use metadataEntry instead
	Metadata             map[string]string         `pulumi:"metadata"`
	MetadataEntries      []GetOrgVdcMetadataEntry  `pulumi:"metadataEntries"`
	Name                 string                    `pulumi:"name"`
	NetworkPoolName      string                    `pulumi:"networkPoolName"`
	NetworkQuota         int                       `pulumi:"networkQuota"`
	NicQuota             int                       `pulumi:"nicQuota"`
	Org                  *string                   `pulumi:"org"`
	ProviderVdcName      string                    `pulumi:"providerVdcName"`
	StorageProfiles      []GetOrgVdcStorageProfile `pulumi:"storageProfiles"`
	VmPlacementPolicyIds []string                  `pulumi:"vmPlacementPolicyIds"`
	VmQuota              int                       `pulumi:"vmQuota"`
	VmSizingPolicyIds    []string                  `pulumi:"vmSizingPolicyIds"`
	VmVgpuPolicyIds      []string                  `pulumi:"vmVgpuPolicyIds"`
}

func LookupOrgVdcOutput(ctx *pulumi.Context, args LookupOrgVdcOutputArgs, opts ...pulumi.InvokeOption) LookupOrgVdcResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOrgVdcResultOutput, error) {
			args := v.(LookupOrgVdcArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getOrgVdc:getOrgVdc", args, LookupOrgVdcResultOutput{}, options).(LookupOrgVdcResultOutput), nil
		}).(LookupOrgVdcResultOutput)
}

// A collection of arguments for invoking getOrgVdc.
type LookupOrgVdcOutputArgs struct {
	// Organization VDC name
	Name pulumi.StringInput `pulumi:"name"`
	// Org name
	Org pulumi.StringPtrInput `pulumi:"org"`
}

func (LookupOrgVdcOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrgVdcArgs)(nil)).Elem()
}

// A collection of values returned by getOrgVdc.
type LookupOrgVdcResultOutput struct{ *pulumi.OutputState }

func (LookupOrgVdcResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrgVdcResult)(nil)).Elem()
}

func (o LookupOrgVdcResultOutput) ToLookupOrgVdcResultOutput() LookupOrgVdcResultOutput {
	return o
}

func (o LookupOrgVdcResultOutput) ToLookupOrgVdcResultOutputWithContext(ctx context.Context) LookupOrgVdcResultOutput {
	return o
}

func (o LookupOrgVdcResultOutput) AllocationModel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) string { return v.AllocationModel }).(pulumi.StringOutput)
}

func (o LookupOrgVdcResultOutput) AllowOverCommit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) bool { return v.AllowOverCommit }).(pulumi.BoolOutput)
}

func (o LookupOrgVdcResultOutput) ComputeCapacities() GetOrgVdcComputeCapacityArrayOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) []GetOrgVdcComputeCapacity { return v.ComputeCapacities }).(GetOrgVdcComputeCapacityArrayOutput)
}

func (o LookupOrgVdcResultOutput) CpuGuaranteed() pulumi.Float64Output {
	return o.ApplyT(func(v LookupOrgVdcResult) float64 { return v.CpuGuaranteed }).(pulumi.Float64Output)
}

func (o LookupOrgVdcResultOutput) CpuSpeed() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) int { return v.CpuSpeed }).(pulumi.IntOutput)
}

func (o LookupOrgVdcResultOutput) DefaultComputePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) string { return v.DefaultComputePolicyId }).(pulumi.StringOutput)
}

// Deprecated: Use `defaultComputePolicyId` attribute instead, which can support VM Sizing Policies, VM Placement Policies and vGPU Policies
func (o LookupOrgVdcResultOutput) DefaultVmSizingPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) string { return v.DefaultVmSizingPolicyId }).(pulumi.StringOutput)
}

func (o LookupOrgVdcResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) string { return v.Description }).(pulumi.StringOutput)
}

// (*v3.8+*, *VCD 10.3+*) An ID of NSX-T Edge Cluster which should provide vApp
// Networking Services or DHCP for Isolated Networks. This value **might be unavailable** in data
// source if user has insufficient rights.
func (o LookupOrgVdcResultOutput) EdgeClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) string { return v.EdgeClusterId }).(pulumi.StringOutput)
}

func (o LookupOrgVdcResultOutput) Elasticity() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) bool { return v.Elasticity }).(pulumi.BoolOutput)
}

func (o LookupOrgVdcResultOutput) EnableFastProvisioning() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) bool { return v.EnableFastProvisioning }).(pulumi.BoolOutput)
}

func (o LookupOrgVdcResultOutput) EnableNsxvDistributedFirewall() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) bool { return v.EnableNsxvDistributedFirewall }).(pulumi.BoolOutput)
}

func (o LookupOrgVdcResultOutput) EnableThinProvisioning() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) bool { return v.EnableThinProvisioning }).(pulumi.BoolOutput)
}

func (o LookupOrgVdcResultOutput) EnableVmDiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) bool { return v.EnableVmDiscovery }).(pulumi.BoolOutput)
}

func (o LookupOrgVdcResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOrgVdcResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupOrgVdcResultOutput) IncludeVmMemoryOverhead() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) bool { return v.IncludeVmMemoryOverhead }).(pulumi.BoolOutput)
}

func (o LookupOrgVdcResultOutput) MemoryGuaranteed() pulumi.Float64Output {
	return o.ApplyT(func(v LookupOrgVdcResult) float64 { return v.MemoryGuaranteed }).(pulumi.Float64Output)
}

// Deprecated: Use metadataEntry instead
func (o LookupOrgVdcResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o LookupOrgVdcResultOutput) MetadataEntries() GetOrgVdcMetadataEntryArrayOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) []GetOrgVdcMetadataEntry { return v.MetadataEntries }).(GetOrgVdcMetadataEntryArrayOutput)
}

func (o LookupOrgVdcResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupOrgVdcResultOutput) NetworkPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) string { return v.NetworkPoolName }).(pulumi.StringOutput)
}

func (o LookupOrgVdcResultOutput) NetworkQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) int { return v.NetworkQuota }).(pulumi.IntOutput)
}

func (o LookupOrgVdcResultOutput) NicQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) int { return v.NicQuota }).(pulumi.IntOutput)
}

func (o LookupOrgVdcResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupOrgVdcResultOutput) ProviderVdcName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) string { return v.ProviderVdcName }).(pulumi.StringOutput)
}

func (o LookupOrgVdcResultOutput) StorageProfiles() GetOrgVdcStorageProfileArrayOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) []GetOrgVdcStorageProfile { return v.StorageProfiles }).(GetOrgVdcStorageProfileArrayOutput)
}

func (o LookupOrgVdcResultOutput) VmPlacementPolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) []string { return v.VmPlacementPolicyIds }).(pulumi.StringArrayOutput)
}

func (o LookupOrgVdcResultOutput) VmQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) int { return v.VmQuota }).(pulumi.IntOutput)
}

func (o LookupOrgVdcResultOutput) VmSizingPolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) []string { return v.VmSizingPolicyIds }).(pulumi.StringArrayOutput)
}

func (o LookupOrgVdcResultOutput) VmVgpuPolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupOrgVdcResult) []string { return v.VmVgpuPolicyIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrgVdcResultOutput{})
}
