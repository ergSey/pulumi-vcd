// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Distributed Firewall data source reads all defined rules for a particular VDC Group.
//
// > There is a different data source
// [`NsxtDistributedFirewallRule`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_distributed_firewall_rule)
// resource are available that can fetch a single firewall rule by name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			g1, err := vcd.LookupVdcGroup(ctx, &vcd.LookupVdcGroupArgs{
//				Org:  pulumi.StringRef("my-org"),
//				Name: pulumi.StringRef("my-vdc-group"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = vcd.LookupNsxtDistributedFirewall(ctx, &vcd.LookupNsxtDistributedFirewallArgs{
//				Org:        pulumi.StringRef("my-org"),
//				VdcGroupId: g1.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNsxtDistributedFirewall(ctx *pulumi.Context, args *LookupNsxtDistributedFirewallArgs, opts ...pulumi.InvokeOption) (*LookupNsxtDistributedFirewallResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNsxtDistributedFirewallResult
	err := ctx.Invoke("vcd:index/getNsxtDistributedFirewall:getNsxtDistributedFirewall", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxtDistributedFirewall.
type LookupNsxtDistributedFirewallArgs struct {
	// The name of organization in which Distributed Firewall is located. Optional if
	// defined at provider level.
	Org *string `pulumi:"org"`
	// The ID of a VDC Group
	VdcGroupId string `pulumi:"vdcGroupId"`
}

// A collection of values returned by getNsxtDistributedFirewall.
type LookupNsxtDistributedFirewallResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                               `pulumi:"id"`
	Org        *string                              `pulumi:"org"`
	Rules      []GetNsxtDistributedFirewallRuleType `pulumi:"rules"`
	VdcGroupId string                               `pulumi:"vdcGroupId"`
}

func LookupNsxtDistributedFirewallOutput(ctx *pulumi.Context, args LookupNsxtDistributedFirewallOutputArgs, opts ...pulumi.InvokeOption) LookupNsxtDistributedFirewallResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNsxtDistributedFirewallResultOutput, error) {
			args := v.(LookupNsxtDistributedFirewallArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxtDistributedFirewall:getNsxtDistributedFirewall", args, LookupNsxtDistributedFirewallResultOutput{}, options).(LookupNsxtDistributedFirewallResultOutput), nil
		}).(LookupNsxtDistributedFirewallResultOutput)
}

// A collection of arguments for invoking getNsxtDistributedFirewall.
type LookupNsxtDistributedFirewallOutputArgs struct {
	// The name of organization in which Distributed Firewall is located. Optional if
	// defined at provider level.
	Org pulumi.StringPtrInput `pulumi:"org"`
	// The ID of a VDC Group
	VdcGroupId pulumi.StringInput `pulumi:"vdcGroupId"`
}

func (LookupNsxtDistributedFirewallOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtDistributedFirewallArgs)(nil)).Elem()
}

// A collection of values returned by getNsxtDistributedFirewall.
type LookupNsxtDistributedFirewallResultOutput struct{ *pulumi.OutputState }

func (LookupNsxtDistributedFirewallResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtDistributedFirewallResult)(nil)).Elem()
}

func (o LookupNsxtDistributedFirewallResultOutput) ToLookupNsxtDistributedFirewallResultOutput() LookupNsxtDistributedFirewallResultOutput {
	return o
}

func (o LookupNsxtDistributedFirewallResultOutput) ToLookupNsxtDistributedFirewallResultOutputWithContext(ctx context.Context) LookupNsxtDistributedFirewallResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNsxtDistributedFirewallResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtDistributedFirewallResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNsxtDistributedFirewallResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxtDistributedFirewallResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupNsxtDistributedFirewallResultOutput) Rules() GetNsxtDistributedFirewallRuleTypeArrayOutput {
	return o.ApplyT(func(v LookupNsxtDistributedFirewallResult) []GetNsxtDistributedFirewallRuleType { return v.Rules }).(GetNsxtDistributedFirewallRuleTypeArrayOutput)
}

func (o LookupNsxtDistributedFirewallResultOutput) VdcGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtDistributedFirewallResult) string { return v.VdcGroupId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNsxtDistributedFirewallResultOutput{})
}
