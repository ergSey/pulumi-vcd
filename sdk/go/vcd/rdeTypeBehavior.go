// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RdeTypeBehavior struct {
	pulumi.CustomResourceState

	// Useful to update execution properties marked with `_secure_` and `_internal_`
	// as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
	// to ask for updates whenever there is a secure property in the execution of the Behavior
	AlwaysUpdateSecureExecutionProperties pulumi.BoolPtrOutput `pulumi:"alwaysUpdateSecureExecutionProperties"`
	// The description of the RDE Type Behavior.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A map that specifies the Behavior execution mechanism, this is just a simplification of `executionJson` that
	// can make the configuration more readable for simpler Behaviors. One of `executionJson` or `execution` must be set.
	Execution pulumi.StringMapOutput `pulumi:"execution"`
	// A string representing a valid JSON that specifies the Behavior execution mechanism.
	// You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
	// and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
	// One of `executionJson` or `execution` must be set.
	ExecutionJson pulumi.StringOutput `pulumi:"executionJson"`
	// Name of the overridden Behavior
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior) to override
	RdeInterfaceBehaviorId pulumi.StringOutput `pulumi:"rdeInterfaceBehaviorId"`
	// The ID of the RDE Type that owns the Behavior
	RdeTypeId pulumi.StringOutput `pulumi:"rdeTypeId"`
	// The Behavior invocation reference to be used for polymorphic behavior invocations
	Ref pulumi.StringOutput `pulumi:"ref"`
}

// NewRdeTypeBehavior registers a new resource with the given unique name, arguments, and options.
func NewRdeTypeBehavior(ctx *pulumi.Context,
	name string, args *RdeTypeBehaviorArgs, opts ...pulumi.ResourceOption) (*RdeTypeBehavior, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RdeInterfaceBehaviorId == nil {
		return nil, errors.New("invalid value for required argument 'RdeInterfaceBehaviorId'")
	}
	if args.RdeTypeId == nil {
		return nil, errors.New("invalid value for required argument 'RdeTypeId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RdeTypeBehavior
	err := ctx.RegisterResource("vcd:index/rdeTypeBehavior:RdeTypeBehavior", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRdeTypeBehavior gets an existing RdeTypeBehavior resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRdeTypeBehavior(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RdeTypeBehaviorState, opts ...pulumi.ResourceOption) (*RdeTypeBehavior, error) {
	var resource RdeTypeBehavior
	err := ctx.ReadResource("vcd:index/rdeTypeBehavior:RdeTypeBehavior", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RdeTypeBehavior resources.
type rdeTypeBehaviorState struct {
	// Useful to update execution properties marked with `_secure_` and `_internal_`
	// as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
	// to ask for updates whenever there is a secure property in the execution of the Behavior
	AlwaysUpdateSecureExecutionProperties *bool `pulumi:"alwaysUpdateSecureExecutionProperties"`
	// The description of the RDE Type Behavior.
	Description *string `pulumi:"description"`
	// A map that specifies the Behavior execution mechanism, this is just a simplification of `executionJson` that
	// can make the configuration more readable for simpler Behaviors. One of `executionJson` or `execution` must be set.
	Execution map[string]string `pulumi:"execution"`
	// A string representing a valid JSON that specifies the Behavior execution mechanism.
	// You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
	// and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
	// One of `executionJson` or `execution` must be set.
	ExecutionJson *string `pulumi:"executionJson"`
	// Name of the overridden Behavior
	Name *string `pulumi:"name"`
	// The ID of the [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior) to override
	RdeInterfaceBehaviorId *string `pulumi:"rdeInterfaceBehaviorId"`
	// The ID of the RDE Type that owns the Behavior
	RdeTypeId *string `pulumi:"rdeTypeId"`
	// The Behavior invocation reference to be used for polymorphic behavior invocations
	Ref *string `pulumi:"ref"`
}

type RdeTypeBehaviorState struct {
	// Useful to update execution properties marked with `_secure_` and `_internal_`
	// as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
	// to ask for updates whenever there is a secure property in the execution of the Behavior
	AlwaysUpdateSecureExecutionProperties pulumi.BoolPtrInput
	// The description of the RDE Type Behavior.
	Description pulumi.StringPtrInput
	// A map that specifies the Behavior execution mechanism, this is just a simplification of `executionJson` that
	// can make the configuration more readable for simpler Behaviors. One of `executionJson` or `execution` must be set.
	Execution pulumi.StringMapInput
	// A string representing a valid JSON that specifies the Behavior execution mechanism.
	// You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
	// and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
	// One of `executionJson` or `execution` must be set.
	ExecutionJson pulumi.StringPtrInput
	// Name of the overridden Behavior
	Name pulumi.StringPtrInput
	// The ID of the [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior) to override
	RdeInterfaceBehaviorId pulumi.StringPtrInput
	// The ID of the RDE Type that owns the Behavior
	RdeTypeId pulumi.StringPtrInput
	// The Behavior invocation reference to be used for polymorphic behavior invocations
	Ref pulumi.StringPtrInput
}

func (RdeTypeBehaviorState) ElementType() reflect.Type {
	return reflect.TypeOf((*rdeTypeBehaviorState)(nil)).Elem()
}

type rdeTypeBehaviorArgs struct {
	// Useful to update execution properties marked with `_secure_` and `_internal_`
	// as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
	// to ask for updates whenever there is a secure property in the execution of the Behavior
	AlwaysUpdateSecureExecutionProperties *bool `pulumi:"alwaysUpdateSecureExecutionProperties"`
	// The description of the RDE Type Behavior.
	Description *string `pulumi:"description"`
	// A map that specifies the Behavior execution mechanism, this is just a simplification of `executionJson` that
	// can make the configuration more readable for simpler Behaviors. One of `executionJson` or `execution` must be set.
	Execution map[string]string `pulumi:"execution"`
	// A string representing a valid JSON that specifies the Behavior execution mechanism.
	// You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
	// and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
	// One of `executionJson` or `execution` must be set.
	ExecutionJson *string `pulumi:"executionJson"`
	// The ID of the [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior) to override
	RdeInterfaceBehaviorId string `pulumi:"rdeInterfaceBehaviorId"`
	// The ID of the RDE Type that owns the Behavior
	RdeTypeId string `pulumi:"rdeTypeId"`
}

// The set of arguments for constructing a RdeTypeBehavior resource.
type RdeTypeBehaviorArgs struct {
	// Useful to update execution properties marked with `_secure_` and `_internal_`
	// as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
	// to ask for updates whenever there is a secure property in the execution of the Behavior
	AlwaysUpdateSecureExecutionProperties pulumi.BoolPtrInput
	// The description of the RDE Type Behavior.
	Description pulumi.StringPtrInput
	// A map that specifies the Behavior execution mechanism, this is just a simplification of `executionJson` that
	// can make the configuration more readable for simpler Behaviors. One of `executionJson` or `execution` must be set.
	Execution pulumi.StringMapInput
	// A string representing a valid JSON that specifies the Behavior execution mechanism.
	// You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
	// and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
	// One of `executionJson` or `execution` must be set.
	ExecutionJson pulumi.StringPtrInput
	// The ID of the [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior) to override
	RdeInterfaceBehaviorId pulumi.StringInput
	// The ID of the RDE Type that owns the Behavior
	RdeTypeId pulumi.StringInput
}

func (RdeTypeBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rdeTypeBehaviorArgs)(nil)).Elem()
}

type RdeTypeBehaviorInput interface {
	pulumi.Input

	ToRdeTypeBehaviorOutput() RdeTypeBehaviorOutput
	ToRdeTypeBehaviorOutputWithContext(ctx context.Context) RdeTypeBehaviorOutput
}

func (*RdeTypeBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((**RdeTypeBehavior)(nil)).Elem()
}

func (i *RdeTypeBehavior) ToRdeTypeBehaviorOutput() RdeTypeBehaviorOutput {
	return i.ToRdeTypeBehaviorOutputWithContext(context.Background())
}

func (i *RdeTypeBehavior) ToRdeTypeBehaviorOutputWithContext(ctx context.Context) RdeTypeBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdeTypeBehaviorOutput)
}

// RdeTypeBehaviorArrayInput is an input type that accepts RdeTypeBehaviorArray and RdeTypeBehaviorArrayOutput values.
// You can construct a concrete instance of `RdeTypeBehaviorArrayInput` via:
//
//	RdeTypeBehaviorArray{ RdeTypeBehaviorArgs{...} }
type RdeTypeBehaviorArrayInput interface {
	pulumi.Input

	ToRdeTypeBehaviorArrayOutput() RdeTypeBehaviorArrayOutput
	ToRdeTypeBehaviorArrayOutputWithContext(context.Context) RdeTypeBehaviorArrayOutput
}

type RdeTypeBehaviorArray []RdeTypeBehaviorInput

func (RdeTypeBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdeTypeBehavior)(nil)).Elem()
}

func (i RdeTypeBehaviorArray) ToRdeTypeBehaviorArrayOutput() RdeTypeBehaviorArrayOutput {
	return i.ToRdeTypeBehaviorArrayOutputWithContext(context.Background())
}

func (i RdeTypeBehaviorArray) ToRdeTypeBehaviorArrayOutputWithContext(ctx context.Context) RdeTypeBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdeTypeBehaviorArrayOutput)
}

// RdeTypeBehaviorMapInput is an input type that accepts RdeTypeBehaviorMap and RdeTypeBehaviorMapOutput values.
// You can construct a concrete instance of `RdeTypeBehaviorMapInput` via:
//
//	RdeTypeBehaviorMap{ "key": RdeTypeBehaviorArgs{...} }
type RdeTypeBehaviorMapInput interface {
	pulumi.Input

	ToRdeTypeBehaviorMapOutput() RdeTypeBehaviorMapOutput
	ToRdeTypeBehaviorMapOutputWithContext(context.Context) RdeTypeBehaviorMapOutput
}

type RdeTypeBehaviorMap map[string]RdeTypeBehaviorInput

func (RdeTypeBehaviorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdeTypeBehavior)(nil)).Elem()
}

func (i RdeTypeBehaviorMap) ToRdeTypeBehaviorMapOutput() RdeTypeBehaviorMapOutput {
	return i.ToRdeTypeBehaviorMapOutputWithContext(context.Background())
}

func (i RdeTypeBehaviorMap) ToRdeTypeBehaviorMapOutputWithContext(ctx context.Context) RdeTypeBehaviorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdeTypeBehaviorMapOutput)
}

type RdeTypeBehaviorOutput struct{ *pulumi.OutputState }

func (RdeTypeBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdeTypeBehavior)(nil)).Elem()
}

func (o RdeTypeBehaviorOutput) ToRdeTypeBehaviorOutput() RdeTypeBehaviorOutput {
	return o
}

func (o RdeTypeBehaviorOutput) ToRdeTypeBehaviorOutputWithContext(ctx context.Context) RdeTypeBehaviorOutput {
	return o
}

// Useful to update execution properties marked with `_secure_` and `_internal_`
// as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
// to ask for updates whenever there is a secure property in the execution of the Behavior
func (o RdeTypeBehaviorOutput) AlwaysUpdateSecureExecutionProperties() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RdeTypeBehavior) pulumi.BoolPtrOutput { return v.AlwaysUpdateSecureExecutionProperties }).(pulumi.BoolPtrOutput)
}

// The description of the RDE Type Behavior.
func (o RdeTypeBehaviorOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdeTypeBehavior) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A map that specifies the Behavior execution mechanism, this is just a simplification of `executionJson` that
// can make the configuration more readable for simpler Behaviors. One of `executionJson` or `execution` must be set.
func (o RdeTypeBehaviorOutput) Execution() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RdeTypeBehavior) pulumi.StringMapOutput { return v.Execution }).(pulumi.StringMapOutput)
}

// A string representing a valid JSON that specifies the Behavior execution mechanism.
// You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
// and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
// One of `executionJson` or `execution` must be set.
func (o RdeTypeBehaviorOutput) ExecutionJson() pulumi.StringOutput {
	return o.ApplyT(func(v *RdeTypeBehavior) pulumi.StringOutput { return v.ExecutionJson }).(pulumi.StringOutput)
}

// Name of the overridden Behavior
func (o RdeTypeBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RdeTypeBehavior) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior) to override
func (o RdeTypeBehaviorOutput) RdeInterfaceBehaviorId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdeTypeBehavior) pulumi.StringOutput { return v.RdeInterfaceBehaviorId }).(pulumi.StringOutput)
}

// The ID of the RDE Type that owns the Behavior
func (o RdeTypeBehaviorOutput) RdeTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdeTypeBehavior) pulumi.StringOutput { return v.RdeTypeId }).(pulumi.StringOutput)
}

// The Behavior invocation reference to be used for polymorphic behavior invocations
func (o RdeTypeBehaviorOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v *RdeTypeBehavior) pulumi.StringOutput { return v.Ref }).(pulumi.StringOutput)
}

type RdeTypeBehaviorArrayOutput struct{ *pulumi.OutputState }

func (RdeTypeBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdeTypeBehavior)(nil)).Elem()
}

func (o RdeTypeBehaviorArrayOutput) ToRdeTypeBehaviorArrayOutput() RdeTypeBehaviorArrayOutput {
	return o
}

func (o RdeTypeBehaviorArrayOutput) ToRdeTypeBehaviorArrayOutputWithContext(ctx context.Context) RdeTypeBehaviorArrayOutput {
	return o
}

func (o RdeTypeBehaviorArrayOutput) Index(i pulumi.IntInput) RdeTypeBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RdeTypeBehavior {
		return vs[0].([]*RdeTypeBehavior)[vs[1].(int)]
	}).(RdeTypeBehaviorOutput)
}

type RdeTypeBehaviorMapOutput struct{ *pulumi.OutputState }

func (RdeTypeBehaviorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdeTypeBehavior)(nil)).Elem()
}

func (o RdeTypeBehaviorMapOutput) ToRdeTypeBehaviorMapOutput() RdeTypeBehaviorMapOutput {
	return o
}

func (o RdeTypeBehaviorMapOutput) ToRdeTypeBehaviorMapOutputWithContext(ctx context.Context) RdeTypeBehaviorMapOutput {
	return o
}

func (o RdeTypeBehaviorMapOutput) MapIndex(k pulumi.StringInput) RdeTypeBehaviorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RdeTypeBehavior {
		return vs[0].(map[string]*RdeTypeBehavior)[vs[1].(string)]
	}).(RdeTypeBehaviorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RdeTypeBehaviorInput)(nil)).Elem(), &RdeTypeBehavior{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdeTypeBehaviorArrayInput)(nil)).Elem(), RdeTypeBehaviorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdeTypeBehaviorMapInput)(nil)).Elem(), RdeTypeBehaviorMap{})
	pulumi.RegisterOutputType(RdeTypeBehaviorOutput{})
	pulumi.RegisterOutputType(RdeTypeBehaviorArrayOutput{})
	pulumi.RegisterOutputType(RdeTypeBehaviorMapOutput{})
}
