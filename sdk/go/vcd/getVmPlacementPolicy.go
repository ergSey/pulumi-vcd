// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director VM Placement Policy data source. This can be used to read a VM Placement Policy.
//
// Supported in provider *v3.8+* and requires VCD 10.2+
//
// > **Note:** This resource can be used by both system administrators and tenant users.
//
// ## Example Usage
//
// ### System Administrators
//
// System administrators have full privileges to retrieve information of the Provider VDC to which the VM Placement Policy
// belongs. The way to fetch a VM Placement Policy in this case would be:
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			my_vdc, err := vcd.LookupOrgVdc(ctx, &vcd.LookupOrgVdcArgs{
//				Org:  pulumi.StringRef("test"),
//				Name: "vdc-test",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			my_pvdc, err := vcd.LookupProviderVdc(ctx, &vcd.LookupProviderVdcArgs{
//				Name: my_vdc.ProviderVdcName,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			tf_policy_name, err := vcd.LookupVmPlacementPolicy(ctx, &vcd.LookupVmPlacementPolicyArgs{
//				Name:          "my-policy",
//				ProviderVdcId: pulumi.StringRef(my_pvdc.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("policyId", tf_policy_name.Id)
//			return nil
//		})
//	}
//
// ```
//
// ### Tenant Users
//
// Tenant users don't have access to Provider VDC information so the only way to retrieve VM Placement Policies is to
// fetch them using the VDC information. The only constraint is that the desired VM Placement Policy **must be assigned
// to the VDC**.
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			my_vdc, err := vcd.LookupOrgVdc(ctx, &vcd.LookupOrgVdcArgs{
//				Org:  pulumi.StringRef("test"),
//				Name: "vdc-test",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			tf_policy_name, err := vcd.LookupVmPlacementPolicy(ctx, &vcd.LookupVmPlacementPolicyArgs{
//				Name:  "my-policy",
//				VdcId: pulumi.StringRef(my_vdc.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("policyId", tf_policy_name.Id)
//			return nil
//		})
//	}
//
// ```
func LookupVmPlacementPolicy(ctx *pulumi.Context, args *LookupVmPlacementPolicyArgs, opts ...pulumi.InvokeOption) (*LookupVmPlacementPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVmPlacementPolicyResult
	err := ctx.Invoke("vcd:index/getVmPlacementPolicy:getVmPlacementPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVmPlacementPolicy.
type LookupVmPlacementPolicyArgs struct {
	// The name VM Placement Policy.
	Name string `pulumi:"name"`
	// The ID of the [Provider VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc) to which the VM Placement Policy belongs.
	ProviderVdcId *string `pulumi:"providerVdcId"`
	// The ID of the [VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org_vdc) to which the VM Placement Policy is assigned.
	VdcId *string `pulumi:"vdcId"`
}

// A collection of values returned by getVmPlacementPolicy.
type LookupVmPlacementPolicyResult struct {
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// This attribute can't be retrieved if the data source is used by a tenant user when fetching by `vdcId`.
	LogicalVmGroupIds []string `pulumi:"logicalVmGroupIds"`
	Name              string   `pulumi:"name"`
	ProviderVdcId     *string  `pulumi:"providerVdcId"`
	VdcId             *string  `pulumi:"vdcId"`
	// This attribute can't be retrieved if the data source is used by a tenant user when fetching by `vdcId`.
	VmGroupIds []string `pulumi:"vmGroupIds"`
}

func LookupVmPlacementPolicyOutput(ctx *pulumi.Context, args LookupVmPlacementPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupVmPlacementPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVmPlacementPolicyResultOutput, error) {
			args := v.(LookupVmPlacementPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getVmPlacementPolicy:getVmPlacementPolicy", args, LookupVmPlacementPolicyResultOutput{}, options).(LookupVmPlacementPolicyResultOutput), nil
		}).(LookupVmPlacementPolicyResultOutput)
}

// A collection of arguments for invoking getVmPlacementPolicy.
type LookupVmPlacementPolicyOutputArgs struct {
	// The name VM Placement Policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the [Provider VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc) to which the VM Placement Policy belongs.
	ProviderVdcId pulumi.StringPtrInput `pulumi:"providerVdcId"`
	// The ID of the [VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org_vdc) to which the VM Placement Policy is assigned.
	VdcId pulumi.StringPtrInput `pulumi:"vdcId"`
}

func (LookupVmPlacementPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVmPlacementPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getVmPlacementPolicy.
type LookupVmPlacementPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupVmPlacementPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVmPlacementPolicyResult)(nil)).Elem()
}

func (o LookupVmPlacementPolicyResultOutput) ToLookupVmPlacementPolicyResultOutput() LookupVmPlacementPolicyResultOutput {
	return o
}

func (o LookupVmPlacementPolicyResultOutput) ToLookupVmPlacementPolicyResultOutputWithContext(ctx context.Context) LookupVmPlacementPolicyResultOutput {
	return o
}

func (o LookupVmPlacementPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmPlacementPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVmPlacementPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmPlacementPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// This attribute can't be retrieved if the data source is used by a tenant user when fetching by `vdcId`.
func (o LookupVmPlacementPolicyResultOutput) LogicalVmGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVmPlacementPolicyResult) []string { return v.LogicalVmGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupVmPlacementPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmPlacementPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVmPlacementPolicyResultOutput) ProviderVdcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVmPlacementPolicyResult) *string { return v.ProviderVdcId }).(pulumi.StringPtrOutput)
}

func (o LookupVmPlacementPolicyResultOutput) VdcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVmPlacementPolicyResult) *string { return v.VdcId }).(pulumi.StringPtrOutput)
}

// This attribute can't be retrieved if the data source is used by a tenant user when fetching by `vdcId`.
func (o LookupVmPlacementPolicyResultOutput) VmGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVmPlacementPolicyResult) []string { return v.VmGroupIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVmPlacementPolicyResultOutput{})
}
