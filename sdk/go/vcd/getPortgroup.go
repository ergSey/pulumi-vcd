// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a data source for available vCenter Port Groups.
//
// Supported in provider *v3.0+*
//
// ## Example Usage
//
// ### VSwitch Port Group
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.GetPortgroup(ctx, &vcd.GetPortgroupArgs{
//				Name: "pg-name",
//				Type: "NETWORK",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Distributed Port Group
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.GetPortgroup(ctx, &vcd.GetPortgroupArgs{
//				Name: "pg-name",
//				Type: "DV_PORTGROUP",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPortgroup(ctx *pulumi.Context, args *GetPortgroupArgs, opts ...pulumi.InvokeOption) (*GetPortgroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPortgroupResult
	err := ctx.Invoke("vcd:index/getPortgroup:getPortgroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPortgroup.
type GetPortgroupArgs struct {
	// Organization VDC name
	Name string `pulumi:"name"`
	// `NETWORK` for vSwitch port group or `DV_PORTGROUP` for distributed port group.
	Type string `pulumi:"type"`
}

// A collection of values returned by getPortgroup.
type GetPortgroupResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	Type string `pulumi:"type"`
}

func GetPortgroupOutput(ctx *pulumi.Context, args GetPortgroupOutputArgs, opts ...pulumi.InvokeOption) GetPortgroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPortgroupResultOutput, error) {
			args := v.(GetPortgroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getPortgroup:getPortgroup", args, GetPortgroupResultOutput{}, options).(GetPortgroupResultOutput), nil
		}).(GetPortgroupResultOutput)
}

// A collection of arguments for invoking getPortgroup.
type GetPortgroupOutputArgs struct {
	// Organization VDC name
	Name pulumi.StringInput `pulumi:"name"`
	// `NETWORK` for vSwitch port group or `DV_PORTGROUP` for distributed port group.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPortgroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPortgroupArgs)(nil)).Elem()
}

// A collection of values returned by getPortgroup.
type GetPortgroupResultOutput struct{ *pulumi.OutputState }

func (GetPortgroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPortgroupResult)(nil)).Elem()
}

func (o GetPortgroupResultOutput) ToGetPortgroupResultOutput() GetPortgroupResultOutput {
	return o
}

func (o GetPortgroupResultOutput) ToGetPortgroupResultOutputWithContext(ctx context.Context) GetPortgroupResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPortgroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortgroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPortgroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortgroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPortgroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortgroupResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPortgroupResultOutput{})
}
