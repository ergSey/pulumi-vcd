// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director NSX-T edge gateway data source. This can be used to read NSX-T edge gateway configurations.
//
// Supported in provider *v3.1+*.
//
// ## Example Usage
//
// ### NSX-T Edge Gateway Belonging To VDC Group)
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			group1, err := vcd.LookupVdcGroup(ctx, &vcd.LookupVdcGroupArgs{
//				Name: pulumi.StringRef("existing-group"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = vcd.LookupNsxtEdgegateway(ctx, &vcd.LookupNsxtEdgegatewayArgs{
//				Org:     pulumi.StringRef("myorg"),
//				OwnerId: pulumi.StringRef(group1.Id),
//				Name:    "nsxt-edge-gateway",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### NSX-T Edge Gateway Belonging To VDC)
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			vdc1, err := vcd.LookupOrgVdc(ctx, &vcd.LookupOrgVdcArgs{
//				Name: "existing-vdc",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = vcd.LookupNsxtEdgegateway(ctx, &vcd.LookupNsxtEdgegatewayArgs{
//				Org:     pulumi.StringRef("myorg"),
//				OwnerId: pulumi.StringRef(vdc1.Id),
//				Name:    "nsxt-edge-gateway",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNsxtEdgegateway(ctx *pulumi.Context, args *LookupNsxtEdgegatewayArgs, opts ...pulumi.InvokeOption) (*LookupNsxtEdgegatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNsxtEdgegatewayResult
	err := ctx.Invoke("vcd:index/getNsxtEdgegateway:getNsxtEdgegateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxtEdgegateway.
type LookupNsxtEdgegatewayArgs struct {
	EdgeClusterId *string `pulumi:"edgeClusterId"`
	// Sets a limit of IPs to count for
	// `usedIpCount` and `unusedIpCount` attributes to avoid exhausting compute resource while
	// counting IPs in large IPv6 subnets. It does not affect operation of Edge Gateway configuration,
	// only IP count reporting. Defaults to `1000000`. While it is unlikely that a single Edge Gateway
	// can effectively manage more IPs, one can specify `0` for *unlimited* value.
	IpCountReadLimit *int `pulumi:"ipCountReadLimit"`
	// NSX-T Edge Gateway name.
	Name string `pulumi:"name"`
	// The name of organization to which the NSX-T Edge Gateway belongs. Optional if
	// defined at provider level.
	Org *string `pulumi:"org"`
	// The ID of VDC or VDC Group. **Note:** Data sources
	// [VdcGroup](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/vdc_group) or
	// [OrgVdc](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org_vdc) can be used to lookup IDs by
	// name.
	//
	// > Only one of `vdc` or `ownerId` can be specified. `ownerId` takes precedence over `vdc`
	// definition at provider level.
	OwnerId *string `pulumi:"ownerId"`
	// **Deprecated** - please use `ownerId` field. The name of VDC that owns the
	// NSX-T Edge Gateway. Optional if defined at provider level.
	//
	// Deprecated: This field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
	Vdc *string `pulumi:"vdc"`
}

// A collection of values returned by getNsxtEdgegateway.
type LookupNsxtEdgegatewayResult struct {
	DedicateExternalNetwork         bool                                `pulumi:"dedicateExternalNetwork"`
	DeploymentMode                  string                              `pulumi:"deploymentMode"`
	Description                     string                              `pulumi:"description"`
	EdgeClusterId                   *string                             `pulumi:"edgeClusterId"`
	ExternalNetworkAllocatedIpCount int                                 `pulumi:"externalNetworkAllocatedIpCount"`
	ExternalNetworkId               string                              `pulumi:"externalNetworkId"`
	ExternalNetworks                []GetNsxtEdgegatewayExternalNetwork `pulumi:"externalNetworks"`
	// The provider-assigned unique ID for this managed resource.
	Id                           string                                     `pulumi:"id"`
	IpCountReadLimit             *int                                       `pulumi:"ipCountReadLimit"`
	Name                         string                                     `pulumi:"name"`
	NonDistributedRoutingEnabled bool                                       `pulumi:"nonDistributedRoutingEnabled"`
	Org                          *string                                    `pulumi:"org"`
	OwnerId                      string                                     `pulumi:"ownerId"`
	PrimaryIp                    string                                     `pulumi:"primaryIp"`
	SubnetWithIpCounts           []GetNsxtEdgegatewaySubnetWithIpCount      `pulumi:"subnetWithIpCounts"`
	SubnetWithTotalIpCounts      []GetNsxtEdgegatewaySubnetWithTotalIpCount `pulumi:"subnetWithTotalIpCounts"`
	Subnets                      []GetNsxtEdgegatewaySubnet                 `pulumi:"subnets"`
	TotalAllocatedIpCount        int                                        `pulumi:"totalAllocatedIpCount"`
	UnusedIpCount                int                                        `pulumi:"unusedIpCount"`
	UseIpSpaces                  bool                                       `pulumi:"useIpSpaces"`
	UsedIpCount                  int                                        `pulumi:"usedIpCount"`
	// Deprecated: This field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
	Vdc string `pulumi:"vdc"`
}

func LookupNsxtEdgegatewayOutput(ctx *pulumi.Context, args LookupNsxtEdgegatewayOutputArgs, opts ...pulumi.InvokeOption) LookupNsxtEdgegatewayResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNsxtEdgegatewayResultOutput, error) {
			args := v.(LookupNsxtEdgegatewayArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxtEdgegateway:getNsxtEdgegateway", args, LookupNsxtEdgegatewayResultOutput{}, options).(LookupNsxtEdgegatewayResultOutput), nil
		}).(LookupNsxtEdgegatewayResultOutput)
}

// A collection of arguments for invoking getNsxtEdgegateway.
type LookupNsxtEdgegatewayOutputArgs struct {
	EdgeClusterId pulumi.StringPtrInput `pulumi:"edgeClusterId"`
	// Sets a limit of IPs to count for
	// `usedIpCount` and `unusedIpCount` attributes to avoid exhausting compute resource while
	// counting IPs in large IPv6 subnets. It does not affect operation of Edge Gateway configuration,
	// only IP count reporting. Defaults to `1000000`. While it is unlikely that a single Edge Gateway
	// can effectively manage more IPs, one can specify `0` for *unlimited* value.
	IpCountReadLimit pulumi.IntPtrInput `pulumi:"ipCountReadLimit"`
	// NSX-T Edge Gateway name.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of organization to which the NSX-T Edge Gateway belongs. Optional if
	// defined at provider level.
	Org pulumi.StringPtrInput `pulumi:"org"`
	// The ID of VDC or VDC Group. **Note:** Data sources
	// [VdcGroup](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/vdc_group) or
	// [OrgVdc](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org_vdc) can be used to lookup IDs by
	// name.
	//
	// > Only one of `vdc` or `ownerId` can be specified. `ownerId` takes precedence over `vdc`
	// definition at provider level.
	OwnerId pulumi.StringPtrInput `pulumi:"ownerId"`
	// **Deprecated** - please use `ownerId` field. The name of VDC that owns the
	// NSX-T Edge Gateway. Optional if defined at provider level.
	//
	// Deprecated: This field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
	Vdc pulumi.StringPtrInput `pulumi:"vdc"`
}

func (LookupNsxtEdgegatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtEdgegatewayArgs)(nil)).Elem()
}

// A collection of values returned by getNsxtEdgegateway.
type LookupNsxtEdgegatewayResultOutput struct{ *pulumi.OutputState }

func (LookupNsxtEdgegatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtEdgegatewayResult)(nil)).Elem()
}

func (o LookupNsxtEdgegatewayResultOutput) ToLookupNsxtEdgegatewayResultOutput() LookupNsxtEdgegatewayResultOutput {
	return o
}

func (o LookupNsxtEdgegatewayResultOutput) ToLookupNsxtEdgegatewayResultOutputWithContext(ctx context.Context) LookupNsxtEdgegatewayResultOutput {
	return o
}

func (o LookupNsxtEdgegatewayResultOutput) DedicateExternalNetwork() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) bool { return v.DedicateExternalNetwork }).(pulumi.BoolOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) DeploymentMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) string { return v.DeploymentMode }).(pulumi.StringOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) EdgeClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) *string { return v.EdgeClusterId }).(pulumi.StringPtrOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) ExternalNetworkAllocatedIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) int { return v.ExternalNetworkAllocatedIpCount }).(pulumi.IntOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) ExternalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) string { return v.ExternalNetworkId }).(pulumi.StringOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) ExternalNetworks() GetNsxtEdgegatewayExternalNetworkArrayOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) []GetNsxtEdgegatewayExternalNetwork { return v.ExternalNetworks }).(GetNsxtEdgegatewayExternalNetworkArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNsxtEdgegatewayResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) IpCountReadLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) *int { return v.IpCountReadLimit }).(pulumi.IntPtrOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) NonDistributedRoutingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) bool { return v.NonDistributedRoutingEnabled }).(pulumi.BoolOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) PrimaryIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) string { return v.PrimaryIp }).(pulumi.StringOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) SubnetWithIpCounts() GetNsxtEdgegatewaySubnetWithIpCountArrayOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) []GetNsxtEdgegatewaySubnetWithIpCount { return v.SubnetWithIpCounts }).(GetNsxtEdgegatewaySubnetWithIpCountArrayOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) SubnetWithTotalIpCounts() GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) []GetNsxtEdgegatewaySubnetWithTotalIpCount {
		return v.SubnetWithTotalIpCounts
	}).(GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) Subnets() GetNsxtEdgegatewaySubnetArrayOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) []GetNsxtEdgegatewaySubnet { return v.Subnets }).(GetNsxtEdgegatewaySubnetArrayOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) TotalAllocatedIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) int { return v.TotalAllocatedIpCount }).(pulumi.IntOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) UnusedIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) int { return v.UnusedIpCount }).(pulumi.IntOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) UseIpSpaces() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) bool { return v.UseIpSpaces }).(pulumi.BoolOutput)
}

func (o LookupNsxtEdgegatewayResultOutput) UsedIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) int { return v.UsedIpCount }).(pulumi.IntOutput)
}

// Deprecated: This field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
func (o LookupNsxtEdgegatewayResultOutput) Vdc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtEdgegatewayResult) string { return v.Vdc }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNsxtEdgegatewayResultOutput{})
}
