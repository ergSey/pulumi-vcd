// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Supported in provider *v3.14+* and VCD 10.5+ with NSX-T and ALB.
//
// Provides a data source to read ALB Service Engine Groups policies for HTTP requests. HTTP security
// rules allow users to configure allowing or denying certain requests, to close the TCP connection,
// to redirect a request to HTTPS, or to apply a rate limit.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupNsxtAlbVirtualServiceHttpSecRules(ctx, &vcd.LookupNsxtAlbVirtualServiceHttpSecRulesArgs{
//				VirtualServiceId: test.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNsxtAlbVirtualServiceHttpSecRules(ctx *pulumi.Context, args *LookupNsxtAlbVirtualServiceHttpSecRulesArgs, opts ...pulumi.InvokeOption) (*LookupNsxtAlbVirtualServiceHttpSecRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNsxtAlbVirtualServiceHttpSecRulesResult
	err := ctx.Invoke("vcd:index/getNsxtAlbVirtualServiceHttpSecRules:getNsxtAlbVirtualServiceHttpSecRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxtAlbVirtualServiceHttpSecRules.
type LookupNsxtAlbVirtualServiceHttpSecRulesArgs struct {
	// An ID of existing ALB Virtual Service.
	VirtualServiceId string `pulumi:"virtualServiceId"`
}

// A collection of values returned by getNsxtAlbVirtualServiceHttpSecRules.
type LookupNsxtAlbVirtualServiceHttpSecRulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                                     `pulumi:"id"`
	Rules            []GetNsxtAlbVirtualServiceHttpSecRulesRule `pulumi:"rules"`
	VirtualServiceId string                                     `pulumi:"virtualServiceId"`
}

func LookupNsxtAlbVirtualServiceHttpSecRulesOutput(ctx *pulumi.Context, args LookupNsxtAlbVirtualServiceHttpSecRulesOutputArgs, opts ...pulumi.InvokeOption) LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput, error) {
			args := v.(LookupNsxtAlbVirtualServiceHttpSecRulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxtAlbVirtualServiceHttpSecRules:getNsxtAlbVirtualServiceHttpSecRules", args, LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput{}, options).(LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput), nil
		}).(LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput)
}

// A collection of arguments for invoking getNsxtAlbVirtualServiceHttpSecRules.
type LookupNsxtAlbVirtualServiceHttpSecRulesOutputArgs struct {
	// An ID of existing ALB Virtual Service.
	VirtualServiceId pulumi.StringInput `pulumi:"virtualServiceId"`
}

func (LookupNsxtAlbVirtualServiceHttpSecRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtAlbVirtualServiceHttpSecRulesArgs)(nil)).Elem()
}

// A collection of values returned by getNsxtAlbVirtualServiceHttpSecRules.
type LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput struct{ *pulumi.OutputState }

func (LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxtAlbVirtualServiceHttpSecRulesResult)(nil)).Elem()
}

func (o LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput) ToLookupNsxtAlbVirtualServiceHttpSecRulesResultOutput() LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput {
	return o
}

func (o LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput) ToLookupNsxtAlbVirtualServiceHttpSecRulesResultOutputWithContext(ctx context.Context) LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtAlbVirtualServiceHttpSecRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput) Rules() GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
	return o.ApplyT(func(v LookupNsxtAlbVirtualServiceHttpSecRulesResult) []GetNsxtAlbVirtualServiceHttpSecRulesRule {
		return v.Rules
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput)
}

func (o LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput) VirtualServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxtAlbVirtualServiceHttpSecRulesResult) string { return v.VirtualServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNsxtAlbVirtualServiceHttpSecRulesResultOutput{})
}
