// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CatalogAccessControlSharedWith struct {
	// The access level for the user or group to which we are sharing. (One of `ReadOnly`,
	// `Change`, `FullControl`, but it can only be `ReadOnly` when we share to an Organization)
	AccessLevel string `pulumi:"accessLevel"`
	// The ID of a group with which we are sharing. Required if `userId` or `orgId` is not set.
	GroupId *string `pulumi:"groupId"`
	// The ID of a group with which we are sharing. Required if `userId` or `groupId` is not set.
	OrgId *string `pulumi:"orgId"`
	// the name of the subject (Org, group, or user) with which we are sharing.
	SubjectName *string `pulumi:"subjectName"`
	// The ID of a user with which we are sharing. Required if `groupId` or `orgId` is not set.
	UserId *string `pulumi:"userId"`
}

// CatalogAccessControlSharedWithInput is an input type that accepts CatalogAccessControlSharedWithArgs and CatalogAccessControlSharedWithOutput values.
// You can construct a concrete instance of `CatalogAccessControlSharedWithInput` via:
//
//	CatalogAccessControlSharedWithArgs{...}
type CatalogAccessControlSharedWithInput interface {
	pulumi.Input

	ToCatalogAccessControlSharedWithOutput() CatalogAccessControlSharedWithOutput
	ToCatalogAccessControlSharedWithOutputWithContext(context.Context) CatalogAccessControlSharedWithOutput
}

type CatalogAccessControlSharedWithArgs struct {
	// The access level for the user or group to which we are sharing. (One of `ReadOnly`,
	// `Change`, `FullControl`, but it can only be `ReadOnly` when we share to an Organization)
	AccessLevel pulumi.StringInput `pulumi:"accessLevel"`
	// The ID of a group with which we are sharing. Required if `userId` or `orgId` is not set.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The ID of a group with which we are sharing. Required if `userId` or `groupId` is not set.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// the name of the subject (Org, group, or user) with which we are sharing.
	SubjectName pulumi.StringPtrInput `pulumi:"subjectName"`
	// The ID of a user with which we are sharing. Required if `groupId` or `orgId` is not set.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (CatalogAccessControlSharedWithArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogAccessControlSharedWith)(nil)).Elem()
}

func (i CatalogAccessControlSharedWithArgs) ToCatalogAccessControlSharedWithOutput() CatalogAccessControlSharedWithOutput {
	return i.ToCatalogAccessControlSharedWithOutputWithContext(context.Background())
}

func (i CatalogAccessControlSharedWithArgs) ToCatalogAccessControlSharedWithOutputWithContext(ctx context.Context) CatalogAccessControlSharedWithOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogAccessControlSharedWithOutput)
}

// CatalogAccessControlSharedWithArrayInput is an input type that accepts CatalogAccessControlSharedWithArray and CatalogAccessControlSharedWithArrayOutput values.
// You can construct a concrete instance of `CatalogAccessControlSharedWithArrayInput` via:
//
//	CatalogAccessControlSharedWithArray{ CatalogAccessControlSharedWithArgs{...} }
type CatalogAccessControlSharedWithArrayInput interface {
	pulumi.Input

	ToCatalogAccessControlSharedWithArrayOutput() CatalogAccessControlSharedWithArrayOutput
	ToCatalogAccessControlSharedWithArrayOutputWithContext(context.Context) CatalogAccessControlSharedWithArrayOutput
}

type CatalogAccessControlSharedWithArray []CatalogAccessControlSharedWithInput

func (CatalogAccessControlSharedWithArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogAccessControlSharedWith)(nil)).Elem()
}

func (i CatalogAccessControlSharedWithArray) ToCatalogAccessControlSharedWithArrayOutput() CatalogAccessControlSharedWithArrayOutput {
	return i.ToCatalogAccessControlSharedWithArrayOutputWithContext(context.Background())
}

func (i CatalogAccessControlSharedWithArray) ToCatalogAccessControlSharedWithArrayOutputWithContext(ctx context.Context) CatalogAccessControlSharedWithArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogAccessControlSharedWithArrayOutput)
}

type CatalogAccessControlSharedWithOutput struct{ *pulumi.OutputState }

func (CatalogAccessControlSharedWithOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogAccessControlSharedWith)(nil)).Elem()
}

func (o CatalogAccessControlSharedWithOutput) ToCatalogAccessControlSharedWithOutput() CatalogAccessControlSharedWithOutput {
	return o
}

func (o CatalogAccessControlSharedWithOutput) ToCatalogAccessControlSharedWithOutputWithContext(ctx context.Context) CatalogAccessControlSharedWithOutput {
	return o
}

// The access level for the user or group to which we are sharing. (One of `ReadOnly`,
// `Change`, `FullControl`, but it can only be `ReadOnly` when we share to an Organization)
func (o CatalogAccessControlSharedWithOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogAccessControlSharedWith) string { return v.AccessLevel }).(pulumi.StringOutput)
}

// The ID of a group with which we are sharing. Required if `userId` or `orgId` is not set.
func (o CatalogAccessControlSharedWithOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogAccessControlSharedWith) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The ID of a group with which we are sharing. Required if `userId` or `groupId` is not set.
func (o CatalogAccessControlSharedWithOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogAccessControlSharedWith) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// the name of the subject (Org, group, or user) with which we are sharing.
func (o CatalogAccessControlSharedWithOutput) SubjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogAccessControlSharedWith) *string { return v.SubjectName }).(pulumi.StringPtrOutput)
}

// The ID of a user with which we are sharing. Required if `groupId` or `orgId` is not set.
func (o CatalogAccessControlSharedWithOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogAccessControlSharedWith) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type CatalogAccessControlSharedWithArrayOutput struct{ *pulumi.OutputState }

func (CatalogAccessControlSharedWithArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogAccessControlSharedWith)(nil)).Elem()
}

func (o CatalogAccessControlSharedWithArrayOutput) ToCatalogAccessControlSharedWithArrayOutput() CatalogAccessControlSharedWithArrayOutput {
	return o
}

func (o CatalogAccessControlSharedWithArrayOutput) ToCatalogAccessControlSharedWithArrayOutputWithContext(ctx context.Context) CatalogAccessControlSharedWithArrayOutput {
	return o
}

func (o CatalogAccessControlSharedWithArrayOutput) Index(i pulumi.IntInput) CatalogAccessControlSharedWithOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogAccessControlSharedWith {
		return vs[0].([]CatalogAccessControlSharedWith)[vs[1].(int)]
	}).(CatalogAccessControlSharedWithOutput)
}

type CatalogItemMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// CatalogItemMetadataEntryInput is an input type that accepts CatalogItemMetadataEntryArgs and CatalogItemMetadataEntryOutput values.
// You can construct a concrete instance of `CatalogItemMetadataEntryInput` via:
//
//	CatalogItemMetadataEntryArgs{...}
type CatalogItemMetadataEntryInput interface {
	pulumi.Input

	ToCatalogItemMetadataEntryOutput() CatalogItemMetadataEntryOutput
	ToCatalogItemMetadataEntryOutputWithContext(context.Context) CatalogItemMetadataEntryOutput
}

type CatalogItemMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CatalogItemMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogItemMetadataEntry)(nil)).Elem()
}

func (i CatalogItemMetadataEntryArgs) ToCatalogItemMetadataEntryOutput() CatalogItemMetadataEntryOutput {
	return i.ToCatalogItemMetadataEntryOutputWithContext(context.Background())
}

func (i CatalogItemMetadataEntryArgs) ToCatalogItemMetadataEntryOutputWithContext(ctx context.Context) CatalogItemMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogItemMetadataEntryOutput)
}

// CatalogItemMetadataEntryArrayInput is an input type that accepts CatalogItemMetadataEntryArray and CatalogItemMetadataEntryArrayOutput values.
// You can construct a concrete instance of `CatalogItemMetadataEntryArrayInput` via:
//
//	CatalogItemMetadataEntryArray{ CatalogItemMetadataEntryArgs{...} }
type CatalogItemMetadataEntryArrayInput interface {
	pulumi.Input

	ToCatalogItemMetadataEntryArrayOutput() CatalogItemMetadataEntryArrayOutput
	ToCatalogItemMetadataEntryArrayOutputWithContext(context.Context) CatalogItemMetadataEntryArrayOutput
}

type CatalogItemMetadataEntryArray []CatalogItemMetadataEntryInput

func (CatalogItemMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogItemMetadataEntry)(nil)).Elem()
}

func (i CatalogItemMetadataEntryArray) ToCatalogItemMetadataEntryArrayOutput() CatalogItemMetadataEntryArrayOutput {
	return i.ToCatalogItemMetadataEntryArrayOutputWithContext(context.Background())
}

func (i CatalogItemMetadataEntryArray) ToCatalogItemMetadataEntryArrayOutputWithContext(ctx context.Context) CatalogItemMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogItemMetadataEntryArrayOutput)
}

type CatalogItemMetadataEntryOutput struct{ *pulumi.OutputState }

func (CatalogItemMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogItemMetadataEntry)(nil)).Elem()
}

func (o CatalogItemMetadataEntryOutput) ToCatalogItemMetadataEntryOutput() CatalogItemMetadataEntryOutput {
	return o
}

func (o CatalogItemMetadataEntryOutput) ToCatalogItemMetadataEntryOutputWithContext(ctx context.Context) CatalogItemMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o CatalogItemMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CatalogItemMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o CatalogItemMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogItemMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o CatalogItemMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogItemMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o CatalogItemMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogItemMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o CatalogItemMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogItemMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CatalogItemMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (CatalogItemMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogItemMetadataEntry)(nil)).Elem()
}

func (o CatalogItemMetadataEntryArrayOutput) ToCatalogItemMetadataEntryArrayOutput() CatalogItemMetadataEntryArrayOutput {
	return o
}

func (o CatalogItemMetadataEntryArrayOutput) ToCatalogItemMetadataEntryArrayOutputWithContext(ctx context.Context) CatalogItemMetadataEntryArrayOutput {
	return o
}

func (o CatalogItemMetadataEntryArrayOutput) Index(i pulumi.IntInput) CatalogItemMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogItemMetadataEntry {
		return vs[0].([]CatalogItemMetadataEntry)[vs[1].(int)]
	}).(CatalogItemMetadataEntryOutput)
}

type CatalogMediaMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// CatalogMediaMetadataEntryInput is an input type that accepts CatalogMediaMetadataEntryArgs and CatalogMediaMetadataEntryOutput values.
// You can construct a concrete instance of `CatalogMediaMetadataEntryInput` via:
//
//	CatalogMediaMetadataEntryArgs{...}
type CatalogMediaMetadataEntryInput interface {
	pulumi.Input

	ToCatalogMediaMetadataEntryOutput() CatalogMediaMetadataEntryOutput
	ToCatalogMediaMetadataEntryOutputWithContext(context.Context) CatalogMediaMetadataEntryOutput
}

type CatalogMediaMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CatalogMediaMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogMediaMetadataEntry)(nil)).Elem()
}

func (i CatalogMediaMetadataEntryArgs) ToCatalogMediaMetadataEntryOutput() CatalogMediaMetadataEntryOutput {
	return i.ToCatalogMediaMetadataEntryOutputWithContext(context.Background())
}

func (i CatalogMediaMetadataEntryArgs) ToCatalogMediaMetadataEntryOutputWithContext(ctx context.Context) CatalogMediaMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogMediaMetadataEntryOutput)
}

// CatalogMediaMetadataEntryArrayInput is an input type that accepts CatalogMediaMetadataEntryArray and CatalogMediaMetadataEntryArrayOutput values.
// You can construct a concrete instance of `CatalogMediaMetadataEntryArrayInput` via:
//
//	CatalogMediaMetadataEntryArray{ CatalogMediaMetadataEntryArgs{...} }
type CatalogMediaMetadataEntryArrayInput interface {
	pulumi.Input

	ToCatalogMediaMetadataEntryArrayOutput() CatalogMediaMetadataEntryArrayOutput
	ToCatalogMediaMetadataEntryArrayOutputWithContext(context.Context) CatalogMediaMetadataEntryArrayOutput
}

type CatalogMediaMetadataEntryArray []CatalogMediaMetadataEntryInput

func (CatalogMediaMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogMediaMetadataEntry)(nil)).Elem()
}

func (i CatalogMediaMetadataEntryArray) ToCatalogMediaMetadataEntryArrayOutput() CatalogMediaMetadataEntryArrayOutput {
	return i.ToCatalogMediaMetadataEntryArrayOutputWithContext(context.Background())
}

func (i CatalogMediaMetadataEntryArray) ToCatalogMediaMetadataEntryArrayOutputWithContext(ctx context.Context) CatalogMediaMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogMediaMetadataEntryArrayOutput)
}

type CatalogMediaMetadataEntryOutput struct{ *pulumi.OutputState }

func (CatalogMediaMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogMediaMetadataEntry)(nil)).Elem()
}

func (o CatalogMediaMetadataEntryOutput) ToCatalogMediaMetadataEntryOutput() CatalogMediaMetadataEntryOutput {
	return o
}

func (o CatalogMediaMetadataEntryOutput) ToCatalogMediaMetadataEntryOutputWithContext(ctx context.Context) CatalogMediaMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o CatalogMediaMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CatalogMediaMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o CatalogMediaMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogMediaMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o CatalogMediaMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogMediaMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o CatalogMediaMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogMediaMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o CatalogMediaMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogMediaMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CatalogMediaMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (CatalogMediaMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogMediaMetadataEntry)(nil)).Elem()
}

func (o CatalogMediaMetadataEntryArrayOutput) ToCatalogMediaMetadataEntryArrayOutput() CatalogMediaMetadataEntryArrayOutput {
	return o
}

func (o CatalogMediaMetadataEntryArrayOutput) ToCatalogMediaMetadataEntryArrayOutputWithContext(ctx context.Context) CatalogMediaMetadataEntryArrayOutput {
	return o
}

func (o CatalogMediaMetadataEntryArrayOutput) Index(i pulumi.IntInput) CatalogMediaMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogMediaMetadataEntry {
		return vs[0].([]CatalogMediaMetadataEntry)[vs[1].(int)]
	}).(CatalogMediaMetadataEntryOutput)
}

type CatalogMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// CatalogMetadataEntryInput is an input type that accepts CatalogMetadataEntryArgs and CatalogMetadataEntryOutput values.
// You can construct a concrete instance of `CatalogMetadataEntryInput` via:
//
//	CatalogMetadataEntryArgs{...}
type CatalogMetadataEntryInput interface {
	pulumi.Input

	ToCatalogMetadataEntryOutput() CatalogMetadataEntryOutput
	ToCatalogMetadataEntryOutputWithContext(context.Context) CatalogMetadataEntryOutput
}

type CatalogMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CatalogMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogMetadataEntry)(nil)).Elem()
}

func (i CatalogMetadataEntryArgs) ToCatalogMetadataEntryOutput() CatalogMetadataEntryOutput {
	return i.ToCatalogMetadataEntryOutputWithContext(context.Background())
}

func (i CatalogMetadataEntryArgs) ToCatalogMetadataEntryOutputWithContext(ctx context.Context) CatalogMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogMetadataEntryOutput)
}

// CatalogMetadataEntryArrayInput is an input type that accepts CatalogMetadataEntryArray and CatalogMetadataEntryArrayOutput values.
// You can construct a concrete instance of `CatalogMetadataEntryArrayInput` via:
//
//	CatalogMetadataEntryArray{ CatalogMetadataEntryArgs{...} }
type CatalogMetadataEntryArrayInput interface {
	pulumi.Input

	ToCatalogMetadataEntryArrayOutput() CatalogMetadataEntryArrayOutput
	ToCatalogMetadataEntryArrayOutputWithContext(context.Context) CatalogMetadataEntryArrayOutput
}

type CatalogMetadataEntryArray []CatalogMetadataEntryInput

func (CatalogMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogMetadataEntry)(nil)).Elem()
}

func (i CatalogMetadataEntryArray) ToCatalogMetadataEntryArrayOutput() CatalogMetadataEntryArrayOutput {
	return i.ToCatalogMetadataEntryArrayOutputWithContext(context.Background())
}

func (i CatalogMetadataEntryArray) ToCatalogMetadataEntryArrayOutputWithContext(ctx context.Context) CatalogMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogMetadataEntryArrayOutput)
}

type CatalogMetadataEntryOutput struct{ *pulumi.OutputState }

func (CatalogMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogMetadataEntry)(nil)).Elem()
}

func (o CatalogMetadataEntryOutput) ToCatalogMetadataEntryOutput() CatalogMetadataEntryOutput {
	return o
}

func (o CatalogMetadataEntryOutput) ToCatalogMetadataEntryOutputWithContext(ctx context.Context) CatalogMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o CatalogMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CatalogMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o CatalogMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o CatalogMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o CatalogMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o CatalogMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CatalogMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (CatalogMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogMetadataEntry)(nil)).Elem()
}

func (o CatalogMetadataEntryArrayOutput) ToCatalogMetadataEntryArrayOutput() CatalogMetadataEntryArrayOutput {
	return o
}

func (o CatalogMetadataEntryArrayOutput) ToCatalogMetadataEntryArrayOutputWithContext(ctx context.Context) CatalogMetadataEntryArrayOutput {
	return o
}

func (o CatalogMetadataEntryArrayOutput) Index(i pulumi.IntInput) CatalogMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogMetadataEntry {
		return vs[0].([]CatalogMetadataEntry)[vs[1].(int)]
	}).(CatalogMetadataEntryOutput)
}

type CatalogVappTemplateCaptureVapp struct {
	// Defines if Trusted Platform Module should be copied (false) or created (true). Default 'false'. VCD 10.4.2+
	CopyTpmOnInstantiate *bool `pulumi:"copyTpmOnInstantiate"`
	// Marks if instantiating applies customization settings ('true'). Default is 'false` - create an identical copy.
	CustomizeOnInstantiate *bool `pulumi:"customizeOnInstantiate"`
	// An existing catalog item ID to overwrite
	OverwriteCatalogItemId *string `pulumi:"overwriteCatalogItemId"`
	// Source vApp ID (can be a vApp ID or 'vapp_id' field of standalone VM 'vcd_vm')
	SourceId *string `pulumi:"sourceId"`
}

// CatalogVappTemplateCaptureVappInput is an input type that accepts CatalogVappTemplateCaptureVappArgs and CatalogVappTemplateCaptureVappOutput values.
// You can construct a concrete instance of `CatalogVappTemplateCaptureVappInput` via:
//
//	CatalogVappTemplateCaptureVappArgs{...}
type CatalogVappTemplateCaptureVappInput interface {
	pulumi.Input

	ToCatalogVappTemplateCaptureVappOutput() CatalogVappTemplateCaptureVappOutput
	ToCatalogVappTemplateCaptureVappOutputWithContext(context.Context) CatalogVappTemplateCaptureVappOutput
}

type CatalogVappTemplateCaptureVappArgs struct {
	// Defines if Trusted Platform Module should be copied (false) or created (true). Default 'false'. VCD 10.4.2+
	CopyTpmOnInstantiate pulumi.BoolPtrInput `pulumi:"copyTpmOnInstantiate"`
	// Marks if instantiating applies customization settings ('true'). Default is 'false` - create an identical copy.
	CustomizeOnInstantiate pulumi.BoolPtrInput `pulumi:"customizeOnInstantiate"`
	// An existing catalog item ID to overwrite
	OverwriteCatalogItemId pulumi.StringPtrInput `pulumi:"overwriteCatalogItemId"`
	// Source vApp ID (can be a vApp ID or 'vapp_id' field of standalone VM 'vcd_vm')
	SourceId pulumi.StringPtrInput `pulumi:"sourceId"`
}

func (CatalogVappTemplateCaptureVappArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogVappTemplateCaptureVapp)(nil)).Elem()
}

func (i CatalogVappTemplateCaptureVappArgs) ToCatalogVappTemplateCaptureVappOutput() CatalogVappTemplateCaptureVappOutput {
	return i.ToCatalogVappTemplateCaptureVappOutputWithContext(context.Background())
}

func (i CatalogVappTemplateCaptureVappArgs) ToCatalogVappTemplateCaptureVappOutputWithContext(ctx context.Context) CatalogVappTemplateCaptureVappOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogVappTemplateCaptureVappOutput)
}

func (i CatalogVappTemplateCaptureVappArgs) ToCatalogVappTemplateCaptureVappPtrOutput() CatalogVappTemplateCaptureVappPtrOutput {
	return i.ToCatalogVappTemplateCaptureVappPtrOutputWithContext(context.Background())
}

func (i CatalogVappTemplateCaptureVappArgs) ToCatalogVappTemplateCaptureVappPtrOutputWithContext(ctx context.Context) CatalogVappTemplateCaptureVappPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogVappTemplateCaptureVappOutput).ToCatalogVappTemplateCaptureVappPtrOutputWithContext(ctx)
}

// CatalogVappTemplateCaptureVappPtrInput is an input type that accepts CatalogVappTemplateCaptureVappArgs, CatalogVappTemplateCaptureVappPtr and CatalogVappTemplateCaptureVappPtrOutput values.
// You can construct a concrete instance of `CatalogVappTemplateCaptureVappPtrInput` via:
//
//	        CatalogVappTemplateCaptureVappArgs{...}
//
//	or:
//
//	        nil
type CatalogVappTemplateCaptureVappPtrInput interface {
	pulumi.Input

	ToCatalogVappTemplateCaptureVappPtrOutput() CatalogVappTemplateCaptureVappPtrOutput
	ToCatalogVappTemplateCaptureVappPtrOutputWithContext(context.Context) CatalogVappTemplateCaptureVappPtrOutput
}

type catalogVappTemplateCaptureVappPtrType CatalogVappTemplateCaptureVappArgs

func CatalogVappTemplateCaptureVappPtr(v *CatalogVappTemplateCaptureVappArgs) CatalogVappTemplateCaptureVappPtrInput {
	return (*catalogVappTemplateCaptureVappPtrType)(v)
}

func (*catalogVappTemplateCaptureVappPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogVappTemplateCaptureVapp)(nil)).Elem()
}

func (i *catalogVappTemplateCaptureVappPtrType) ToCatalogVappTemplateCaptureVappPtrOutput() CatalogVappTemplateCaptureVappPtrOutput {
	return i.ToCatalogVappTemplateCaptureVappPtrOutputWithContext(context.Background())
}

func (i *catalogVappTemplateCaptureVappPtrType) ToCatalogVappTemplateCaptureVappPtrOutputWithContext(ctx context.Context) CatalogVappTemplateCaptureVappPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogVappTemplateCaptureVappPtrOutput)
}

type CatalogVappTemplateCaptureVappOutput struct{ *pulumi.OutputState }

func (CatalogVappTemplateCaptureVappOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogVappTemplateCaptureVapp)(nil)).Elem()
}

func (o CatalogVappTemplateCaptureVappOutput) ToCatalogVappTemplateCaptureVappOutput() CatalogVappTemplateCaptureVappOutput {
	return o
}

func (o CatalogVappTemplateCaptureVappOutput) ToCatalogVappTemplateCaptureVappOutputWithContext(ctx context.Context) CatalogVappTemplateCaptureVappOutput {
	return o
}

func (o CatalogVappTemplateCaptureVappOutput) ToCatalogVappTemplateCaptureVappPtrOutput() CatalogVappTemplateCaptureVappPtrOutput {
	return o.ToCatalogVappTemplateCaptureVappPtrOutputWithContext(context.Background())
}

func (o CatalogVappTemplateCaptureVappOutput) ToCatalogVappTemplateCaptureVappPtrOutputWithContext(ctx context.Context) CatalogVappTemplateCaptureVappPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CatalogVappTemplateCaptureVapp) *CatalogVappTemplateCaptureVapp {
		return &v
	}).(CatalogVappTemplateCaptureVappPtrOutput)
}

// Defines if Trusted Platform Module should be copied (false) or created (true). Default 'false'. VCD 10.4.2+
func (o CatalogVappTemplateCaptureVappOutput) CopyTpmOnInstantiate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CatalogVappTemplateCaptureVapp) *bool { return v.CopyTpmOnInstantiate }).(pulumi.BoolPtrOutput)
}

// Marks if instantiating applies customization settings ('true'). Default is 'false` - create an identical copy.
func (o CatalogVappTemplateCaptureVappOutput) CustomizeOnInstantiate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CatalogVappTemplateCaptureVapp) *bool { return v.CustomizeOnInstantiate }).(pulumi.BoolPtrOutput)
}

// An existing catalog item ID to overwrite
func (o CatalogVappTemplateCaptureVappOutput) OverwriteCatalogItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogVappTemplateCaptureVapp) *string { return v.OverwriteCatalogItemId }).(pulumi.StringPtrOutput)
}

// Source vApp ID (can be a vApp ID or 'vapp_id' field of standalone VM 'vcd_vm')
func (o CatalogVappTemplateCaptureVappOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogVappTemplateCaptureVapp) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

type CatalogVappTemplateCaptureVappPtrOutput struct{ *pulumi.OutputState }

func (CatalogVappTemplateCaptureVappPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogVappTemplateCaptureVapp)(nil)).Elem()
}

func (o CatalogVappTemplateCaptureVappPtrOutput) ToCatalogVappTemplateCaptureVappPtrOutput() CatalogVappTemplateCaptureVappPtrOutput {
	return o
}

func (o CatalogVappTemplateCaptureVappPtrOutput) ToCatalogVappTemplateCaptureVappPtrOutputWithContext(ctx context.Context) CatalogVappTemplateCaptureVappPtrOutput {
	return o
}

func (o CatalogVappTemplateCaptureVappPtrOutput) Elem() CatalogVappTemplateCaptureVappOutput {
	return o.ApplyT(func(v *CatalogVappTemplateCaptureVapp) CatalogVappTemplateCaptureVapp {
		if v != nil {
			return *v
		}
		var ret CatalogVappTemplateCaptureVapp
		return ret
	}).(CatalogVappTemplateCaptureVappOutput)
}

// Defines if Trusted Platform Module should be copied (false) or created (true). Default 'false'. VCD 10.4.2+
func (o CatalogVappTemplateCaptureVappPtrOutput) CopyTpmOnInstantiate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CatalogVappTemplateCaptureVapp) *bool {
		if v == nil {
			return nil
		}
		return v.CopyTpmOnInstantiate
	}).(pulumi.BoolPtrOutput)
}

// Marks if instantiating applies customization settings ('true'). Default is 'false` - create an identical copy.
func (o CatalogVappTemplateCaptureVappPtrOutput) CustomizeOnInstantiate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CatalogVappTemplateCaptureVapp) *bool {
		if v == nil {
			return nil
		}
		return v.CustomizeOnInstantiate
	}).(pulumi.BoolPtrOutput)
}

// An existing catalog item ID to overwrite
func (o CatalogVappTemplateCaptureVappPtrOutput) OverwriteCatalogItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CatalogVappTemplateCaptureVapp) *string {
		if v == nil {
			return nil
		}
		return v.OverwriteCatalogItemId
	}).(pulumi.StringPtrOutput)
}

// Source vApp ID (can be a vApp ID or 'vapp_id' field of standalone VM 'vcd_vm')
func (o CatalogVappTemplateCaptureVappPtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CatalogVappTemplateCaptureVapp) *string {
		if v == nil {
			return nil
		}
		return v.SourceId
	}).(pulumi.StringPtrOutput)
}

type CatalogVappTemplateLease struct {
	// How long the vApp Template is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by parent Org). Regular values accepted from 3600+.
	StorageLeaseInSec int `pulumi:"storageLeaseInSec"`
}

// CatalogVappTemplateLeaseInput is an input type that accepts CatalogVappTemplateLeaseArgs and CatalogVappTemplateLeaseOutput values.
// You can construct a concrete instance of `CatalogVappTemplateLeaseInput` via:
//
//	CatalogVappTemplateLeaseArgs{...}
type CatalogVappTemplateLeaseInput interface {
	pulumi.Input

	ToCatalogVappTemplateLeaseOutput() CatalogVappTemplateLeaseOutput
	ToCatalogVappTemplateLeaseOutputWithContext(context.Context) CatalogVappTemplateLeaseOutput
}

type CatalogVappTemplateLeaseArgs struct {
	// How long the vApp Template is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by parent Org). Regular values accepted from 3600+.
	StorageLeaseInSec pulumi.IntInput `pulumi:"storageLeaseInSec"`
}

func (CatalogVappTemplateLeaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogVappTemplateLease)(nil)).Elem()
}

func (i CatalogVappTemplateLeaseArgs) ToCatalogVappTemplateLeaseOutput() CatalogVappTemplateLeaseOutput {
	return i.ToCatalogVappTemplateLeaseOutputWithContext(context.Background())
}

func (i CatalogVappTemplateLeaseArgs) ToCatalogVappTemplateLeaseOutputWithContext(ctx context.Context) CatalogVappTemplateLeaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogVappTemplateLeaseOutput)
}

func (i CatalogVappTemplateLeaseArgs) ToCatalogVappTemplateLeasePtrOutput() CatalogVappTemplateLeasePtrOutput {
	return i.ToCatalogVappTemplateLeasePtrOutputWithContext(context.Background())
}

func (i CatalogVappTemplateLeaseArgs) ToCatalogVappTemplateLeasePtrOutputWithContext(ctx context.Context) CatalogVappTemplateLeasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogVappTemplateLeaseOutput).ToCatalogVappTemplateLeasePtrOutputWithContext(ctx)
}

// CatalogVappTemplateLeasePtrInput is an input type that accepts CatalogVappTemplateLeaseArgs, CatalogVappTemplateLeasePtr and CatalogVappTemplateLeasePtrOutput values.
// You can construct a concrete instance of `CatalogVappTemplateLeasePtrInput` via:
//
//	        CatalogVappTemplateLeaseArgs{...}
//
//	or:
//
//	        nil
type CatalogVappTemplateLeasePtrInput interface {
	pulumi.Input

	ToCatalogVappTemplateLeasePtrOutput() CatalogVappTemplateLeasePtrOutput
	ToCatalogVappTemplateLeasePtrOutputWithContext(context.Context) CatalogVappTemplateLeasePtrOutput
}

type catalogVappTemplateLeasePtrType CatalogVappTemplateLeaseArgs

func CatalogVappTemplateLeasePtr(v *CatalogVappTemplateLeaseArgs) CatalogVappTemplateLeasePtrInput {
	return (*catalogVappTemplateLeasePtrType)(v)
}

func (*catalogVappTemplateLeasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogVappTemplateLease)(nil)).Elem()
}

func (i *catalogVappTemplateLeasePtrType) ToCatalogVappTemplateLeasePtrOutput() CatalogVappTemplateLeasePtrOutput {
	return i.ToCatalogVappTemplateLeasePtrOutputWithContext(context.Background())
}

func (i *catalogVappTemplateLeasePtrType) ToCatalogVappTemplateLeasePtrOutputWithContext(ctx context.Context) CatalogVappTemplateLeasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogVappTemplateLeasePtrOutput)
}

type CatalogVappTemplateLeaseOutput struct{ *pulumi.OutputState }

func (CatalogVappTemplateLeaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogVappTemplateLease)(nil)).Elem()
}

func (o CatalogVappTemplateLeaseOutput) ToCatalogVappTemplateLeaseOutput() CatalogVappTemplateLeaseOutput {
	return o
}

func (o CatalogVappTemplateLeaseOutput) ToCatalogVappTemplateLeaseOutputWithContext(ctx context.Context) CatalogVappTemplateLeaseOutput {
	return o
}

func (o CatalogVappTemplateLeaseOutput) ToCatalogVappTemplateLeasePtrOutput() CatalogVappTemplateLeasePtrOutput {
	return o.ToCatalogVappTemplateLeasePtrOutputWithContext(context.Background())
}

func (o CatalogVappTemplateLeaseOutput) ToCatalogVappTemplateLeasePtrOutputWithContext(ctx context.Context) CatalogVappTemplateLeasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CatalogVappTemplateLease) *CatalogVappTemplateLease {
		return &v
	}).(CatalogVappTemplateLeasePtrOutput)
}

// How long the vApp Template is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by parent Org). Regular values accepted from 3600+.
func (o CatalogVappTemplateLeaseOutput) StorageLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v CatalogVappTemplateLease) int { return v.StorageLeaseInSec }).(pulumi.IntOutput)
}

type CatalogVappTemplateLeasePtrOutput struct{ *pulumi.OutputState }

func (CatalogVappTemplateLeasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogVappTemplateLease)(nil)).Elem()
}

func (o CatalogVappTemplateLeasePtrOutput) ToCatalogVappTemplateLeasePtrOutput() CatalogVappTemplateLeasePtrOutput {
	return o
}

func (o CatalogVappTemplateLeasePtrOutput) ToCatalogVappTemplateLeasePtrOutputWithContext(ctx context.Context) CatalogVappTemplateLeasePtrOutput {
	return o
}

func (o CatalogVappTemplateLeasePtrOutput) Elem() CatalogVappTemplateLeaseOutput {
	return o.ApplyT(func(v *CatalogVappTemplateLease) CatalogVappTemplateLease {
		if v != nil {
			return *v
		}
		var ret CatalogVappTemplateLease
		return ret
	}).(CatalogVappTemplateLeaseOutput)
}

// How long the vApp Template is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by parent Org). Regular values accepted from 3600+.
func (o CatalogVappTemplateLeasePtrOutput) StorageLeaseInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CatalogVappTemplateLease) *int {
		if v == nil {
			return nil
		}
		return &v.StorageLeaseInSec
	}).(pulumi.IntPtrOutput)
}

type CatalogVappTemplateMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// CatalogVappTemplateMetadataEntryInput is an input type that accepts CatalogVappTemplateMetadataEntryArgs and CatalogVappTemplateMetadataEntryOutput values.
// You can construct a concrete instance of `CatalogVappTemplateMetadataEntryInput` via:
//
//	CatalogVappTemplateMetadataEntryArgs{...}
type CatalogVappTemplateMetadataEntryInput interface {
	pulumi.Input

	ToCatalogVappTemplateMetadataEntryOutput() CatalogVappTemplateMetadataEntryOutput
	ToCatalogVappTemplateMetadataEntryOutputWithContext(context.Context) CatalogVappTemplateMetadataEntryOutput
}

type CatalogVappTemplateMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CatalogVappTemplateMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogVappTemplateMetadataEntry)(nil)).Elem()
}

func (i CatalogVappTemplateMetadataEntryArgs) ToCatalogVappTemplateMetadataEntryOutput() CatalogVappTemplateMetadataEntryOutput {
	return i.ToCatalogVappTemplateMetadataEntryOutputWithContext(context.Background())
}

func (i CatalogVappTemplateMetadataEntryArgs) ToCatalogVappTemplateMetadataEntryOutputWithContext(ctx context.Context) CatalogVappTemplateMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogVappTemplateMetadataEntryOutput)
}

// CatalogVappTemplateMetadataEntryArrayInput is an input type that accepts CatalogVappTemplateMetadataEntryArray and CatalogVappTemplateMetadataEntryArrayOutput values.
// You can construct a concrete instance of `CatalogVappTemplateMetadataEntryArrayInput` via:
//
//	CatalogVappTemplateMetadataEntryArray{ CatalogVappTemplateMetadataEntryArgs{...} }
type CatalogVappTemplateMetadataEntryArrayInput interface {
	pulumi.Input

	ToCatalogVappTemplateMetadataEntryArrayOutput() CatalogVappTemplateMetadataEntryArrayOutput
	ToCatalogVappTemplateMetadataEntryArrayOutputWithContext(context.Context) CatalogVappTemplateMetadataEntryArrayOutput
}

type CatalogVappTemplateMetadataEntryArray []CatalogVappTemplateMetadataEntryInput

func (CatalogVappTemplateMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogVappTemplateMetadataEntry)(nil)).Elem()
}

func (i CatalogVappTemplateMetadataEntryArray) ToCatalogVappTemplateMetadataEntryArrayOutput() CatalogVappTemplateMetadataEntryArrayOutput {
	return i.ToCatalogVappTemplateMetadataEntryArrayOutputWithContext(context.Background())
}

func (i CatalogVappTemplateMetadataEntryArray) ToCatalogVappTemplateMetadataEntryArrayOutputWithContext(ctx context.Context) CatalogVappTemplateMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogVappTemplateMetadataEntryArrayOutput)
}

type CatalogVappTemplateMetadataEntryOutput struct{ *pulumi.OutputState }

func (CatalogVappTemplateMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogVappTemplateMetadataEntry)(nil)).Elem()
}

func (o CatalogVappTemplateMetadataEntryOutput) ToCatalogVappTemplateMetadataEntryOutput() CatalogVappTemplateMetadataEntryOutput {
	return o
}

func (o CatalogVappTemplateMetadataEntryOutput) ToCatalogVappTemplateMetadataEntryOutputWithContext(ctx context.Context) CatalogVappTemplateMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o CatalogVappTemplateMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CatalogVappTemplateMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o CatalogVappTemplateMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogVappTemplateMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o CatalogVappTemplateMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogVappTemplateMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o CatalogVappTemplateMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogVappTemplateMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o CatalogVappTemplateMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogVappTemplateMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CatalogVappTemplateMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (CatalogVappTemplateMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogVappTemplateMetadataEntry)(nil)).Elem()
}

func (o CatalogVappTemplateMetadataEntryArrayOutput) ToCatalogVappTemplateMetadataEntryArrayOutput() CatalogVappTemplateMetadataEntryArrayOutput {
	return o
}

func (o CatalogVappTemplateMetadataEntryArrayOutput) ToCatalogVappTemplateMetadataEntryArrayOutputWithContext(ctx context.Context) CatalogVappTemplateMetadataEntryArrayOutput {
	return o
}

func (o CatalogVappTemplateMetadataEntryArrayOutput) Index(i pulumi.IntInput) CatalogVappTemplateMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogVappTemplateMetadataEntry {
		return vs[0].([]CatalogVappTemplateMetadataEntry)[vs[1].(int)]
	}).(CatalogVappTemplateMetadataEntryOutput)
}

type CseKubernetesClusterControlPlane struct {
	// Disk size, in **Gibibytes (Gi)**, for the control plane VMs. Must be at least `20`. Defaults to `20`
	DiskSizeGi *int `pulumi:"diskSizeGi"`
	// IP for the control plane. It will be automatically assigned during cluster creation if left empty
	Ip *string `pulumi:"ip"`
	// The number of nodes that the control plane has. Must be an odd number and higher than `0`. Defaults to `3`
	MachineCount *int `pulumi:"machineCount"`
	// VM Placement policy for the control plane VMs
	PlacementPolicyId *string `pulumi:"placementPolicyId"`
	// VM Sizing policy for the control plane VMs. Must be one of the ones made available during CSE installation
	SizingPolicyId *string `pulumi:"sizingPolicyId"`
	// Storage profile for the control plane VMs
	StorageProfileId *string `pulumi:"storageProfileId"`
}

// CseKubernetesClusterControlPlaneInput is an input type that accepts CseKubernetesClusterControlPlaneArgs and CseKubernetesClusterControlPlaneOutput values.
// You can construct a concrete instance of `CseKubernetesClusterControlPlaneInput` via:
//
//	CseKubernetesClusterControlPlaneArgs{...}
type CseKubernetesClusterControlPlaneInput interface {
	pulumi.Input

	ToCseKubernetesClusterControlPlaneOutput() CseKubernetesClusterControlPlaneOutput
	ToCseKubernetesClusterControlPlaneOutputWithContext(context.Context) CseKubernetesClusterControlPlaneOutput
}

type CseKubernetesClusterControlPlaneArgs struct {
	// Disk size, in **Gibibytes (Gi)**, for the control plane VMs. Must be at least `20`. Defaults to `20`
	DiskSizeGi pulumi.IntPtrInput `pulumi:"diskSizeGi"`
	// IP for the control plane. It will be automatically assigned during cluster creation if left empty
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The number of nodes that the control plane has. Must be an odd number and higher than `0`. Defaults to `3`
	MachineCount pulumi.IntPtrInput `pulumi:"machineCount"`
	// VM Placement policy for the control plane VMs
	PlacementPolicyId pulumi.StringPtrInput `pulumi:"placementPolicyId"`
	// VM Sizing policy for the control plane VMs. Must be one of the ones made available during CSE installation
	SizingPolicyId pulumi.StringPtrInput `pulumi:"sizingPolicyId"`
	// Storage profile for the control plane VMs
	StorageProfileId pulumi.StringPtrInput `pulumi:"storageProfileId"`
}

func (CseKubernetesClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseKubernetesClusterControlPlane)(nil)).Elem()
}

func (i CseKubernetesClusterControlPlaneArgs) ToCseKubernetesClusterControlPlaneOutput() CseKubernetesClusterControlPlaneOutput {
	return i.ToCseKubernetesClusterControlPlaneOutputWithContext(context.Background())
}

func (i CseKubernetesClusterControlPlaneArgs) ToCseKubernetesClusterControlPlaneOutputWithContext(ctx context.Context) CseKubernetesClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseKubernetesClusterControlPlaneOutput)
}

func (i CseKubernetesClusterControlPlaneArgs) ToCseKubernetesClusterControlPlanePtrOutput() CseKubernetesClusterControlPlanePtrOutput {
	return i.ToCseKubernetesClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i CseKubernetesClusterControlPlaneArgs) ToCseKubernetesClusterControlPlanePtrOutputWithContext(ctx context.Context) CseKubernetesClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseKubernetesClusterControlPlaneOutput).ToCseKubernetesClusterControlPlanePtrOutputWithContext(ctx)
}

// CseKubernetesClusterControlPlanePtrInput is an input type that accepts CseKubernetesClusterControlPlaneArgs, CseKubernetesClusterControlPlanePtr and CseKubernetesClusterControlPlanePtrOutput values.
// You can construct a concrete instance of `CseKubernetesClusterControlPlanePtrInput` via:
//
//	        CseKubernetesClusterControlPlaneArgs{...}
//
//	or:
//
//	        nil
type CseKubernetesClusterControlPlanePtrInput interface {
	pulumi.Input

	ToCseKubernetesClusterControlPlanePtrOutput() CseKubernetesClusterControlPlanePtrOutput
	ToCseKubernetesClusterControlPlanePtrOutputWithContext(context.Context) CseKubernetesClusterControlPlanePtrOutput
}

type cseKubernetesClusterControlPlanePtrType CseKubernetesClusterControlPlaneArgs

func CseKubernetesClusterControlPlanePtr(v *CseKubernetesClusterControlPlaneArgs) CseKubernetesClusterControlPlanePtrInput {
	return (*cseKubernetesClusterControlPlanePtrType)(v)
}

func (*cseKubernetesClusterControlPlanePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CseKubernetesClusterControlPlane)(nil)).Elem()
}

func (i *cseKubernetesClusterControlPlanePtrType) ToCseKubernetesClusterControlPlanePtrOutput() CseKubernetesClusterControlPlanePtrOutput {
	return i.ToCseKubernetesClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i *cseKubernetesClusterControlPlanePtrType) ToCseKubernetesClusterControlPlanePtrOutputWithContext(ctx context.Context) CseKubernetesClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseKubernetesClusterControlPlanePtrOutput)
}

type CseKubernetesClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (CseKubernetesClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseKubernetesClusterControlPlane)(nil)).Elem()
}

func (o CseKubernetesClusterControlPlaneOutput) ToCseKubernetesClusterControlPlaneOutput() CseKubernetesClusterControlPlaneOutput {
	return o
}

func (o CseKubernetesClusterControlPlaneOutput) ToCseKubernetesClusterControlPlaneOutputWithContext(ctx context.Context) CseKubernetesClusterControlPlaneOutput {
	return o
}

func (o CseKubernetesClusterControlPlaneOutput) ToCseKubernetesClusterControlPlanePtrOutput() CseKubernetesClusterControlPlanePtrOutput {
	return o.ToCseKubernetesClusterControlPlanePtrOutputWithContext(context.Background())
}

func (o CseKubernetesClusterControlPlaneOutput) ToCseKubernetesClusterControlPlanePtrOutputWithContext(ctx context.Context) CseKubernetesClusterControlPlanePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CseKubernetesClusterControlPlane) *CseKubernetesClusterControlPlane {
		return &v
	}).(CseKubernetesClusterControlPlanePtrOutput)
}

// Disk size, in **Gibibytes (Gi)**, for the control plane VMs. Must be at least `20`. Defaults to `20`
func (o CseKubernetesClusterControlPlaneOutput) DiskSizeGi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterControlPlane) *int { return v.DiskSizeGi }).(pulumi.IntPtrOutput)
}

// IP for the control plane. It will be automatically assigned during cluster creation if left empty
func (o CseKubernetesClusterControlPlaneOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterControlPlane) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The number of nodes that the control plane has. Must be an odd number and higher than `0`. Defaults to `3`
func (o CseKubernetesClusterControlPlaneOutput) MachineCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterControlPlane) *int { return v.MachineCount }).(pulumi.IntPtrOutput)
}

// VM Placement policy for the control plane VMs
func (o CseKubernetesClusterControlPlaneOutput) PlacementPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterControlPlane) *string { return v.PlacementPolicyId }).(pulumi.StringPtrOutput)
}

// VM Sizing policy for the control plane VMs. Must be one of the ones made available during CSE installation
func (o CseKubernetesClusterControlPlaneOutput) SizingPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterControlPlane) *string { return v.SizingPolicyId }).(pulumi.StringPtrOutput)
}

// Storage profile for the control plane VMs
func (o CseKubernetesClusterControlPlaneOutput) StorageProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterControlPlane) *string { return v.StorageProfileId }).(pulumi.StringPtrOutput)
}

type CseKubernetesClusterControlPlanePtrOutput struct{ *pulumi.OutputState }

func (CseKubernetesClusterControlPlanePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CseKubernetesClusterControlPlane)(nil)).Elem()
}

func (o CseKubernetesClusterControlPlanePtrOutput) ToCseKubernetesClusterControlPlanePtrOutput() CseKubernetesClusterControlPlanePtrOutput {
	return o
}

func (o CseKubernetesClusterControlPlanePtrOutput) ToCseKubernetesClusterControlPlanePtrOutputWithContext(ctx context.Context) CseKubernetesClusterControlPlanePtrOutput {
	return o
}

func (o CseKubernetesClusterControlPlanePtrOutput) Elem() CseKubernetesClusterControlPlaneOutput {
	return o.ApplyT(func(v *CseKubernetesClusterControlPlane) CseKubernetesClusterControlPlane {
		if v != nil {
			return *v
		}
		var ret CseKubernetesClusterControlPlane
		return ret
	}).(CseKubernetesClusterControlPlaneOutput)
}

// Disk size, in **Gibibytes (Gi)**, for the control plane VMs. Must be at least `20`. Defaults to `20`
func (o CseKubernetesClusterControlPlanePtrOutput) DiskSizeGi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CseKubernetesClusterControlPlane) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGi
	}).(pulumi.IntPtrOutput)
}

// IP for the control plane. It will be automatically assigned during cluster creation if left empty
func (o CseKubernetesClusterControlPlanePtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseKubernetesClusterControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// The number of nodes that the control plane has. Must be an odd number and higher than `0`. Defaults to `3`
func (o CseKubernetesClusterControlPlanePtrOutput) MachineCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CseKubernetesClusterControlPlane) *int {
		if v == nil {
			return nil
		}
		return v.MachineCount
	}).(pulumi.IntPtrOutput)
}

// VM Placement policy for the control plane VMs
func (o CseKubernetesClusterControlPlanePtrOutput) PlacementPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseKubernetesClusterControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.PlacementPolicyId
	}).(pulumi.StringPtrOutput)
}

// VM Sizing policy for the control plane VMs. Must be one of the ones made available during CSE installation
func (o CseKubernetesClusterControlPlanePtrOutput) SizingPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseKubernetesClusterControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.SizingPolicyId
	}).(pulumi.StringPtrOutput)
}

// Storage profile for the control plane VMs
func (o CseKubernetesClusterControlPlanePtrOutput) StorageProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseKubernetesClusterControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.StorageProfileId
	}).(pulumi.StringPtrOutput)
}

type CseKubernetesClusterDefaultStorageClass struct {
	// Filesystem of the storage class, can be either `ext4` or `xfs`
	Filesystem string `pulumi:"filesystem"`
	// The name of the default storage class. It must contain only lowercase alphanumeric characters or "-",
	// start with an alphabetic character, end with an alphanumeric, and contain at most 31 characters
	Name string `pulumi:"name"`
	// A value of `delete` deletes the volume when the PersistentVolumeClaim is deleted. `retain` does not,
	// and the volume can be manually reclaimed
	ReclaimPolicy string `pulumi:"reclaimPolicy"`
	// Storage profile for the default storage class
	StorageProfileId string `pulumi:"storageProfileId"`
}

// CseKubernetesClusterDefaultStorageClassInput is an input type that accepts CseKubernetesClusterDefaultStorageClassArgs and CseKubernetesClusterDefaultStorageClassOutput values.
// You can construct a concrete instance of `CseKubernetesClusterDefaultStorageClassInput` via:
//
//	CseKubernetesClusterDefaultStorageClassArgs{...}
type CseKubernetesClusterDefaultStorageClassInput interface {
	pulumi.Input

	ToCseKubernetesClusterDefaultStorageClassOutput() CseKubernetesClusterDefaultStorageClassOutput
	ToCseKubernetesClusterDefaultStorageClassOutputWithContext(context.Context) CseKubernetesClusterDefaultStorageClassOutput
}

type CseKubernetesClusterDefaultStorageClassArgs struct {
	// Filesystem of the storage class, can be either `ext4` or `xfs`
	Filesystem pulumi.StringInput `pulumi:"filesystem"`
	// The name of the default storage class. It must contain only lowercase alphanumeric characters or "-",
	// start with an alphabetic character, end with an alphanumeric, and contain at most 31 characters
	Name pulumi.StringInput `pulumi:"name"`
	// A value of `delete` deletes the volume when the PersistentVolumeClaim is deleted. `retain` does not,
	// and the volume can be manually reclaimed
	ReclaimPolicy pulumi.StringInput `pulumi:"reclaimPolicy"`
	// Storage profile for the default storage class
	StorageProfileId pulumi.StringInput `pulumi:"storageProfileId"`
}

func (CseKubernetesClusterDefaultStorageClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseKubernetesClusterDefaultStorageClass)(nil)).Elem()
}

func (i CseKubernetesClusterDefaultStorageClassArgs) ToCseKubernetesClusterDefaultStorageClassOutput() CseKubernetesClusterDefaultStorageClassOutput {
	return i.ToCseKubernetesClusterDefaultStorageClassOutputWithContext(context.Background())
}

func (i CseKubernetesClusterDefaultStorageClassArgs) ToCseKubernetesClusterDefaultStorageClassOutputWithContext(ctx context.Context) CseKubernetesClusterDefaultStorageClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseKubernetesClusterDefaultStorageClassOutput)
}

func (i CseKubernetesClusterDefaultStorageClassArgs) ToCseKubernetesClusterDefaultStorageClassPtrOutput() CseKubernetesClusterDefaultStorageClassPtrOutput {
	return i.ToCseKubernetesClusterDefaultStorageClassPtrOutputWithContext(context.Background())
}

func (i CseKubernetesClusterDefaultStorageClassArgs) ToCseKubernetesClusterDefaultStorageClassPtrOutputWithContext(ctx context.Context) CseKubernetesClusterDefaultStorageClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseKubernetesClusterDefaultStorageClassOutput).ToCseKubernetesClusterDefaultStorageClassPtrOutputWithContext(ctx)
}

// CseKubernetesClusterDefaultStorageClassPtrInput is an input type that accepts CseKubernetesClusterDefaultStorageClassArgs, CseKubernetesClusterDefaultStorageClassPtr and CseKubernetesClusterDefaultStorageClassPtrOutput values.
// You can construct a concrete instance of `CseKubernetesClusterDefaultStorageClassPtrInput` via:
//
//	        CseKubernetesClusterDefaultStorageClassArgs{...}
//
//	or:
//
//	        nil
type CseKubernetesClusterDefaultStorageClassPtrInput interface {
	pulumi.Input

	ToCseKubernetesClusterDefaultStorageClassPtrOutput() CseKubernetesClusterDefaultStorageClassPtrOutput
	ToCseKubernetesClusterDefaultStorageClassPtrOutputWithContext(context.Context) CseKubernetesClusterDefaultStorageClassPtrOutput
}

type cseKubernetesClusterDefaultStorageClassPtrType CseKubernetesClusterDefaultStorageClassArgs

func CseKubernetesClusterDefaultStorageClassPtr(v *CseKubernetesClusterDefaultStorageClassArgs) CseKubernetesClusterDefaultStorageClassPtrInput {
	return (*cseKubernetesClusterDefaultStorageClassPtrType)(v)
}

func (*cseKubernetesClusterDefaultStorageClassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CseKubernetesClusterDefaultStorageClass)(nil)).Elem()
}

func (i *cseKubernetesClusterDefaultStorageClassPtrType) ToCseKubernetesClusterDefaultStorageClassPtrOutput() CseKubernetesClusterDefaultStorageClassPtrOutput {
	return i.ToCseKubernetesClusterDefaultStorageClassPtrOutputWithContext(context.Background())
}

func (i *cseKubernetesClusterDefaultStorageClassPtrType) ToCseKubernetesClusterDefaultStorageClassPtrOutputWithContext(ctx context.Context) CseKubernetesClusterDefaultStorageClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseKubernetesClusterDefaultStorageClassPtrOutput)
}

type CseKubernetesClusterDefaultStorageClassOutput struct{ *pulumi.OutputState }

func (CseKubernetesClusterDefaultStorageClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseKubernetesClusterDefaultStorageClass)(nil)).Elem()
}

func (o CseKubernetesClusterDefaultStorageClassOutput) ToCseKubernetesClusterDefaultStorageClassOutput() CseKubernetesClusterDefaultStorageClassOutput {
	return o
}

func (o CseKubernetesClusterDefaultStorageClassOutput) ToCseKubernetesClusterDefaultStorageClassOutputWithContext(ctx context.Context) CseKubernetesClusterDefaultStorageClassOutput {
	return o
}

func (o CseKubernetesClusterDefaultStorageClassOutput) ToCseKubernetesClusterDefaultStorageClassPtrOutput() CseKubernetesClusterDefaultStorageClassPtrOutput {
	return o.ToCseKubernetesClusterDefaultStorageClassPtrOutputWithContext(context.Background())
}

func (o CseKubernetesClusterDefaultStorageClassOutput) ToCseKubernetesClusterDefaultStorageClassPtrOutputWithContext(ctx context.Context) CseKubernetesClusterDefaultStorageClassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CseKubernetesClusterDefaultStorageClass) *CseKubernetesClusterDefaultStorageClass {
		return &v
	}).(CseKubernetesClusterDefaultStorageClassPtrOutput)
}

// Filesystem of the storage class, can be either `ext4` or `xfs`
func (o CseKubernetesClusterDefaultStorageClassOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v CseKubernetesClusterDefaultStorageClass) string { return v.Filesystem }).(pulumi.StringOutput)
}

// The name of the default storage class. It must contain only lowercase alphanumeric characters or "-",
// start with an alphabetic character, end with an alphanumeric, and contain at most 31 characters
func (o CseKubernetesClusterDefaultStorageClassOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CseKubernetesClusterDefaultStorageClass) string { return v.Name }).(pulumi.StringOutput)
}

// A value of `delete` deletes the volume when the PersistentVolumeClaim is deleted. `retain` does not,
// and the volume can be manually reclaimed
func (o CseKubernetesClusterDefaultStorageClassOutput) ReclaimPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v CseKubernetesClusterDefaultStorageClass) string { return v.ReclaimPolicy }).(pulumi.StringOutput)
}

// Storage profile for the default storage class
func (o CseKubernetesClusterDefaultStorageClassOutput) StorageProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v CseKubernetesClusterDefaultStorageClass) string { return v.StorageProfileId }).(pulumi.StringOutput)
}

type CseKubernetesClusterDefaultStorageClassPtrOutput struct{ *pulumi.OutputState }

func (CseKubernetesClusterDefaultStorageClassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CseKubernetesClusterDefaultStorageClass)(nil)).Elem()
}

func (o CseKubernetesClusterDefaultStorageClassPtrOutput) ToCseKubernetesClusterDefaultStorageClassPtrOutput() CseKubernetesClusterDefaultStorageClassPtrOutput {
	return o
}

func (o CseKubernetesClusterDefaultStorageClassPtrOutput) ToCseKubernetesClusterDefaultStorageClassPtrOutputWithContext(ctx context.Context) CseKubernetesClusterDefaultStorageClassPtrOutput {
	return o
}

func (o CseKubernetesClusterDefaultStorageClassPtrOutput) Elem() CseKubernetesClusterDefaultStorageClassOutput {
	return o.ApplyT(func(v *CseKubernetesClusterDefaultStorageClass) CseKubernetesClusterDefaultStorageClass {
		if v != nil {
			return *v
		}
		var ret CseKubernetesClusterDefaultStorageClass
		return ret
	}).(CseKubernetesClusterDefaultStorageClassOutput)
}

// Filesystem of the storage class, can be either `ext4` or `xfs`
func (o CseKubernetesClusterDefaultStorageClassPtrOutput) Filesystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseKubernetesClusterDefaultStorageClass) *string {
		if v == nil {
			return nil
		}
		return &v.Filesystem
	}).(pulumi.StringPtrOutput)
}

// The name of the default storage class. It must contain only lowercase alphanumeric characters or "-",
// start with an alphabetic character, end with an alphanumeric, and contain at most 31 characters
func (o CseKubernetesClusterDefaultStorageClassPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseKubernetesClusterDefaultStorageClass) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A value of `delete` deletes the volume when the PersistentVolumeClaim is deleted. `retain` does not,
// and the volume can be manually reclaimed
func (o CseKubernetesClusterDefaultStorageClassPtrOutput) ReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseKubernetesClusterDefaultStorageClass) *string {
		if v == nil {
			return nil
		}
		return &v.ReclaimPolicy
	}).(pulumi.StringPtrOutput)
}

// Storage profile for the default storage class
func (o CseKubernetesClusterDefaultStorageClassPtrOutput) StorageProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseKubernetesClusterDefaultStorageClass) *string {
		if v == nil {
			return nil
		}
		return &v.StorageProfileId
	}).(pulumi.StringPtrOutput)
}

type CseKubernetesClusterEvent struct {
	// Details of the event
	Details *string `pulumi:"details"`
	// The name of the Kubernetes cluster. It must contain only lowercase alphanumeric characters or "-",
	// start with an alphabetic character, end with an alphanumeric, and contain at most 31 characters
	Name *string `pulumi:"name"`
	// When the event happened
	OccurredAt *string `pulumi:"occurredAt"`
	// ID of the resource that caused the event
	ResourceId *string `pulumi:"resourceId"`
	// Type of the event, either `event` or `error`
	Type *string `pulumi:"type"`
}

// CseKubernetesClusterEventInput is an input type that accepts CseKubernetesClusterEventArgs and CseKubernetesClusterEventOutput values.
// You can construct a concrete instance of `CseKubernetesClusterEventInput` via:
//
//	CseKubernetesClusterEventArgs{...}
type CseKubernetesClusterEventInput interface {
	pulumi.Input

	ToCseKubernetesClusterEventOutput() CseKubernetesClusterEventOutput
	ToCseKubernetesClusterEventOutputWithContext(context.Context) CseKubernetesClusterEventOutput
}

type CseKubernetesClusterEventArgs struct {
	// Details of the event
	Details pulumi.StringPtrInput `pulumi:"details"`
	// The name of the Kubernetes cluster. It must contain only lowercase alphanumeric characters or "-",
	// start with an alphabetic character, end with an alphanumeric, and contain at most 31 characters
	Name pulumi.StringPtrInput `pulumi:"name"`
	// When the event happened
	OccurredAt pulumi.StringPtrInput `pulumi:"occurredAt"`
	// ID of the resource that caused the event
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Type of the event, either `event` or `error`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CseKubernetesClusterEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseKubernetesClusterEvent)(nil)).Elem()
}

func (i CseKubernetesClusterEventArgs) ToCseKubernetesClusterEventOutput() CseKubernetesClusterEventOutput {
	return i.ToCseKubernetesClusterEventOutputWithContext(context.Background())
}

func (i CseKubernetesClusterEventArgs) ToCseKubernetesClusterEventOutputWithContext(ctx context.Context) CseKubernetesClusterEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseKubernetesClusterEventOutput)
}

// CseKubernetesClusterEventArrayInput is an input type that accepts CseKubernetesClusterEventArray and CseKubernetesClusterEventArrayOutput values.
// You can construct a concrete instance of `CseKubernetesClusterEventArrayInput` via:
//
//	CseKubernetesClusterEventArray{ CseKubernetesClusterEventArgs{...} }
type CseKubernetesClusterEventArrayInput interface {
	pulumi.Input

	ToCseKubernetesClusterEventArrayOutput() CseKubernetesClusterEventArrayOutput
	ToCseKubernetesClusterEventArrayOutputWithContext(context.Context) CseKubernetesClusterEventArrayOutput
}

type CseKubernetesClusterEventArray []CseKubernetesClusterEventInput

func (CseKubernetesClusterEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseKubernetesClusterEvent)(nil)).Elem()
}

func (i CseKubernetesClusterEventArray) ToCseKubernetesClusterEventArrayOutput() CseKubernetesClusterEventArrayOutput {
	return i.ToCseKubernetesClusterEventArrayOutputWithContext(context.Background())
}

func (i CseKubernetesClusterEventArray) ToCseKubernetesClusterEventArrayOutputWithContext(ctx context.Context) CseKubernetesClusterEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseKubernetesClusterEventArrayOutput)
}

type CseKubernetesClusterEventOutput struct{ *pulumi.OutputState }

func (CseKubernetesClusterEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseKubernetesClusterEvent)(nil)).Elem()
}

func (o CseKubernetesClusterEventOutput) ToCseKubernetesClusterEventOutput() CseKubernetesClusterEventOutput {
	return o
}

func (o CseKubernetesClusterEventOutput) ToCseKubernetesClusterEventOutputWithContext(ctx context.Context) CseKubernetesClusterEventOutput {
	return o
}

// Details of the event
func (o CseKubernetesClusterEventOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterEvent) *string { return v.Details }).(pulumi.StringPtrOutput)
}

// The name of the Kubernetes cluster. It must contain only lowercase alphanumeric characters or "-",
// start with an alphabetic character, end with an alphanumeric, and contain at most 31 characters
func (o CseKubernetesClusterEventOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterEvent) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// When the event happened
func (o CseKubernetesClusterEventOutput) OccurredAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterEvent) *string { return v.OccurredAt }).(pulumi.StringPtrOutput)
}

// ID of the resource that caused the event
func (o CseKubernetesClusterEventOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterEvent) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Type of the event, either `event` or `error`
func (o CseKubernetesClusterEventOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterEvent) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CseKubernetesClusterEventArrayOutput struct{ *pulumi.OutputState }

func (CseKubernetesClusterEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseKubernetesClusterEvent)(nil)).Elem()
}

func (o CseKubernetesClusterEventArrayOutput) ToCseKubernetesClusterEventArrayOutput() CseKubernetesClusterEventArrayOutput {
	return o
}

func (o CseKubernetesClusterEventArrayOutput) ToCseKubernetesClusterEventArrayOutputWithContext(ctx context.Context) CseKubernetesClusterEventArrayOutput {
	return o
}

func (o CseKubernetesClusterEventArrayOutput) Index(i pulumi.IntInput) CseKubernetesClusterEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseKubernetesClusterEvent {
		return vs[0].([]CseKubernetesClusterEvent)[vs[1].(int)]
	}).(CseKubernetesClusterEventOutput)
}

type CseKubernetesClusterWorkerPool struct {
	// Maximum replicas for the autoscaling capabilities of this worker pool. Requires 'autoscaler_min_replicas'
	AutoscalerMaxReplicas *int `pulumi:"autoscalerMaxReplicas"`
	// Minimum replicas for the autoscaling capabilities of this worker pool. Requires 'autoscaler_max_replicas'
	AutoscalerMinReplicas *int `pulumi:"autoscalerMinReplicas"`
	// Disk size, in Gibibytes (Gi), for this worker pool
	DiskSizeGi *int `pulumi:"diskSizeGi"`
	// The number of nodes that this worker pool has. Must be higher than or equal to 0. Ignored if 'autoscaler_max_replicas' and 'autoscaler_min_replicas' are set
	MachineCount *int `pulumi:"machineCount"`
	// The name of the Kubernetes cluster. It must contain only lowercase alphanumeric characters or "-",
	// start with an alphabetic character, end with an alphanumeric, and contain at most 31 characters
	Name string `pulumi:"name"`
	// VM Placement policy for this worker pool
	PlacementPolicyId *string `pulumi:"placementPolicyId"`
	// VM Sizing policy for this worker pool
	SizingPolicyId *string `pulumi:"sizingPolicyId"`
	// Storage profile for this worker pool
	StorageProfileId *string `pulumi:"storageProfileId"`
	// vGPU policy for this worker pool
	VgpuPolicyId *string `pulumi:"vgpuPolicyId"`
}

// CseKubernetesClusterWorkerPoolInput is an input type that accepts CseKubernetesClusterWorkerPoolArgs and CseKubernetesClusterWorkerPoolOutput values.
// You can construct a concrete instance of `CseKubernetesClusterWorkerPoolInput` via:
//
//	CseKubernetesClusterWorkerPoolArgs{...}
type CseKubernetesClusterWorkerPoolInput interface {
	pulumi.Input

	ToCseKubernetesClusterWorkerPoolOutput() CseKubernetesClusterWorkerPoolOutput
	ToCseKubernetesClusterWorkerPoolOutputWithContext(context.Context) CseKubernetesClusterWorkerPoolOutput
}

type CseKubernetesClusterWorkerPoolArgs struct {
	// Maximum replicas for the autoscaling capabilities of this worker pool. Requires 'autoscaler_min_replicas'
	AutoscalerMaxReplicas pulumi.IntPtrInput `pulumi:"autoscalerMaxReplicas"`
	// Minimum replicas for the autoscaling capabilities of this worker pool. Requires 'autoscaler_max_replicas'
	AutoscalerMinReplicas pulumi.IntPtrInput `pulumi:"autoscalerMinReplicas"`
	// Disk size, in Gibibytes (Gi), for this worker pool
	DiskSizeGi pulumi.IntPtrInput `pulumi:"diskSizeGi"`
	// The number of nodes that this worker pool has. Must be higher than or equal to 0. Ignored if 'autoscaler_max_replicas' and 'autoscaler_min_replicas' are set
	MachineCount pulumi.IntPtrInput `pulumi:"machineCount"`
	// The name of the Kubernetes cluster. It must contain only lowercase alphanumeric characters or "-",
	// start with an alphabetic character, end with an alphanumeric, and contain at most 31 characters
	Name pulumi.StringInput `pulumi:"name"`
	// VM Placement policy for this worker pool
	PlacementPolicyId pulumi.StringPtrInput `pulumi:"placementPolicyId"`
	// VM Sizing policy for this worker pool
	SizingPolicyId pulumi.StringPtrInput `pulumi:"sizingPolicyId"`
	// Storage profile for this worker pool
	StorageProfileId pulumi.StringPtrInput `pulumi:"storageProfileId"`
	// vGPU policy for this worker pool
	VgpuPolicyId pulumi.StringPtrInput `pulumi:"vgpuPolicyId"`
}

func (CseKubernetesClusterWorkerPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseKubernetesClusterWorkerPool)(nil)).Elem()
}

func (i CseKubernetesClusterWorkerPoolArgs) ToCseKubernetesClusterWorkerPoolOutput() CseKubernetesClusterWorkerPoolOutput {
	return i.ToCseKubernetesClusterWorkerPoolOutputWithContext(context.Background())
}

func (i CseKubernetesClusterWorkerPoolArgs) ToCseKubernetesClusterWorkerPoolOutputWithContext(ctx context.Context) CseKubernetesClusterWorkerPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseKubernetesClusterWorkerPoolOutput)
}

// CseKubernetesClusterWorkerPoolArrayInput is an input type that accepts CseKubernetesClusterWorkerPoolArray and CseKubernetesClusterWorkerPoolArrayOutput values.
// You can construct a concrete instance of `CseKubernetesClusterWorkerPoolArrayInput` via:
//
//	CseKubernetesClusterWorkerPoolArray{ CseKubernetesClusterWorkerPoolArgs{...} }
type CseKubernetesClusterWorkerPoolArrayInput interface {
	pulumi.Input

	ToCseKubernetesClusterWorkerPoolArrayOutput() CseKubernetesClusterWorkerPoolArrayOutput
	ToCseKubernetesClusterWorkerPoolArrayOutputWithContext(context.Context) CseKubernetesClusterWorkerPoolArrayOutput
}

type CseKubernetesClusterWorkerPoolArray []CseKubernetesClusterWorkerPoolInput

func (CseKubernetesClusterWorkerPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseKubernetesClusterWorkerPool)(nil)).Elem()
}

func (i CseKubernetesClusterWorkerPoolArray) ToCseKubernetesClusterWorkerPoolArrayOutput() CseKubernetesClusterWorkerPoolArrayOutput {
	return i.ToCseKubernetesClusterWorkerPoolArrayOutputWithContext(context.Background())
}

func (i CseKubernetesClusterWorkerPoolArray) ToCseKubernetesClusterWorkerPoolArrayOutputWithContext(ctx context.Context) CseKubernetesClusterWorkerPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseKubernetesClusterWorkerPoolArrayOutput)
}

type CseKubernetesClusterWorkerPoolOutput struct{ *pulumi.OutputState }

func (CseKubernetesClusterWorkerPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseKubernetesClusterWorkerPool)(nil)).Elem()
}

func (o CseKubernetesClusterWorkerPoolOutput) ToCseKubernetesClusterWorkerPoolOutput() CseKubernetesClusterWorkerPoolOutput {
	return o
}

func (o CseKubernetesClusterWorkerPoolOutput) ToCseKubernetesClusterWorkerPoolOutputWithContext(ctx context.Context) CseKubernetesClusterWorkerPoolOutput {
	return o
}

// Maximum replicas for the autoscaling capabilities of this worker pool. Requires 'autoscaler_min_replicas'
func (o CseKubernetesClusterWorkerPoolOutput) AutoscalerMaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterWorkerPool) *int { return v.AutoscalerMaxReplicas }).(pulumi.IntPtrOutput)
}

// Minimum replicas for the autoscaling capabilities of this worker pool. Requires 'autoscaler_max_replicas'
func (o CseKubernetesClusterWorkerPoolOutput) AutoscalerMinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterWorkerPool) *int { return v.AutoscalerMinReplicas }).(pulumi.IntPtrOutput)
}

// Disk size, in Gibibytes (Gi), for this worker pool
func (o CseKubernetesClusterWorkerPoolOutput) DiskSizeGi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterWorkerPool) *int { return v.DiskSizeGi }).(pulumi.IntPtrOutput)
}

// The number of nodes that this worker pool has. Must be higher than or equal to 0. Ignored if 'autoscaler_max_replicas' and 'autoscaler_min_replicas' are set
func (o CseKubernetesClusterWorkerPoolOutput) MachineCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterWorkerPool) *int { return v.MachineCount }).(pulumi.IntPtrOutput)
}

// The name of the Kubernetes cluster. It must contain only lowercase alphanumeric characters or "-",
// start with an alphabetic character, end with an alphanumeric, and contain at most 31 characters
func (o CseKubernetesClusterWorkerPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CseKubernetesClusterWorkerPool) string { return v.Name }).(pulumi.StringOutput)
}

// VM Placement policy for this worker pool
func (o CseKubernetesClusterWorkerPoolOutput) PlacementPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterWorkerPool) *string { return v.PlacementPolicyId }).(pulumi.StringPtrOutput)
}

// VM Sizing policy for this worker pool
func (o CseKubernetesClusterWorkerPoolOutput) SizingPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterWorkerPool) *string { return v.SizingPolicyId }).(pulumi.StringPtrOutput)
}

// Storage profile for this worker pool
func (o CseKubernetesClusterWorkerPoolOutput) StorageProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterWorkerPool) *string { return v.StorageProfileId }).(pulumi.StringPtrOutput)
}

// vGPU policy for this worker pool
func (o CseKubernetesClusterWorkerPoolOutput) VgpuPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseKubernetesClusterWorkerPool) *string { return v.VgpuPolicyId }).(pulumi.StringPtrOutput)
}

type CseKubernetesClusterWorkerPoolArrayOutput struct{ *pulumi.OutputState }

func (CseKubernetesClusterWorkerPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseKubernetesClusterWorkerPool)(nil)).Elem()
}

func (o CseKubernetesClusterWorkerPoolArrayOutput) ToCseKubernetesClusterWorkerPoolArrayOutput() CseKubernetesClusterWorkerPoolArrayOutput {
	return o
}

func (o CseKubernetesClusterWorkerPoolArrayOutput) ToCseKubernetesClusterWorkerPoolArrayOutputWithContext(ctx context.Context) CseKubernetesClusterWorkerPoolArrayOutput {
	return o
}

func (o CseKubernetesClusterWorkerPoolArrayOutput) Index(i pulumi.IntInput) CseKubernetesClusterWorkerPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseKubernetesClusterWorkerPool {
		return vs[0].([]CseKubernetesClusterWorkerPool)[vs[1].(int)]
	}).(CseKubernetesClusterWorkerPoolOutput)
}

type DseRegistryConfigurationContainerRegistry struct {
	// Registry description
	Description string `pulumi:"description"`
	// Registry host
	Host string `pulumi:"host"`
	// Password for registry user
	Password *string `pulumi:"password"`
	// Username for registry access
	Username *string `pulumi:"username"`
}

// DseRegistryConfigurationContainerRegistryInput is an input type that accepts DseRegistryConfigurationContainerRegistryArgs and DseRegistryConfigurationContainerRegistryOutput values.
// You can construct a concrete instance of `DseRegistryConfigurationContainerRegistryInput` via:
//
//	DseRegistryConfigurationContainerRegistryArgs{...}
type DseRegistryConfigurationContainerRegistryInput interface {
	pulumi.Input

	ToDseRegistryConfigurationContainerRegistryOutput() DseRegistryConfigurationContainerRegistryOutput
	ToDseRegistryConfigurationContainerRegistryOutputWithContext(context.Context) DseRegistryConfigurationContainerRegistryOutput
}

type DseRegistryConfigurationContainerRegistryArgs struct {
	// Registry description
	Description pulumi.StringInput `pulumi:"description"`
	// Registry host
	Host pulumi.StringInput `pulumi:"host"`
	// Password for registry user
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Username for registry access
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (DseRegistryConfigurationContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DseRegistryConfigurationContainerRegistry)(nil)).Elem()
}

func (i DseRegistryConfigurationContainerRegistryArgs) ToDseRegistryConfigurationContainerRegistryOutput() DseRegistryConfigurationContainerRegistryOutput {
	return i.ToDseRegistryConfigurationContainerRegistryOutputWithContext(context.Background())
}

func (i DseRegistryConfigurationContainerRegistryArgs) ToDseRegistryConfigurationContainerRegistryOutputWithContext(ctx context.Context) DseRegistryConfigurationContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DseRegistryConfigurationContainerRegistryOutput)
}

// DseRegistryConfigurationContainerRegistryArrayInput is an input type that accepts DseRegistryConfigurationContainerRegistryArray and DseRegistryConfigurationContainerRegistryArrayOutput values.
// You can construct a concrete instance of `DseRegistryConfigurationContainerRegistryArrayInput` via:
//
//	DseRegistryConfigurationContainerRegistryArray{ DseRegistryConfigurationContainerRegistryArgs{...} }
type DseRegistryConfigurationContainerRegistryArrayInput interface {
	pulumi.Input

	ToDseRegistryConfigurationContainerRegistryArrayOutput() DseRegistryConfigurationContainerRegistryArrayOutput
	ToDseRegistryConfigurationContainerRegistryArrayOutputWithContext(context.Context) DseRegistryConfigurationContainerRegistryArrayOutput
}

type DseRegistryConfigurationContainerRegistryArray []DseRegistryConfigurationContainerRegistryInput

func (DseRegistryConfigurationContainerRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DseRegistryConfigurationContainerRegistry)(nil)).Elem()
}

func (i DseRegistryConfigurationContainerRegistryArray) ToDseRegistryConfigurationContainerRegistryArrayOutput() DseRegistryConfigurationContainerRegistryArrayOutput {
	return i.ToDseRegistryConfigurationContainerRegistryArrayOutputWithContext(context.Background())
}

func (i DseRegistryConfigurationContainerRegistryArray) ToDseRegistryConfigurationContainerRegistryArrayOutputWithContext(ctx context.Context) DseRegistryConfigurationContainerRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DseRegistryConfigurationContainerRegistryArrayOutput)
}

type DseRegistryConfigurationContainerRegistryOutput struct{ *pulumi.OutputState }

func (DseRegistryConfigurationContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DseRegistryConfigurationContainerRegistry)(nil)).Elem()
}

func (o DseRegistryConfigurationContainerRegistryOutput) ToDseRegistryConfigurationContainerRegistryOutput() DseRegistryConfigurationContainerRegistryOutput {
	return o
}

func (o DseRegistryConfigurationContainerRegistryOutput) ToDseRegistryConfigurationContainerRegistryOutputWithContext(ctx context.Context) DseRegistryConfigurationContainerRegistryOutput {
	return o
}

// Registry description
func (o DseRegistryConfigurationContainerRegistryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v DseRegistryConfigurationContainerRegistry) string { return v.Description }).(pulumi.StringOutput)
}

// Registry host
func (o DseRegistryConfigurationContainerRegistryOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DseRegistryConfigurationContainerRegistry) string { return v.Host }).(pulumi.StringOutput)
}

// Password for registry user
func (o DseRegistryConfigurationContainerRegistryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DseRegistryConfigurationContainerRegistry) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Username for registry access
func (o DseRegistryConfigurationContainerRegistryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DseRegistryConfigurationContainerRegistry) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type DseRegistryConfigurationContainerRegistryArrayOutput struct{ *pulumi.OutputState }

func (DseRegistryConfigurationContainerRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DseRegistryConfigurationContainerRegistry)(nil)).Elem()
}

func (o DseRegistryConfigurationContainerRegistryArrayOutput) ToDseRegistryConfigurationContainerRegistryArrayOutput() DseRegistryConfigurationContainerRegistryArrayOutput {
	return o
}

func (o DseRegistryConfigurationContainerRegistryArrayOutput) ToDseRegistryConfigurationContainerRegistryArrayOutputWithContext(ctx context.Context) DseRegistryConfigurationContainerRegistryArrayOutput {
	return o
}

func (o DseRegistryConfigurationContainerRegistryArrayOutput) Index(i pulumi.IntInput) DseRegistryConfigurationContainerRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DseRegistryConfigurationContainerRegistry {
		return vs[0].([]DseRegistryConfigurationContainerRegistry)[vs[1].(int)]
	}).(DseRegistryConfigurationContainerRegistryOutput)
}

type EdgegatewayExternalNetwork struct {
	// Enable rate limiting
	EnableRateLimit *bool `pulumi:"enableRateLimit"`
	// Incoming rate limit (Mbps)
	IncomingRateLimit *float64 `pulumi:"incomingRateLimit"`
	// A unique name for the edge gateway.
	Name string `pulumi:"name"`
	// Outgoing rate limit (Mbps)
	OutgoingRateLimit *float64                           `pulumi:"outgoingRateLimit"`
	Subnets           []EdgegatewayExternalNetworkSubnet `pulumi:"subnets"`
}

// EdgegatewayExternalNetworkInput is an input type that accepts EdgegatewayExternalNetworkArgs and EdgegatewayExternalNetworkOutput values.
// You can construct a concrete instance of `EdgegatewayExternalNetworkInput` via:
//
//	EdgegatewayExternalNetworkArgs{...}
type EdgegatewayExternalNetworkInput interface {
	pulumi.Input

	ToEdgegatewayExternalNetworkOutput() EdgegatewayExternalNetworkOutput
	ToEdgegatewayExternalNetworkOutputWithContext(context.Context) EdgegatewayExternalNetworkOutput
}

type EdgegatewayExternalNetworkArgs struct {
	// Enable rate limiting
	EnableRateLimit pulumi.BoolPtrInput `pulumi:"enableRateLimit"`
	// Incoming rate limit (Mbps)
	IncomingRateLimit pulumi.Float64PtrInput `pulumi:"incomingRateLimit"`
	// A unique name for the edge gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// Outgoing rate limit (Mbps)
	OutgoingRateLimit pulumi.Float64PtrInput                     `pulumi:"outgoingRateLimit"`
	Subnets           EdgegatewayExternalNetworkSubnetArrayInput `pulumi:"subnets"`
}

func (EdgegatewayExternalNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgegatewayExternalNetwork)(nil)).Elem()
}

func (i EdgegatewayExternalNetworkArgs) ToEdgegatewayExternalNetworkOutput() EdgegatewayExternalNetworkOutput {
	return i.ToEdgegatewayExternalNetworkOutputWithContext(context.Background())
}

func (i EdgegatewayExternalNetworkArgs) ToEdgegatewayExternalNetworkOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgegatewayExternalNetworkOutput)
}

// EdgegatewayExternalNetworkArrayInput is an input type that accepts EdgegatewayExternalNetworkArray and EdgegatewayExternalNetworkArrayOutput values.
// You can construct a concrete instance of `EdgegatewayExternalNetworkArrayInput` via:
//
//	EdgegatewayExternalNetworkArray{ EdgegatewayExternalNetworkArgs{...} }
type EdgegatewayExternalNetworkArrayInput interface {
	pulumi.Input

	ToEdgegatewayExternalNetworkArrayOutput() EdgegatewayExternalNetworkArrayOutput
	ToEdgegatewayExternalNetworkArrayOutputWithContext(context.Context) EdgegatewayExternalNetworkArrayOutput
}

type EdgegatewayExternalNetworkArray []EdgegatewayExternalNetworkInput

func (EdgegatewayExternalNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdgegatewayExternalNetwork)(nil)).Elem()
}

func (i EdgegatewayExternalNetworkArray) ToEdgegatewayExternalNetworkArrayOutput() EdgegatewayExternalNetworkArrayOutput {
	return i.ToEdgegatewayExternalNetworkArrayOutputWithContext(context.Background())
}

func (i EdgegatewayExternalNetworkArray) ToEdgegatewayExternalNetworkArrayOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgegatewayExternalNetworkArrayOutput)
}

type EdgegatewayExternalNetworkOutput struct{ *pulumi.OutputState }

func (EdgegatewayExternalNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgegatewayExternalNetwork)(nil)).Elem()
}

func (o EdgegatewayExternalNetworkOutput) ToEdgegatewayExternalNetworkOutput() EdgegatewayExternalNetworkOutput {
	return o
}

func (o EdgegatewayExternalNetworkOutput) ToEdgegatewayExternalNetworkOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkOutput {
	return o
}

// Enable rate limiting
func (o EdgegatewayExternalNetworkOutput) EnableRateLimit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetwork) *bool { return v.EnableRateLimit }).(pulumi.BoolPtrOutput)
}

// Incoming rate limit (Mbps)
func (o EdgegatewayExternalNetworkOutput) IncomingRateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetwork) *float64 { return v.IncomingRateLimit }).(pulumi.Float64PtrOutput)
}

// A unique name for the edge gateway.
func (o EdgegatewayExternalNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// Outgoing rate limit (Mbps)
func (o EdgegatewayExternalNetworkOutput) OutgoingRateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetwork) *float64 { return v.OutgoingRateLimit }).(pulumi.Float64PtrOutput)
}

func (o EdgegatewayExternalNetworkOutput) Subnets() EdgegatewayExternalNetworkSubnetArrayOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetwork) []EdgegatewayExternalNetworkSubnet { return v.Subnets }).(EdgegatewayExternalNetworkSubnetArrayOutput)
}

type EdgegatewayExternalNetworkArrayOutput struct{ *pulumi.OutputState }

func (EdgegatewayExternalNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdgegatewayExternalNetwork)(nil)).Elem()
}

func (o EdgegatewayExternalNetworkArrayOutput) ToEdgegatewayExternalNetworkArrayOutput() EdgegatewayExternalNetworkArrayOutput {
	return o
}

func (o EdgegatewayExternalNetworkArrayOutput) ToEdgegatewayExternalNetworkArrayOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkArrayOutput {
	return o
}

func (o EdgegatewayExternalNetworkArrayOutput) Index(i pulumi.IntInput) EdgegatewayExternalNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EdgegatewayExternalNetwork {
		return vs[0].([]EdgegatewayExternalNetwork)[vs[1].(int)]
	}).(EdgegatewayExternalNetworkOutput)
}

type EdgegatewayExternalNetworkSubnet struct {
	// Gateway address for a subnet
	Gateway string `pulumi:"gateway"`
	// IP address on the edge gateway - will be auto-assigned if not defined
	IpAddress *string `pulumi:"ipAddress"`
	// Netmask address for a subnet
	Netmask string `pulumi:"netmask"`
	// Define zero or more blocks to sub-allocate pools on the edge gateway
	SuballocatePools []EdgegatewayExternalNetworkSubnetSuballocatePool `pulumi:"suballocatePools"`
	// Defines if this subnet should be used as default gateway for edge
	UseForDefaultRoute *bool `pulumi:"useForDefaultRoute"`
}

// EdgegatewayExternalNetworkSubnetInput is an input type that accepts EdgegatewayExternalNetworkSubnetArgs and EdgegatewayExternalNetworkSubnetOutput values.
// You can construct a concrete instance of `EdgegatewayExternalNetworkSubnetInput` via:
//
//	EdgegatewayExternalNetworkSubnetArgs{...}
type EdgegatewayExternalNetworkSubnetInput interface {
	pulumi.Input

	ToEdgegatewayExternalNetworkSubnetOutput() EdgegatewayExternalNetworkSubnetOutput
	ToEdgegatewayExternalNetworkSubnetOutputWithContext(context.Context) EdgegatewayExternalNetworkSubnetOutput
}

type EdgegatewayExternalNetworkSubnetArgs struct {
	// Gateway address for a subnet
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// IP address on the edge gateway - will be auto-assigned if not defined
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Netmask address for a subnet
	Netmask pulumi.StringInput `pulumi:"netmask"`
	// Define zero or more blocks to sub-allocate pools on the edge gateway
	SuballocatePools EdgegatewayExternalNetworkSubnetSuballocatePoolArrayInput `pulumi:"suballocatePools"`
	// Defines if this subnet should be used as default gateway for edge
	UseForDefaultRoute pulumi.BoolPtrInput `pulumi:"useForDefaultRoute"`
}

func (EdgegatewayExternalNetworkSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgegatewayExternalNetworkSubnet)(nil)).Elem()
}

func (i EdgegatewayExternalNetworkSubnetArgs) ToEdgegatewayExternalNetworkSubnetOutput() EdgegatewayExternalNetworkSubnetOutput {
	return i.ToEdgegatewayExternalNetworkSubnetOutputWithContext(context.Background())
}

func (i EdgegatewayExternalNetworkSubnetArgs) ToEdgegatewayExternalNetworkSubnetOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgegatewayExternalNetworkSubnetOutput)
}

// EdgegatewayExternalNetworkSubnetArrayInput is an input type that accepts EdgegatewayExternalNetworkSubnetArray and EdgegatewayExternalNetworkSubnetArrayOutput values.
// You can construct a concrete instance of `EdgegatewayExternalNetworkSubnetArrayInput` via:
//
//	EdgegatewayExternalNetworkSubnetArray{ EdgegatewayExternalNetworkSubnetArgs{...} }
type EdgegatewayExternalNetworkSubnetArrayInput interface {
	pulumi.Input

	ToEdgegatewayExternalNetworkSubnetArrayOutput() EdgegatewayExternalNetworkSubnetArrayOutput
	ToEdgegatewayExternalNetworkSubnetArrayOutputWithContext(context.Context) EdgegatewayExternalNetworkSubnetArrayOutput
}

type EdgegatewayExternalNetworkSubnetArray []EdgegatewayExternalNetworkSubnetInput

func (EdgegatewayExternalNetworkSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdgegatewayExternalNetworkSubnet)(nil)).Elem()
}

func (i EdgegatewayExternalNetworkSubnetArray) ToEdgegatewayExternalNetworkSubnetArrayOutput() EdgegatewayExternalNetworkSubnetArrayOutput {
	return i.ToEdgegatewayExternalNetworkSubnetArrayOutputWithContext(context.Background())
}

func (i EdgegatewayExternalNetworkSubnetArray) ToEdgegatewayExternalNetworkSubnetArrayOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgegatewayExternalNetworkSubnetArrayOutput)
}

type EdgegatewayExternalNetworkSubnetOutput struct{ *pulumi.OutputState }

func (EdgegatewayExternalNetworkSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgegatewayExternalNetworkSubnet)(nil)).Elem()
}

func (o EdgegatewayExternalNetworkSubnetOutput) ToEdgegatewayExternalNetworkSubnetOutput() EdgegatewayExternalNetworkSubnetOutput {
	return o
}

func (o EdgegatewayExternalNetworkSubnetOutput) ToEdgegatewayExternalNetworkSubnetOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkSubnetOutput {
	return o
}

// Gateway address for a subnet
func (o EdgegatewayExternalNetworkSubnetOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetworkSubnet) string { return v.Gateway }).(pulumi.StringOutput)
}

// IP address on the edge gateway - will be auto-assigned if not defined
func (o EdgegatewayExternalNetworkSubnetOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetworkSubnet) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Netmask address for a subnet
func (o EdgegatewayExternalNetworkSubnetOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetworkSubnet) string { return v.Netmask }).(pulumi.StringOutput)
}

// Define zero or more blocks to sub-allocate pools on the edge gateway
func (o EdgegatewayExternalNetworkSubnetOutput) SuballocatePools() EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetworkSubnet) []EdgegatewayExternalNetworkSubnetSuballocatePool {
		return v.SuballocatePools
	}).(EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput)
}

// Defines if this subnet should be used as default gateway for edge
func (o EdgegatewayExternalNetworkSubnetOutput) UseForDefaultRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetworkSubnet) *bool { return v.UseForDefaultRoute }).(pulumi.BoolPtrOutput)
}

type EdgegatewayExternalNetworkSubnetArrayOutput struct{ *pulumi.OutputState }

func (EdgegatewayExternalNetworkSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdgegatewayExternalNetworkSubnet)(nil)).Elem()
}

func (o EdgegatewayExternalNetworkSubnetArrayOutput) ToEdgegatewayExternalNetworkSubnetArrayOutput() EdgegatewayExternalNetworkSubnetArrayOutput {
	return o
}

func (o EdgegatewayExternalNetworkSubnetArrayOutput) ToEdgegatewayExternalNetworkSubnetArrayOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkSubnetArrayOutput {
	return o
}

func (o EdgegatewayExternalNetworkSubnetArrayOutput) Index(i pulumi.IntInput) EdgegatewayExternalNetworkSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EdgegatewayExternalNetworkSubnet {
		return vs[0].([]EdgegatewayExternalNetworkSubnet)[vs[1].(int)]
	}).(EdgegatewayExternalNetworkSubnetOutput)
}

type EdgegatewayExternalNetworkSubnetSuballocatePool struct {
	EndAddress   string `pulumi:"endAddress"`
	StartAddress string `pulumi:"startAddress"`
}

// EdgegatewayExternalNetworkSubnetSuballocatePoolInput is an input type that accepts EdgegatewayExternalNetworkSubnetSuballocatePoolArgs and EdgegatewayExternalNetworkSubnetSuballocatePoolOutput values.
// You can construct a concrete instance of `EdgegatewayExternalNetworkSubnetSuballocatePoolInput` via:
//
//	EdgegatewayExternalNetworkSubnetSuballocatePoolArgs{...}
type EdgegatewayExternalNetworkSubnetSuballocatePoolInput interface {
	pulumi.Input

	ToEdgegatewayExternalNetworkSubnetSuballocatePoolOutput() EdgegatewayExternalNetworkSubnetSuballocatePoolOutput
	ToEdgegatewayExternalNetworkSubnetSuballocatePoolOutputWithContext(context.Context) EdgegatewayExternalNetworkSubnetSuballocatePoolOutput
}

type EdgegatewayExternalNetworkSubnetSuballocatePoolArgs struct {
	EndAddress   pulumi.StringInput `pulumi:"endAddress"`
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (EdgegatewayExternalNetworkSubnetSuballocatePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgegatewayExternalNetworkSubnetSuballocatePool)(nil)).Elem()
}

func (i EdgegatewayExternalNetworkSubnetSuballocatePoolArgs) ToEdgegatewayExternalNetworkSubnetSuballocatePoolOutput() EdgegatewayExternalNetworkSubnetSuballocatePoolOutput {
	return i.ToEdgegatewayExternalNetworkSubnetSuballocatePoolOutputWithContext(context.Background())
}

func (i EdgegatewayExternalNetworkSubnetSuballocatePoolArgs) ToEdgegatewayExternalNetworkSubnetSuballocatePoolOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkSubnetSuballocatePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgegatewayExternalNetworkSubnetSuballocatePoolOutput)
}

// EdgegatewayExternalNetworkSubnetSuballocatePoolArrayInput is an input type that accepts EdgegatewayExternalNetworkSubnetSuballocatePoolArray and EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput values.
// You can construct a concrete instance of `EdgegatewayExternalNetworkSubnetSuballocatePoolArrayInput` via:
//
//	EdgegatewayExternalNetworkSubnetSuballocatePoolArray{ EdgegatewayExternalNetworkSubnetSuballocatePoolArgs{...} }
type EdgegatewayExternalNetworkSubnetSuballocatePoolArrayInput interface {
	pulumi.Input

	ToEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput() EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput
	ToEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutputWithContext(context.Context) EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput
}

type EdgegatewayExternalNetworkSubnetSuballocatePoolArray []EdgegatewayExternalNetworkSubnetSuballocatePoolInput

func (EdgegatewayExternalNetworkSubnetSuballocatePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdgegatewayExternalNetworkSubnetSuballocatePool)(nil)).Elem()
}

func (i EdgegatewayExternalNetworkSubnetSuballocatePoolArray) ToEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput() EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput {
	return i.ToEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutputWithContext(context.Background())
}

func (i EdgegatewayExternalNetworkSubnetSuballocatePoolArray) ToEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput)
}

type EdgegatewayExternalNetworkSubnetSuballocatePoolOutput struct{ *pulumi.OutputState }

func (EdgegatewayExternalNetworkSubnetSuballocatePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgegatewayExternalNetworkSubnetSuballocatePool)(nil)).Elem()
}

func (o EdgegatewayExternalNetworkSubnetSuballocatePoolOutput) ToEdgegatewayExternalNetworkSubnetSuballocatePoolOutput() EdgegatewayExternalNetworkSubnetSuballocatePoolOutput {
	return o
}

func (o EdgegatewayExternalNetworkSubnetSuballocatePoolOutput) ToEdgegatewayExternalNetworkSubnetSuballocatePoolOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkSubnetSuballocatePoolOutput {
	return o
}

func (o EdgegatewayExternalNetworkSubnetSuballocatePoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetworkSubnetSuballocatePool) string { return v.EndAddress }).(pulumi.StringOutput)
}

func (o EdgegatewayExternalNetworkSubnetSuballocatePoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayExternalNetworkSubnetSuballocatePool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput struct{ *pulumi.OutputState }

func (EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdgegatewayExternalNetworkSubnetSuballocatePool)(nil)).Elem()
}

func (o EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput) ToEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput() EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput {
	return o
}

func (o EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput) ToEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutputWithContext(ctx context.Context) EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput {
	return o
}

func (o EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput) Index(i pulumi.IntInput) EdgegatewayExternalNetworkSubnetSuballocatePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EdgegatewayExternalNetworkSubnetSuballocatePool {
		return vs[0].([]EdgegatewayExternalNetworkSubnetSuballocatePool)[vs[1].(int)]
	}).(EdgegatewayExternalNetworkSubnetSuballocatePoolOutput)
}

type EdgegatewayVpnLocalSubnet struct {
	LocalSubnetGateway string `pulumi:"localSubnetGateway"`
	LocalSubnetMask    string `pulumi:"localSubnetMask"`
	LocalSubnetName    string `pulumi:"localSubnetName"`
}

// EdgegatewayVpnLocalSubnetInput is an input type that accepts EdgegatewayVpnLocalSubnetArgs and EdgegatewayVpnLocalSubnetOutput values.
// You can construct a concrete instance of `EdgegatewayVpnLocalSubnetInput` via:
//
//	EdgegatewayVpnLocalSubnetArgs{...}
type EdgegatewayVpnLocalSubnetInput interface {
	pulumi.Input

	ToEdgegatewayVpnLocalSubnetOutput() EdgegatewayVpnLocalSubnetOutput
	ToEdgegatewayVpnLocalSubnetOutputWithContext(context.Context) EdgegatewayVpnLocalSubnetOutput
}

type EdgegatewayVpnLocalSubnetArgs struct {
	LocalSubnetGateway pulumi.StringInput `pulumi:"localSubnetGateway"`
	LocalSubnetMask    pulumi.StringInput `pulumi:"localSubnetMask"`
	LocalSubnetName    pulumi.StringInput `pulumi:"localSubnetName"`
}

func (EdgegatewayVpnLocalSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgegatewayVpnLocalSubnet)(nil)).Elem()
}

func (i EdgegatewayVpnLocalSubnetArgs) ToEdgegatewayVpnLocalSubnetOutput() EdgegatewayVpnLocalSubnetOutput {
	return i.ToEdgegatewayVpnLocalSubnetOutputWithContext(context.Background())
}

func (i EdgegatewayVpnLocalSubnetArgs) ToEdgegatewayVpnLocalSubnetOutputWithContext(ctx context.Context) EdgegatewayVpnLocalSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgegatewayVpnLocalSubnetOutput)
}

// EdgegatewayVpnLocalSubnetArrayInput is an input type that accepts EdgegatewayVpnLocalSubnetArray and EdgegatewayVpnLocalSubnetArrayOutput values.
// You can construct a concrete instance of `EdgegatewayVpnLocalSubnetArrayInput` via:
//
//	EdgegatewayVpnLocalSubnetArray{ EdgegatewayVpnLocalSubnetArgs{...} }
type EdgegatewayVpnLocalSubnetArrayInput interface {
	pulumi.Input

	ToEdgegatewayVpnLocalSubnetArrayOutput() EdgegatewayVpnLocalSubnetArrayOutput
	ToEdgegatewayVpnLocalSubnetArrayOutputWithContext(context.Context) EdgegatewayVpnLocalSubnetArrayOutput
}

type EdgegatewayVpnLocalSubnetArray []EdgegatewayVpnLocalSubnetInput

func (EdgegatewayVpnLocalSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdgegatewayVpnLocalSubnet)(nil)).Elem()
}

func (i EdgegatewayVpnLocalSubnetArray) ToEdgegatewayVpnLocalSubnetArrayOutput() EdgegatewayVpnLocalSubnetArrayOutput {
	return i.ToEdgegatewayVpnLocalSubnetArrayOutputWithContext(context.Background())
}

func (i EdgegatewayVpnLocalSubnetArray) ToEdgegatewayVpnLocalSubnetArrayOutputWithContext(ctx context.Context) EdgegatewayVpnLocalSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgegatewayVpnLocalSubnetArrayOutput)
}

type EdgegatewayVpnLocalSubnetOutput struct{ *pulumi.OutputState }

func (EdgegatewayVpnLocalSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgegatewayVpnLocalSubnet)(nil)).Elem()
}

func (o EdgegatewayVpnLocalSubnetOutput) ToEdgegatewayVpnLocalSubnetOutput() EdgegatewayVpnLocalSubnetOutput {
	return o
}

func (o EdgegatewayVpnLocalSubnetOutput) ToEdgegatewayVpnLocalSubnetOutputWithContext(ctx context.Context) EdgegatewayVpnLocalSubnetOutput {
	return o
}

func (o EdgegatewayVpnLocalSubnetOutput) LocalSubnetGateway() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayVpnLocalSubnet) string { return v.LocalSubnetGateway }).(pulumi.StringOutput)
}

func (o EdgegatewayVpnLocalSubnetOutput) LocalSubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayVpnLocalSubnet) string { return v.LocalSubnetMask }).(pulumi.StringOutput)
}

func (o EdgegatewayVpnLocalSubnetOutput) LocalSubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayVpnLocalSubnet) string { return v.LocalSubnetName }).(pulumi.StringOutput)
}

type EdgegatewayVpnLocalSubnetArrayOutput struct{ *pulumi.OutputState }

func (EdgegatewayVpnLocalSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdgegatewayVpnLocalSubnet)(nil)).Elem()
}

func (o EdgegatewayVpnLocalSubnetArrayOutput) ToEdgegatewayVpnLocalSubnetArrayOutput() EdgegatewayVpnLocalSubnetArrayOutput {
	return o
}

func (o EdgegatewayVpnLocalSubnetArrayOutput) ToEdgegatewayVpnLocalSubnetArrayOutputWithContext(ctx context.Context) EdgegatewayVpnLocalSubnetArrayOutput {
	return o
}

func (o EdgegatewayVpnLocalSubnetArrayOutput) Index(i pulumi.IntInput) EdgegatewayVpnLocalSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EdgegatewayVpnLocalSubnet {
		return vs[0].([]EdgegatewayVpnLocalSubnet)[vs[1].(int)]
	}).(EdgegatewayVpnLocalSubnetOutput)
}

type EdgegatewayVpnPeerSubnet struct {
	PeerSubnetGateway string `pulumi:"peerSubnetGateway"`
	PeerSubnetMask    string `pulumi:"peerSubnetMask"`
	PeerSubnetName    string `pulumi:"peerSubnetName"`
}

// EdgegatewayVpnPeerSubnetInput is an input type that accepts EdgegatewayVpnPeerSubnetArgs and EdgegatewayVpnPeerSubnetOutput values.
// You can construct a concrete instance of `EdgegatewayVpnPeerSubnetInput` via:
//
//	EdgegatewayVpnPeerSubnetArgs{...}
type EdgegatewayVpnPeerSubnetInput interface {
	pulumi.Input

	ToEdgegatewayVpnPeerSubnetOutput() EdgegatewayVpnPeerSubnetOutput
	ToEdgegatewayVpnPeerSubnetOutputWithContext(context.Context) EdgegatewayVpnPeerSubnetOutput
}

type EdgegatewayVpnPeerSubnetArgs struct {
	PeerSubnetGateway pulumi.StringInput `pulumi:"peerSubnetGateway"`
	PeerSubnetMask    pulumi.StringInput `pulumi:"peerSubnetMask"`
	PeerSubnetName    pulumi.StringInput `pulumi:"peerSubnetName"`
}

func (EdgegatewayVpnPeerSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgegatewayVpnPeerSubnet)(nil)).Elem()
}

func (i EdgegatewayVpnPeerSubnetArgs) ToEdgegatewayVpnPeerSubnetOutput() EdgegatewayVpnPeerSubnetOutput {
	return i.ToEdgegatewayVpnPeerSubnetOutputWithContext(context.Background())
}

func (i EdgegatewayVpnPeerSubnetArgs) ToEdgegatewayVpnPeerSubnetOutputWithContext(ctx context.Context) EdgegatewayVpnPeerSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgegatewayVpnPeerSubnetOutput)
}

// EdgegatewayVpnPeerSubnetArrayInput is an input type that accepts EdgegatewayVpnPeerSubnetArray and EdgegatewayVpnPeerSubnetArrayOutput values.
// You can construct a concrete instance of `EdgegatewayVpnPeerSubnetArrayInput` via:
//
//	EdgegatewayVpnPeerSubnetArray{ EdgegatewayVpnPeerSubnetArgs{...} }
type EdgegatewayVpnPeerSubnetArrayInput interface {
	pulumi.Input

	ToEdgegatewayVpnPeerSubnetArrayOutput() EdgegatewayVpnPeerSubnetArrayOutput
	ToEdgegatewayVpnPeerSubnetArrayOutputWithContext(context.Context) EdgegatewayVpnPeerSubnetArrayOutput
}

type EdgegatewayVpnPeerSubnetArray []EdgegatewayVpnPeerSubnetInput

func (EdgegatewayVpnPeerSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdgegatewayVpnPeerSubnet)(nil)).Elem()
}

func (i EdgegatewayVpnPeerSubnetArray) ToEdgegatewayVpnPeerSubnetArrayOutput() EdgegatewayVpnPeerSubnetArrayOutput {
	return i.ToEdgegatewayVpnPeerSubnetArrayOutputWithContext(context.Background())
}

func (i EdgegatewayVpnPeerSubnetArray) ToEdgegatewayVpnPeerSubnetArrayOutputWithContext(ctx context.Context) EdgegatewayVpnPeerSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgegatewayVpnPeerSubnetArrayOutput)
}

type EdgegatewayVpnPeerSubnetOutput struct{ *pulumi.OutputState }

func (EdgegatewayVpnPeerSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgegatewayVpnPeerSubnet)(nil)).Elem()
}

func (o EdgegatewayVpnPeerSubnetOutput) ToEdgegatewayVpnPeerSubnetOutput() EdgegatewayVpnPeerSubnetOutput {
	return o
}

func (o EdgegatewayVpnPeerSubnetOutput) ToEdgegatewayVpnPeerSubnetOutputWithContext(ctx context.Context) EdgegatewayVpnPeerSubnetOutput {
	return o
}

func (o EdgegatewayVpnPeerSubnetOutput) PeerSubnetGateway() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayVpnPeerSubnet) string { return v.PeerSubnetGateway }).(pulumi.StringOutput)
}

func (o EdgegatewayVpnPeerSubnetOutput) PeerSubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayVpnPeerSubnet) string { return v.PeerSubnetMask }).(pulumi.StringOutput)
}

func (o EdgegatewayVpnPeerSubnetOutput) PeerSubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v EdgegatewayVpnPeerSubnet) string { return v.PeerSubnetName }).(pulumi.StringOutput)
}

type EdgegatewayVpnPeerSubnetArrayOutput struct{ *pulumi.OutputState }

func (EdgegatewayVpnPeerSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdgegatewayVpnPeerSubnet)(nil)).Elem()
}

func (o EdgegatewayVpnPeerSubnetArrayOutput) ToEdgegatewayVpnPeerSubnetArrayOutput() EdgegatewayVpnPeerSubnetArrayOutput {
	return o
}

func (o EdgegatewayVpnPeerSubnetArrayOutput) ToEdgegatewayVpnPeerSubnetArrayOutputWithContext(ctx context.Context) EdgegatewayVpnPeerSubnetArrayOutput {
	return o
}

func (o EdgegatewayVpnPeerSubnetArrayOutput) Index(i pulumi.IntInput) EdgegatewayVpnPeerSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EdgegatewayVpnPeerSubnet {
		return vs[0].([]EdgegatewayVpnPeerSubnet)[vs[1].(int)]
	}).(EdgegatewayVpnPeerSubnetOutput)
}

type ExternalNetworkIpScope struct {
	// Primary DNS server
	Dns1 *string `pulumi:"dns1"`
	// Secondary DNS server
	Dns2 *string `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// Gateway of the network
	Gateway string `pulumi:"gateway"`
	// Network mask
	Netmask string `pulumi:"netmask"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools []ExternalNetworkIpScopeStaticIpPool `pulumi:"staticIpPools"`
}

// ExternalNetworkIpScopeInput is an input type that accepts ExternalNetworkIpScopeArgs and ExternalNetworkIpScopeOutput values.
// You can construct a concrete instance of `ExternalNetworkIpScopeInput` via:
//
//	ExternalNetworkIpScopeArgs{...}
type ExternalNetworkIpScopeInput interface {
	pulumi.Input

	ToExternalNetworkIpScopeOutput() ExternalNetworkIpScopeOutput
	ToExternalNetworkIpScopeOutputWithContext(context.Context) ExternalNetworkIpScopeOutput
}

type ExternalNetworkIpScopeArgs struct {
	// Primary DNS server
	Dns1 pulumi.StringPtrInput `pulumi:"dns1"`
	// Secondary DNS server
	Dns2 pulumi.StringPtrInput `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix pulumi.StringPtrInput `pulumi:"dnsSuffix"`
	// Gateway of the network
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Network mask
	Netmask pulumi.StringInput `pulumi:"netmask"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools ExternalNetworkIpScopeStaticIpPoolArrayInput `pulumi:"staticIpPools"`
}

func (ExternalNetworkIpScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkIpScope)(nil)).Elem()
}

func (i ExternalNetworkIpScopeArgs) ToExternalNetworkIpScopeOutput() ExternalNetworkIpScopeOutput {
	return i.ToExternalNetworkIpScopeOutputWithContext(context.Background())
}

func (i ExternalNetworkIpScopeArgs) ToExternalNetworkIpScopeOutputWithContext(ctx context.Context) ExternalNetworkIpScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkIpScopeOutput)
}

// ExternalNetworkIpScopeArrayInput is an input type that accepts ExternalNetworkIpScopeArray and ExternalNetworkIpScopeArrayOutput values.
// You can construct a concrete instance of `ExternalNetworkIpScopeArrayInput` via:
//
//	ExternalNetworkIpScopeArray{ ExternalNetworkIpScopeArgs{...} }
type ExternalNetworkIpScopeArrayInput interface {
	pulumi.Input

	ToExternalNetworkIpScopeArrayOutput() ExternalNetworkIpScopeArrayOutput
	ToExternalNetworkIpScopeArrayOutputWithContext(context.Context) ExternalNetworkIpScopeArrayOutput
}

type ExternalNetworkIpScopeArray []ExternalNetworkIpScopeInput

func (ExternalNetworkIpScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkIpScope)(nil)).Elem()
}

func (i ExternalNetworkIpScopeArray) ToExternalNetworkIpScopeArrayOutput() ExternalNetworkIpScopeArrayOutput {
	return i.ToExternalNetworkIpScopeArrayOutputWithContext(context.Background())
}

func (i ExternalNetworkIpScopeArray) ToExternalNetworkIpScopeArrayOutputWithContext(ctx context.Context) ExternalNetworkIpScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkIpScopeArrayOutput)
}

type ExternalNetworkIpScopeOutput struct{ *pulumi.OutputState }

func (ExternalNetworkIpScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkIpScope)(nil)).Elem()
}

func (o ExternalNetworkIpScopeOutput) ToExternalNetworkIpScopeOutput() ExternalNetworkIpScopeOutput {
	return o
}

func (o ExternalNetworkIpScopeOutput) ToExternalNetworkIpScopeOutputWithContext(ctx context.Context) ExternalNetworkIpScopeOutput {
	return o
}

// Primary DNS server
func (o ExternalNetworkIpScopeOutput) Dns1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkIpScope) *string { return v.Dns1 }).(pulumi.StringPtrOutput)
}

// Secondary DNS server
func (o ExternalNetworkIpScopeOutput) Dns2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkIpScope) *string { return v.Dns2 }).(pulumi.StringPtrOutput)
}

// DNS suffix
func (o ExternalNetworkIpScopeOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkIpScope) *string { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// Gateway of the network
func (o ExternalNetworkIpScopeOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkIpScope) string { return v.Gateway }).(pulumi.StringOutput)
}

// Network mask
func (o ExternalNetworkIpScopeOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkIpScope) string { return v.Netmask }).(pulumi.StringOutput)
}

// IP ranges used for static pool allocation in the network
func (o ExternalNetworkIpScopeOutput) StaticIpPools() ExternalNetworkIpScopeStaticIpPoolArrayOutput {
	return o.ApplyT(func(v ExternalNetworkIpScope) []ExternalNetworkIpScopeStaticIpPool { return v.StaticIpPools }).(ExternalNetworkIpScopeStaticIpPoolArrayOutput)
}

type ExternalNetworkIpScopeArrayOutput struct{ *pulumi.OutputState }

func (ExternalNetworkIpScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkIpScope)(nil)).Elem()
}

func (o ExternalNetworkIpScopeArrayOutput) ToExternalNetworkIpScopeArrayOutput() ExternalNetworkIpScopeArrayOutput {
	return o
}

func (o ExternalNetworkIpScopeArrayOutput) ToExternalNetworkIpScopeArrayOutputWithContext(ctx context.Context) ExternalNetworkIpScopeArrayOutput {
	return o
}

func (o ExternalNetworkIpScopeArrayOutput) Index(i pulumi.IntInput) ExternalNetworkIpScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalNetworkIpScope {
		return vs[0].([]ExternalNetworkIpScope)[vs[1].(int)]
	}).(ExternalNetworkIpScopeOutput)
}

type ExternalNetworkIpScopeStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// ExternalNetworkIpScopeStaticIpPoolInput is an input type that accepts ExternalNetworkIpScopeStaticIpPoolArgs and ExternalNetworkIpScopeStaticIpPoolOutput values.
// You can construct a concrete instance of `ExternalNetworkIpScopeStaticIpPoolInput` via:
//
//	ExternalNetworkIpScopeStaticIpPoolArgs{...}
type ExternalNetworkIpScopeStaticIpPoolInput interface {
	pulumi.Input

	ToExternalNetworkIpScopeStaticIpPoolOutput() ExternalNetworkIpScopeStaticIpPoolOutput
	ToExternalNetworkIpScopeStaticIpPoolOutputWithContext(context.Context) ExternalNetworkIpScopeStaticIpPoolOutput
}

type ExternalNetworkIpScopeStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (ExternalNetworkIpScopeStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkIpScopeStaticIpPool)(nil)).Elem()
}

func (i ExternalNetworkIpScopeStaticIpPoolArgs) ToExternalNetworkIpScopeStaticIpPoolOutput() ExternalNetworkIpScopeStaticIpPoolOutput {
	return i.ToExternalNetworkIpScopeStaticIpPoolOutputWithContext(context.Background())
}

func (i ExternalNetworkIpScopeStaticIpPoolArgs) ToExternalNetworkIpScopeStaticIpPoolOutputWithContext(ctx context.Context) ExternalNetworkIpScopeStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkIpScopeStaticIpPoolOutput)
}

// ExternalNetworkIpScopeStaticIpPoolArrayInput is an input type that accepts ExternalNetworkIpScopeStaticIpPoolArray and ExternalNetworkIpScopeStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `ExternalNetworkIpScopeStaticIpPoolArrayInput` via:
//
//	ExternalNetworkIpScopeStaticIpPoolArray{ ExternalNetworkIpScopeStaticIpPoolArgs{...} }
type ExternalNetworkIpScopeStaticIpPoolArrayInput interface {
	pulumi.Input

	ToExternalNetworkIpScopeStaticIpPoolArrayOutput() ExternalNetworkIpScopeStaticIpPoolArrayOutput
	ToExternalNetworkIpScopeStaticIpPoolArrayOutputWithContext(context.Context) ExternalNetworkIpScopeStaticIpPoolArrayOutput
}

type ExternalNetworkIpScopeStaticIpPoolArray []ExternalNetworkIpScopeStaticIpPoolInput

func (ExternalNetworkIpScopeStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkIpScopeStaticIpPool)(nil)).Elem()
}

func (i ExternalNetworkIpScopeStaticIpPoolArray) ToExternalNetworkIpScopeStaticIpPoolArrayOutput() ExternalNetworkIpScopeStaticIpPoolArrayOutput {
	return i.ToExternalNetworkIpScopeStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i ExternalNetworkIpScopeStaticIpPoolArray) ToExternalNetworkIpScopeStaticIpPoolArrayOutputWithContext(ctx context.Context) ExternalNetworkIpScopeStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkIpScopeStaticIpPoolArrayOutput)
}

type ExternalNetworkIpScopeStaticIpPoolOutput struct{ *pulumi.OutputState }

func (ExternalNetworkIpScopeStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkIpScopeStaticIpPool)(nil)).Elem()
}

func (o ExternalNetworkIpScopeStaticIpPoolOutput) ToExternalNetworkIpScopeStaticIpPoolOutput() ExternalNetworkIpScopeStaticIpPoolOutput {
	return o
}

func (o ExternalNetworkIpScopeStaticIpPoolOutput) ToExternalNetworkIpScopeStaticIpPoolOutputWithContext(ctx context.Context) ExternalNetworkIpScopeStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o ExternalNetworkIpScopeStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkIpScopeStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o ExternalNetworkIpScopeStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkIpScopeStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type ExternalNetworkIpScopeStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (ExternalNetworkIpScopeStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkIpScopeStaticIpPool)(nil)).Elem()
}

func (o ExternalNetworkIpScopeStaticIpPoolArrayOutput) ToExternalNetworkIpScopeStaticIpPoolArrayOutput() ExternalNetworkIpScopeStaticIpPoolArrayOutput {
	return o
}

func (o ExternalNetworkIpScopeStaticIpPoolArrayOutput) ToExternalNetworkIpScopeStaticIpPoolArrayOutputWithContext(ctx context.Context) ExternalNetworkIpScopeStaticIpPoolArrayOutput {
	return o
}

func (o ExternalNetworkIpScopeStaticIpPoolArrayOutput) Index(i pulumi.IntInput) ExternalNetworkIpScopeStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalNetworkIpScopeStaticIpPool {
		return vs[0].([]ExternalNetworkIpScopeStaticIpPool)[vs[1].(int)]
	}).(ExternalNetworkIpScopeStaticIpPoolOutput)
}

type ExternalNetworkV2IpScope struct {
	// Primary DNS server
	Dns1 *string `pulumi:"dns1"`
	// Secondary DNS server
	Dns2 *string `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// If subnet is enabled
	Enabled *bool `pulumi:"enabled"`
	// Gateway of the network
	Gateway string `pulumi:"gateway"`
	// Network mask
	PrefixLength int `pulumi:"prefixLength"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools []ExternalNetworkV2IpScopeStaticIpPool `pulumi:"staticIpPools"`
}

// ExternalNetworkV2IpScopeInput is an input type that accepts ExternalNetworkV2IpScopeArgs and ExternalNetworkV2IpScopeOutput values.
// You can construct a concrete instance of `ExternalNetworkV2IpScopeInput` via:
//
//	ExternalNetworkV2IpScopeArgs{...}
type ExternalNetworkV2IpScopeInput interface {
	pulumi.Input

	ToExternalNetworkV2IpScopeOutput() ExternalNetworkV2IpScopeOutput
	ToExternalNetworkV2IpScopeOutputWithContext(context.Context) ExternalNetworkV2IpScopeOutput
}

type ExternalNetworkV2IpScopeArgs struct {
	// Primary DNS server
	Dns1 pulumi.StringPtrInput `pulumi:"dns1"`
	// Secondary DNS server
	Dns2 pulumi.StringPtrInput `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix pulumi.StringPtrInput `pulumi:"dnsSuffix"`
	// If subnet is enabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Gateway of the network
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Network mask
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools ExternalNetworkV2IpScopeStaticIpPoolArrayInput `pulumi:"staticIpPools"`
}

func (ExternalNetworkV2IpScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkV2IpScope)(nil)).Elem()
}

func (i ExternalNetworkV2IpScopeArgs) ToExternalNetworkV2IpScopeOutput() ExternalNetworkV2IpScopeOutput {
	return i.ToExternalNetworkV2IpScopeOutputWithContext(context.Background())
}

func (i ExternalNetworkV2IpScopeArgs) ToExternalNetworkV2IpScopeOutputWithContext(ctx context.Context) ExternalNetworkV2IpScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkV2IpScopeOutput)
}

// ExternalNetworkV2IpScopeArrayInput is an input type that accepts ExternalNetworkV2IpScopeArray and ExternalNetworkV2IpScopeArrayOutput values.
// You can construct a concrete instance of `ExternalNetworkV2IpScopeArrayInput` via:
//
//	ExternalNetworkV2IpScopeArray{ ExternalNetworkV2IpScopeArgs{...} }
type ExternalNetworkV2IpScopeArrayInput interface {
	pulumi.Input

	ToExternalNetworkV2IpScopeArrayOutput() ExternalNetworkV2IpScopeArrayOutput
	ToExternalNetworkV2IpScopeArrayOutputWithContext(context.Context) ExternalNetworkV2IpScopeArrayOutput
}

type ExternalNetworkV2IpScopeArray []ExternalNetworkV2IpScopeInput

func (ExternalNetworkV2IpScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkV2IpScope)(nil)).Elem()
}

func (i ExternalNetworkV2IpScopeArray) ToExternalNetworkV2IpScopeArrayOutput() ExternalNetworkV2IpScopeArrayOutput {
	return i.ToExternalNetworkV2IpScopeArrayOutputWithContext(context.Background())
}

func (i ExternalNetworkV2IpScopeArray) ToExternalNetworkV2IpScopeArrayOutputWithContext(ctx context.Context) ExternalNetworkV2IpScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkV2IpScopeArrayOutput)
}

type ExternalNetworkV2IpScopeOutput struct{ *pulumi.OutputState }

func (ExternalNetworkV2IpScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkV2IpScope)(nil)).Elem()
}

func (o ExternalNetworkV2IpScopeOutput) ToExternalNetworkV2IpScopeOutput() ExternalNetworkV2IpScopeOutput {
	return o
}

func (o ExternalNetworkV2IpScopeOutput) ToExternalNetworkV2IpScopeOutputWithContext(ctx context.Context) ExternalNetworkV2IpScopeOutput {
	return o
}

// Primary DNS server
func (o ExternalNetworkV2IpScopeOutput) Dns1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkV2IpScope) *string { return v.Dns1 }).(pulumi.StringPtrOutput)
}

// Secondary DNS server
func (o ExternalNetworkV2IpScopeOutput) Dns2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkV2IpScope) *string { return v.Dns2 }).(pulumi.StringPtrOutput)
}

// DNS suffix
func (o ExternalNetworkV2IpScopeOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkV2IpScope) *string { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// If subnet is enabled
func (o ExternalNetworkV2IpScopeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExternalNetworkV2IpScope) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Gateway of the network
func (o ExternalNetworkV2IpScopeOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkV2IpScope) string { return v.Gateway }).(pulumi.StringOutput)
}

// Network mask
func (o ExternalNetworkV2IpScopeOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v ExternalNetworkV2IpScope) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// IP ranges used for static pool allocation in the network
func (o ExternalNetworkV2IpScopeOutput) StaticIpPools() ExternalNetworkV2IpScopeStaticIpPoolArrayOutput {
	return o.ApplyT(func(v ExternalNetworkV2IpScope) []ExternalNetworkV2IpScopeStaticIpPool { return v.StaticIpPools }).(ExternalNetworkV2IpScopeStaticIpPoolArrayOutput)
}

type ExternalNetworkV2IpScopeArrayOutput struct{ *pulumi.OutputState }

func (ExternalNetworkV2IpScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkV2IpScope)(nil)).Elem()
}

func (o ExternalNetworkV2IpScopeArrayOutput) ToExternalNetworkV2IpScopeArrayOutput() ExternalNetworkV2IpScopeArrayOutput {
	return o
}

func (o ExternalNetworkV2IpScopeArrayOutput) ToExternalNetworkV2IpScopeArrayOutputWithContext(ctx context.Context) ExternalNetworkV2IpScopeArrayOutput {
	return o
}

func (o ExternalNetworkV2IpScopeArrayOutput) Index(i pulumi.IntInput) ExternalNetworkV2IpScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalNetworkV2IpScope {
		return vs[0].([]ExternalNetworkV2IpScope)[vs[1].(int)]
	}).(ExternalNetworkV2IpScopeOutput)
}

type ExternalNetworkV2IpScopeStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// ExternalNetworkV2IpScopeStaticIpPoolInput is an input type that accepts ExternalNetworkV2IpScopeStaticIpPoolArgs and ExternalNetworkV2IpScopeStaticIpPoolOutput values.
// You can construct a concrete instance of `ExternalNetworkV2IpScopeStaticIpPoolInput` via:
//
//	ExternalNetworkV2IpScopeStaticIpPoolArgs{...}
type ExternalNetworkV2IpScopeStaticIpPoolInput interface {
	pulumi.Input

	ToExternalNetworkV2IpScopeStaticIpPoolOutput() ExternalNetworkV2IpScopeStaticIpPoolOutput
	ToExternalNetworkV2IpScopeStaticIpPoolOutputWithContext(context.Context) ExternalNetworkV2IpScopeStaticIpPoolOutput
}

type ExternalNetworkV2IpScopeStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (ExternalNetworkV2IpScopeStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkV2IpScopeStaticIpPool)(nil)).Elem()
}

func (i ExternalNetworkV2IpScopeStaticIpPoolArgs) ToExternalNetworkV2IpScopeStaticIpPoolOutput() ExternalNetworkV2IpScopeStaticIpPoolOutput {
	return i.ToExternalNetworkV2IpScopeStaticIpPoolOutputWithContext(context.Background())
}

func (i ExternalNetworkV2IpScopeStaticIpPoolArgs) ToExternalNetworkV2IpScopeStaticIpPoolOutputWithContext(ctx context.Context) ExternalNetworkV2IpScopeStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkV2IpScopeStaticIpPoolOutput)
}

// ExternalNetworkV2IpScopeStaticIpPoolArrayInput is an input type that accepts ExternalNetworkV2IpScopeStaticIpPoolArray and ExternalNetworkV2IpScopeStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `ExternalNetworkV2IpScopeStaticIpPoolArrayInput` via:
//
//	ExternalNetworkV2IpScopeStaticIpPoolArray{ ExternalNetworkV2IpScopeStaticIpPoolArgs{...} }
type ExternalNetworkV2IpScopeStaticIpPoolArrayInput interface {
	pulumi.Input

	ToExternalNetworkV2IpScopeStaticIpPoolArrayOutput() ExternalNetworkV2IpScopeStaticIpPoolArrayOutput
	ToExternalNetworkV2IpScopeStaticIpPoolArrayOutputWithContext(context.Context) ExternalNetworkV2IpScopeStaticIpPoolArrayOutput
}

type ExternalNetworkV2IpScopeStaticIpPoolArray []ExternalNetworkV2IpScopeStaticIpPoolInput

func (ExternalNetworkV2IpScopeStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkV2IpScopeStaticIpPool)(nil)).Elem()
}

func (i ExternalNetworkV2IpScopeStaticIpPoolArray) ToExternalNetworkV2IpScopeStaticIpPoolArrayOutput() ExternalNetworkV2IpScopeStaticIpPoolArrayOutput {
	return i.ToExternalNetworkV2IpScopeStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i ExternalNetworkV2IpScopeStaticIpPoolArray) ToExternalNetworkV2IpScopeStaticIpPoolArrayOutputWithContext(ctx context.Context) ExternalNetworkV2IpScopeStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkV2IpScopeStaticIpPoolArrayOutput)
}

type ExternalNetworkV2IpScopeStaticIpPoolOutput struct{ *pulumi.OutputState }

func (ExternalNetworkV2IpScopeStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkV2IpScopeStaticIpPool)(nil)).Elem()
}

func (o ExternalNetworkV2IpScopeStaticIpPoolOutput) ToExternalNetworkV2IpScopeStaticIpPoolOutput() ExternalNetworkV2IpScopeStaticIpPoolOutput {
	return o
}

func (o ExternalNetworkV2IpScopeStaticIpPoolOutput) ToExternalNetworkV2IpScopeStaticIpPoolOutputWithContext(ctx context.Context) ExternalNetworkV2IpScopeStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o ExternalNetworkV2IpScopeStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkV2IpScopeStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o ExternalNetworkV2IpScopeStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkV2IpScopeStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type ExternalNetworkV2IpScopeStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (ExternalNetworkV2IpScopeStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkV2IpScopeStaticIpPool)(nil)).Elem()
}

func (o ExternalNetworkV2IpScopeStaticIpPoolArrayOutput) ToExternalNetworkV2IpScopeStaticIpPoolArrayOutput() ExternalNetworkV2IpScopeStaticIpPoolArrayOutput {
	return o
}

func (o ExternalNetworkV2IpScopeStaticIpPoolArrayOutput) ToExternalNetworkV2IpScopeStaticIpPoolArrayOutputWithContext(ctx context.Context) ExternalNetworkV2IpScopeStaticIpPoolArrayOutput {
	return o
}

func (o ExternalNetworkV2IpScopeStaticIpPoolArrayOutput) Index(i pulumi.IntInput) ExternalNetworkV2IpScopeStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalNetworkV2IpScopeStaticIpPool {
		return vs[0].([]ExternalNetworkV2IpScopeStaticIpPool)[vs[1].(int)]
	}).(ExternalNetworkV2IpScopeStaticIpPoolOutput)
}

type ExternalNetworkV2NsxtNetwork struct {
	// ID of NSX-T manager
	NsxtManagerId string `pulumi:"nsxtManagerId"`
	// Name of NSX-T segment (for NSX-T segment backed external network)
	NsxtSegmentName *string `pulumi:"nsxtSegmentName"`
	// ID of NSX-T Tier-0 router (for T0 gateway backed external network)
	NsxtTier0RouterId *string `pulumi:"nsxtTier0RouterId"`
}

// ExternalNetworkV2NsxtNetworkInput is an input type that accepts ExternalNetworkV2NsxtNetworkArgs and ExternalNetworkV2NsxtNetworkOutput values.
// You can construct a concrete instance of `ExternalNetworkV2NsxtNetworkInput` via:
//
//	ExternalNetworkV2NsxtNetworkArgs{...}
type ExternalNetworkV2NsxtNetworkInput interface {
	pulumi.Input

	ToExternalNetworkV2NsxtNetworkOutput() ExternalNetworkV2NsxtNetworkOutput
	ToExternalNetworkV2NsxtNetworkOutputWithContext(context.Context) ExternalNetworkV2NsxtNetworkOutput
}

type ExternalNetworkV2NsxtNetworkArgs struct {
	// ID of NSX-T manager
	NsxtManagerId pulumi.StringInput `pulumi:"nsxtManagerId"`
	// Name of NSX-T segment (for NSX-T segment backed external network)
	NsxtSegmentName pulumi.StringPtrInput `pulumi:"nsxtSegmentName"`
	// ID of NSX-T Tier-0 router (for T0 gateway backed external network)
	NsxtTier0RouterId pulumi.StringPtrInput `pulumi:"nsxtTier0RouterId"`
}

func (ExternalNetworkV2NsxtNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkV2NsxtNetwork)(nil)).Elem()
}

func (i ExternalNetworkV2NsxtNetworkArgs) ToExternalNetworkV2NsxtNetworkOutput() ExternalNetworkV2NsxtNetworkOutput {
	return i.ToExternalNetworkV2NsxtNetworkOutputWithContext(context.Background())
}

func (i ExternalNetworkV2NsxtNetworkArgs) ToExternalNetworkV2NsxtNetworkOutputWithContext(ctx context.Context) ExternalNetworkV2NsxtNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkV2NsxtNetworkOutput)
}

func (i ExternalNetworkV2NsxtNetworkArgs) ToExternalNetworkV2NsxtNetworkPtrOutput() ExternalNetworkV2NsxtNetworkPtrOutput {
	return i.ToExternalNetworkV2NsxtNetworkPtrOutputWithContext(context.Background())
}

func (i ExternalNetworkV2NsxtNetworkArgs) ToExternalNetworkV2NsxtNetworkPtrOutputWithContext(ctx context.Context) ExternalNetworkV2NsxtNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkV2NsxtNetworkOutput).ToExternalNetworkV2NsxtNetworkPtrOutputWithContext(ctx)
}

// ExternalNetworkV2NsxtNetworkPtrInput is an input type that accepts ExternalNetworkV2NsxtNetworkArgs, ExternalNetworkV2NsxtNetworkPtr and ExternalNetworkV2NsxtNetworkPtrOutput values.
// You can construct a concrete instance of `ExternalNetworkV2NsxtNetworkPtrInput` via:
//
//	        ExternalNetworkV2NsxtNetworkArgs{...}
//
//	or:
//
//	        nil
type ExternalNetworkV2NsxtNetworkPtrInput interface {
	pulumi.Input

	ToExternalNetworkV2NsxtNetworkPtrOutput() ExternalNetworkV2NsxtNetworkPtrOutput
	ToExternalNetworkV2NsxtNetworkPtrOutputWithContext(context.Context) ExternalNetworkV2NsxtNetworkPtrOutput
}

type externalNetworkV2NsxtNetworkPtrType ExternalNetworkV2NsxtNetworkArgs

func ExternalNetworkV2NsxtNetworkPtr(v *ExternalNetworkV2NsxtNetworkArgs) ExternalNetworkV2NsxtNetworkPtrInput {
	return (*externalNetworkV2NsxtNetworkPtrType)(v)
}

func (*externalNetworkV2NsxtNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetworkV2NsxtNetwork)(nil)).Elem()
}

func (i *externalNetworkV2NsxtNetworkPtrType) ToExternalNetworkV2NsxtNetworkPtrOutput() ExternalNetworkV2NsxtNetworkPtrOutput {
	return i.ToExternalNetworkV2NsxtNetworkPtrOutputWithContext(context.Background())
}

func (i *externalNetworkV2NsxtNetworkPtrType) ToExternalNetworkV2NsxtNetworkPtrOutputWithContext(ctx context.Context) ExternalNetworkV2NsxtNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkV2NsxtNetworkPtrOutput)
}

type ExternalNetworkV2NsxtNetworkOutput struct{ *pulumi.OutputState }

func (ExternalNetworkV2NsxtNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkV2NsxtNetwork)(nil)).Elem()
}

func (o ExternalNetworkV2NsxtNetworkOutput) ToExternalNetworkV2NsxtNetworkOutput() ExternalNetworkV2NsxtNetworkOutput {
	return o
}

func (o ExternalNetworkV2NsxtNetworkOutput) ToExternalNetworkV2NsxtNetworkOutputWithContext(ctx context.Context) ExternalNetworkV2NsxtNetworkOutput {
	return o
}

func (o ExternalNetworkV2NsxtNetworkOutput) ToExternalNetworkV2NsxtNetworkPtrOutput() ExternalNetworkV2NsxtNetworkPtrOutput {
	return o.ToExternalNetworkV2NsxtNetworkPtrOutputWithContext(context.Background())
}

func (o ExternalNetworkV2NsxtNetworkOutput) ToExternalNetworkV2NsxtNetworkPtrOutputWithContext(ctx context.Context) ExternalNetworkV2NsxtNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalNetworkV2NsxtNetwork) *ExternalNetworkV2NsxtNetwork {
		return &v
	}).(ExternalNetworkV2NsxtNetworkPtrOutput)
}

// ID of NSX-T manager
func (o ExternalNetworkV2NsxtNetworkOutput) NsxtManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkV2NsxtNetwork) string { return v.NsxtManagerId }).(pulumi.StringOutput)
}

// Name of NSX-T segment (for NSX-T segment backed external network)
func (o ExternalNetworkV2NsxtNetworkOutput) NsxtSegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkV2NsxtNetwork) *string { return v.NsxtSegmentName }).(pulumi.StringPtrOutput)
}

// ID of NSX-T Tier-0 router (for T0 gateway backed external network)
func (o ExternalNetworkV2NsxtNetworkOutput) NsxtTier0RouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkV2NsxtNetwork) *string { return v.NsxtTier0RouterId }).(pulumi.StringPtrOutput)
}

type ExternalNetworkV2NsxtNetworkPtrOutput struct{ *pulumi.OutputState }

func (ExternalNetworkV2NsxtNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetworkV2NsxtNetwork)(nil)).Elem()
}

func (o ExternalNetworkV2NsxtNetworkPtrOutput) ToExternalNetworkV2NsxtNetworkPtrOutput() ExternalNetworkV2NsxtNetworkPtrOutput {
	return o
}

func (o ExternalNetworkV2NsxtNetworkPtrOutput) ToExternalNetworkV2NsxtNetworkPtrOutputWithContext(ctx context.Context) ExternalNetworkV2NsxtNetworkPtrOutput {
	return o
}

func (o ExternalNetworkV2NsxtNetworkPtrOutput) Elem() ExternalNetworkV2NsxtNetworkOutput {
	return o.ApplyT(func(v *ExternalNetworkV2NsxtNetwork) ExternalNetworkV2NsxtNetwork {
		if v != nil {
			return *v
		}
		var ret ExternalNetworkV2NsxtNetwork
		return ret
	}).(ExternalNetworkV2NsxtNetworkOutput)
}

// ID of NSX-T manager
func (o ExternalNetworkV2NsxtNetworkPtrOutput) NsxtManagerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkV2NsxtNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.NsxtManagerId
	}).(pulumi.StringPtrOutput)
}

// Name of NSX-T segment (for NSX-T segment backed external network)
func (o ExternalNetworkV2NsxtNetworkPtrOutput) NsxtSegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkV2NsxtNetwork) *string {
		if v == nil {
			return nil
		}
		return v.NsxtSegmentName
	}).(pulumi.StringPtrOutput)
}

// ID of NSX-T Tier-0 router (for T0 gateway backed external network)
func (o ExternalNetworkV2NsxtNetworkPtrOutput) NsxtTier0RouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkV2NsxtNetwork) *string {
		if v == nil {
			return nil
		}
		return v.NsxtTier0RouterId
	}).(pulumi.StringPtrOutput)
}

type ExternalNetworkV2VsphereNetwork struct {
	// The name of the port group
	PortgroupId string `pulumi:"portgroupId"`
	// The vCenter server name
	VcenterId string `pulumi:"vcenterId"`
}

// ExternalNetworkV2VsphereNetworkInput is an input type that accepts ExternalNetworkV2VsphereNetworkArgs and ExternalNetworkV2VsphereNetworkOutput values.
// You can construct a concrete instance of `ExternalNetworkV2VsphereNetworkInput` via:
//
//	ExternalNetworkV2VsphereNetworkArgs{...}
type ExternalNetworkV2VsphereNetworkInput interface {
	pulumi.Input

	ToExternalNetworkV2VsphereNetworkOutput() ExternalNetworkV2VsphereNetworkOutput
	ToExternalNetworkV2VsphereNetworkOutputWithContext(context.Context) ExternalNetworkV2VsphereNetworkOutput
}

type ExternalNetworkV2VsphereNetworkArgs struct {
	// The name of the port group
	PortgroupId pulumi.StringInput `pulumi:"portgroupId"`
	// The vCenter server name
	VcenterId pulumi.StringInput `pulumi:"vcenterId"`
}

func (ExternalNetworkV2VsphereNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkV2VsphereNetwork)(nil)).Elem()
}

func (i ExternalNetworkV2VsphereNetworkArgs) ToExternalNetworkV2VsphereNetworkOutput() ExternalNetworkV2VsphereNetworkOutput {
	return i.ToExternalNetworkV2VsphereNetworkOutputWithContext(context.Background())
}

func (i ExternalNetworkV2VsphereNetworkArgs) ToExternalNetworkV2VsphereNetworkOutputWithContext(ctx context.Context) ExternalNetworkV2VsphereNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkV2VsphereNetworkOutput)
}

// ExternalNetworkV2VsphereNetworkArrayInput is an input type that accepts ExternalNetworkV2VsphereNetworkArray and ExternalNetworkV2VsphereNetworkArrayOutput values.
// You can construct a concrete instance of `ExternalNetworkV2VsphereNetworkArrayInput` via:
//
//	ExternalNetworkV2VsphereNetworkArray{ ExternalNetworkV2VsphereNetworkArgs{...} }
type ExternalNetworkV2VsphereNetworkArrayInput interface {
	pulumi.Input

	ToExternalNetworkV2VsphereNetworkArrayOutput() ExternalNetworkV2VsphereNetworkArrayOutput
	ToExternalNetworkV2VsphereNetworkArrayOutputWithContext(context.Context) ExternalNetworkV2VsphereNetworkArrayOutput
}

type ExternalNetworkV2VsphereNetworkArray []ExternalNetworkV2VsphereNetworkInput

func (ExternalNetworkV2VsphereNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkV2VsphereNetwork)(nil)).Elem()
}

func (i ExternalNetworkV2VsphereNetworkArray) ToExternalNetworkV2VsphereNetworkArrayOutput() ExternalNetworkV2VsphereNetworkArrayOutput {
	return i.ToExternalNetworkV2VsphereNetworkArrayOutputWithContext(context.Background())
}

func (i ExternalNetworkV2VsphereNetworkArray) ToExternalNetworkV2VsphereNetworkArrayOutputWithContext(ctx context.Context) ExternalNetworkV2VsphereNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkV2VsphereNetworkArrayOutput)
}

type ExternalNetworkV2VsphereNetworkOutput struct{ *pulumi.OutputState }

func (ExternalNetworkV2VsphereNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkV2VsphereNetwork)(nil)).Elem()
}

func (o ExternalNetworkV2VsphereNetworkOutput) ToExternalNetworkV2VsphereNetworkOutput() ExternalNetworkV2VsphereNetworkOutput {
	return o
}

func (o ExternalNetworkV2VsphereNetworkOutput) ToExternalNetworkV2VsphereNetworkOutputWithContext(ctx context.Context) ExternalNetworkV2VsphereNetworkOutput {
	return o
}

// The name of the port group
func (o ExternalNetworkV2VsphereNetworkOutput) PortgroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkV2VsphereNetwork) string { return v.PortgroupId }).(pulumi.StringOutput)
}

// The vCenter server name
func (o ExternalNetworkV2VsphereNetworkOutput) VcenterId() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkV2VsphereNetwork) string { return v.VcenterId }).(pulumi.StringOutput)
}

type ExternalNetworkV2VsphereNetworkArrayOutput struct{ *pulumi.OutputState }

func (ExternalNetworkV2VsphereNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkV2VsphereNetwork)(nil)).Elem()
}

func (o ExternalNetworkV2VsphereNetworkArrayOutput) ToExternalNetworkV2VsphereNetworkArrayOutput() ExternalNetworkV2VsphereNetworkArrayOutput {
	return o
}

func (o ExternalNetworkV2VsphereNetworkArrayOutput) ToExternalNetworkV2VsphereNetworkArrayOutputWithContext(ctx context.Context) ExternalNetworkV2VsphereNetworkArrayOutput {
	return o
}

func (o ExternalNetworkV2VsphereNetworkArrayOutput) Index(i pulumi.IntInput) ExternalNetworkV2VsphereNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalNetworkV2VsphereNetwork {
		return vs[0].([]ExternalNetworkV2VsphereNetwork)[vs[1].(int)]
	}).(ExternalNetworkV2VsphereNetworkOutput)
}

type ExternalNetworkVsphereNetwork struct {
	// A unique name for the network
	Name string `pulumi:"name"`
	// The vSphere port group type. One of: DV_PORTGROUP (distributed virtual port group), NETWORK
	Type string `pulumi:"type"`
	// The vCenter server name
	Vcenter string `pulumi:"vcenter"`
}

// ExternalNetworkVsphereNetworkInput is an input type that accepts ExternalNetworkVsphereNetworkArgs and ExternalNetworkVsphereNetworkOutput values.
// You can construct a concrete instance of `ExternalNetworkVsphereNetworkInput` via:
//
//	ExternalNetworkVsphereNetworkArgs{...}
type ExternalNetworkVsphereNetworkInput interface {
	pulumi.Input

	ToExternalNetworkVsphereNetworkOutput() ExternalNetworkVsphereNetworkOutput
	ToExternalNetworkVsphereNetworkOutputWithContext(context.Context) ExternalNetworkVsphereNetworkOutput
}

type ExternalNetworkVsphereNetworkArgs struct {
	// A unique name for the network
	Name pulumi.StringInput `pulumi:"name"`
	// The vSphere port group type. One of: DV_PORTGROUP (distributed virtual port group), NETWORK
	Type pulumi.StringInput `pulumi:"type"`
	// The vCenter server name
	Vcenter pulumi.StringInput `pulumi:"vcenter"`
}

func (ExternalNetworkVsphereNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkVsphereNetwork)(nil)).Elem()
}

func (i ExternalNetworkVsphereNetworkArgs) ToExternalNetworkVsphereNetworkOutput() ExternalNetworkVsphereNetworkOutput {
	return i.ToExternalNetworkVsphereNetworkOutputWithContext(context.Background())
}

func (i ExternalNetworkVsphereNetworkArgs) ToExternalNetworkVsphereNetworkOutputWithContext(ctx context.Context) ExternalNetworkVsphereNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkVsphereNetworkOutput)
}

// ExternalNetworkVsphereNetworkArrayInput is an input type that accepts ExternalNetworkVsphereNetworkArray and ExternalNetworkVsphereNetworkArrayOutput values.
// You can construct a concrete instance of `ExternalNetworkVsphereNetworkArrayInput` via:
//
//	ExternalNetworkVsphereNetworkArray{ ExternalNetworkVsphereNetworkArgs{...} }
type ExternalNetworkVsphereNetworkArrayInput interface {
	pulumi.Input

	ToExternalNetworkVsphereNetworkArrayOutput() ExternalNetworkVsphereNetworkArrayOutput
	ToExternalNetworkVsphereNetworkArrayOutputWithContext(context.Context) ExternalNetworkVsphereNetworkArrayOutput
}

type ExternalNetworkVsphereNetworkArray []ExternalNetworkVsphereNetworkInput

func (ExternalNetworkVsphereNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkVsphereNetwork)(nil)).Elem()
}

func (i ExternalNetworkVsphereNetworkArray) ToExternalNetworkVsphereNetworkArrayOutput() ExternalNetworkVsphereNetworkArrayOutput {
	return i.ToExternalNetworkVsphereNetworkArrayOutputWithContext(context.Background())
}

func (i ExternalNetworkVsphereNetworkArray) ToExternalNetworkVsphereNetworkArrayOutputWithContext(ctx context.Context) ExternalNetworkVsphereNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkVsphereNetworkArrayOutput)
}

type ExternalNetworkVsphereNetworkOutput struct{ *pulumi.OutputState }

func (ExternalNetworkVsphereNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkVsphereNetwork)(nil)).Elem()
}

func (o ExternalNetworkVsphereNetworkOutput) ToExternalNetworkVsphereNetworkOutput() ExternalNetworkVsphereNetworkOutput {
	return o
}

func (o ExternalNetworkVsphereNetworkOutput) ToExternalNetworkVsphereNetworkOutputWithContext(ctx context.Context) ExternalNetworkVsphereNetworkOutput {
	return o
}

// A unique name for the network
func (o ExternalNetworkVsphereNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkVsphereNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// The vSphere port group type. One of: DV_PORTGROUP (distributed virtual port group), NETWORK
func (o ExternalNetworkVsphereNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkVsphereNetwork) string { return v.Type }).(pulumi.StringOutput)
}

// The vCenter server name
func (o ExternalNetworkVsphereNetworkOutput) Vcenter() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalNetworkVsphereNetwork) string { return v.Vcenter }).(pulumi.StringOutput)
}

type ExternalNetworkVsphereNetworkArrayOutput struct{ *pulumi.OutputState }

func (ExternalNetworkVsphereNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalNetworkVsphereNetwork)(nil)).Elem()
}

func (o ExternalNetworkVsphereNetworkArrayOutput) ToExternalNetworkVsphereNetworkArrayOutput() ExternalNetworkVsphereNetworkArrayOutput {
	return o
}

func (o ExternalNetworkVsphereNetworkArrayOutput) ToExternalNetworkVsphereNetworkArrayOutputWithContext(ctx context.Context) ExternalNetworkVsphereNetworkArrayOutput {
	return o
}

func (o ExternalNetworkVsphereNetworkArrayOutput) Index(i pulumi.IntInput) ExternalNetworkVsphereNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalNetworkVsphereNetwork {
		return vs[0].([]ExternalNetworkVsphereNetwork)[vs[1].(int)]
	}).(ExternalNetworkVsphereNetworkOutput)
}

type IndependentDiskMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// IndependentDiskMetadataEntryInput is an input type that accepts IndependentDiskMetadataEntryArgs and IndependentDiskMetadataEntryOutput values.
// You can construct a concrete instance of `IndependentDiskMetadataEntryInput` via:
//
//	IndependentDiskMetadataEntryArgs{...}
type IndependentDiskMetadataEntryInput interface {
	pulumi.Input

	ToIndependentDiskMetadataEntryOutput() IndependentDiskMetadataEntryOutput
	ToIndependentDiskMetadataEntryOutputWithContext(context.Context) IndependentDiskMetadataEntryOutput
}

type IndependentDiskMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IndependentDiskMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndependentDiskMetadataEntry)(nil)).Elem()
}

func (i IndependentDiskMetadataEntryArgs) ToIndependentDiskMetadataEntryOutput() IndependentDiskMetadataEntryOutput {
	return i.ToIndependentDiskMetadataEntryOutputWithContext(context.Background())
}

func (i IndependentDiskMetadataEntryArgs) ToIndependentDiskMetadataEntryOutputWithContext(ctx context.Context) IndependentDiskMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndependentDiskMetadataEntryOutput)
}

// IndependentDiskMetadataEntryArrayInput is an input type that accepts IndependentDiskMetadataEntryArray and IndependentDiskMetadataEntryArrayOutput values.
// You can construct a concrete instance of `IndependentDiskMetadataEntryArrayInput` via:
//
//	IndependentDiskMetadataEntryArray{ IndependentDiskMetadataEntryArgs{...} }
type IndependentDiskMetadataEntryArrayInput interface {
	pulumi.Input

	ToIndependentDiskMetadataEntryArrayOutput() IndependentDiskMetadataEntryArrayOutput
	ToIndependentDiskMetadataEntryArrayOutputWithContext(context.Context) IndependentDiskMetadataEntryArrayOutput
}

type IndependentDiskMetadataEntryArray []IndependentDiskMetadataEntryInput

func (IndependentDiskMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndependentDiskMetadataEntry)(nil)).Elem()
}

func (i IndependentDiskMetadataEntryArray) ToIndependentDiskMetadataEntryArrayOutput() IndependentDiskMetadataEntryArrayOutput {
	return i.ToIndependentDiskMetadataEntryArrayOutputWithContext(context.Background())
}

func (i IndependentDiskMetadataEntryArray) ToIndependentDiskMetadataEntryArrayOutputWithContext(ctx context.Context) IndependentDiskMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndependentDiskMetadataEntryArrayOutput)
}

type IndependentDiskMetadataEntryOutput struct{ *pulumi.OutputState }

func (IndependentDiskMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndependentDiskMetadataEntry)(nil)).Elem()
}

func (o IndependentDiskMetadataEntryOutput) ToIndependentDiskMetadataEntryOutput() IndependentDiskMetadataEntryOutput {
	return o
}

func (o IndependentDiskMetadataEntryOutput) ToIndependentDiskMetadataEntryOutputWithContext(ctx context.Context) IndependentDiskMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o IndependentDiskMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndependentDiskMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o IndependentDiskMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndependentDiskMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o IndependentDiskMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndependentDiskMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o IndependentDiskMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndependentDiskMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o IndependentDiskMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndependentDiskMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IndependentDiskMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (IndependentDiskMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndependentDiskMetadataEntry)(nil)).Elem()
}

func (o IndependentDiskMetadataEntryArrayOutput) ToIndependentDiskMetadataEntryArrayOutput() IndependentDiskMetadataEntryArrayOutput {
	return o
}

func (o IndependentDiskMetadataEntryArrayOutput) ToIndependentDiskMetadataEntryArrayOutputWithContext(ctx context.Context) IndependentDiskMetadataEntryArrayOutput {
	return o
}

func (o IndependentDiskMetadataEntryArrayOutput) Index(i pulumi.IntInput) IndependentDiskMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IndependentDiskMetadataEntry {
		return vs[0].([]IndependentDiskMetadataEntry)[vs[1].(int)]
	}).(IndependentDiskMetadataEntryOutput)
}

type IpSpaceCustomQuotaIpPrefixQuota struct {
	// Prefix length
	PrefixLength string `pulumi:"prefixLength"`
	// IP Prefix Quota
	Quota string `pulumi:"quota"`
}

// IpSpaceCustomQuotaIpPrefixQuotaInput is an input type that accepts IpSpaceCustomQuotaIpPrefixQuotaArgs and IpSpaceCustomQuotaIpPrefixQuotaOutput values.
// You can construct a concrete instance of `IpSpaceCustomQuotaIpPrefixQuotaInput` via:
//
//	IpSpaceCustomQuotaIpPrefixQuotaArgs{...}
type IpSpaceCustomQuotaIpPrefixQuotaInput interface {
	pulumi.Input

	ToIpSpaceCustomQuotaIpPrefixQuotaOutput() IpSpaceCustomQuotaIpPrefixQuotaOutput
	ToIpSpaceCustomQuotaIpPrefixQuotaOutputWithContext(context.Context) IpSpaceCustomQuotaIpPrefixQuotaOutput
}

type IpSpaceCustomQuotaIpPrefixQuotaArgs struct {
	// Prefix length
	PrefixLength pulumi.StringInput `pulumi:"prefixLength"`
	// IP Prefix Quota
	Quota pulumi.StringInput `pulumi:"quota"`
}

func (IpSpaceCustomQuotaIpPrefixQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSpaceCustomQuotaIpPrefixQuota)(nil)).Elem()
}

func (i IpSpaceCustomQuotaIpPrefixQuotaArgs) ToIpSpaceCustomQuotaIpPrefixQuotaOutput() IpSpaceCustomQuotaIpPrefixQuotaOutput {
	return i.ToIpSpaceCustomQuotaIpPrefixQuotaOutputWithContext(context.Background())
}

func (i IpSpaceCustomQuotaIpPrefixQuotaArgs) ToIpSpaceCustomQuotaIpPrefixQuotaOutputWithContext(ctx context.Context) IpSpaceCustomQuotaIpPrefixQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSpaceCustomQuotaIpPrefixQuotaOutput)
}

// IpSpaceCustomQuotaIpPrefixQuotaArrayInput is an input type that accepts IpSpaceCustomQuotaIpPrefixQuotaArray and IpSpaceCustomQuotaIpPrefixQuotaArrayOutput values.
// You can construct a concrete instance of `IpSpaceCustomQuotaIpPrefixQuotaArrayInput` via:
//
//	IpSpaceCustomQuotaIpPrefixQuotaArray{ IpSpaceCustomQuotaIpPrefixQuotaArgs{...} }
type IpSpaceCustomQuotaIpPrefixQuotaArrayInput interface {
	pulumi.Input

	ToIpSpaceCustomQuotaIpPrefixQuotaArrayOutput() IpSpaceCustomQuotaIpPrefixQuotaArrayOutput
	ToIpSpaceCustomQuotaIpPrefixQuotaArrayOutputWithContext(context.Context) IpSpaceCustomQuotaIpPrefixQuotaArrayOutput
}

type IpSpaceCustomQuotaIpPrefixQuotaArray []IpSpaceCustomQuotaIpPrefixQuotaInput

func (IpSpaceCustomQuotaIpPrefixQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSpaceCustomQuotaIpPrefixQuota)(nil)).Elem()
}

func (i IpSpaceCustomQuotaIpPrefixQuotaArray) ToIpSpaceCustomQuotaIpPrefixQuotaArrayOutput() IpSpaceCustomQuotaIpPrefixQuotaArrayOutput {
	return i.ToIpSpaceCustomQuotaIpPrefixQuotaArrayOutputWithContext(context.Background())
}

func (i IpSpaceCustomQuotaIpPrefixQuotaArray) ToIpSpaceCustomQuotaIpPrefixQuotaArrayOutputWithContext(ctx context.Context) IpSpaceCustomQuotaIpPrefixQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSpaceCustomQuotaIpPrefixQuotaArrayOutput)
}

type IpSpaceCustomQuotaIpPrefixQuotaOutput struct{ *pulumi.OutputState }

func (IpSpaceCustomQuotaIpPrefixQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSpaceCustomQuotaIpPrefixQuota)(nil)).Elem()
}

func (o IpSpaceCustomQuotaIpPrefixQuotaOutput) ToIpSpaceCustomQuotaIpPrefixQuotaOutput() IpSpaceCustomQuotaIpPrefixQuotaOutput {
	return o
}

func (o IpSpaceCustomQuotaIpPrefixQuotaOutput) ToIpSpaceCustomQuotaIpPrefixQuotaOutputWithContext(ctx context.Context) IpSpaceCustomQuotaIpPrefixQuotaOutput {
	return o
}

// Prefix length
func (o IpSpaceCustomQuotaIpPrefixQuotaOutput) PrefixLength() pulumi.StringOutput {
	return o.ApplyT(func(v IpSpaceCustomQuotaIpPrefixQuota) string { return v.PrefixLength }).(pulumi.StringOutput)
}

// IP Prefix Quota
func (o IpSpaceCustomQuotaIpPrefixQuotaOutput) Quota() pulumi.StringOutput {
	return o.ApplyT(func(v IpSpaceCustomQuotaIpPrefixQuota) string { return v.Quota }).(pulumi.StringOutput)
}

type IpSpaceCustomQuotaIpPrefixQuotaArrayOutput struct{ *pulumi.OutputState }

func (IpSpaceCustomQuotaIpPrefixQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSpaceCustomQuotaIpPrefixQuota)(nil)).Elem()
}

func (o IpSpaceCustomQuotaIpPrefixQuotaArrayOutput) ToIpSpaceCustomQuotaIpPrefixQuotaArrayOutput() IpSpaceCustomQuotaIpPrefixQuotaArrayOutput {
	return o
}

func (o IpSpaceCustomQuotaIpPrefixQuotaArrayOutput) ToIpSpaceCustomQuotaIpPrefixQuotaArrayOutputWithContext(ctx context.Context) IpSpaceCustomQuotaIpPrefixQuotaArrayOutput {
	return o
}

func (o IpSpaceCustomQuotaIpPrefixQuotaArrayOutput) Index(i pulumi.IntInput) IpSpaceCustomQuotaIpPrefixQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSpaceCustomQuotaIpPrefixQuota {
		return vs[0].([]IpSpaceCustomQuotaIpPrefixQuota)[vs[1].(int)]
	}).(IpSpaceCustomQuotaIpPrefixQuotaOutput)
}

type IpSpaceIpPrefix struct {
	// Floating IP quota
	DefaultQuota *string `pulumi:"defaultQuota"`
	// One or more prefixes
	Prefixes []IpSpaceIpPrefixPrefix `pulumi:"prefixes"`
}

// IpSpaceIpPrefixInput is an input type that accepts IpSpaceIpPrefixArgs and IpSpaceIpPrefixOutput values.
// You can construct a concrete instance of `IpSpaceIpPrefixInput` via:
//
//	IpSpaceIpPrefixArgs{...}
type IpSpaceIpPrefixInput interface {
	pulumi.Input

	ToIpSpaceIpPrefixOutput() IpSpaceIpPrefixOutput
	ToIpSpaceIpPrefixOutputWithContext(context.Context) IpSpaceIpPrefixOutput
}

type IpSpaceIpPrefixArgs struct {
	// Floating IP quota
	DefaultQuota pulumi.StringPtrInput `pulumi:"defaultQuota"`
	// One or more prefixes
	Prefixes IpSpaceIpPrefixPrefixArrayInput `pulumi:"prefixes"`
}

func (IpSpaceIpPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSpaceIpPrefix)(nil)).Elem()
}

func (i IpSpaceIpPrefixArgs) ToIpSpaceIpPrefixOutput() IpSpaceIpPrefixOutput {
	return i.ToIpSpaceIpPrefixOutputWithContext(context.Background())
}

func (i IpSpaceIpPrefixArgs) ToIpSpaceIpPrefixOutputWithContext(ctx context.Context) IpSpaceIpPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSpaceIpPrefixOutput)
}

// IpSpaceIpPrefixArrayInput is an input type that accepts IpSpaceIpPrefixArray and IpSpaceIpPrefixArrayOutput values.
// You can construct a concrete instance of `IpSpaceIpPrefixArrayInput` via:
//
//	IpSpaceIpPrefixArray{ IpSpaceIpPrefixArgs{...} }
type IpSpaceIpPrefixArrayInput interface {
	pulumi.Input

	ToIpSpaceIpPrefixArrayOutput() IpSpaceIpPrefixArrayOutput
	ToIpSpaceIpPrefixArrayOutputWithContext(context.Context) IpSpaceIpPrefixArrayOutput
}

type IpSpaceIpPrefixArray []IpSpaceIpPrefixInput

func (IpSpaceIpPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSpaceIpPrefix)(nil)).Elem()
}

func (i IpSpaceIpPrefixArray) ToIpSpaceIpPrefixArrayOutput() IpSpaceIpPrefixArrayOutput {
	return i.ToIpSpaceIpPrefixArrayOutputWithContext(context.Background())
}

func (i IpSpaceIpPrefixArray) ToIpSpaceIpPrefixArrayOutputWithContext(ctx context.Context) IpSpaceIpPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSpaceIpPrefixArrayOutput)
}

type IpSpaceIpPrefixOutput struct{ *pulumi.OutputState }

func (IpSpaceIpPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSpaceIpPrefix)(nil)).Elem()
}

func (o IpSpaceIpPrefixOutput) ToIpSpaceIpPrefixOutput() IpSpaceIpPrefixOutput {
	return o
}

func (o IpSpaceIpPrefixOutput) ToIpSpaceIpPrefixOutputWithContext(ctx context.Context) IpSpaceIpPrefixOutput {
	return o
}

// Floating IP quota
func (o IpSpaceIpPrefixOutput) DefaultQuota() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSpaceIpPrefix) *string { return v.DefaultQuota }).(pulumi.StringPtrOutput)
}

// One or more prefixes
func (o IpSpaceIpPrefixOutput) Prefixes() IpSpaceIpPrefixPrefixArrayOutput {
	return o.ApplyT(func(v IpSpaceIpPrefix) []IpSpaceIpPrefixPrefix { return v.Prefixes }).(IpSpaceIpPrefixPrefixArrayOutput)
}

type IpSpaceIpPrefixArrayOutput struct{ *pulumi.OutputState }

func (IpSpaceIpPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSpaceIpPrefix)(nil)).Elem()
}

func (o IpSpaceIpPrefixArrayOutput) ToIpSpaceIpPrefixArrayOutput() IpSpaceIpPrefixArrayOutput {
	return o
}

func (o IpSpaceIpPrefixArrayOutput) ToIpSpaceIpPrefixArrayOutputWithContext(ctx context.Context) IpSpaceIpPrefixArrayOutput {
	return o
}

func (o IpSpaceIpPrefixArrayOutput) Index(i pulumi.IntInput) IpSpaceIpPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSpaceIpPrefix {
		return vs[0].([]IpSpaceIpPrefix)[vs[1].(int)]
	}).(IpSpaceIpPrefixOutput)
}

type IpSpaceIpPrefixPrefix struct {
	// First IP
	FirstIp string `pulumi:"firstIp"`
	// ID of IP Prefix
	Id *string `pulumi:"id"`
	// Number of prefixes to define
	PrefixCount string `pulumi:"prefixCount"`
	// Prefix length
	PrefixLength string `pulumi:"prefixLength"`
}

// IpSpaceIpPrefixPrefixInput is an input type that accepts IpSpaceIpPrefixPrefixArgs and IpSpaceIpPrefixPrefixOutput values.
// You can construct a concrete instance of `IpSpaceIpPrefixPrefixInput` via:
//
//	IpSpaceIpPrefixPrefixArgs{...}
type IpSpaceIpPrefixPrefixInput interface {
	pulumi.Input

	ToIpSpaceIpPrefixPrefixOutput() IpSpaceIpPrefixPrefixOutput
	ToIpSpaceIpPrefixPrefixOutputWithContext(context.Context) IpSpaceIpPrefixPrefixOutput
}

type IpSpaceIpPrefixPrefixArgs struct {
	// First IP
	FirstIp pulumi.StringInput `pulumi:"firstIp"`
	// ID of IP Prefix
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Number of prefixes to define
	PrefixCount pulumi.StringInput `pulumi:"prefixCount"`
	// Prefix length
	PrefixLength pulumi.StringInput `pulumi:"prefixLength"`
}

func (IpSpaceIpPrefixPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSpaceIpPrefixPrefix)(nil)).Elem()
}

func (i IpSpaceIpPrefixPrefixArgs) ToIpSpaceIpPrefixPrefixOutput() IpSpaceIpPrefixPrefixOutput {
	return i.ToIpSpaceIpPrefixPrefixOutputWithContext(context.Background())
}

func (i IpSpaceIpPrefixPrefixArgs) ToIpSpaceIpPrefixPrefixOutputWithContext(ctx context.Context) IpSpaceIpPrefixPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSpaceIpPrefixPrefixOutput)
}

// IpSpaceIpPrefixPrefixArrayInput is an input type that accepts IpSpaceIpPrefixPrefixArray and IpSpaceIpPrefixPrefixArrayOutput values.
// You can construct a concrete instance of `IpSpaceIpPrefixPrefixArrayInput` via:
//
//	IpSpaceIpPrefixPrefixArray{ IpSpaceIpPrefixPrefixArgs{...} }
type IpSpaceIpPrefixPrefixArrayInput interface {
	pulumi.Input

	ToIpSpaceIpPrefixPrefixArrayOutput() IpSpaceIpPrefixPrefixArrayOutput
	ToIpSpaceIpPrefixPrefixArrayOutputWithContext(context.Context) IpSpaceIpPrefixPrefixArrayOutput
}

type IpSpaceIpPrefixPrefixArray []IpSpaceIpPrefixPrefixInput

func (IpSpaceIpPrefixPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSpaceIpPrefixPrefix)(nil)).Elem()
}

func (i IpSpaceIpPrefixPrefixArray) ToIpSpaceIpPrefixPrefixArrayOutput() IpSpaceIpPrefixPrefixArrayOutput {
	return i.ToIpSpaceIpPrefixPrefixArrayOutputWithContext(context.Background())
}

func (i IpSpaceIpPrefixPrefixArray) ToIpSpaceIpPrefixPrefixArrayOutputWithContext(ctx context.Context) IpSpaceIpPrefixPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSpaceIpPrefixPrefixArrayOutput)
}

type IpSpaceIpPrefixPrefixOutput struct{ *pulumi.OutputState }

func (IpSpaceIpPrefixPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSpaceIpPrefixPrefix)(nil)).Elem()
}

func (o IpSpaceIpPrefixPrefixOutput) ToIpSpaceIpPrefixPrefixOutput() IpSpaceIpPrefixPrefixOutput {
	return o
}

func (o IpSpaceIpPrefixPrefixOutput) ToIpSpaceIpPrefixPrefixOutputWithContext(ctx context.Context) IpSpaceIpPrefixPrefixOutput {
	return o
}

// First IP
func (o IpSpaceIpPrefixPrefixOutput) FirstIp() pulumi.StringOutput {
	return o.ApplyT(func(v IpSpaceIpPrefixPrefix) string { return v.FirstIp }).(pulumi.StringOutput)
}

// ID of IP Prefix
func (o IpSpaceIpPrefixPrefixOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSpaceIpPrefixPrefix) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Number of prefixes to define
func (o IpSpaceIpPrefixPrefixOutput) PrefixCount() pulumi.StringOutput {
	return o.ApplyT(func(v IpSpaceIpPrefixPrefix) string { return v.PrefixCount }).(pulumi.StringOutput)
}

// Prefix length
func (o IpSpaceIpPrefixPrefixOutput) PrefixLength() pulumi.StringOutput {
	return o.ApplyT(func(v IpSpaceIpPrefixPrefix) string { return v.PrefixLength }).(pulumi.StringOutput)
}

type IpSpaceIpPrefixPrefixArrayOutput struct{ *pulumi.OutputState }

func (IpSpaceIpPrefixPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSpaceIpPrefixPrefix)(nil)).Elem()
}

func (o IpSpaceIpPrefixPrefixArrayOutput) ToIpSpaceIpPrefixPrefixArrayOutput() IpSpaceIpPrefixPrefixArrayOutput {
	return o
}

func (o IpSpaceIpPrefixPrefixArrayOutput) ToIpSpaceIpPrefixPrefixArrayOutputWithContext(ctx context.Context) IpSpaceIpPrefixPrefixArrayOutput {
	return o
}

func (o IpSpaceIpPrefixPrefixArrayOutput) Index(i pulumi.IntInput) IpSpaceIpPrefixPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSpaceIpPrefixPrefix {
		return vs[0].([]IpSpaceIpPrefixPrefix)[vs[1].(int)]
	}).(IpSpaceIpPrefixPrefixOutput)
}

type IpSpaceIpRange struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// ID of IP Range
	Id *string `pulumi:"id"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// IpSpaceIpRangeInput is an input type that accepts IpSpaceIpRangeArgs and IpSpaceIpRangeOutput values.
// You can construct a concrete instance of `IpSpaceIpRangeInput` via:
//
//	IpSpaceIpRangeArgs{...}
type IpSpaceIpRangeInput interface {
	pulumi.Input

	ToIpSpaceIpRangeOutput() IpSpaceIpRangeOutput
	ToIpSpaceIpRangeOutputWithContext(context.Context) IpSpaceIpRangeOutput
}

type IpSpaceIpRangeArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// ID of IP Range
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (IpSpaceIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSpaceIpRange)(nil)).Elem()
}

func (i IpSpaceIpRangeArgs) ToIpSpaceIpRangeOutput() IpSpaceIpRangeOutput {
	return i.ToIpSpaceIpRangeOutputWithContext(context.Background())
}

func (i IpSpaceIpRangeArgs) ToIpSpaceIpRangeOutputWithContext(ctx context.Context) IpSpaceIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSpaceIpRangeOutput)
}

// IpSpaceIpRangeArrayInput is an input type that accepts IpSpaceIpRangeArray and IpSpaceIpRangeArrayOutput values.
// You can construct a concrete instance of `IpSpaceIpRangeArrayInput` via:
//
//	IpSpaceIpRangeArray{ IpSpaceIpRangeArgs{...} }
type IpSpaceIpRangeArrayInput interface {
	pulumi.Input

	ToIpSpaceIpRangeArrayOutput() IpSpaceIpRangeArrayOutput
	ToIpSpaceIpRangeArrayOutputWithContext(context.Context) IpSpaceIpRangeArrayOutput
}

type IpSpaceIpRangeArray []IpSpaceIpRangeInput

func (IpSpaceIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSpaceIpRange)(nil)).Elem()
}

func (i IpSpaceIpRangeArray) ToIpSpaceIpRangeArrayOutput() IpSpaceIpRangeArrayOutput {
	return i.ToIpSpaceIpRangeArrayOutputWithContext(context.Background())
}

func (i IpSpaceIpRangeArray) ToIpSpaceIpRangeArrayOutputWithContext(ctx context.Context) IpSpaceIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSpaceIpRangeArrayOutput)
}

type IpSpaceIpRangeOutput struct{ *pulumi.OutputState }

func (IpSpaceIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSpaceIpRange)(nil)).Elem()
}

func (o IpSpaceIpRangeOutput) ToIpSpaceIpRangeOutput() IpSpaceIpRangeOutput {
	return o
}

func (o IpSpaceIpRangeOutput) ToIpSpaceIpRangeOutputWithContext(ctx context.Context) IpSpaceIpRangeOutput {
	return o
}

// End address of the IP range
func (o IpSpaceIpRangeOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v IpSpaceIpRange) string { return v.EndAddress }).(pulumi.StringOutput)
}

// ID of IP Range
func (o IpSpaceIpRangeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSpaceIpRange) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Start address of the IP range
func (o IpSpaceIpRangeOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v IpSpaceIpRange) string { return v.StartAddress }).(pulumi.StringOutput)
}

type IpSpaceIpRangeArrayOutput struct{ *pulumi.OutputState }

func (IpSpaceIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSpaceIpRange)(nil)).Elem()
}

func (o IpSpaceIpRangeArrayOutput) ToIpSpaceIpRangeArrayOutput() IpSpaceIpRangeArrayOutput {
	return o
}

func (o IpSpaceIpRangeArrayOutput) ToIpSpaceIpRangeArrayOutputWithContext(ctx context.Context) IpSpaceIpRangeArrayOutput {
	return o
}

func (o IpSpaceIpRangeArrayOutput) Index(i pulumi.IntInput) IpSpaceIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSpaceIpRange {
		return vs[0].([]IpSpaceIpRange)[vs[1].(int)]
	}).(IpSpaceIpRangeOutput)
}

type LbServerPoolMember struct {
	// Defines member state. One of enabled, drain, disabled.
	Condition string `pulumi:"condition"`
	// The NSX ID of the load balancer server pool
	Id *string `pulumi:"id"`
	// IP address of member in server pool
	IpAddress string `pulumi:"ipAddress"`
	// The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released
	MaxConnections *int `pulumi:"maxConnections"`
	// Minimum number of concurrent connections a member must always accept
	MinConnections *int `pulumi:"minConnections"`
	// Port at which the member is to receive health monitor requests. Can be the same as port
	MonitorPort int `pulumi:"monitorPort"`
	// Server Pool name
	Name string `pulumi:"name"`
	// Port at which the member is to receive traffic from the load balancer
	Port int `pulumi:"port"`
	// Proportion of traffic this member is to handle. Must be an integer in the range 1-256
	Weight int `pulumi:"weight"`
}

// LbServerPoolMemberInput is an input type that accepts LbServerPoolMemberArgs and LbServerPoolMemberOutput values.
// You can construct a concrete instance of `LbServerPoolMemberInput` via:
//
//	LbServerPoolMemberArgs{...}
type LbServerPoolMemberInput interface {
	pulumi.Input

	ToLbServerPoolMemberOutput() LbServerPoolMemberOutput
	ToLbServerPoolMemberOutputWithContext(context.Context) LbServerPoolMemberOutput
}

type LbServerPoolMemberArgs struct {
	// Defines member state. One of enabled, drain, disabled.
	Condition pulumi.StringInput `pulumi:"condition"`
	// The NSX ID of the load balancer server pool
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IP address of member in server pool
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Minimum number of concurrent connections a member must always accept
	MinConnections pulumi.IntPtrInput `pulumi:"minConnections"`
	// Port at which the member is to receive health monitor requests. Can be the same as port
	MonitorPort pulumi.IntInput `pulumi:"monitorPort"`
	// Server Pool name
	Name pulumi.StringInput `pulumi:"name"`
	// Port at which the member is to receive traffic from the load balancer
	Port pulumi.IntInput `pulumi:"port"`
	// Proportion of traffic this member is to handle. Must be an integer in the range 1-256
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (LbServerPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbServerPoolMember)(nil)).Elem()
}

func (i LbServerPoolMemberArgs) ToLbServerPoolMemberOutput() LbServerPoolMemberOutput {
	return i.ToLbServerPoolMemberOutputWithContext(context.Background())
}

func (i LbServerPoolMemberArgs) ToLbServerPoolMemberOutputWithContext(ctx context.Context) LbServerPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbServerPoolMemberOutput)
}

// LbServerPoolMemberArrayInput is an input type that accepts LbServerPoolMemberArray and LbServerPoolMemberArrayOutput values.
// You can construct a concrete instance of `LbServerPoolMemberArrayInput` via:
//
//	LbServerPoolMemberArray{ LbServerPoolMemberArgs{...} }
type LbServerPoolMemberArrayInput interface {
	pulumi.Input

	ToLbServerPoolMemberArrayOutput() LbServerPoolMemberArrayOutput
	ToLbServerPoolMemberArrayOutputWithContext(context.Context) LbServerPoolMemberArrayOutput
}

type LbServerPoolMemberArray []LbServerPoolMemberInput

func (LbServerPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbServerPoolMember)(nil)).Elem()
}

func (i LbServerPoolMemberArray) ToLbServerPoolMemberArrayOutput() LbServerPoolMemberArrayOutput {
	return i.ToLbServerPoolMemberArrayOutputWithContext(context.Background())
}

func (i LbServerPoolMemberArray) ToLbServerPoolMemberArrayOutputWithContext(ctx context.Context) LbServerPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbServerPoolMemberArrayOutput)
}

type LbServerPoolMemberOutput struct{ *pulumi.OutputState }

func (LbServerPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbServerPoolMember)(nil)).Elem()
}

func (o LbServerPoolMemberOutput) ToLbServerPoolMemberOutput() LbServerPoolMemberOutput {
	return o
}

func (o LbServerPoolMemberOutput) ToLbServerPoolMemberOutputWithContext(ctx context.Context) LbServerPoolMemberOutput {
	return o
}

// Defines member state. One of enabled, drain, disabled.
func (o LbServerPoolMemberOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v LbServerPoolMember) string { return v.Condition }).(pulumi.StringOutput)
}

// The NSX ID of the load balancer server pool
func (o LbServerPoolMemberOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbServerPoolMember) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP address of member in server pool
func (o LbServerPoolMemberOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LbServerPoolMember) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released
func (o LbServerPoolMemberOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LbServerPoolMember) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Minimum number of concurrent connections a member must always accept
func (o LbServerPoolMemberOutput) MinConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LbServerPoolMember) *int { return v.MinConnections }).(pulumi.IntPtrOutput)
}

// Port at which the member is to receive health monitor requests. Can be the same as port
func (o LbServerPoolMemberOutput) MonitorPort() pulumi.IntOutput {
	return o.ApplyT(func(v LbServerPoolMember) int { return v.MonitorPort }).(pulumi.IntOutput)
}

// Server Pool name
func (o LbServerPoolMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LbServerPoolMember) string { return v.Name }).(pulumi.StringOutput)
}

// Port at which the member is to receive traffic from the load balancer
func (o LbServerPoolMemberOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LbServerPoolMember) int { return v.Port }).(pulumi.IntOutput)
}

// Proportion of traffic this member is to handle. Must be an integer in the range 1-256
func (o LbServerPoolMemberOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v LbServerPoolMember) int { return v.Weight }).(pulumi.IntOutput)
}

type LbServerPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (LbServerPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbServerPoolMember)(nil)).Elem()
}

func (o LbServerPoolMemberArrayOutput) ToLbServerPoolMemberArrayOutput() LbServerPoolMemberArrayOutput {
	return o
}

func (o LbServerPoolMemberArrayOutput) ToLbServerPoolMemberArrayOutputWithContext(ctx context.Context) LbServerPoolMemberArrayOutput {
	return o
}

func (o LbServerPoolMemberArrayOutput) Index(i pulumi.IntInput) LbServerPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LbServerPoolMember {
		return vs[0].([]LbServerPoolMember)[vs[1].(int)]
	}).(LbServerPoolMemberOutput)
}

type NetworkDirectMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// NetworkDirectMetadataEntryInput is an input type that accepts NetworkDirectMetadataEntryArgs and NetworkDirectMetadataEntryOutput values.
// You can construct a concrete instance of `NetworkDirectMetadataEntryInput` via:
//
//	NetworkDirectMetadataEntryArgs{...}
type NetworkDirectMetadataEntryInput interface {
	pulumi.Input

	ToNetworkDirectMetadataEntryOutput() NetworkDirectMetadataEntryOutput
	ToNetworkDirectMetadataEntryOutputWithContext(context.Context) NetworkDirectMetadataEntryOutput
}

type NetworkDirectMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetworkDirectMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkDirectMetadataEntry)(nil)).Elem()
}

func (i NetworkDirectMetadataEntryArgs) ToNetworkDirectMetadataEntryOutput() NetworkDirectMetadataEntryOutput {
	return i.ToNetworkDirectMetadataEntryOutputWithContext(context.Background())
}

func (i NetworkDirectMetadataEntryArgs) ToNetworkDirectMetadataEntryOutputWithContext(ctx context.Context) NetworkDirectMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDirectMetadataEntryOutput)
}

// NetworkDirectMetadataEntryArrayInput is an input type that accepts NetworkDirectMetadataEntryArray and NetworkDirectMetadataEntryArrayOutput values.
// You can construct a concrete instance of `NetworkDirectMetadataEntryArrayInput` via:
//
//	NetworkDirectMetadataEntryArray{ NetworkDirectMetadataEntryArgs{...} }
type NetworkDirectMetadataEntryArrayInput interface {
	pulumi.Input

	ToNetworkDirectMetadataEntryArrayOutput() NetworkDirectMetadataEntryArrayOutput
	ToNetworkDirectMetadataEntryArrayOutputWithContext(context.Context) NetworkDirectMetadataEntryArrayOutput
}

type NetworkDirectMetadataEntryArray []NetworkDirectMetadataEntryInput

func (NetworkDirectMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkDirectMetadataEntry)(nil)).Elem()
}

func (i NetworkDirectMetadataEntryArray) ToNetworkDirectMetadataEntryArrayOutput() NetworkDirectMetadataEntryArrayOutput {
	return i.ToNetworkDirectMetadataEntryArrayOutputWithContext(context.Background())
}

func (i NetworkDirectMetadataEntryArray) ToNetworkDirectMetadataEntryArrayOutputWithContext(ctx context.Context) NetworkDirectMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDirectMetadataEntryArrayOutput)
}

type NetworkDirectMetadataEntryOutput struct{ *pulumi.OutputState }

func (NetworkDirectMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkDirectMetadataEntry)(nil)).Elem()
}

func (o NetworkDirectMetadataEntryOutput) ToNetworkDirectMetadataEntryOutput() NetworkDirectMetadataEntryOutput {
	return o
}

func (o NetworkDirectMetadataEntryOutput) ToNetworkDirectMetadataEntryOutputWithContext(ctx context.Context) NetworkDirectMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o NetworkDirectMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkDirectMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o NetworkDirectMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkDirectMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o NetworkDirectMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkDirectMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o NetworkDirectMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkDirectMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o NetworkDirectMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkDirectMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkDirectMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkDirectMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkDirectMetadataEntry)(nil)).Elem()
}

func (o NetworkDirectMetadataEntryArrayOutput) ToNetworkDirectMetadataEntryArrayOutput() NetworkDirectMetadataEntryArrayOutput {
	return o
}

func (o NetworkDirectMetadataEntryArrayOutput) ToNetworkDirectMetadataEntryArrayOutputWithContext(ctx context.Context) NetworkDirectMetadataEntryArrayOutput {
	return o
}

func (o NetworkDirectMetadataEntryArrayOutput) Index(i pulumi.IntInput) NetworkDirectMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkDirectMetadataEntry {
		return vs[0].([]NetworkDirectMetadataEntry)[vs[1].(int)]
	}).(NetworkDirectMetadataEntryOutput)
}

type NetworkIsolatedDhcpPool struct {
	// The default DHCP lease time to use
	DefaultLeaseTime *int `pulumi:"defaultLeaseTime"`
	// The final address in the IP Range
	EndAddress string `pulumi:"endAddress"`
	// The maximum DHCP lease time to use
	MaxLeaseTime *int `pulumi:"maxLeaseTime"`
	// The first address in the IP Range
	StartAddress string `pulumi:"startAddress"`
}

// NetworkIsolatedDhcpPoolInput is an input type that accepts NetworkIsolatedDhcpPoolArgs and NetworkIsolatedDhcpPoolOutput values.
// You can construct a concrete instance of `NetworkIsolatedDhcpPoolInput` via:
//
//	NetworkIsolatedDhcpPoolArgs{...}
type NetworkIsolatedDhcpPoolInput interface {
	pulumi.Input

	ToNetworkIsolatedDhcpPoolOutput() NetworkIsolatedDhcpPoolOutput
	ToNetworkIsolatedDhcpPoolOutputWithContext(context.Context) NetworkIsolatedDhcpPoolOutput
}

type NetworkIsolatedDhcpPoolArgs struct {
	// The default DHCP lease time to use
	DefaultLeaseTime pulumi.IntPtrInput `pulumi:"defaultLeaseTime"`
	// The final address in the IP Range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// The maximum DHCP lease time to use
	MaxLeaseTime pulumi.IntPtrInput `pulumi:"maxLeaseTime"`
	// The first address in the IP Range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NetworkIsolatedDhcpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedDhcpPool)(nil)).Elem()
}

func (i NetworkIsolatedDhcpPoolArgs) ToNetworkIsolatedDhcpPoolOutput() NetworkIsolatedDhcpPoolOutput {
	return i.ToNetworkIsolatedDhcpPoolOutputWithContext(context.Background())
}

func (i NetworkIsolatedDhcpPoolArgs) ToNetworkIsolatedDhcpPoolOutputWithContext(ctx context.Context) NetworkIsolatedDhcpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedDhcpPoolOutput)
}

// NetworkIsolatedDhcpPoolArrayInput is an input type that accepts NetworkIsolatedDhcpPoolArray and NetworkIsolatedDhcpPoolArrayOutput values.
// You can construct a concrete instance of `NetworkIsolatedDhcpPoolArrayInput` via:
//
//	NetworkIsolatedDhcpPoolArray{ NetworkIsolatedDhcpPoolArgs{...} }
type NetworkIsolatedDhcpPoolArrayInput interface {
	pulumi.Input

	ToNetworkIsolatedDhcpPoolArrayOutput() NetworkIsolatedDhcpPoolArrayOutput
	ToNetworkIsolatedDhcpPoolArrayOutputWithContext(context.Context) NetworkIsolatedDhcpPoolArrayOutput
}

type NetworkIsolatedDhcpPoolArray []NetworkIsolatedDhcpPoolInput

func (NetworkIsolatedDhcpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedDhcpPool)(nil)).Elem()
}

func (i NetworkIsolatedDhcpPoolArray) ToNetworkIsolatedDhcpPoolArrayOutput() NetworkIsolatedDhcpPoolArrayOutput {
	return i.ToNetworkIsolatedDhcpPoolArrayOutputWithContext(context.Background())
}

func (i NetworkIsolatedDhcpPoolArray) ToNetworkIsolatedDhcpPoolArrayOutputWithContext(ctx context.Context) NetworkIsolatedDhcpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedDhcpPoolArrayOutput)
}

type NetworkIsolatedDhcpPoolOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedDhcpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedDhcpPool)(nil)).Elem()
}

func (o NetworkIsolatedDhcpPoolOutput) ToNetworkIsolatedDhcpPoolOutput() NetworkIsolatedDhcpPoolOutput {
	return o
}

func (o NetworkIsolatedDhcpPoolOutput) ToNetworkIsolatedDhcpPoolOutputWithContext(ctx context.Context) NetworkIsolatedDhcpPoolOutput {
	return o
}

// The default DHCP lease time to use
func (o NetworkIsolatedDhcpPoolOutput) DefaultLeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedDhcpPool) *int { return v.DefaultLeaseTime }).(pulumi.IntPtrOutput)
}

// The final address in the IP Range
func (o NetworkIsolatedDhcpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkIsolatedDhcpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// The maximum DHCP lease time to use
func (o NetworkIsolatedDhcpPoolOutput) MaxLeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedDhcpPool) *int { return v.MaxLeaseTime }).(pulumi.IntPtrOutput)
}

// The first address in the IP Range
func (o NetworkIsolatedDhcpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkIsolatedDhcpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NetworkIsolatedDhcpPoolArrayOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedDhcpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedDhcpPool)(nil)).Elem()
}

func (o NetworkIsolatedDhcpPoolArrayOutput) ToNetworkIsolatedDhcpPoolArrayOutput() NetworkIsolatedDhcpPoolArrayOutput {
	return o
}

func (o NetworkIsolatedDhcpPoolArrayOutput) ToNetworkIsolatedDhcpPoolArrayOutputWithContext(ctx context.Context) NetworkIsolatedDhcpPoolArrayOutput {
	return o
}

func (o NetworkIsolatedDhcpPoolArrayOutput) Index(i pulumi.IntInput) NetworkIsolatedDhcpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkIsolatedDhcpPool {
		return vs[0].([]NetworkIsolatedDhcpPool)[vs[1].(int)]
	}).(NetworkIsolatedDhcpPoolOutput)
}

type NetworkIsolatedMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// NetworkIsolatedMetadataEntryInput is an input type that accepts NetworkIsolatedMetadataEntryArgs and NetworkIsolatedMetadataEntryOutput values.
// You can construct a concrete instance of `NetworkIsolatedMetadataEntryInput` via:
//
//	NetworkIsolatedMetadataEntryArgs{...}
type NetworkIsolatedMetadataEntryInput interface {
	pulumi.Input

	ToNetworkIsolatedMetadataEntryOutput() NetworkIsolatedMetadataEntryOutput
	ToNetworkIsolatedMetadataEntryOutputWithContext(context.Context) NetworkIsolatedMetadataEntryOutput
}

type NetworkIsolatedMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetworkIsolatedMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedMetadataEntry)(nil)).Elem()
}

func (i NetworkIsolatedMetadataEntryArgs) ToNetworkIsolatedMetadataEntryOutput() NetworkIsolatedMetadataEntryOutput {
	return i.ToNetworkIsolatedMetadataEntryOutputWithContext(context.Background())
}

func (i NetworkIsolatedMetadataEntryArgs) ToNetworkIsolatedMetadataEntryOutputWithContext(ctx context.Context) NetworkIsolatedMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedMetadataEntryOutput)
}

// NetworkIsolatedMetadataEntryArrayInput is an input type that accepts NetworkIsolatedMetadataEntryArray and NetworkIsolatedMetadataEntryArrayOutput values.
// You can construct a concrete instance of `NetworkIsolatedMetadataEntryArrayInput` via:
//
//	NetworkIsolatedMetadataEntryArray{ NetworkIsolatedMetadataEntryArgs{...} }
type NetworkIsolatedMetadataEntryArrayInput interface {
	pulumi.Input

	ToNetworkIsolatedMetadataEntryArrayOutput() NetworkIsolatedMetadataEntryArrayOutput
	ToNetworkIsolatedMetadataEntryArrayOutputWithContext(context.Context) NetworkIsolatedMetadataEntryArrayOutput
}

type NetworkIsolatedMetadataEntryArray []NetworkIsolatedMetadataEntryInput

func (NetworkIsolatedMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedMetadataEntry)(nil)).Elem()
}

func (i NetworkIsolatedMetadataEntryArray) ToNetworkIsolatedMetadataEntryArrayOutput() NetworkIsolatedMetadataEntryArrayOutput {
	return i.ToNetworkIsolatedMetadataEntryArrayOutputWithContext(context.Background())
}

func (i NetworkIsolatedMetadataEntryArray) ToNetworkIsolatedMetadataEntryArrayOutputWithContext(ctx context.Context) NetworkIsolatedMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedMetadataEntryArrayOutput)
}

type NetworkIsolatedMetadataEntryOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedMetadataEntry)(nil)).Elem()
}

func (o NetworkIsolatedMetadataEntryOutput) ToNetworkIsolatedMetadataEntryOutput() NetworkIsolatedMetadataEntryOutput {
	return o
}

func (o NetworkIsolatedMetadataEntryOutput) ToNetworkIsolatedMetadataEntryOutputWithContext(ctx context.Context) NetworkIsolatedMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o NetworkIsolatedMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o NetworkIsolatedMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o NetworkIsolatedMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o NetworkIsolatedMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o NetworkIsolatedMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkIsolatedMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedMetadataEntry)(nil)).Elem()
}

func (o NetworkIsolatedMetadataEntryArrayOutput) ToNetworkIsolatedMetadataEntryArrayOutput() NetworkIsolatedMetadataEntryArrayOutput {
	return o
}

func (o NetworkIsolatedMetadataEntryArrayOutput) ToNetworkIsolatedMetadataEntryArrayOutputWithContext(ctx context.Context) NetworkIsolatedMetadataEntryArrayOutput {
	return o
}

func (o NetworkIsolatedMetadataEntryArrayOutput) Index(i pulumi.IntInput) NetworkIsolatedMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkIsolatedMetadataEntry {
		return vs[0].([]NetworkIsolatedMetadataEntry)[vs[1].(int)]
	}).(NetworkIsolatedMetadataEntryOutput)
}

type NetworkIsolatedStaticIpPool struct {
	// The final address in the IP Range
	EndAddress string `pulumi:"endAddress"`
	// The first address in the IP Range
	StartAddress string `pulumi:"startAddress"`
}

// NetworkIsolatedStaticIpPoolInput is an input type that accepts NetworkIsolatedStaticIpPoolArgs and NetworkIsolatedStaticIpPoolOutput values.
// You can construct a concrete instance of `NetworkIsolatedStaticIpPoolInput` via:
//
//	NetworkIsolatedStaticIpPoolArgs{...}
type NetworkIsolatedStaticIpPoolInput interface {
	pulumi.Input

	ToNetworkIsolatedStaticIpPoolOutput() NetworkIsolatedStaticIpPoolOutput
	ToNetworkIsolatedStaticIpPoolOutputWithContext(context.Context) NetworkIsolatedStaticIpPoolOutput
}

type NetworkIsolatedStaticIpPoolArgs struct {
	// The final address in the IP Range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// The first address in the IP Range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NetworkIsolatedStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedStaticIpPool)(nil)).Elem()
}

func (i NetworkIsolatedStaticIpPoolArgs) ToNetworkIsolatedStaticIpPoolOutput() NetworkIsolatedStaticIpPoolOutput {
	return i.ToNetworkIsolatedStaticIpPoolOutputWithContext(context.Background())
}

func (i NetworkIsolatedStaticIpPoolArgs) ToNetworkIsolatedStaticIpPoolOutputWithContext(ctx context.Context) NetworkIsolatedStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedStaticIpPoolOutput)
}

// NetworkIsolatedStaticIpPoolArrayInput is an input type that accepts NetworkIsolatedStaticIpPoolArray and NetworkIsolatedStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `NetworkIsolatedStaticIpPoolArrayInput` via:
//
//	NetworkIsolatedStaticIpPoolArray{ NetworkIsolatedStaticIpPoolArgs{...} }
type NetworkIsolatedStaticIpPoolArrayInput interface {
	pulumi.Input

	ToNetworkIsolatedStaticIpPoolArrayOutput() NetworkIsolatedStaticIpPoolArrayOutput
	ToNetworkIsolatedStaticIpPoolArrayOutputWithContext(context.Context) NetworkIsolatedStaticIpPoolArrayOutput
}

type NetworkIsolatedStaticIpPoolArray []NetworkIsolatedStaticIpPoolInput

func (NetworkIsolatedStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedStaticIpPool)(nil)).Elem()
}

func (i NetworkIsolatedStaticIpPoolArray) ToNetworkIsolatedStaticIpPoolArrayOutput() NetworkIsolatedStaticIpPoolArrayOutput {
	return i.ToNetworkIsolatedStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i NetworkIsolatedStaticIpPoolArray) ToNetworkIsolatedStaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkIsolatedStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedStaticIpPoolArrayOutput)
}

type NetworkIsolatedStaticIpPoolOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedStaticIpPool)(nil)).Elem()
}

func (o NetworkIsolatedStaticIpPoolOutput) ToNetworkIsolatedStaticIpPoolOutput() NetworkIsolatedStaticIpPoolOutput {
	return o
}

func (o NetworkIsolatedStaticIpPoolOutput) ToNetworkIsolatedStaticIpPoolOutputWithContext(ctx context.Context) NetworkIsolatedStaticIpPoolOutput {
	return o
}

// The final address in the IP Range
func (o NetworkIsolatedStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkIsolatedStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// The first address in the IP Range
func (o NetworkIsolatedStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkIsolatedStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NetworkIsolatedStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedStaticIpPool)(nil)).Elem()
}

func (o NetworkIsolatedStaticIpPoolArrayOutput) ToNetworkIsolatedStaticIpPoolArrayOutput() NetworkIsolatedStaticIpPoolArrayOutput {
	return o
}

func (o NetworkIsolatedStaticIpPoolArrayOutput) ToNetworkIsolatedStaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkIsolatedStaticIpPoolArrayOutput {
	return o
}

func (o NetworkIsolatedStaticIpPoolArrayOutput) Index(i pulumi.IntInput) NetworkIsolatedStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkIsolatedStaticIpPool {
		return vs[0].([]NetworkIsolatedStaticIpPool)[vs[1].(int)]
	}).(NetworkIsolatedStaticIpPoolOutput)
}

type NetworkIsolatedV2MetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// NetworkIsolatedV2MetadataEntryInput is an input type that accepts NetworkIsolatedV2MetadataEntryArgs and NetworkIsolatedV2MetadataEntryOutput values.
// You can construct a concrete instance of `NetworkIsolatedV2MetadataEntryInput` via:
//
//	NetworkIsolatedV2MetadataEntryArgs{...}
type NetworkIsolatedV2MetadataEntryInput interface {
	pulumi.Input

	ToNetworkIsolatedV2MetadataEntryOutput() NetworkIsolatedV2MetadataEntryOutput
	ToNetworkIsolatedV2MetadataEntryOutputWithContext(context.Context) NetworkIsolatedV2MetadataEntryOutput
}

type NetworkIsolatedV2MetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetworkIsolatedV2MetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedV2MetadataEntry)(nil)).Elem()
}

func (i NetworkIsolatedV2MetadataEntryArgs) ToNetworkIsolatedV2MetadataEntryOutput() NetworkIsolatedV2MetadataEntryOutput {
	return i.ToNetworkIsolatedV2MetadataEntryOutputWithContext(context.Background())
}

func (i NetworkIsolatedV2MetadataEntryArgs) ToNetworkIsolatedV2MetadataEntryOutputWithContext(ctx context.Context) NetworkIsolatedV2MetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedV2MetadataEntryOutput)
}

// NetworkIsolatedV2MetadataEntryArrayInput is an input type that accepts NetworkIsolatedV2MetadataEntryArray and NetworkIsolatedV2MetadataEntryArrayOutput values.
// You can construct a concrete instance of `NetworkIsolatedV2MetadataEntryArrayInput` via:
//
//	NetworkIsolatedV2MetadataEntryArray{ NetworkIsolatedV2MetadataEntryArgs{...} }
type NetworkIsolatedV2MetadataEntryArrayInput interface {
	pulumi.Input

	ToNetworkIsolatedV2MetadataEntryArrayOutput() NetworkIsolatedV2MetadataEntryArrayOutput
	ToNetworkIsolatedV2MetadataEntryArrayOutputWithContext(context.Context) NetworkIsolatedV2MetadataEntryArrayOutput
}

type NetworkIsolatedV2MetadataEntryArray []NetworkIsolatedV2MetadataEntryInput

func (NetworkIsolatedV2MetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedV2MetadataEntry)(nil)).Elem()
}

func (i NetworkIsolatedV2MetadataEntryArray) ToNetworkIsolatedV2MetadataEntryArrayOutput() NetworkIsolatedV2MetadataEntryArrayOutput {
	return i.ToNetworkIsolatedV2MetadataEntryArrayOutputWithContext(context.Background())
}

func (i NetworkIsolatedV2MetadataEntryArray) ToNetworkIsolatedV2MetadataEntryArrayOutputWithContext(ctx context.Context) NetworkIsolatedV2MetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedV2MetadataEntryArrayOutput)
}

type NetworkIsolatedV2MetadataEntryOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedV2MetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedV2MetadataEntry)(nil)).Elem()
}

func (o NetworkIsolatedV2MetadataEntryOutput) ToNetworkIsolatedV2MetadataEntryOutput() NetworkIsolatedV2MetadataEntryOutput {
	return o
}

func (o NetworkIsolatedV2MetadataEntryOutput) ToNetworkIsolatedV2MetadataEntryOutputWithContext(ctx context.Context) NetworkIsolatedV2MetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o NetworkIsolatedV2MetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedV2MetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o NetworkIsolatedV2MetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedV2MetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o NetworkIsolatedV2MetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedV2MetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o NetworkIsolatedV2MetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedV2MetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o NetworkIsolatedV2MetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkIsolatedV2MetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkIsolatedV2MetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedV2MetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedV2MetadataEntry)(nil)).Elem()
}

func (o NetworkIsolatedV2MetadataEntryArrayOutput) ToNetworkIsolatedV2MetadataEntryArrayOutput() NetworkIsolatedV2MetadataEntryArrayOutput {
	return o
}

func (o NetworkIsolatedV2MetadataEntryArrayOutput) ToNetworkIsolatedV2MetadataEntryArrayOutputWithContext(ctx context.Context) NetworkIsolatedV2MetadataEntryArrayOutput {
	return o
}

func (o NetworkIsolatedV2MetadataEntryArrayOutput) Index(i pulumi.IntInput) NetworkIsolatedV2MetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkIsolatedV2MetadataEntry {
		return vs[0].([]NetworkIsolatedV2MetadataEntry)[vs[1].(int)]
	}).(NetworkIsolatedV2MetadataEntryOutput)
}

type NetworkIsolatedV2SecondaryStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// NetworkIsolatedV2SecondaryStaticIpPoolInput is an input type that accepts NetworkIsolatedV2SecondaryStaticIpPoolArgs and NetworkIsolatedV2SecondaryStaticIpPoolOutput values.
// You can construct a concrete instance of `NetworkIsolatedV2SecondaryStaticIpPoolInput` via:
//
//	NetworkIsolatedV2SecondaryStaticIpPoolArgs{...}
type NetworkIsolatedV2SecondaryStaticIpPoolInput interface {
	pulumi.Input

	ToNetworkIsolatedV2SecondaryStaticIpPoolOutput() NetworkIsolatedV2SecondaryStaticIpPoolOutput
	ToNetworkIsolatedV2SecondaryStaticIpPoolOutputWithContext(context.Context) NetworkIsolatedV2SecondaryStaticIpPoolOutput
}

type NetworkIsolatedV2SecondaryStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NetworkIsolatedV2SecondaryStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (i NetworkIsolatedV2SecondaryStaticIpPoolArgs) ToNetworkIsolatedV2SecondaryStaticIpPoolOutput() NetworkIsolatedV2SecondaryStaticIpPoolOutput {
	return i.ToNetworkIsolatedV2SecondaryStaticIpPoolOutputWithContext(context.Background())
}

func (i NetworkIsolatedV2SecondaryStaticIpPoolArgs) ToNetworkIsolatedV2SecondaryStaticIpPoolOutputWithContext(ctx context.Context) NetworkIsolatedV2SecondaryStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedV2SecondaryStaticIpPoolOutput)
}

// NetworkIsolatedV2SecondaryStaticIpPoolArrayInput is an input type that accepts NetworkIsolatedV2SecondaryStaticIpPoolArray and NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `NetworkIsolatedV2SecondaryStaticIpPoolArrayInput` via:
//
//	NetworkIsolatedV2SecondaryStaticIpPoolArray{ NetworkIsolatedV2SecondaryStaticIpPoolArgs{...} }
type NetworkIsolatedV2SecondaryStaticIpPoolArrayInput interface {
	pulumi.Input

	ToNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput() NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput
	ToNetworkIsolatedV2SecondaryStaticIpPoolArrayOutputWithContext(context.Context) NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput
}

type NetworkIsolatedV2SecondaryStaticIpPoolArray []NetworkIsolatedV2SecondaryStaticIpPoolInput

func (NetworkIsolatedV2SecondaryStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (i NetworkIsolatedV2SecondaryStaticIpPoolArray) ToNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput() NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput {
	return i.ToNetworkIsolatedV2SecondaryStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i NetworkIsolatedV2SecondaryStaticIpPoolArray) ToNetworkIsolatedV2SecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput)
}

type NetworkIsolatedV2SecondaryStaticIpPoolOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedV2SecondaryStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (o NetworkIsolatedV2SecondaryStaticIpPoolOutput) ToNetworkIsolatedV2SecondaryStaticIpPoolOutput() NetworkIsolatedV2SecondaryStaticIpPoolOutput {
	return o
}

func (o NetworkIsolatedV2SecondaryStaticIpPoolOutput) ToNetworkIsolatedV2SecondaryStaticIpPoolOutputWithContext(ctx context.Context) NetworkIsolatedV2SecondaryStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o NetworkIsolatedV2SecondaryStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkIsolatedV2SecondaryStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o NetworkIsolatedV2SecondaryStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkIsolatedV2SecondaryStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (o NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput) ToNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput() NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput {
	return o
}

func (o NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput) ToNetworkIsolatedV2SecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput {
	return o
}

func (o NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput) Index(i pulumi.IntInput) NetworkIsolatedV2SecondaryStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkIsolatedV2SecondaryStaticIpPool {
		return vs[0].([]NetworkIsolatedV2SecondaryStaticIpPool)[vs[1].(int)]
	}).(NetworkIsolatedV2SecondaryStaticIpPoolOutput)
}

type NetworkIsolatedV2StaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// NetworkIsolatedV2StaticIpPoolInput is an input type that accepts NetworkIsolatedV2StaticIpPoolArgs and NetworkIsolatedV2StaticIpPoolOutput values.
// You can construct a concrete instance of `NetworkIsolatedV2StaticIpPoolInput` via:
//
//	NetworkIsolatedV2StaticIpPoolArgs{...}
type NetworkIsolatedV2StaticIpPoolInput interface {
	pulumi.Input

	ToNetworkIsolatedV2StaticIpPoolOutput() NetworkIsolatedV2StaticIpPoolOutput
	ToNetworkIsolatedV2StaticIpPoolOutputWithContext(context.Context) NetworkIsolatedV2StaticIpPoolOutput
}

type NetworkIsolatedV2StaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NetworkIsolatedV2StaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedV2StaticIpPool)(nil)).Elem()
}

func (i NetworkIsolatedV2StaticIpPoolArgs) ToNetworkIsolatedV2StaticIpPoolOutput() NetworkIsolatedV2StaticIpPoolOutput {
	return i.ToNetworkIsolatedV2StaticIpPoolOutputWithContext(context.Background())
}

func (i NetworkIsolatedV2StaticIpPoolArgs) ToNetworkIsolatedV2StaticIpPoolOutputWithContext(ctx context.Context) NetworkIsolatedV2StaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedV2StaticIpPoolOutput)
}

// NetworkIsolatedV2StaticIpPoolArrayInput is an input type that accepts NetworkIsolatedV2StaticIpPoolArray and NetworkIsolatedV2StaticIpPoolArrayOutput values.
// You can construct a concrete instance of `NetworkIsolatedV2StaticIpPoolArrayInput` via:
//
//	NetworkIsolatedV2StaticIpPoolArray{ NetworkIsolatedV2StaticIpPoolArgs{...} }
type NetworkIsolatedV2StaticIpPoolArrayInput interface {
	pulumi.Input

	ToNetworkIsolatedV2StaticIpPoolArrayOutput() NetworkIsolatedV2StaticIpPoolArrayOutput
	ToNetworkIsolatedV2StaticIpPoolArrayOutputWithContext(context.Context) NetworkIsolatedV2StaticIpPoolArrayOutput
}

type NetworkIsolatedV2StaticIpPoolArray []NetworkIsolatedV2StaticIpPoolInput

func (NetworkIsolatedV2StaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedV2StaticIpPool)(nil)).Elem()
}

func (i NetworkIsolatedV2StaticIpPoolArray) ToNetworkIsolatedV2StaticIpPoolArrayOutput() NetworkIsolatedV2StaticIpPoolArrayOutput {
	return i.ToNetworkIsolatedV2StaticIpPoolArrayOutputWithContext(context.Background())
}

func (i NetworkIsolatedV2StaticIpPoolArray) ToNetworkIsolatedV2StaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkIsolatedV2StaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIsolatedV2StaticIpPoolArrayOutput)
}

type NetworkIsolatedV2StaticIpPoolOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedV2StaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIsolatedV2StaticIpPool)(nil)).Elem()
}

func (o NetworkIsolatedV2StaticIpPoolOutput) ToNetworkIsolatedV2StaticIpPoolOutput() NetworkIsolatedV2StaticIpPoolOutput {
	return o
}

func (o NetworkIsolatedV2StaticIpPoolOutput) ToNetworkIsolatedV2StaticIpPoolOutputWithContext(ctx context.Context) NetworkIsolatedV2StaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o NetworkIsolatedV2StaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkIsolatedV2StaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o NetworkIsolatedV2StaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkIsolatedV2StaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NetworkIsolatedV2StaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NetworkIsolatedV2StaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIsolatedV2StaticIpPool)(nil)).Elem()
}

func (o NetworkIsolatedV2StaticIpPoolArrayOutput) ToNetworkIsolatedV2StaticIpPoolArrayOutput() NetworkIsolatedV2StaticIpPoolArrayOutput {
	return o
}

func (o NetworkIsolatedV2StaticIpPoolArrayOutput) ToNetworkIsolatedV2StaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkIsolatedV2StaticIpPoolArrayOutput {
	return o
}

func (o NetworkIsolatedV2StaticIpPoolArrayOutput) Index(i pulumi.IntInput) NetworkIsolatedV2StaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkIsolatedV2StaticIpPool {
		return vs[0].([]NetworkIsolatedV2StaticIpPool)[vs[1].(int)]
	}).(NetworkIsolatedV2StaticIpPoolOutput)
}

type NetworkPoolBacking struct {
	// (Optional) A backing structure used for `VLAN` network pool
	DistributedSwitch *NetworkPoolBackingDistributedSwitch `pulumi:"distributedSwitch"`
	// (Optional) A list of backing structure used for `PORTGROUP_BACKED` network pool
	PortGroups []NetworkPoolBackingPortGroup `pulumi:"portGroups"`
	// (Optional) A list of range IDs, required with `VLAN` network pools
	RangeIds []NetworkPoolBackingRangeId `pulumi:"rangeIds"`
	// (Optional) A backing structure used for `GENEVE` network pool
	TransportZone *NetworkPoolBackingTransportZone `pulumi:"transportZone"`
}

// NetworkPoolBackingInput is an input type that accepts NetworkPoolBackingArgs and NetworkPoolBackingOutput values.
// You can construct a concrete instance of `NetworkPoolBackingInput` via:
//
//	NetworkPoolBackingArgs{...}
type NetworkPoolBackingInput interface {
	pulumi.Input

	ToNetworkPoolBackingOutput() NetworkPoolBackingOutput
	ToNetworkPoolBackingOutputWithContext(context.Context) NetworkPoolBackingOutput
}

type NetworkPoolBackingArgs struct {
	// (Optional) A backing structure used for `VLAN` network pool
	DistributedSwitch NetworkPoolBackingDistributedSwitchPtrInput `pulumi:"distributedSwitch"`
	// (Optional) A list of backing structure used for `PORTGROUP_BACKED` network pool
	PortGroups NetworkPoolBackingPortGroupArrayInput `pulumi:"portGroups"`
	// (Optional) A list of range IDs, required with `VLAN` network pools
	RangeIds NetworkPoolBackingRangeIdArrayInput `pulumi:"rangeIds"`
	// (Optional) A backing structure used for `GENEVE` network pool
	TransportZone NetworkPoolBackingTransportZonePtrInput `pulumi:"transportZone"`
}

func (NetworkPoolBackingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPoolBacking)(nil)).Elem()
}

func (i NetworkPoolBackingArgs) ToNetworkPoolBackingOutput() NetworkPoolBackingOutput {
	return i.ToNetworkPoolBackingOutputWithContext(context.Background())
}

func (i NetworkPoolBackingArgs) ToNetworkPoolBackingOutputWithContext(ctx context.Context) NetworkPoolBackingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingOutput)
}

func (i NetworkPoolBackingArgs) ToNetworkPoolBackingPtrOutput() NetworkPoolBackingPtrOutput {
	return i.ToNetworkPoolBackingPtrOutputWithContext(context.Background())
}

func (i NetworkPoolBackingArgs) ToNetworkPoolBackingPtrOutputWithContext(ctx context.Context) NetworkPoolBackingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingOutput).ToNetworkPoolBackingPtrOutputWithContext(ctx)
}

// NetworkPoolBackingPtrInput is an input type that accepts NetworkPoolBackingArgs, NetworkPoolBackingPtr and NetworkPoolBackingPtrOutput values.
// You can construct a concrete instance of `NetworkPoolBackingPtrInput` via:
//
//	        NetworkPoolBackingArgs{...}
//
//	or:
//
//	        nil
type NetworkPoolBackingPtrInput interface {
	pulumi.Input

	ToNetworkPoolBackingPtrOutput() NetworkPoolBackingPtrOutput
	ToNetworkPoolBackingPtrOutputWithContext(context.Context) NetworkPoolBackingPtrOutput
}

type networkPoolBackingPtrType NetworkPoolBackingArgs

func NetworkPoolBackingPtr(v *NetworkPoolBackingArgs) NetworkPoolBackingPtrInput {
	return (*networkPoolBackingPtrType)(v)
}

func (*networkPoolBackingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPoolBacking)(nil)).Elem()
}

func (i *networkPoolBackingPtrType) ToNetworkPoolBackingPtrOutput() NetworkPoolBackingPtrOutput {
	return i.ToNetworkPoolBackingPtrOutputWithContext(context.Background())
}

func (i *networkPoolBackingPtrType) ToNetworkPoolBackingPtrOutputWithContext(ctx context.Context) NetworkPoolBackingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingPtrOutput)
}

type NetworkPoolBackingOutput struct{ *pulumi.OutputState }

func (NetworkPoolBackingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPoolBacking)(nil)).Elem()
}

func (o NetworkPoolBackingOutput) ToNetworkPoolBackingOutput() NetworkPoolBackingOutput {
	return o
}

func (o NetworkPoolBackingOutput) ToNetworkPoolBackingOutputWithContext(ctx context.Context) NetworkPoolBackingOutput {
	return o
}

func (o NetworkPoolBackingOutput) ToNetworkPoolBackingPtrOutput() NetworkPoolBackingPtrOutput {
	return o.ToNetworkPoolBackingPtrOutputWithContext(context.Background())
}

func (o NetworkPoolBackingOutput) ToNetworkPoolBackingPtrOutputWithContext(ctx context.Context) NetworkPoolBackingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPoolBacking) *NetworkPoolBacking {
		return &v
	}).(NetworkPoolBackingPtrOutput)
}

// (Optional) A backing structure used for `VLAN` network pool
func (o NetworkPoolBackingOutput) DistributedSwitch() NetworkPoolBackingDistributedSwitchPtrOutput {
	return o.ApplyT(func(v NetworkPoolBacking) *NetworkPoolBackingDistributedSwitch { return v.DistributedSwitch }).(NetworkPoolBackingDistributedSwitchPtrOutput)
}

// (Optional) A list of backing structure used for `PORTGROUP_BACKED` network pool
func (o NetworkPoolBackingOutput) PortGroups() NetworkPoolBackingPortGroupArrayOutput {
	return o.ApplyT(func(v NetworkPoolBacking) []NetworkPoolBackingPortGroup { return v.PortGroups }).(NetworkPoolBackingPortGroupArrayOutput)
}

// (Optional) A list of range IDs, required with `VLAN` network pools
func (o NetworkPoolBackingOutput) RangeIds() NetworkPoolBackingRangeIdArrayOutput {
	return o.ApplyT(func(v NetworkPoolBacking) []NetworkPoolBackingRangeId { return v.RangeIds }).(NetworkPoolBackingRangeIdArrayOutput)
}

// (Optional) A backing structure used for `GENEVE` network pool
func (o NetworkPoolBackingOutput) TransportZone() NetworkPoolBackingTransportZonePtrOutput {
	return o.ApplyT(func(v NetworkPoolBacking) *NetworkPoolBackingTransportZone { return v.TransportZone }).(NetworkPoolBackingTransportZonePtrOutput)
}

type NetworkPoolBackingPtrOutput struct{ *pulumi.OutputState }

func (NetworkPoolBackingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPoolBacking)(nil)).Elem()
}

func (o NetworkPoolBackingPtrOutput) ToNetworkPoolBackingPtrOutput() NetworkPoolBackingPtrOutput {
	return o
}

func (o NetworkPoolBackingPtrOutput) ToNetworkPoolBackingPtrOutputWithContext(ctx context.Context) NetworkPoolBackingPtrOutput {
	return o
}

func (o NetworkPoolBackingPtrOutput) Elem() NetworkPoolBackingOutput {
	return o.ApplyT(func(v *NetworkPoolBacking) NetworkPoolBacking {
		if v != nil {
			return *v
		}
		var ret NetworkPoolBacking
		return ret
	}).(NetworkPoolBackingOutput)
}

// (Optional) A backing structure used for `VLAN` network pool
func (o NetworkPoolBackingPtrOutput) DistributedSwitch() NetworkPoolBackingDistributedSwitchPtrOutput {
	return o.ApplyT(func(v *NetworkPoolBacking) *NetworkPoolBackingDistributedSwitch {
		if v == nil {
			return nil
		}
		return v.DistributedSwitch
	}).(NetworkPoolBackingDistributedSwitchPtrOutput)
}

// (Optional) A list of backing structure used for `PORTGROUP_BACKED` network pool
func (o NetworkPoolBackingPtrOutput) PortGroups() NetworkPoolBackingPortGroupArrayOutput {
	return o.ApplyT(func(v *NetworkPoolBacking) []NetworkPoolBackingPortGroup {
		if v == nil {
			return nil
		}
		return v.PortGroups
	}).(NetworkPoolBackingPortGroupArrayOutput)
}

// (Optional) A list of range IDs, required with `VLAN` network pools
func (o NetworkPoolBackingPtrOutput) RangeIds() NetworkPoolBackingRangeIdArrayOutput {
	return o.ApplyT(func(v *NetworkPoolBacking) []NetworkPoolBackingRangeId {
		if v == nil {
			return nil
		}
		return v.RangeIds
	}).(NetworkPoolBackingRangeIdArrayOutput)
}

// (Optional) A backing structure used for `GENEVE` network pool
func (o NetworkPoolBackingPtrOutput) TransportZone() NetworkPoolBackingTransportZonePtrOutput {
	return o.ApplyT(func(v *NetworkPoolBacking) *NetworkPoolBackingTransportZone {
		if v == nil {
			return nil
		}
		return v.TransportZone
	}).(NetworkPoolBackingTransportZonePtrOutput)
}

type NetworkPoolBackingDistributedSwitch struct {
	// (Computed) The ID of the backing element
	Id *string `pulumi:"id"`
	// Unique name of network pool
	Name *string `pulumi:"name"`
	// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
	Type *string `pulumi:"type"`
}

// NetworkPoolBackingDistributedSwitchInput is an input type that accepts NetworkPoolBackingDistributedSwitchArgs and NetworkPoolBackingDistributedSwitchOutput values.
// You can construct a concrete instance of `NetworkPoolBackingDistributedSwitchInput` via:
//
//	NetworkPoolBackingDistributedSwitchArgs{...}
type NetworkPoolBackingDistributedSwitchInput interface {
	pulumi.Input

	ToNetworkPoolBackingDistributedSwitchOutput() NetworkPoolBackingDistributedSwitchOutput
	ToNetworkPoolBackingDistributedSwitchOutputWithContext(context.Context) NetworkPoolBackingDistributedSwitchOutput
}

type NetworkPoolBackingDistributedSwitchArgs struct {
	// (Computed) The ID of the backing element
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Unique name of network pool
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkPoolBackingDistributedSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPoolBackingDistributedSwitch)(nil)).Elem()
}

func (i NetworkPoolBackingDistributedSwitchArgs) ToNetworkPoolBackingDistributedSwitchOutput() NetworkPoolBackingDistributedSwitchOutput {
	return i.ToNetworkPoolBackingDistributedSwitchOutputWithContext(context.Background())
}

func (i NetworkPoolBackingDistributedSwitchArgs) ToNetworkPoolBackingDistributedSwitchOutputWithContext(ctx context.Context) NetworkPoolBackingDistributedSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingDistributedSwitchOutput)
}

func (i NetworkPoolBackingDistributedSwitchArgs) ToNetworkPoolBackingDistributedSwitchPtrOutput() NetworkPoolBackingDistributedSwitchPtrOutput {
	return i.ToNetworkPoolBackingDistributedSwitchPtrOutputWithContext(context.Background())
}

func (i NetworkPoolBackingDistributedSwitchArgs) ToNetworkPoolBackingDistributedSwitchPtrOutputWithContext(ctx context.Context) NetworkPoolBackingDistributedSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingDistributedSwitchOutput).ToNetworkPoolBackingDistributedSwitchPtrOutputWithContext(ctx)
}

// NetworkPoolBackingDistributedSwitchPtrInput is an input type that accepts NetworkPoolBackingDistributedSwitchArgs, NetworkPoolBackingDistributedSwitchPtr and NetworkPoolBackingDistributedSwitchPtrOutput values.
// You can construct a concrete instance of `NetworkPoolBackingDistributedSwitchPtrInput` via:
//
//	        NetworkPoolBackingDistributedSwitchArgs{...}
//
//	or:
//
//	        nil
type NetworkPoolBackingDistributedSwitchPtrInput interface {
	pulumi.Input

	ToNetworkPoolBackingDistributedSwitchPtrOutput() NetworkPoolBackingDistributedSwitchPtrOutput
	ToNetworkPoolBackingDistributedSwitchPtrOutputWithContext(context.Context) NetworkPoolBackingDistributedSwitchPtrOutput
}

type networkPoolBackingDistributedSwitchPtrType NetworkPoolBackingDistributedSwitchArgs

func NetworkPoolBackingDistributedSwitchPtr(v *NetworkPoolBackingDistributedSwitchArgs) NetworkPoolBackingDistributedSwitchPtrInput {
	return (*networkPoolBackingDistributedSwitchPtrType)(v)
}

func (*networkPoolBackingDistributedSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPoolBackingDistributedSwitch)(nil)).Elem()
}

func (i *networkPoolBackingDistributedSwitchPtrType) ToNetworkPoolBackingDistributedSwitchPtrOutput() NetworkPoolBackingDistributedSwitchPtrOutput {
	return i.ToNetworkPoolBackingDistributedSwitchPtrOutputWithContext(context.Background())
}

func (i *networkPoolBackingDistributedSwitchPtrType) ToNetworkPoolBackingDistributedSwitchPtrOutputWithContext(ctx context.Context) NetworkPoolBackingDistributedSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingDistributedSwitchPtrOutput)
}

type NetworkPoolBackingDistributedSwitchOutput struct{ *pulumi.OutputState }

func (NetworkPoolBackingDistributedSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPoolBackingDistributedSwitch)(nil)).Elem()
}

func (o NetworkPoolBackingDistributedSwitchOutput) ToNetworkPoolBackingDistributedSwitchOutput() NetworkPoolBackingDistributedSwitchOutput {
	return o
}

func (o NetworkPoolBackingDistributedSwitchOutput) ToNetworkPoolBackingDistributedSwitchOutputWithContext(ctx context.Context) NetworkPoolBackingDistributedSwitchOutput {
	return o
}

func (o NetworkPoolBackingDistributedSwitchOutput) ToNetworkPoolBackingDistributedSwitchPtrOutput() NetworkPoolBackingDistributedSwitchPtrOutput {
	return o.ToNetworkPoolBackingDistributedSwitchPtrOutputWithContext(context.Background())
}

func (o NetworkPoolBackingDistributedSwitchOutput) ToNetworkPoolBackingDistributedSwitchPtrOutputWithContext(ctx context.Context) NetworkPoolBackingDistributedSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPoolBackingDistributedSwitch) *NetworkPoolBackingDistributedSwitch {
		return &v
	}).(NetworkPoolBackingDistributedSwitchPtrOutput)
}

// (Computed) The ID of the backing element
func (o NetworkPoolBackingDistributedSwitchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPoolBackingDistributedSwitch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Unique name of network pool
func (o NetworkPoolBackingDistributedSwitchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPoolBackingDistributedSwitch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
func (o NetworkPoolBackingDistributedSwitchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPoolBackingDistributedSwitch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkPoolBackingDistributedSwitchPtrOutput struct{ *pulumi.OutputState }

func (NetworkPoolBackingDistributedSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPoolBackingDistributedSwitch)(nil)).Elem()
}

func (o NetworkPoolBackingDistributedSwitchPtrOutput) ToNetworkPoolBackingDistributedSwitchPtrOutput() NetworkPoolBackingDistributedSwitchPtrOutput {
	return o
}

func (o NetworkPoolBackingDistributedSwitchPtrOutput) ToNetworkPoolBackingDistributedSwitchPtrOutputWithContext(ctx context.Context) NetworkPoolBackingDistributedSwitchPtrOutput {
	return o
}

func (o NetworkPoolBackingDistributedSwitchPtrOutput) Elem() NetworkPoolBackingDistributedSwitchOutput {
	return o.ApplyT(func(v *NetworkPoolBackingDistributedSwitch) NetworkPoolBackingDistributedSwitch {
		if v != nil {
			return *v
		}
		var ret NetworkPoolBackingDistributedSwitch
		return ret
	}).(NetworkPoolBackingDistributedSwitchOutput)
}

// (Computed) The ID of the backing element
func (o NetworkPoolBackingDistributedSwitchPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPoolBackingDistributedSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Unique name of network pool
func (o NetworkPoolBackingDistributedSwitchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPoolBackingDistributedSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
func (o NetworkPoolBackingDistributedSwitchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPoolBackingDistributedSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type NetworkPoolBackingPortGroup struct {
	// (Computed) The ID of the backing element
	Id *string `pulumi:"id"`
	// Unique name of network pool
	Name *string `pulumi:"name"`
	// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
	Type *string `pulumi:"type"`
}

// NetworkPoolBackingPortGroupInput is an input type that accepts NetworkPoolBackingPortGroupArgs and NetworkPoolBackingPortGroupOutput values.
// You can construct a concrete instance of `NetworkPoolBackingPortGroupInput` via:
//
//	NetworkPoolBackingPortGroupArgs{...}
type NetworkPoolBackingPortGroupInput interface {
	pulumi.Input

	ToNetworkPoolBackingPortGroupOutput() NetworkPoolBackingPortGroupOutput
	ToNetworkPoolBackingPortGroupOutputWithContext(context.Context) NetworkPoolBackingPortGroupOutput
}

type NetworkPoolBackingPortGroupArgs struct {
	// (Computed) The ID of the backing element
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Unique name of network pool
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkPoolBackingPortGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPoolBackingPortGroup)(nil)).Elem()
}

func (i NetworkPoolBackingPortGroupArgs) ToNetworkPoolBackingPortGroupOutput() NetworkPoolBackingPortGroupOutput {
	return i.ToNetworkPoolBackingPortGroupOutputWithContext(context.Background())
}

func (i NetworkPoolBackingPortGroupArgs) ToNetworkPoolBackingPortGroupOutputWithContext(ctx context.Context) NetworkPoolBackingPortGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingPortGroupOutput)
}

// NetworkPoolBackingPortGroupArrayInput is an input type that accepts NetworkPoolBackingPortGroupArray and NetworkPoolBackingPortGroupArrayOutput values.
// You can construct a concrete instance of `NetworkPoolBackingPortGroupArrayInput` via:
//
//	NetworkPoolBackingPortGroupArray{ NetworkPoolBackingPortGroupArgs{...} }
type NetworkPoolBackingPortGroupArrayInput interface {
	pulumi.Input

	ToNetworkPoolBackingPortGroupArrayOutput() NetworkPoolBackingPortGroupArrayOutput
	ToNetworkPoolBackingPortGroupArrayOutputWithContext(context.Context) NetworkPoolBackingPortGroupArrayOutput
}

type NetworkPoolBackingPortGroupArray []NetworkPoolBackingPortGroupInput

func (NetworkPoolBackingPortGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkPoolBackingPortGroup)(nil)).Elem()
}

func (i NetworkPoolBackingPortGroupArray) ToNetworkPoolBackingPortGroupArrayOutput() NetworkPoolBackingPortGroupArrayOutput {
	return i.ToNetworkPoolBackingPortGroupArrayOutputWithContext(context.Background())
}

func (i NetworkPoolBackingPortGroupArray) ToNetworkPoolBackingPortGroupArrayOutputWithContext(ctx context.Context) NetworkPoolBackingPortGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingPortGroupArrayOutput)
}

type NetworkPoolBackingPortGroupOutput struct{ *pulumi.OutputState }

func (NetworkPoolBackingPortGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPoolBackingPortGroup)(nil)).Elem()
}

func (o NetworkPoolBackingPortGroupOutput) ToNetworkPoolBackingPortGroupOutput() NetworkPoolBackingPortGroupOutput {
	return o
}

func (o NetworkPoolBackingPortGroupOutput) ToNetworkPoolBackingPortGroupOutputWithContext(ctx context.Context) NetworkPoolBackingPortGroupOutput {
	return o
}

// (Computed) The ID of the backing element
func (o NetworkPoolBackingPortGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPoolBackingPortGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Unique name of network pool
func (o NetworkPoolBackingPortGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPoolBackingPortGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
func (o NetworkPoolBackingPortGroupOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPoolBackingPortGroup) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkPoolBackingPortGroupArrayOutput struct{ *pulumi.OutputState }

func (NetworkPoolBackingPortGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkPoolBackingPortGroup)(nil)).Elem()
}

func (o NetworkPoolBackingPortGroupArrayOutput) ToNetworkPoolBackingPortGroupArrayOutput() NetworkPoolBackingPortGroupArrayOutput {
	return o
}

func (o NetworkPoolBackingPortGroupArrayOutput) ToNetworkPoolBackingPortGroupArrayOutputWithContext(ctx context.Context) NetworkPoolBackingPortGroupArrayOutput {
	return o
}

func (o NetworkPoolBackingPortGroupArrayOutput) Index(i pulumi.IntInput) NetworkPoolBackingPortGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkPoolBackingPortGroup {
		return vs[0].([]NetworkPoolBackingPortGroup)[vs[1].(int)]
	}).(NetworkPoolBackingPortGroupOutput)
}

type NetworkPoolBackingRangeId struct {
	// (Required) The last ID of the range
	EndId int `pulumi:"endId"`
	// (Required) The first ID of the range
	StartId int `pulumi:"startId"`
}

// NetworkPoolBackingRangeIdInput is an input type that accepts NetworkPoolBackingRangeIdArgs and NetworkPoolBackingRangeIdOutput values.
// You can construct a concrete instance of `NetworkPoolBackingRangeIdInput` via:
//
//	NetworkPoolBackingRangeIdArgs{...}
type NetworkPoolBackingRangeIdInput interface {
	pulumi.Input

	ToNetworkPoolBackingRangeIdOutput() NetworkPoolBackingRangeIdOutput
	ToNetworkPoolBackingRangeIdOutputWithContext(context.Context) NetworkPoolBackingRangeIdOutput
}

type NetworkPoolBackingRangeIdArgs struct {
	// (Required) The last ID of the range
	EndId pulumi.IntInput `pulumi:"endId"`
	// (Required) The first ID of the range
	StartId pulumi.IntInput `pulumi:"startId"`
}

func (NetworkPoolBackingRangeIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPoolBackingRangeId)(nil)).Elem()
}

func (i NetworkPoolBackingRangeIdArgs) ToNetworkPoolBackingRangeIdOutput() NetworkPoolBackingRangeIdOutput {
	return i.ToNetworkPoolBackingRangeIdOutputWithContext(context.Background())
}

func (i NetworkPoolBackingRangeIdArgs) ToNetworkPoolBackingRangeIdOutputWithContext(ctx context.Context) NetworkPoolBackingRangeIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingRangeIdOutput)
}

// NetworkPoolBackingRangeIdArrayInput is an input type that accepts NetworkPoolBackingRangeIdArray and NetworkPoolBackingRangeIdArrayOutput values.
// You can construct a concrete instance of `NetworkPoolBackingRangeIdArrayInput` via:
//
//	NetworkPoolBackingRangeIdArray{ NetworkPoolBackingRangeIdArgs{...} }
type NetworkPoolBackingRangeIdArrayInput interface {
	pulumi.Input

	ToNetworkPoolBackingRangeIdArrayOutput() NetworkPoolBackingRangeIdArrayOutput
	ToNetworkPoolBackingRangeIdArrayOutputWithContext(context.Context) NetworkPoolBackingRangeIdArrayOutput
}

type NetworkPoolBackingRangeIdArray []NetworkPoolBackingRangeIdInput

func (NetworkPoolBackingRangeIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkPoolBackingRangeId)(nil)).Elem()
}

func (i NetworkPoolBackingRangeIdArray) ToNetworkPoolBackingRangeIdArrayOutput() NetworkPoolBackingRangeIdArrayOutput {
	return i.ToNetworkPoolBackingRangeIdArrayOutputWithContext(context.Background())
}

func (i NetworkPoolBackingRangeIdArray) ToNetworkPoolBackingRangeIdArrayOutputWithContext(ctx context.Context) NetworkPoolBackingRangeIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingRangeIdArrayOutput)
}

type NetworkPoolBackingRangeIdOutput struct{ *pulumi.OutputState }

func (NetworkPoolBackingRangeIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPoolBackingRangeId)(nil)).Elem()
}

func (o NetworkPoolBackingRangeIdOutput) ToNetworkPoolBackingRangeIdOutput() NetworkPoolBackingRangeIdOutput {
	return o
}

func (o NetworkPoolBackingRangeIdOutput) ToNetworkPoolBackingRangeIdOutputWithContext(ctx context.Context) NetworkPoolBackingRangeIdOutput {
	return o
}

// (Required) The last ID of the range
func (o NetworkPoolBackingRangeIdOutput) EndId() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkPoolBackingRangeId) int { return v.EndId }).(pulumi.IntOutput)
}

// (Required) The first ID of the range
func (o NetworkPoolBackingRangeIdOutput) StartId() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkPoolBackingRangeId) int { return v.StartId }).(pulumi.IntOutput)
}

type NetworkPoolBackingRangeIdArrayOutput struct{ *pulumi.OutputState }

func (NetworkPoolBackingRangeIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkPoolBackingRangeId)(nil)).Elem()
}

func (o NetworkPoolBackingRangeIdArrayOutput) ToNetworkPoolBackingRangeIdArrayOutput() NetworkPoolBackingRangeIdArrayOutput {
	return o
}

func (o NetworkPoolBackingRangeIdArrayOutput) ToNetworkPoolBackingRangeIdArrayOutputWithContext(ctx context.Context) NetworkPoolBackingRangeIdArrayOutput {
	return o
}

func (o NetworkPoolBackingRangeIdArrayOutput) Index(i pulumi.IntInput) NetworkPoolBackingRangeIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkPoolBackingRangeId {
		return vs[0].([]NetworkPoolBackingRangeId)[vs[1].(int)]
	}).(NetworkPoolBackingRangeIdOutput)
}

type NetworkPoolBackingTransportZone struct {
	// (Computed) The ID of the backing element
	Id *string `pulumi:"id"`
	// Unique name of network pool
	Name *string `pulumi:"name"`
	// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
	Type *string `pulumi:"type"`
}

// NetworkPoolBackingTransportZoneInput is an input type that accepts NetworkPoolBackingTransportZoneArgs and NetworkPoolBackingTransportZoneOutput values.
// You can construct a concrete instance of `NetworkPoolBackingTransportZoneInput` via:
//
//	NetworkPoolBackingTransportZoneArgs{...}
type NetworkPoolBackingTransportZoneInput interface {
	pulumi.Input

	ToNetworkPoolBackingTransportZoneOutput() NetworkPoolBackingTransportZoneOutput
	ToNetworkPoolBackingTransportZoneOutputWithContext(context.Context) NetworkPoolBackingTransportZoneOutput
}

type NetworkPoolBackingTransportZoneArgs struct {
	// (Computed) The ID of the backing element
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Unique name of network pool
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkPoolBackingTransportZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPoolBackingTransportZone)(nil)).Elem()
}

func (i NetworkPoolBackingTransportZoneArgs) ToNetworkPoolBackingTransportZoneOutput() NetworkPoolBackingTransportZoneOutput {
	return i.ToNetworkPoolBackingTransportZoneOutputWithContext(context.Background())
}

func (i NetworkPoolBackingTransportZoneArgs) ToNetworkPoolBackingTransportZoneOutputWithContext(ctx context.Context) NetworkPoolBackingTransportZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingTransportZoneOutput)
}

func (i NetworkPoolBackingTransportZoneArgs) ToNetworkPoolBackingTransportZonePtrOutput() NetworkPoolBackingTransportZonePtrOutput {
	return i.ToNetworkPoolBackingTransportZonePtrOutputWithContext(context.Background())
}

func (i NetworkPoolBackingTransportZoneArgs) ToNetworkPoolBackingTransportZonePtrOutputWithContext(ctx context.Context) NetworkPoolBackingTransportZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingTransportZoneOutput).ToNetworkPoolBackingTransportZonePtrOutputWithContext(ctx)
}

// NetworkPoolBackingTransportZonePtrInput is an input type that accepts NetworkPoolBackingTransportZoneArgs, NetworkPoolBackingTransportZonePtr and NetworkPoolBackingTransportZonePtrOutput values.
// You can construct a concrete instance of `NetworkPoolBackingTransportZonePtrInput` via:
//
//	        NetworkPoolBackingTransportZoneArgs{...}
//
//	or:
//
//	        nil
type NetworkPoolBackingTransportZonePtrInput interface {
	pulumi.Input

	ToNetworkPoolBackingTransportZonePtrOutput() NetworkPoolBackingTransportZonePtrOutput
	ToNetworkPoolBackingTransportZonePtrOutputWithContext(context.Context) NetworkPoolBackingTransportZonePtrOutput
}

type networkPoolBackingTransportZonePtrType NetworkPoolBackingTransportZoneArgs

func NetworkPoolBackingTransportZonePtr(v *NetworkPoolBackingTransportZoneArgs) NetworkPoolBackingTransportZonePtrInput {
	return (*networkPoolBackingTransportZonePtrType)(v)
}

func (*networkPoolBackingTransportZonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPoolBackingTransportZone)(nil)).Elem()
}

func (i *networkPoolBackingTransportZonePtrType) ToNetworkPoolBackingTransportZonePtrOutput() NetworkPoolBackingTransportZonePtrOutput {
	return i.ToNetworkPoolBackingTransportZonePtrOutputWithContext(context.Background())
}

func (i *networkPoolBackingTransportZonePtrType) ToNetworkPoolBackingTransportZonePtrOutputWithContext(ctx context.Context) NetworkPoolBackingTransportZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPoolBackingTransportZonePtrOutput)
}

type NetworkPoolBackingTransportZoneOutput struct{ *pulumi.OutputState }

func (NetworkPoolBackingTransportZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPoolBackingTransportZone)(nil)).Elem()
}

func (o NetworkPoolBackingTransportZoneOutput) ToNetworkPoolBackingTransportZoneOutput() NetworkPoolBackingTransportZoneOutput {
	return o
}

func (o NetworkPoolBackingTransportZoneOutput) ToNetworkPoolBackingTransportZoneOutputWithContext(ctx context.Context) NetworkPoolBackingTransportZoneOutput {
	return o
}

func (o NetworkPoolBackingTransportZoneOutput) ToNetworkPoolBackingTransportZonePtrOutput() NetworkPoolBackingTransportZonePtrOutput {
	return o.ToNetworkPoolBackingTransportZonePtrOutputWithContext(context.Background())
}

func (o NetworkPoolBackingTransportZoneOutput) ToNetworkPoolBackingTransportZonePtrOutputWithContext(ctx context.Context) NetworkPoolBackingTransportZonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPoolBackingTransportZone) *NetworkPoolBackingTransportZone {
		return &v
	}).(NetworkPoolBackingTransportZonePtrOutput)
}

// (Computed) The ID of the backing element
func (o NetworkPoolBackingTransportZoneOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPoolBackingTransportZone) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Unique name of network pool
func (o NetworkPoolBackingTransportZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPoolBackingTransportZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
func (o NetworkPoolBackingTransportZoneOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPoolBackingTransportZone) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkPoolBackingTransportZonePtrOutput struct{ *pulumi.OutputState }

func (NetworkPoolBackingTransportZonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPoolBackingTransportZone)(nil)).Elem()
}

func (o NetworkPoolBackingTransportZonePtrOutput) ToNetworkPoolBackingTransportZonePtrOutput() NetworkPoolBackingTransportZonePtrOutput {
	return o
}

func (o NetworkPoolBackingTransportZonePtrOutput) ToNetworkPoolBackingTransportZonePtrOutputWithContext(ctx context.Context) NetworkPoolBackingTransportZonePtrOutput {
	return o
}

func (o NetworkPoolBackingTransportZonePtrOutput) Elem() NetworkPoolBackingTransportZoneOutput {
	return o.ApplyT(func(v *NetworkPoolBackingTransportZone) NetworkPoolBackingTransportZone {
		if v != nil {
			return *v
		}
		var ret NetworkPoolBackingTransportZone
		return ret
	}).(NetworkPoolBackingTransportZoneOutput)
}

// (Computed) The ID of the backing element
func (o NetworkPoolBackingTransportZonePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPoolBackingTransportZone) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Unique name of network pool
func (o NetworkPoolBackingTransportZonePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPoolBackingTransportZone) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of the network pool (one of `GENEVE`, `VLAN`, `PORTGROUP_BACKED`)
func (o NetworkPoolBackingTransportZonePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPoolBackingTransportZone) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type NetworkRoutedDhcpPool struct {
	// The default DHCP lease time to use
	DefaultLeaseTime *int `pulumi:"defaultLeaseTime"`
	// The final address in the IP Range
	EndAddress string `pulumi:"endAddress"`
	// The maximum DHCP lease time to use
	MaxLeaseTime *int `pulumi:"maxLeaseTime"`
	// The first address in the IP Range
	StartAddress string `pulumi:"startAddress"`
}

// NetworkRoutedDhcpPoolInput is an input type that accepts NetworkRoutedDhcpPoolArgs and NetworkRoutedDhcpPoolOutput values.
// You can construct a concrete instance of `NetworkRoutedDhcpPoolInput` via:
//
//	NetworkRoutedDhcpPoolArgs{...}
type NetworkRoutedDhcpPoolInput interface {
	pulumi.Input

	ToNetworkRoutedDhcpPoolOutput() NetworkRoutedDhcpPoolOutput
	ToNetworkRoutedDhcpPoolOutputWithContext(context.Context) NetworkRoutedDhcpPoolOutput
}

type NetworkRoutedDhcpPoolArgs struct {
	// The default DHCP lease time to use
	DefaultLeaseTime pulumi.IntPtrInput `pulumi:"defaultLeaseTime"`
	// The final address in the IP Range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// The maximum DHCP lease time to use
	MaxLeaseTime pulumi.IntPtrInput `pulumi:"maxLeaseTime"`
	// The first address in the IP Range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NetworkRoutedDhcpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedDhcpPool)(nil)).Elem()
}

func (i NetworkRoutedDhcpPoolArgs) ToNetworkRoutedDhcpPoolOutput() NetworkRoutedDhcpPoolOutput {
	return i.ToNetworkRoutedDhcpPoolOutputWithContext(context.Background())
}

func (i NetworkRoutedDhcpPoolArgs) ToNetworkRoutedDhcpPoolOutputWithContext(ctx context.Context) NetworkRoutedDhcpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedDhcpPoolOutput)
}

// NetworkRoutedDhcpPoolArrayInput is an input type that accepts NetworkRoutedDhcpPoolArray and NetworkRoutedDhcpPoolArrayOutput values.
// You can construct a concrete instance of `NetworkRoutedDhcpPoolArrayInput` via:
//
//	NetworkRoutedDhcpPoolArray{ NetworkRoutedDhcpPoolArgs{...} }
type NetworkRoutedDhcpPoolArrayInput interface {
	pulumi.Input

	ToNetworkRoutedDhcpPoolArrayOutput() NetworkRoutedDhcpPoolArrayOutput
	ToNetworkRoutedDhcpPoolArrayOutputWithContext(context.Context) NetworkRoutedDhcpPoolArrayOutput
}

type NetworkRoutedDhcpPoolArray []NetworkRoutedDhcpPoolInput

func (NetworkRoutedDhcpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedDhcpPool)(nil)).Elem()
}

func (i NetworkRoutedDhcpPoolArray) ToNetworkRoutedDhcpPoolArrayOutput() NetworkRoutedDhcpPoolArrayOutput {
	return i.ToNetworkRoutedDhcpPoolArrayOutputWithContext(context.Background())
}

func (i NetworkRoutedDhcpPoolArray) ToNetworkRoutedDhcpPoolArrayOutputWithContext(ctx context.Context) NetworkRoutedDhcpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedDhcpPoolArrayOutput)
}

type NetworkRoutedDhcpPoolOutput struct{ *pulumi.OutputState }

func (NetworkRoutedDhcpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedDhcpPool)(nil)).Elem()
}

func (o NetworkRoutedDhcpPoolOutput) ToNetworkRoutedDhcpPoolOutput() NetworkRoutedDhcpPoolOutput {
	return o
}

func (o NetworkRoutedDhcpPoolOutput) ToNetworkRoutedDhcpPoolOutputWithContext(ctx context.Context) NetworkRoutedDhcpPoolOutput {
	return o
}

// The default DHCP lease time to use
func (o NetworkRoutedDhcpPoolOutput) DefaultLeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkRoutedDhcpPool) *int { return v.DefaultLeaseTime }).(pulumi.IntPtrOutput)
}

// The final address in the IP Range
func (o NetworkRoutedDhcpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRoutedDhcpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// The maximum DHCP lease time to use
func (o NetworkRoutedDhcpPoolOutput) MaxLeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkRoutedDhcpPool) *int { return v.MaxLeaseTime }).(pulumi.IntPtrOutput)
}

// The first address in the IP Range
func (o NetworkRoutedDhcpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRoutedDhcpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NetworkRoutedDhcpPoolArrayOutput struct{ *pulumi.OutputState }

func (NetworkRoutedDhcpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedDhcpPool)(nil)).Elem()
}

func (o NetworkRoutedDhcpPoolArrayOutput) ToNetworkRoutedDhcpPoolArrayOutput() NetworkRoutedDhcpPoolArrayOutput {
	return o
}

func (o NetworkRoutedDhcpPoolArrayOutput) ToNetworkRoutedDhcpPoolArrayOutputWithContext(ctx context.Context) NetworkRoutedDhcpPoolArrayOutput {
	return o
}

func (o NetworkRoutedDhcpPoolArrayOutput) Index(i pulumi.IntInput) NetworkRoutedDhcpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkRoutedDhcpPool {
		return vs[0].([]NetworkRoutedDhcpPool)[vs[1].(int)]
	}).(NetworkRoutedDhcpPoolOutput)
}

type NetworkRoutedMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// NetworkRoutedMetadataEntryInput is an input type that accepts NetworkRoutedMetadataEntryArgs and NetworkRoutedMetadataEntryOutput values.
// You can construct a concrete instance of `NetworkRoutedMetadataEntryInput` via:
//
//	NetworkRoutedMetadataEntryArgs{...}
type NetworkRoutedMetadataEntryInput interface {
	pulumi.Input

	ToNetworkRoutedMetadataEntryOutput() NetworkRoutedMetadataEntryOutput
	ToNetworkRoutedMetadataEntryOutputWithContext(context.Context) NetworkRoutedMetadataEntryOutput
}

type NetworkRoutedMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetworkRoutedMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedMetadataEntry)(nil)).Elem()
}

func (i NetworkRoutedMetadataEntryArgs) ToNetworkRoutedMetadataEntryOutput() NetworkRoutedMetadataEntryOutput {
	return i.ToNetworkRoutedMetadataEntryOutputWithContext(context.Background())
}

func (i NetworkRoutedMetadataEntryArgs) ToNetworkRoutedMetadataEntryOutputWithContext(ctx context.Context) NetworkRoutedMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedMetadataEntryOutput)
}

// NetworkRoutedMetadataEntryArrayInput is an input type that accepts NetworkRoutedMetadataEntryArray and NetworkRoutedMetadataEntryArrayOutput values.
// You can construct a concrete instance of `NetworkRoutedMetadataEntryArrayInput` via:
//
//	NetworkRoutedMetadataEntryArray{ NetworkRoutedMetadataEntryArgs{...} }
type NetworkRoutedMetadataEntryArrayInput interface {
	pulumi.Input

	ToNetworkRoutedMetadataEntryArrayOutput() NetworkRoutedMetadataEntryArrayOutput
	ToNetworkRoutedMetadataEntryArrayOutputWithContext(context.Context) NetworkRoutedMetadataEntryArrayOutput
}

type NetworkRoutedMetadataEntryArray []NetworkRoutedMetadataEntryInput

func (NetworkRoutedMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedMetadataEntry)(nil)).Elem()
}

func (i NetworkRoutedMetadataEntryArray) ToNetworkRoutedMetadataEntryArrayOutput() NetworkRoutedMetadataEntryArrayOutput {
	return i.ToNetworkRoutedMetadataEntryArrayOutputWithContext(context.Background())
}

func (i NetworkRoutedMetadataEntryArray) ToNetworkRoutedMetadataEntryArrayOutputWithContext(ctx context.Context) NetworkRoutedMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedMetadataEntryArrayOutput)
}

type NetworkRoutedMetadataEntryOutput struct{ *pulumi.OutputState }

func (NetworkRoutedMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedMetadataEntry)(nil)).Elem()
}

func (o NetworkRoutedMetadataEntryOutput) ToNetworkRoutedMetadataEntryOutput() NetworkRoutedMetadataEntryOutput {
	return o
}

func (o NetworkRoutedMetadataEntryOutput) ToNetworkRoutedMetadataEntryOutputWithContext(ctx context.Context) NetworkRoutedMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o NetworkRoutedMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkRoutedMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o NetworkRoutedMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRoutedMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o NetworkRoutedMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRoutedMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o NetworkRoutedMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRoutedMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o NetworkRoutedMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRoutedMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkRoutedMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkRoutedMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedMetadataEntry)(nil)).Elem()
}

func (o NetworkRoutedMetadataEntryArrayOutput) ToNetworkRoutedMetadataEntryArrayOutput() NetworkRoutedMetadataEntryArrayOutput {
	return o
}

func (o NetworkRoutedMetadataEntryArrayOutput) ToNetworkRoutedMetadataEntryArrayOutputWithContext(ctx context.Context) NetworkRoutedMetadataEntryArrayOutput {
	return o
}

func (o NetworkRoutedMetadataEntryArrayOutput) Index(i pulumi.IntInput) NetworkRoutedMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkRoutedMetadataEntry {
		return vs[0].([]NetworkRoutedMetadataEntry)[vs[1].(int)]
	}).(NetworkRoutedMetadataEntryOutput)
}

type NetworkRoutedStaticIpPool struct {
	// The final address in the IP Range
	EndAddress string `pulumi:"endAddress"`
	// The first address in the IP Range
	StartAddress string `pulumi:"startAddress"`
}

// NetworkRoutedStaticIpPoolInput is an input type that accepts NetworkRoutedStaticIpPoolArgs and NetworkRoutedStaticIpPoolOutput values.
// You can construct a concrete instance of `NetworkRoutedStaticIpPoolInput` via:
//
//	NetworkRoutedStaticIpPoolArgs{...}
type NetworkRoutedStaticIpPoolInput interface {
	pulumi.Input

	ToNetworkRoutedStaticIpPoolOutput() NetworkRoutedStaticIpPoolOutput
	ToNetworkRoutedStaticIpPoolOutputWithContext(context.Context) NetworkRoutedStaticIpPoolOutput
}

type NetworkRoutedStaticIpPoolArgs struct {
	// The final address in the IP Range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// The first address in the IP Range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NetworkRoutedStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedStaticIpPool)(nil)).Elem()
}

func (i NetworkRoutedStaticIpPoolArgs) ToNetworkRoutedStaticIpPoolOutput() NetworkRoutedStaticIpPoolOutput {
	return i.ToNetworkRoutedStaticIpPoolOutputWithContext(context.Background())
}

func (i NetworkRoutedStaticIpPoolArgs) ToNetworkRoutedStaticIpPoolOutputWithContext(ctx context.Context) NetworkRoutedStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedStaticIpPoolOutput)
}

// NetworkRoutedStaticIpPoolArrayInput is an input type that accepts NetworkRoutedStaticIpPoolArray and NetworkRoutedStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `NetworkRoutedStaticIpPoolArrayInput` via:
//
//	NetworkRoutedStaticIpPoolArray{ NetworkRoutedStaticIpPoolArgs{...} }
type NetworkRoutedStaticIpPoolArrayInput interface {
	pulumi.Input

	ToNetworkRoutedStaticIpPoolArrayOutput() NetworkRoutedStaticIpPoolArrayOutput
	ToNetworkRoutedStaticIpPoolArrayOutputWithContext(context.Context) NetworkRoutedStaticIpPoolArrayOutput
}

type NetworkRoutedStaticIpPoolArray []NetworkRoutedStaticIpPoolInput

func (NetworkRoutedStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedStaticIpPool)(nil)).Elem()
}

func (i NetworkRoutedStaticIpPoolArray) ToNetworkRoutedStaticIpPoolArrayOutput() NetworkRoutedStaticIpPoolArrayOutput {
	return i.ToNetworkRoutedStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i NetworkRoutedStaticIpPoolArray) ToNetworkRoutedStaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkRoutedStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedStaticIpPoolArrayOutput)
}

type NetworkRoutedStaticIpPoolOutput struct{ *pulumi.OutputState }

func (NetworkRoutedStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedStaticIpPool)(nil)).Elem()
}

func (o NetworkRoutedStaticIpPoolOutput) ToNetworkRoutedStaticIpPoolOutput() NetworkRoutedStaticIpPoolOutput {
	return o
}

func (o NetworkRoutedStaticIpPoolOutput) ToNetworkRoutedStaticIpPoolOutputWithContext(ctx context.Context) NetworkRoutedStaticIpPoolOutput {
	return o
}

// The final address in the IP Range
func (o NetworkRoutedStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRoutedStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// The first address in the IP Range
func (o NetworkRoutedStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRoutedStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NetworkRoutedStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NetworkRoutedStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedStaticIpPool)(nil)).Elem()
}

func (o NetworkRoutedStaticIpPoolArrayOutput) ToNetworkRoutedStaticIpPoolArrayOutput() NetworkRoutedStaticIpPoolArrayOutput {
	return o
}

func (o NetworkRoutedStaticIpPoolArrayOutput) ToNetworkRoutedStaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkRoutedStaticIpPoolArrayOutput {
	return o
}

func (o NetworkRoutedStaticIpPoolArrayOutput) Index(i pulumi.IntInput) NetworkRoutedStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkRoutedStaticIpPool {
		return vs[0].([]NetworkRoutedStaticIpPool)[vs[1].(int)]
	}).(NetworkRoutedStaticIpPoolOutput)
}

type NetworkRoutedV2MetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// NetworkRoutedV2MetadataEntryInput is an input type that accepts NetworkRoutedV2MetadataEntryArgs and NetworkRoutedV2MetadataEntryOutput values.
// You can construct a concrete instance of `NetworkRoutedV2MetadataEntryInput` via:
//
//	NetworkRoutedV2MetadataEntryArgs{...}
type NetworkRoutedV2MetadataEntryInput interface {
	pulumi.Input

	ToNetworkRoutedV2MetadataEntryOutput() NetworkRoutedV2MetadataEntryOutput
	ToNetworkRoutedV2MetadataEntryOutputWithContext(context.Context) NetworkRoutedV2MetadataEntryOutput
}

type NetworkRoutedV2MetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetworkRoutedV2MetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedV2MetadataEntry)(nil)).Elem()
}

func (i NetworkRoutedV2MetadataEntryArgs) ToNetworkRoutedV2MetadataEntryOutput() NetworkRoutedV2MetadataEntryOutput {
	return i.ToNetworkRoutedV2MetadataEntryOutputWithContext(context.Background())
}

func (i NetworkRoutedV2MetadataEntryArgs) ToNetworkRoutedV2MetadataEntryOutputWithContext(ctx context.Context) NetworkRoutedV2MetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedV2MetadataEntryOutput)
}

// NetworkRoutedV2MetadataEntryArrayInput is an input type that accepts NetworkRoutedV2MetadataEntryArray and NetworkRoutedV2MetadataEntryArrayOutput values.
// You can construct a concrete instance of `NetworkRoutedV2MetadataEntryArrayInput` via:
//
//	NetworkRoutedV2MetadataEntryArray{ NetworkRoutedV2MetadataEntryArgs{...} }
type NetworkRoutedV2MetadataEntryArrayInput interface {
	pulumi.Input

	ToNetworkRoutedV2MetadataEntryArrayOutput() NetworkRoutedV2MetadataEntryArrayOutput
	ToNetworkRoutedV2MetadataEntryArrayOutputWithContext(context.Context) NetworkRoutedV2MetadataEntryArrayOutput
}

type NetworkRoutedV2MetadataEntryArray []NetworkRoutedV2MetadataEntryInput

func (NetworkRoutedV2MetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedV2MetadataEntry)(nil)).Elem()
}

func (i NetworkRoutedV2MetadataEntryArray) ToNetworkRoutedV2MetadataEntryArrayOutput() NetworkRoutedV2MetadataEntryArrayOutput {
	return i.ToNetworkRoutedV2MetadataEntryArrayOutputWithContext(context.Background())
}

func (i NetworkRoutedV2MetadataEntryArray) ToNetworkRoutedV2MetadataEntryArrayOutputWithContext(ctx context.Context) NetworkRoutedV2MetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedV2MetadataEntryArrayOutput)
}

type NetworkRoutedV2MetadataEntryOutput struct{ *pulumi.OutputState }

func (NetworkRoutedV2MetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedV2MetadataEntry)(nil)).Elem()
}

func (o NetworkRoutedV2MetadataEntryOutput) ToNetworkRoutedV2MetadataEntryOutput() NetworkRoutedV2MetadataEntryOutput {
	return o
}

func (o NetworkRoutedV2MetadataEntryOutput) ToNetworkRoutedV2MetadataEntryOutputWithContext(ctx context.Context) NetworkRoutedV2MetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o NetworkRoutedV2MetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkRoutedV2MetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o NetworkRoutedV2MetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRoutedV2MetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o NetworkRoutedV2MetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRoutedV2MetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o NetworkRoutedV2MetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRoutedV2MetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o NetworkRoutedV2MetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRoutedV2MetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkRoutedV2MetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkRoutedV2MetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedV2MetadataEntry)(nil)).Elem()
}

func (o NetworkRoutedV2MetadataEntryArrayOutput) ToNetworkRoutedV2MetadataEntryArrayOutput() NetworkRoutedV2MetadataEntryArrayOutput {
	return o
}

func (o NetworkRoutedV2MetadataEntryArrayOutput) ToNetworkRoutedV2MetadataEntryArrayOutputWithContext(ctx context.Context) NetworkRoutedV2MetadataEntryArrayOutput {
	return o
}

func (o NetworkRoutedV2MetadataEntryArrayOutput) Index(i pulumi.IntInput) NetworkRoutedV2MetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkRoutedV2MetadataEntry {
		return vs[0].([]NetworkRoutedV2MetadataEntry)[vs[1].(int)]
	}).(NetworkRoutedV2MetadataEntryOutput)
}

type NetworkRoutedV2SecondaryStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// NetworkRoutedV2SecondaryStaticIpPoolInput is an input type that accepts NetworkRoutedV2SecondaryStaticIpPoolArgs and NetworkRoutedV2SecondaryStaticIpPoolOutput values.
// You can construct a concrete instance of `NetworkRoutedV2SecondaryStaticIpPoolInput` via:
//
//	NetworkRoutedV2SecondaryStaticIpPoolArgs{...}
type NetworkRoutedV2SecondaryStaticIpPoolInput interface {
	pulumi.Input

	ToNetworkRoutedV2SecondaryStaticIpPoolOutput() NetworkRoutedV2SecondaryStaticIpPoolOutput
	ToNetworkRoutedV2SecondaryStaticIpPoolOutputWithContext(context.Context) NetworkRoutedV2SecondaryStaticIpPoolOutput
}

type NetworkRoutedV2SecondaryStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NetworkRoutedV2SecondaryStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (i NetworkRoutedV2SecondaryStaticIpPoolArgs) ToNetworkRoutedV2SecondaryStaticIpPoolOutput() NetworkRoutedV2SecondaryStaticIpPoolOutput {
	return i.ToNetworkRoutedV2SecondaryStaticIpPoolOutputWithContext(context.Background())
}

func (i NetworkRoutedV2SecondaryStaticIpPoolArgs) ToNetworkRoutedV2SecondaryStaticIpPoolOutputWithContext(ctx context.Context) NetworkRoutedV2SecondaryStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedV2SecondaryStaticIpPoolOutput)
}

// NetworkRoutedV2SecondaryStaticIpPoolArrayInput is an input type that accepts NetworkRoutedV2SecondaryStaticIpPoolArray and NetworkRoutedV2SecondaryStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `NetworkRoutedV2SecondaryStaticIpPoolArrayInput` via:
//
//	NetworkRoutedV2SecondaryStaticIpPoolArray{ NetworkRoutedV2SecondaryStaticIpPoolArgs{...} }
type NetworkRoutedV2SecondaryStaticIpPoolArrayInput interface {
	pulumi.Input

	ToNetworkRoutedV2SecondaryStaticIpPoolArrayOutput() NetworkRoutedV2SecondaryStaticIpPoolArrayOutput
	ToNetworkRoutedV2SecondaryStaticIpPoolArrayOutputWithContext(context.Context) NetworkRoutedV2SecondaryStaticIpPoolArrayOutput
}

type NetworkRoutedV2SecondaryStaticIpPoolArray []NetworkRoutedV2SecondaryStaticIpPoolInput

func (NetworkRoutedV2SecondaryStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (i NetworkRoutedV2SecondaryStaticIpPoolArray) ToNetworkRoutedV2SecondaryStaticIpPoolArrayOutput() NetworkRoutedV2SecondaryStaticIpPoolArrayOutput {
	return i.ToNetworkRoutedV2SecondaryStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i NetworkRoutedV2SecondaryStaticIpPoolArray) ToNetworkRoutedV2SecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkRoutedV2SecondaryStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedV2SecondaryStaticIpPoolArrayOutput)
}

type NetworkRoutedV2SecondaryStaticIpPoolOutput struct{ *pulumi.OutputState }

func (NetworkRoutedV2SecondaryStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (o NetworkRoutedV2SecondaryStaticIpPoolOutput) ToNetworkRoutedV2SecondaryStaticIpPoolOutput() NetworkRoutedV2SecondaryStaticIpPoolOutput {
	return o
}

func (o NetworkRoutedV2SecondaryStaticIpPoolOutput) ToNetworkRoutedV2SecondaryStaticIpPoolOutputWithContext(ctx context.Context) NetworkRoutedV2SecondaryStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o NetworkRoutedV2SecondaryStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRoutedV2SecondaryStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o NetworkRoutedV2SecondaryStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRoutedV2SecondaryStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NetworkRoutedV2SecondaryStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NetworkRoutedV2SecondaryStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (o NetworkRoutedV2SecondaryStaticIpPoolArrayOutput) ToNetworkRoutedV2SecondaryStaticIpPoolArrayOutput() NetworkRoutedV2SecondaryStaticIpPoolArrayOutput {
	return o
}

func (o NetworkRoutedV2SecondaryStaticIpPoolArrayOutput) ToNetworkRoutedV2SecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkRoutedV2SecondaryStaticIpPoolArrayOutput {
	return o
}

func (o NetworkRoutedV2SecondaryStaticIpPoolArrayOutput) Index(i pulumi.IntInput) NetworkRoutedV2SecondaryStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkRoutedV2SecondaryStaticIpPool {
		return vs[0].([]NetworkRoutedV2SecondaryStaticIpPool)[vs[1].(int)]
	}).(NetworkRoutedV2SecondaryStaticIpPoolOutput)
}

type NetworkRoutedV2StaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// NetworkRoutedV2StaticIpPoolInput is an input type that accepts NetworkRoutedV2StaticIpPoolArgs and NetworkRoutedV2StaticIpPoolOutput values.
// You can construct a concrete instance of `NetworkRoutedV2StaticIpPoolInput` via:
//
//	NetworkRoutedV2StaticIpPoolArgs{...}
type NetworkRoutedV2StaticIpPoolInput interface {
	pulumi.Input

	ToNetworkRoutedV2StaticIpPoolOutput() NetworkRoutedV2StaticIpPoolOutput
	ToNetworkRoutedV2StaticIpPoolOutputWithContext(context.Context) NetworkRoutedV2StaticIpPoolOutput
}

type NetworkRoutedV2StaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NetworkRoutedV2StaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedV2StaticIpPool)(nil)).Elem()
}

func (i NetworkRoutedV2StaticIpPoolArgs) ToNetworkRoutedV2StaticIpPoolOutput() NetworkRoutedV2StaticIpPoolOutput {
	return i.ToNetworkRoutedV2StaticIpPoolOutputWithContext(context.Background())
}

func (i NetworkRoutedV2StaticIpPoolArgs) ToNetworkRoutedV2StaticIpPoolOutputWithContext(ctx context.Context) NetworkRoutedV2StaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedV2StaticIpPoolOutput)
}

// NetworkRoutedV2StaticIpPoolArrayInput is an input type that accepts NetworkRoutedV2StaticIpPoolArray and NetworkRoutedV2StaticIpPoolArrayOutput values.
// You can construct a concrete instance of `NetworkRoutedV2StaticIpPoolArrayInput` via:
//
//	NetworkRoutedV2StaticIpPoolArray{ NetworkRoutedV2StaticIpPoolArgs{...} }
type NetworkRoutedV2StaticIpPoolArrayInput interface {
	pulumi.Input

	ToNetworkRoutedV2StaticIpPoolArrayOutput() NetworkRoutedV2StaticIpPoolArrayOutput
	ToNetworkRoutedV2StaticIpPoolArrayOutputWithContext(context.Context) NetworkRoutedV2StaticIpPoolArrayOutput
}

type NetworkRoutedV2StaticIpPoolArray []NetworkRoutedV2StaticIpPoolInput

func (NetworkRoutedV2StaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedV2StaticIpPool)(nil)).Elem()
}

func (i NetworkRoutedV2StaticIpPoolArray) ToNetworkRoutedV2StaticIpPoolArrayOutput() NetworkRoutedV2StaticIpPoolArrayOutput {
	return i.ToNetworkRoutedV2StaticIpPoolArrayOutputWithContext(context.Background())
}

func (i NetworkRoutedV2StaticIpPoolArray) ToNetworkRoutedV2StaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkRoutedV2StaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedV2StaticIpPoolArrayOutput)
}

type NetworkRoutedV2StaticIpPoolOutput struct{ *pulumi.OutputState }

func (NetworkRoutedV2StaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutedV2StaticIpPool)(nil)).Elem()
}

func (o NetworkRoutedV2StaticIpPoolOutput) ToNetworkRoutedV2StaticIpPoolOutput() NetworkRoutedV2StaticIpPoolOutput {
	return o
}

func (o NetworkRoutedV2StaticIpPoolOutput) ToNetworkRoutedV2StaticIpPoolOutputWithContext(ctx context.Context) NetworkRoutedV2StaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o NetworkRoutedV2StaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRoutedV2StaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o NetworkRoutedV2StaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRoutedV2StaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NetworkRoutedV2StaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NetworkRoutedV2StaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoutedV2StaticIpPool)(nil)).Elem()
}

func (o NetworkRoutedV2StaticIpPoolArrayOutput) ToNetworkRoutedV2StaticIpPoolArrayOutput() NetworkRoutedV2StaticIpPoolArrayOutput {
	return o
}

func (o NetworkRoutedV2StaticIpPoolArrayOutput) ToNetworkRoutedV2StaticIpPoolArrayOutputWithContext(ctx context.Context) NetworkRoutedV2StaticIpPoolArrayOutput {
	return o
}

func (o NetworkRoutedV2StaticIpPoolArrayOutput) Index(i pulumi.IntInput) NetworkRoutedV2StaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkRoutedV2StaticIpPool {
		return vs[0].([]NetworkRoutedV2StaticIpPool)[vs[1].(int)]
	}).(NetworkRoutedV2StaticIpPoolOutput)
}

type NsxtAlbPoolHealthMonitor struct {
	// A name for ALB Pool
	Name          *string `pulumi:"name"`
	SystemDefined *bool   `pulumi:"systemDefined"`
	// Type of health monitor. One of `HTTP`, `HTTPS`, `TCP`, `UDP`, `PING`
	Type string `pulumi:"type"`
}

// NsxtAlbPoolHealthMonitorInput is an input type that accepts NsxtAlbPoolHealthMonitorArgs and NsxtAlbPoolHealthMonitorOutput values.
// You can construct a concrete instance of `NsxtAlbPoolHealthMonitorInput` via:
//
//	NsxtAlbPoolHealthMonitorArgs{...}
type NsxtAlbPoolHealthMonitorInput interface {
	pulumi.Input

	ToNsxtAlbPoolHealthMonitorOutput() NsxtAlbPoolHealthMonitorOutput
	ToNsxtAlbPoolHealthMonitorOutputWithContext(context.Context) NsxtAlbPoolHealthMonitorOutput
}

type NsxtAlbPoolHealthMonitorArgs struct {
	// A name for ALB Pool
	Name          pulumi.StringPtrInput `pulumi:"name"`
	SystemDefined pulumi.BoolPtrInput   `pulumi:"systemDefined"`
	// Type of health monitor. One of `HTTP`, `HTTPS`, `TCP`, `UDP`, `PING`
	Type pulumi.StringInput `pulumi:"type"`
}

func (NsxtAlbPoolHealthMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbPoolHealthMonitor)(nil)).Elem()
}

func (i NsxtAlbPoolHealthMonitorArgs) ToNsxtAlbPoolHealthMonitorOutput() NsxtAlbPoolHealthMonitorOutput {
	return i.ToNsxtAlbPoolHealthMonitorOutputWithContext(context.Background())
}

func (i NsxtAlbPoolHealthMonitorArgs) ToNsxtAlbPoolHealthMonitorOutputWithContext(ctx context.Context) NsxtAlbPoolHealthMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbPoolHealthMonitorOutput)
}

// NsxtAlbPoolHealthMonitorArrayInput is an input type that accepts NsxtAlbPoolHealthMonitorArray and NsxtAlbPoolHealthMonitorArrayOutput values.
// You can construct a concrete instance of `NsxtAlbPoolHealthMonitorArrayInput` via:
//
//	NsxtAlbPoolHealthMonitorArray{ NsxtAlbPoolHealthMonitorArgs{...} }
type NsxtAlbPoolHealthMonitorArrayInput interface {
	pulumi.Input

	ToNsxtAlbPoolHealthMonitorArrayOutput() NsxtAlbPoolHealthMonitorArrayOutput
	ToNsxtAlbPoolHealthMonitorArrayOutputWithContext(context.Context) NsxtAlbPoolHealthMonitorArrayOutput
}

type NsxtAlbPoolHealthMonitorArray []NsxtAlbPoolHealthMonitorInput

func (NsxtAlbPoolHealthMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbPoolHealthMonitor)(nil)).Elem()
}

func (i NsxtAlbPoolHealthMonitorArray) ToNsxtAlbPoolHealthMonitorArrayOutput() NsxtAlbPoolHealthMonitorArrayOutput {
	return i.ToNsxtAlbPoolHealthMonitorArrayOutputWithContext(context.Background())
}

func (i NsxtAlbPoolHealthMonitorArray) ToNsxtAlbPoolHealthMonitorArrayOutputWithContext(ctx context.Context) NsxtAlbPoolHealthMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbPoolHealthMonitorArrayOutput)
}

type NsxtAlbPoolHealthMonitorOutput struct{ *pulumi.OutputState }

func (NsxtAlbPoolHealthMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbPoolHealthMonitor)(nil)).Elem()
}

func (o NsxtAlbPoolHealthMonitorOutput) ToNsxtAlbPoolHealthMonitorOutput() NsxtAlbPoolHealthMonitorOutput {
	return o
}

func (o NsxtAlbPoolHealthMonitorOutput) ToNsxtAlbPoolHealthMonitorOutputWithContext(ctx context.Context) NsxtAlbPoolHealthMonitorOutput {
	return o
}

// A name for ALB Pool
func (o NsxtAlbPoolHealthMonitorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbPoolHealthMonitor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NsxtAlbPoolHealthMonitorOutput) SystemDefined() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbPoolHealthMonitor) *bool { return v.SystemDefined }).(pulumi.BoolPtrOutput)
}

// Type of health monitor. One of `HTTP`, `HTTPS`, `TCP`, `UDP`, `PING`
func (o NsxtAlbPoolHealthMonitorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbPoolHealthMonitor) string { return v.Type }).(pulumi.StringOutput)
}

type NsxtAlbPoolHealthMonitorArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbPoolHealthMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbPoolHealthMonitor)(nil)).Elem()
}

func (o NsxtAlbPoolHealthMonitorArrayOutput) ToNsxtAlbPoolHealthMonitorArrayOutput() NsxtAlbPoolHealthMonitorArrayOutput {
	return o
}

func (o NsxtAlbPoolHealthMonitorArrayOutput) ToNsxtAlbPoolHealthMonitorArrayOutputWithContext(ctx context.Context) NsxtAlbPoolHealthMonitorArrayOutput {
	return o
}

func (o NsxtAlbPoolHealthMonitorArrayOutput) Index(i pulumi.IntInput) NsxtAlbPoolHealthMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbPoolHealthMonitor {
		return vs[0].([]NsxtAlbPoolHealthMonitor)[vs[1].(int)]
	}).(NsxtAlbPoolHealthMonitorOutput)
}

type NsxtAlbPoolMember struct {
	// Detailed health message
	DetailedHealthMessage *string `pulumi:"detailedHealthMessage"`
	// Boolean value if ALB Pool should be enabled (default `true`)
	Enabled *bool `pulumi:"enabled"`
	// Health status
	HealthStatus *string `pulumi:"healthStatus"`
	// IP address of pool member
	IpAddress string `pulumi:"ipAddress"`
	// Marked down by provides a set of health monitors that marked the service down
	MarkedDownBies []string `pulumi:"markedDownBies"`
	// Member port
	Port *int `pulumi:"port"`
	// Ratio of selecting eligible servers in the pool
	Ratio *int `pulumi:"ratio"`
}

// NsxtAlbPoolMemberInput is an input type that accepts NsxtAlbPoolMemberArgs and NsxtAlbPoolMemberOutput values.
// You can construct a concrete instance of `NsxtAlbPoolMemberInput` via:
//
//	NsxtAlbPoolMemberArgs{...}
type NsxtAlbPoolMemberInput interface {
	pulumi.Input

	ToNsxtAlbPoolMemberOutput() NsxtAlbPoolMemberOutput
	ToNsxtAlbPoolMemberOutputWithContext(context.Context) NsxtAlbPoolMemberOutput
}

type NsxtAlbPoolMemberArgs struct {
	// Detailed health message
	DetailedHealthMessage pulumi.StringPtrInput `pulumi:"detailedHealthMessage"`
	// Boolean value if ALB Pool should be enabled (default `true`)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Health status
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// IP address of pool member
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Marked down by provides a set of health monitors that marked the service down
	MarkedDownBies pulumi.StringArrayInput `pulumi:"markedDownBies"`
	// Member port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Ratio of selecting eligible servers in the pool
	Ratio pulumi.IntPtrInput `pulumi:"ratio"`
}

func (NsxtAlbPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbPoolMember)(nil)).Elem()
}

func (i NsxtAlbPoolMemberArgs) ToNsxtAlbPoolMemberOutput() NsxtAlbPoolMemberOutput {
	return i.ToNsxtAlbPoolMemberOutputWithContext(context.Background())
}

func (i NsxtAlbPoolMemberArgs) ToNsxtAlbPoolMemberOutputWithContext(ctx context.Context) NsxtAlbPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbPoolMemberOutput)
}

// NsxtAlbPoolMemberArrayInput is an input type that accepts NsxtAlbPoolMemberArray and NsxtAlbPoolMemberArrayOutput values.
// You can construct a concrete instance of `NsxtAlbPoolMemberArrayInput` via:
//
//	NsxtAlbPoolMemberArray{ NsxtAlbPoolMemberArgs{...} }
type NsxtAlbPoolMemberArrayInput interface {
	pulumi.Input

	ToNsxtAlbPoolMemberArrayOutput() NsxtAlbPoolMemberArrayOutput
	ToNsxtAlbPoolMemberArrayOutputWithContext(context.Context) NsxtAlbPoolMemberArrayOutput
}

type NsxtAlbPoolMemberArray []NsxtAlbPoolMemberInput

func (NsxtAlbPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbPoolMember)(nil)).Elem()
}

func (i NsxtAlbPoolMemberArray) ToNsxtAlbPoolMemberArrayOutput() NsxtAlbPoolMemberArrayOutput {
	return i.ToNsxtAlbPoolMemberArrayOutputWithContext(context.Background())
}

func (i NsxtAlbPoolMemberArray) ToNsxtAlbPoolMemberArrayOutputWithContext(ctx context.Context) NsxtAlbPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbPoolMemberArrayOutput)
}

type NsxtAlbPoolMemberOutput struct{ *pulumi.OutputState }

func (NsxtAlbPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbPoolMember)(nil)).Elem()
}

func (o NsxtAlbPoolMemberOutput) ToNsxtAlbPoolMemberOutput() NsxtAlbPoolMemberOutput {
	return o
}

func (o NsxtAlbPoolMemberOutput) ToNsxtAlbPoolMemberOutputWithContext(ctx context.Context) NsxtAlbPoolMemberOutput {
	return o
}

// Detailed health message
func (o NsxtAlbPoolMemberOutput) DetailedHealthMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbPoolMember) *string { return v.DetailedHealthMessage }).(pulumi.StringPtrOutput)
}

// Boolean value if ALB Pool should be enabled (default `true`)
func (o NsxtAlbPoolMemberOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbPoolMember) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Health status
func (o NsxtAlbPoolMemberOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbPoolMember) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// IP address of pool member
func (o NsxtAlbPoolMemberOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbPoolMember) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Marked down by provides a set of health monitors that marked the service down
func (o NsxtAlbPoolMemberOutput) MarkedDownBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbPoolMember) []string { return v.MarkedDownBies }).(pulumi.StringArrayOutput)
}

// Member port
func (o NsxtAlbPoolMemberOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtAlbPoolMember) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Ratio of selecting eligible servers in the pool
func (o NsxtAlbPoolMemberOutput) Ratio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtAlbPoolMember) *int { return v.Ratio }).(pulumi.IntPtrOutput)
}

type NsxtAlbPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbPoolMember)(nil)).Elem()
}

func (o NsxtAlbPoolMemberArrayOutput) ToNsxtAlbPoolMemberArrayOutput() NsxtAlbPoolMemberArrayOutput {
	return o
}

func (o NsxtAlbPoolMemberArrayOutput) ToNsxtAlbPoolMemberArrayOutputWithContext(ctx context.Context) NsxtAlbPoolMemberArrayOutput {
	return o
}

func (o NsxtAlbPoolMemberArrayOutput) Index(i pulumi.IntInput) NsxtAlbPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbPoolMember {
		return vs[0].([]NsxtAlbPoolMember)[vs[1].(int)]
	}).(NsxtAlbPoolMemberOutput)
}

type NsxtAlbPoolPersistenceProfile struct {
	// A name for ALB Pool
	Name *string `pulumi:"name"`
	// Type of persistence strategy. One of `CLIENT_IP`, `HTTP_COOKIE`, `CUSTOM_HTTP_HEADER`, `APP_COOKIE`, `TLS`
	Type string `pulumi:"type"`
	// Value of attribute based on persistence type
	Value *string `pulumi:"value"`
}

// NsxtAlbPoolPersistenceProfileInput is an input type that accepts NsxtAlbPoolPersistenceProfileArgs and NsxtAlbPoolPersistenceProfileOutput values.
// You can construct a concrete instance of `NsxtAlbPoolPersistenceProfileInput` via:
//
//	NsxtAlbPoolPersistenceProfileArgs{...}
type NsxtAlbPoolPersistenceProfileInput interface {
	pulumi.Input

	ToNsxtAlbPoolPersistenceProfileOutput() NsxtAlbPoolPersistenceProfileOutput
	ToNsxtAlbPoolPersistenceProfileOutputWithContext(context.Context) NsxtAlbPoolPersistenceProfileOutput
}

type NsxtAlbPoolPersistenceProfileArgs struct {
	// A name for ALB Pool
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of persistence strategy. One of `CLIENT_IP`, `HTTP_COOKIE`, `CUSTOM_HTTP_HEADER`, `APP_COOKIE`, `TLS`
	Type pulumi.StringInput `pulumi:"type"`
	// Value of attribute based on persistence type
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NsxtAlbPoolPersistenceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbPoolPersistenceProfile)(nil)).Elem()
}

func (i NsxtAlbPoolPersistenceProfileArgs) ToNsxtAlbPoolPersistenceProfileOutput() NsxtAlbPoolPersistenceProfileOutput {
	return i.ToNsxtAlbPoolPersistenceProfileOutputWithContext(context.Background())
}

func (i NsxtAlbPoolPersistenceProfileArgs) ToNsxtAlbPoolPersistenceProfileOutputWithContext(ctx context.Context) NsxtAlbPoolPersistenceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbPoolPersistenceProfileOutput)
}

func (i NsxtAlbPoolPersistenceProfileArgs) ToNsxtAlbPoolPersistenceProfilePtrOutput() NsxtAlbPoolPersistenceProfilePtrOutput {
	return i.ToNsxtAlbPoolPersistenceProfilePtrOutputWithContext(context.Background())
}

func (i NsxtAlbPoolPersistenceProfileArgs) ToNsxtAlbPoolPersistenceProfilePtrOutputWithContext(ctx context.Context) NsxtAlbPoolPersistenceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbPoolPersistenceProfileOutput).ToNsxtAlbPoolPersistenceProfilePtrOutputWithContext(ctx)
}

// NsxtAlbPoolPersistenceProfilePtrInput is an input type that accepts NsxtAlbPoolPersistenceProfileArgs, NsxtAlbPoolPersistenceProfilePtr and NsxtAlbPoolPersistenceProfilePtrOutput values.
// You can construct a concrete instance of `NsxtAlbPoolPersistenceProfilePtrInput` via:
//
//	        NsxtAlbPoolPersistenceProfileArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbPoolPersistenceProfilePtrInput interface {
	pulumi.Input

	ToNsxtAlbPoolPersistenceProfilePtrOutput() NsxtAlbPoolPersistenceProfilePtrOutput
	ToNsxtAlbPoolPersistenceProfilePtrOutputWithContext(context.Context) NsxtAlbPoolPersistenceProfilePtrOutput
}

type nsxtAlbPoolPersistenceProfilePtrType NsxtAlbPoolPersistenceProfileArgs

func NsxtAlbPoolPersistenceProfilePtr(v *NsxtAlbPoolPersistenceProfileArgs) NsxtAlbPoolPersistenceProfilePtrInput {
	return (*nsxtAlbPoolPersistenceProfilePtrType)(v)
}

func (*nsxtAlbPoolPersistenceProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbPoolPersistenceProfile)(nil)).Elem()
}

func (i *nsxtAlbPoolPersistenceProfilePtrType) ToNsxtAlbPoolPersistenceProfilePtrOutput() NsxtAlbPoolPersistenceProfilePtrOutput {
	return i.ToNsxtAlbPoolPersistenceProfilePtrOutputWithContext(context.Background())
}

func (i *nsxtAlbPoolPersistenceProfilePtrType) ToNsxtAlbPoolPersistenceProfilePtrOutputWithContext(ctx context.Context) NsxtAlbPoolPersistenceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbPoolPersistenceProfilePtrOutput)
}

type NsxtAlbPoolPersistenceProfileOutput struct{ *pulumi.OutputState }

func (NsxtAlbPoolPersistenceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbPoolPersistenceProfile)(nil)).Elem()
}

func (o NsxtAlbPoolPersistenceProfileOutput) ToNsxtAlbPoolPersistenceProfileOutput() NsxtAlbPoolPersistenceProfileOutput {
	return o
}

func (o NsxtAlbPoolPersistenceProfileOutput) ToNsxtAlbPoolPersistenceProfileOutputWithContext(ctx context.Context) NsxtAlbPoolPersistenceProfileOutput {
	return o
}

func (o NsxtAlbPoolPersistenceProfileOutput) ToNsxtAlbPoolPersistenceProfilePtrOutput() NsxtAlbPoolPersistenceProfilePtrOutput {
	return o.ToNsxtAlbPoolPersistenceProfilePtrOutputWithContext(context.Background())
}

func (o NsxtAlbPoolPersistenceProfileOutput) ToNsxtAlbPoolPersistenceProfilePtrOutputWithContext(ctx context.Context) NsxtAlbPoolPersistenceProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbPoolPersistenceProfile) *NsxtAlbPoolPersistenceProfile {
		return &v
	}).(NsxtAlbPoolPersistenceProfilePtrOutput)
}

// A name for ALB Pool
func (o NsxtAlbPoolPersistenceProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbPoolPersistenceProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of persistence strategy. One of `CLIENT_IP`, `HTTP_COOKIE`, `CUSTOM_HTTP_HEADER`, `APP_COOKIE`, `TLS`
func (o NsxtAlbPoolPersistenceProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbPoolPersistenceProfile) string { return v.Type }).(pulumi.StringOutput)
}

// Value of attribute based on persistence type
func (o NsxtAlbPoolPersistenceProfileOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbPoolPersistenceProfile) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NsxtAlbPoolPersistenceProfilePtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbPoolPersistenceProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbPoolPersistenceProfile)(nil)).Elem()
}

func (o NsxtAlbPoolPersistenceProfilePtrOutput) ToNsxtAlbPoolPersistenceProfilePtrOutput() NsxtAlbPoolPersistenceProfilePtrOutput {
	return o
}

func (o NsxtAlbPoolPersistenceProfilePtrOutput) ToNsxtAlbPoolPersistenceProfilePtrOutputWithContext(ctx context.Context) NsxtAlbPoolPersistenceProfilePtrOutput {
	return o
}

func (o NsxtAlbPoolPersistenceProfilePtrOutput) Elem() NsxtAlbPoolPersistenceProfileOutput {
	return o.ApplyT(func(v *NsxtAlbPoolPersistenceProfile) NsxtAlbPoolPersistenceProfile {
		if v != nil {
			return *v
		}
		var ret NsxtAlbPoolPersistenceProfile
		return ret
	}).(NsxtAlbPoolPersistenceProfileOutput)
}

// A name for ALB Pool
func (o NsxtAlbPoolPersistenceProfilePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbPoolPersistenceProfile) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of persistence strategy. One of `CLIENT_IP`, `HTTP_COOKIE`, `CUSTOM_HTTP_HEADER`, `APP_COOKIE`, `TLS`
func (o NsxtAlbPoolPersistenceProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbPoolPersistenceProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Value of attribute based on persistence type
func (o NsxtAlbPoolPersistenceProfilePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbPoolPersistenceProfile) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRule struct {
	// Actions to perform with the rule that matches
	Actions NsxtAlbVirtualServiceHttpReqRulesRuleActions `pulumi:"actions"`
	// Defines if the rule is active or not
	Active *bool `pulumi:"active"`
	// Defines whether to enable logging with headers on rule match or not
	Logging *bool `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriteria NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria `pulumi:"matchCriteria"`
	// Name of the rule
	Name string `pulumi:"name"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleArgs and NsxtAlbVirtualServiceHttpReqRulesRuleOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleOutput() NsxtAlbVirtualServiceHttpReqRulesRuleOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleArgs struct {
	// Actions to perform with the rule that matches
	Actions NsxtAlbVirtualServiceHttpReqRulesRuleActionsInput `pulumi:"actions"`
	// Defines if the rule is active or not
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// Defines whether to enable logging with headers on rule match or not
	Logging pulumi.BoolPtrInput `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriteria NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaInput `pulumi:"matchCriteria"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRule)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleOutput() NsxtAlbVirtualServiceHttpReqRulesRuleOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleOutput)
}

// NsxtAlbVirtualServiceHttpReqRulesRuleArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleArray and NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleArray{ NsxtAlbVirtualServiceHttpReqRulesRuleArgs{...} }
type NsxtAlbVirtualServiceHttpReqRulesRuleArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput() NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleArray []NsxtAlbVirtualServiceHttpReqRulesRuleInput

func (NsxtAlbVirtualServiceHttpReqRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpReqRulesRule)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleArray) ToNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput() NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleArray) ToNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRule)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleOutput() NsxtAlbVirtualServiceHttpReqRulesRuleOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleOutput {
	return o
}

// Actions to perform with the rule that matches
func (o NsxtAlbVirtualServiceHttpReqRulesRuleOutput) Actions() NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRule) NsxtAlbVirtualServiceHttpReqRulesRuleActions {
		return v.Actions
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput)
}

// Defines if the rule is active or not
func (o NsxtAlbVirtualServiceHttpReqRulesRuleOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRule) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Defines whether to enable logging with headers on rule match or not
func (o NsxtAlbVirtualServiceHttpReqRulesRuleOutput) Logging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRule) *bool { return v.Logging }).(pulumi.BoolPtrOutput)
}

// Rule matching Criteria
func (o NsxtAlbVirtualServiceHttpReqRulesRuleOutput) MatchCriteria() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRule) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria {
		return v.MatchCriteria
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput)
}

// Name of the rule
func (o NsxtAlbVirtualServiceHttpReqRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpReqRulesRule)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput() NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpReqRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpReqRulesRule {
		return vs[0].([]NsxtAlbVirtualServiceHttpReqRulesRule)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActions struct {
	// A set of header modification rules
	ModifyHeaders []NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader `pulumi:"modifyHeaders"`
	// Redirect request
	Redirect *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect `pulumi:"redirect"`
	// URL rewrite rules
	RewriteUrl *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl `pulumi:"rewriteUrl"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleActionsInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleActionsArgs and NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleActionsInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleActionsArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleActionsInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsArgs struct {
	// A set of header modification rules
	ModifyHeaders NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayInput `pulumi:"modifyHeaders"`
	// Redirect request
	Redirect NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrInput `pulumi:"redirect"`
	// URL rewrite rules
	RewriteUrl NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrInput `pulumi:"rewriteUrl"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActions)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActions)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput {
	return o
}

// A set of header modification rules
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput) ModifyHeaders() NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActions) []NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader {
		return v.ModifyHeaders
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput)
}

// Redirect request
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput) Redirect() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActions) *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect {
		return v.Redirect
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput)
}

// URL rewrite rules
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput) RewriteUrl() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActions) *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl {
		return v.RewriteUrl
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader struct {
	// One of the following HTTP header actions. Options - ADD, REMOVE, REPLACE
	Action string `pulumi:"action"`
	// HTTP header name
	Name string `pulumi:"name"`
	// HTTP header value
	Value *string `pulumi:"value"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArgs and NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArgs struct {
	// One of the following HTTP header actions. Options - ADD, REMOVE, REPLACE
	Action pulumi.StringInput `pulumi:"action"`
	// HTTP header name
	Name pulumi.StringInput `pulumi:"name"`
	// HTTP header value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput)
}

// NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArray and NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArray{ NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArgs{...} }
type NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArray []NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderInput

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArray) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArray) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput {
	return o
}

// One of the following HTTP header actions. Options - ADD, REMOVE, REPLACE
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader) string { return v.Action }).(pulumi.StringOutput)
}

// HTTP header name
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader) string { return v.Name }).(pulumi.StringOutput)
}

// HTTP header value
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader {
		return vs[0].([]NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeader)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect struct {
	// Host to which redirect the request
	Host *string `pulumi:"host"`
	// Should the query part be preserved
	KeepQuery *bool `pulumi:"keepQuery"`
	// Path to which redirect the request
	Path *string `pulumi:"path"`
	// Port to which redirect the request. Default is 80 for HTTP and 443 for HTTPS protocol
	Port *string `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol string `pulumi:"protocol"`
	// One of the redirect status codes - 301, 302, 307
	StatusCode int `pulumi:"statusCode"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs and NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs struct {
	// Host to which redirect the request
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Should the query part be preserved
	KeepQuery pulumi.BoolPtrInput `pulumi:"keepQuery"`
	// Path to which redirect the request
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Port to which redirect the request. Default is 80 for HTTP and 443 for HTTPS protocol
	Port pulumi.StringPtrInput `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// One of the redirect status codes - 301, 302, 307
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput)
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput).ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs, NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtr and NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput
}

type nsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrType NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs

func NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtr(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrInput {
	return (*nsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect {
		return &v
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput)
}

// Host to which redirect the request
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Should the query part be preserved
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) KeepQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *bool { return v.KeepQuery }).(pulumi.BoolPtrOutput)
}

// Path to which redirect the request
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Port to which redirect the request. Default is 80 for HTTP and 443 for HTTPS protocol
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// HTTP or HTTPS protocol
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) string { return v.Protocol }).(pulumi.StringOutput)
}

// One of the redirect status codes - 301, 302, 307
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) int { return v.StatusCode }).(pulumi.IntOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput) Elem() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect
		return ret
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput)
}

// Host to which redirect the request
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Should the query part be preserved
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput) KeepQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *bool {
		if v == nil {
			return nil
		}
		return v.KeepQuery
	}).(pulumi.BoolPtrOutput)
}

// Path to which redirect the request
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Port to which redirect the request. Default is 80 for HTTP and 443 for HTTPS protocol
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// HTTP or HTTPS protocol
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// One of the redirect status codes - 301, 302, 307
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirect) *int {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.IntPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl struct {
	// Path to use for the rewritten URL
	ExistingPath string `pulumi:"existingPath"`
	// Host to use for the rewritten URL
	HostHeader string `pulumi:"hostHeader"`
	// Whether or not to keep the existing query string when rewriting the URL
	KeepQuery *bool `pulumi:"keepQuery"`
	// Query string to use or append to the existing query string in the rewritten URL
	Query *string `pulumi:"query"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs and NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs struct {
	// Path to use for the rewritten URL
	ExistingPath pulumi.StringInput `pulumi:"existingPath"`
	// Host to use for the rewritten URL
	HostHeader pulumi.StringInput `pulumi:"hostHeader"`
	// Whether or not to keep the existing query string when rewriting the URL
	KeepQuery pulumi.BoolPtrInput `pulumi:"keepQuery"`
	// Query string to use or append to the existing query string in the rewritten URL
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput)
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput).ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs, NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtr and NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput
}

type nsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrType NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs

func NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtr(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrInput {
	return (*nsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl) *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl {
		return &v
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput)
}

// Path to use for the rewritten URL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput) ExistingPath() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl) string { return v.ExistingPath }).(pulumi.StringOutput)
}

// Host to use for the rewritten URL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput) HostHeader() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl) string { return v.HostHeader }).(pulumi.StringOutput)
}

// Whether or not to keep the existing query string when rewriting the URL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput) KeepQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl) *bool { return v.KeepQuery }).(pulumi.BoolPtrOutput)
}

// Query string to use or append to the existing query string in the rewritten URL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput) Elem() NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl) NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl
		return ret
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput)
}

// Path to use for the rewritten URL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput) ExistingPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl) *string {
		if v == nil {
			return nil
		}
		return &v.ExistingPath
	}).(pulumi.StringPtrOutput)
}

// Host to use for the rewritten URL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl) *string {
		if v == nil {
			return nil
		}
		return &v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// Whether or not to keep the existing query string when rewriting the URL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput) KeepQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl) *bool {
		if v == nil {
			return nil
		}
		return v.KeepQuery
	}).(pulumi.BoolPtrOutput)
}

// Query string to use or append to the existing query string in the rewritten URL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrl) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria struct {
	// Client IP Address criteria
	ClientIpAddress *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress `pulumi:"clientIpAddress"`
	// Criteria for matching cookie
	Cookie *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie `pulumi:"cookie"`
	// HTTP methods that should be matched
	HttpMethods *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods `pulumi:"httpMethods"`
	// Request path criteria
	Path *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath `pulumi:"path"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType *string `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries []string `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders []NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader `pulumi:"requestHeaders"`
	// Service Port criteria
	ServicePorts *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts `pulumi:"servicePorts"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs struct {
	// Client IP Address criteria
	ClientIpAddress NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrInput `pulumi:"clientIpAddress"`
	// Criteria for matching cookie
	Cookie NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrInput `pulumi:"cookie"`
	// HTTP methods that should be matched
	HttpMethods NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrInput `pulumi:"httpMethods"`
	// Request path criteria
	Path NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrInput `pulumi:"path"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries pulumi.StringArrayInput `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// Service Port criteria
	ServicePorts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrInput `pulumi:"servicePorts"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput {
	return o
}

// Client IP Address criteria
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ClientIpAddress() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress {
		return v.ClientIpAddress
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput)
}

// Criteria for matching cookie
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) Cookie() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie {
		return v.Cookie
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput)
}

// HTTP methods that should be matched
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) HttpMethods() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods {
		return v.HttpMethods
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput)
}

// Request path criteria
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) Path() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath {
		return v.Path
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput)
}

// Protocol to match - 'HTTP' or 'HTTPS'
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

// HTTP request query strings to match
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) []string { return v.Queries }).(pulumi.StringArrayOutput)
}

// A set of rules for matching request headers
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) RequestHeaders() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) []NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader {
		return v.RequestHeaders
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

// Service Port criteria
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ServicePorts() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts {
		return v.ServicePorts
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
	Criteria string `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses []string `pulumi:"ipAddresses"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput)
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput).ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs, NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtr and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput
}

type nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrType NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs

func NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtr(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrInput {
	return (*nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress) *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress {
		return &v
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of IP addresses
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress) []string {
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput) Elem() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress
		return ret
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// A set of IP addresses
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie struct {
	// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value string `pulumi:"value"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs struct {
	// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value pulumi.StringInput `pulumi:"value"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput)
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput).ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs, NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtr and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput
}

type nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrType NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs

func NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtr(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrInput {
	return (*nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie {
		return &v
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput)
}

// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP cookie whose value is to be matched
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP cookie
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) string { return v.Value }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput) Elem() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie
		return ret
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput)
}

// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// Name of the HTTP cookie whose value is to be matched
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// String values to match for an HTTP cookie
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria string `pulumi:"criteria"`
	// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
	Methods []string `pulumi:"methods"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
	Methods pulumi.StringArrayInput `pulumi:"methods"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput)
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput).ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs, NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtr and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput
}

type nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrType NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs

func NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtr(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrInput {
	return (*nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods) *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods {
		return &v
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods) string { return v.Criteria }).(pulumi.StringOutput)
}

// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput) Elem() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods
		return ret
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethods) []string {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath struct {
	// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
	Criteria string `pulumi:"criteria"`
	// String values to match the path
	Paths []string `pulumi:"paths"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs struct {
	// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// String values to match the path
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput)
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput).ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs, NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtr and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput
}

type nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrType NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs

func NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtr(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrInput {
	return (*nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath) *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath {
		return &v
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput)
}

// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath) string { return v.Criteria }).(pulumi.StringOutput)
}

// String values to match the path
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput) Elem() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath
		return ret
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput)
}

// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// String values to match the path
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP header
	Values []string `pulumi:"values"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP header
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput)
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray{ NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs{...} }
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray []NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderInput

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP header whose value is to be matched
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP header
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader {
		return vs[0].([]NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria string `pulumi:"criteria"`
	// A set of TCP ports. Allowed values are 1-65535
	Ports []int `pulumi:"ports"`
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsInput` via:
//
//	NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs{...}
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of TCP ports. Allowed values are 1-65535
	Ports pulumi.IntArrayInput `pulumi:"ports"`
}

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput)
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput).ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs, NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtr and NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput
	ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput
}

type nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrType NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs

func NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtr(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrInput {
	return (*nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrType) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts) *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts {
		return &v
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of TCP ports. Allowed values are 1-65535
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

type NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput) ToNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput) Elem() NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts) NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts
		return ret
	}).(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// A set of TCP ports. Allowed values are 1-65535
func (o NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePorts) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRule struct {
	// Actions to perform with the rule that matches
	Actions NsxtAlbVirtualServiceHttpRespRulesRuleActions `pulumi:"actions"`
	// Defines if the rule is active or not
	Active *bool `pulumi:"active"`
	// Defines whether to enable logging with headers on rule match or not
	Logging *bool `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriteria NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria `pulumi:"matchCriteria"`
	// Name of the rule
	Name string `pulumi:"name"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleArgs and NsxtAlbVirtualServiceHttpRespRulesRuleOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleOutput() NsxtAlbVirtualServiceHttpRespRulesRuleOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleArgs struct {
	// Actions to perform with the rule that matches
	Actions NsxtAlbVirtualServiceHttpRespRulesRuleActionsInput `pulumi:"actions"`
	// Defines if the rule is active or not
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// Defines whether to enable logging with headers on rule match or not
	Logging pulumi.BoolPtrInput `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriteria NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaInput `pulumi:"matchCriteria"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRule)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleOutput() NsxtAlbVirtualServiceHttpRespRulesRuleOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleOutput)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleArray and NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleArray{ NsxtAlbVirtualServiceHttpRespRulesRuleArgs{...} }
type NsxtAlbVirtualServiceHttpRespRulesRuleArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleArray []NsxtAlbVirtualServiceHttpRespRulesRuleInput

func (NsxtAlbVirtualServiceHttpRespRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpRespRulesRule)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleArray) ToNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleArray) ToNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRule)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleOutput() NsxtAlbVirtualServiceHttpRespRulesRuleOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleOutput {
	return o
}

// Actions to perform with the rule that matches
func (o NsxtAlbVirtualServiceHttpRespRulesRuleOutput) Actions() NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRule) NsxtAlbVirtualServiceHttpRespRulesRuleActions {
		return v.Actions
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput)
}

// Defines if the rule is active or not
func (o NsxtAlbVirtualServiceHttpRespRulesRuleOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRule) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Defines whether to enable logging with headers on rule match or not
func (o NsxtAlbVirtualServiceHttpRespRulesRuleOutput) Logging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRule) *bool { return v.Logging }).(pulumi.BoolPtrOutput)
}

// Rule matching Criteria
func (o NsxtAlbVirtualServiceHttpRespRulesRuleOutput) MatchCriteria() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRule) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria {
		return v.MatchCriteria
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput)
}

// Name of the rule
func (o NsxtAlbVirtualServiceHttpRespRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpRespRulesRule)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpRespRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpRespRulesRule {
		return vs[0].([]NsxtAlbVirtualServiceHttpRespRulesRule)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActions struct {
	// Modify header
	ModifyHeaders []NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader `pulumi:"modifyHeaders"`
	// Rewrite location header
	RewriteLocationHeader *NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader `pulumi:"rewriteLocationHeader"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleActionsInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleActionsArgs and NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleActionsInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleActionsArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleActionsInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsArgs struct {
	// Modify header
	ModifyHeaders NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayInput `pulumi:"modifyHeaders"`
	// Rewrite location header
	RewriteLocationHeader NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrInput `pulumi:"rewriteLocationHeader"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActions)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleActionsArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleActionsArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActions)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput {
	return o
}

// Modify header
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput) ModifyHeaders() NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleActions) []NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader {
		return v.ModifyHeaders
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput)
}

// Rewrite location header
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput) RewriteLocationHeader() NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleActions) *NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader {
		return v.RewriteLocationHeader
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader struct {
	// One of the following HTTP header actions. Options - ADD, REMOVE, REPLACE
	Action string `pulumi:"action"`
	// HTTP header name
	Name string `pulumi:"name"`
	// HTTP header value
	Value *string `pulumi:"value"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArgs and NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArgs struct {
	// One of the following HTTP header actions. Options - ADD, REMOVE, REPLACE
	Action pulumi.StringInput `pulumi:"action"`
	// HTTP header name
	Name pulumi.StringInput `pulumi:"name"`
	// HTTP header value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArray and NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArray{ NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArgs{...} }
type NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArray []NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderInput

func (NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArray) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArray) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput {
	return o
}

// One of the following HTTP header actions. Options - ADD, REMOVE, REPLACE
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader) string { return v.Action }).(pulumi.StringOutput)
}

// HTTP header name
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader) string { return v.Name }).(pulumi.StringOutput)
}

// HTTP header value
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader {
		return vs[0].([]NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeader)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader struct {
	// Host to which redirect the request
	Host *string `pulumi:"host"`
	// Should the query part be preserved
	KeepQuery *bool `pulumi:"keepQuery"`
	// Path to which redirect the request
	Path *string `pulumi:"path"`
	// Port to which redirect the request
	Port string `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol string `pulumi:"protocol"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs and NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs struct {
	// Host to which redirect the request
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Should the query part be preserved
	KeepQuery pulumi.BoolPtrInput `pulumi:"keepQuery"`
	// Path to which redirect the request
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Port to which redirect the request
	Port pulumi.StringInput `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput)
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput).ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs, NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtr and NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput
}

type nsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrType NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs

func NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtr(v *NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs) NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrInput {
	return (*nsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) *NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader {
		return &v
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput)
}

// Host to which redirect the request
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Should the query part be preserved
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput) KeepQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) *bool { return v.KeepQuery }).(pulumi.BoolPtrOutput)
}

// Path to which redirect the request
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Port to which redirect the request
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) string { return v.Port }).(pulumi.StringOutput)
}

// HTTP or HTTPS protocol
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) string { return v.Protocol }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput) Elem() NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader
		return ret
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput)
}

// Host to which redirect the request
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Should the query part be preserved
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput) KeepQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) *bool {
		if v == nil {
			return nil
		}
		return v.KeepQuery
	}).(pulumi.BoolPtrOutput)
}

// Path to which redirect the request
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Port to which redirect the request
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) *string {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.StringPtrOutput)
}

// HTTP or HTTPS protocol
func (o NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeader) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria struct {
	// Client IP Address criteria
	ClientIpAddress *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress `pulumi:"clientIpAddress"`
	// Criteria for matching cookie
	Cookie *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie `pulumi:"cookie"`
	// HTTP methods that should be matched
	HttpMethods *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods `pulumi:"httpMethods"`
	// A matching criteria for Location header
	LocationHeader *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader `pulumi:"locationHeader"`
	// Request path criteria
	Path *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath `pulumi:"path"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType *string `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries []string `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders []NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader `pulumi:"requestHeaders"`
	// A set of criteria to match response headers
	ResponseHeaders []NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader `pulumi:"responseHeaders"`
	// Service Port criteria
	ServicePorts *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts `pulumi:"servicePorts"`
	// HTTP Status code to match
	StatusCode *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode `pulumi:"statusCode"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs struct {
	// Client IP Address criteria
	ClientIpAddress NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrInput `pulumi:"clientIpAddress"`
	// Criteria for matching cookie
	Cookie NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrInput `pulumi:"cookie"`
	// HTTP methods that should be matched
	HttpMethods NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrInput `pulumi:"httpMethods"`
	// A matching criteria for Location header
	LocationHeader NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrInput `pulumi:"locationHeader"`
	// Request path criteria
	Path NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrInput `pulumi:"path"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries pulumi.StringArrayInput `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// A set of criteria to match response headers
	ResponseHeaders NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayInput `pulumi:"responseHeaders"`
	// Service Port criteria
	ServicePorts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrInput `pulumi:"servicePorts"`
	// HTTP Status code to match
	StatusCode NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrInput `pulumi:"statusCode"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput {
	return o
}

// Client IP Address criteria
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ClientIpAddress() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress {
		return v.ClientIpAddress
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput)
}

// Criteria for matching cookie
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) Cookie() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie {
		return v.Cookie
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput)
}

// HTTP methods that should be matched
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) HttpMethods() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods {
		return v.HttpMethods
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput)
}

// A matching criteria for Location header
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) LocationHeader() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader {
		return v.LocationHeader
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput)
}

// Request path criteria
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) Path() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath {
		return v.Path
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput)
}

// Protocol to match - 'HTTP' or 'HTTPS'
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

// HTTP request query strings to match
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []string { return v.Queries }).(pulumi.StringArrayOutput)
}

// A set of rules for matching request headers
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) RequestHeaders() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader {
		return v.RequestHeaders
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

// A set of criteria to match response headers
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ResponseHeaders() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader {
		return v.ResponseHeaders
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput)
}

// Service Port criteria
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ServicePorts() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts {
		return v.ServicePorts
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput)
}

// HTTP Status code to match
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) StatusCode() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode {
		return v.StatusCode
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
	Criteria string `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses []string `pulumi:"ipAddresses"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput)
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput).ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs, NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtr and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput
}

type nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrType NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs

func NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtr(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrInput {
	return (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress {
		return &v
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of IP addresses
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress) []string {
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput) Elem() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress
		return ret
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// A set of IP addresses
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie struct {
	// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value string `pulumi:"value"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs struct {
	// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value pulumi.StringInput `pulumi:"value"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput)
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput).ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs, NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtr and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput
}

type nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrType NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs

func NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtr(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrInput {
	return (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie {
		return &v
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput)
}

// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP cookie whose value is to be matched
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP cookie
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) string { return v.Value }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput) Elem() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie
		return ret
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput)
}

// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// Name of the HTTP cookie whose value is to be matched
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// String values to match for an HTTP cookie
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria string `pulumi:"criteria"`
	// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
	Methods []string `pulumi:"methods"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
	Methods pulumi.StringArrayInput `pulumi:"methods"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput)
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput).ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs, NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtr and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput
}

type nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrType NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs

func NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtr(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrInput {
	return (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods {
		return &v
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods) string { return v.Criteria }).(pulumi.StringOutput)
}

// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput) Elem() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods
		return ret
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethods) []string {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader struct {
	// Criteria to use for matching location header. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
	Criteria string `pulumi:"criteria"`
	// A set of values to match for criteria
	Values []string `pulumi:"values"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs struct {
	// Criteria to use for matching location header. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of values to match for criteria
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput)
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput).ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs, NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtr and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput
}

type nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrType NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs

func NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtr(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrInput {
	return (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader {
		return &v
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput)
}

// Criteria to use for matching location header. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of values to match for criteria
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput) Elem() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader
		return ret
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput)
}

// Criteria to use for matching location header. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// A set of values to match for criteria
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath struct {
	// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
	Criteria string `pulumi:"criteria"`
	// String values to match the path
	Paths []string `pulumi:"paths"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs struct {
	// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// String values to match the path
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput)
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput).ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs, NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtr and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput
}

type nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrType NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs

func NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtr(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrInput {
	return (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath {
		return &v
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput)
}

// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath) string { return v.Criteria }).(pulumi.StringOutput)
}

// String values to match the path
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput) Elem() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath
		return ret
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput)
}

// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// String values to match the path
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP header
	Values []string `pulumi:"values"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP header
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray{ NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs{...} }
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray []NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderInput

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP header whose value is to be matched
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP header
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader {
		return vs[0].([]NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name *string `pulumi:"name"`
	// A set of values to match for an HTTP header
	Values []string `pulumi:"values"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A set of values to match for an HTTP header
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray{ NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs{...} }
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray []NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderInput

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput {
	return o
}

// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP header whose value is to be matched
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A set of values to match for an HTTP header
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader {
		return vs[0].([]NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria string `pulumi:"criteria"`
	// A set of TCP ports. Allowed values are 1-65535
	Ports []int `pulumi:"ports"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of TCP ports. Allowed values are 1-65535
	Ports pulumi.IntArrayInput `pulumi:"ports"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput)
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput).ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs, NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtr and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput
}

type nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrType NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs

func NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtr(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrInput {
	return (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts {
		return &v
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of TCP ports. Allowed values are 1-65535
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput) Elem() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts
		return ret
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// A set of TCP ports. Allowed values are 1-65535
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePorts) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
	Criteria string `pulumi:"criteria"`
	// Enter a http status code or range
	HttpStatusCode string `pulumi:"httpStatusCode"`
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeInput` via:
//
//	NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs{...}
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Enter a http status code or range
	HttpStatusCode pulumi.StringInput `pulumi:"httpStatusCode"`
}

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput)
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput).ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrInput is an input type that accepts NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs, NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtr and NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput
	ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput
}

type nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrType NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs

func NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtr(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrInput {
	return (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrType) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode) *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode {
		return &v
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode) string { return v.Criteria }).(pulumi.StringOutput)
}

// Enter a http status code or range
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) HttpStatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode) string { return v.HttpStatusCode }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput) ToNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput) Elem() NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode) NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode
		return ret
	}).(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// Enter a http status code or range
func (o NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput) HttpStatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode) *string {
		if v == nil {
			return nil
		}
		return &v.HttpStatusCode
	}).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRule struct {
	// Actions to perform with the rule that matches
	Actions NsxtAlbVirtualServiceHttpSecRulesRuleActions `pulumi:"actions"`
	// Defines is the rule is active or not
	Active *bool `pulumi:"active"`
	// Defines whether to enable logging with headers on rule match or not
	Logging *bool `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriteria NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria `pulumi:"matchCriteria"`
	// Name of the rule
	Name string `pulumi:"name"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleArgs and NsxtAlbVirtualServiceHttpSecRulesRuleOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleOutput() NsxtAlbVirtualServiceHttpSecRulesRuleOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleArgs struct {
	// Actions to perform with the rule that matches
	Actions NsxtAlbVirtualServiceHttpSecRulesRuleActionsInput `pulumi:"actions"`
	// Defines is the rule is active or not
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// Defines whether to enable logging with headers on rule match or not
	Logging pulumi.BoolPtrInput `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriteria NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaInput `pulumi:"matchCriteria"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRule)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleOutput() NsxtAlbVirtualServiceHttpSecRulesRuleOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleOutput)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleArray and NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleArray{ NsxtAlbVirtualServiceHttpSecRulesRuleArgs{...} }
type NsxtAlbVirtualServiceHttpSecRulesRuleArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleArray []NsxtAlbVirtualServiceHttpSecRulesRuleInput

func (NsxtAlbVirtualServiceHttpSecRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpSecRulesRule)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleArray) ToNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleArray) ToNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRule)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleOutput() NsxtAlbVirtualServiceHttpSecRulesRuleOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleOutput {
	return o
}

// Actions to perform with the rule that matches
func (o NsxtAlbVirtualServiceHttpSecRulesRuleOutput) Actions() NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRule) NsxtAlbVirtualServiceHttpSecRulesRuleActions {
		return v.Actions
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput)
}

// Defines is the rule is active or not
func (o NsxtAlbVirtualServiceHttpSecRulesRuleOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRule) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Defines whether to enable logging with headers on rule match or not
func (o NsxtAlbVirtualServiceHttpSecRulesRuleOutput) Logging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRule) *bool { return v.Logging }).(pulumi.BoolPtrOutput)
}

// Rule matching Criteria
func (o NsxtAlbVirtualServiceHttpSecRulesRuleOutput) MatchCriteria() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRule) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria {
		return v.MatchCriteria
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput)
}

// Name of the rule
func (o NsxtAlbVirtualServiceHttpSecRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpSecRulesRule)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpSecRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpSecRulesRule {
		return vs[0].([]NsxtAlbVirtualServiceHttpSecRulesRule)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActions struct {
	// ALLOW or CLOSE connections
	Connections *string `pulumi:"connections"`
	// Apply actions based on rate limits
	RateLimit *NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit `pulumi:"rateLimit"`
	// Port number that should be redirected to HTTPS
	RedirectToHttps *string `pulumi:"redirectToHttps"`
	// Send custom response
	SendResponse *NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse `pulumi:"sendResponse"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleActionsInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleActionsArgs and NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleActionsInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleActionsArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleActionsInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsArgs struct {
	// ALLOW or CLOSE connections
	Connections pulumi.StringPtrInput `pulumi:"connections"`
	// Apply actions based on rate limits
	RateLimit NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrInput `pulumi:"rateLimit"`
	// Port number that should be redirected to HTTPS
	RedirectToHttps pulumi.StringPtrInput `pulumi:"redirectToHttps"`
	// Send custom response
	SendResponse NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrInput `pulumi:"sendResponse"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActions)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActions)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput {
	return o
}

// ALLOW or CLOSE connections
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput) Connections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActions) *string { return v.Connections }).(pulumi.StringPtrOutput)
}

// Apply actions based on rate limits
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput) RateLimit() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActions) *NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit {
		return v.RateLimit
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput)
}

// Port number that should be redirected to HTTPS
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput) RedirectToHttps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActions) *string { return v.RedirectToHttps }).(pulumi.StringPtrOutput)
}

// Send custom response
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput) SendResponse() NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActions) *NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse {
		return v.SendResponse
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit struct {
	// Set to true if the connection should be closed
	ActionCloseConnection *bool `pulumi:"actionCloseConnection"`
	// Send custom response
	ActionLocalResponses []NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse `pulumi:"actionLocalResponses"`
	// Redirect based on rate limits
	ActionRedirects []NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect `pulumi:"actionRedirects"`
	// Maximum number of connections, requests or packets permitted each period. The count must be between 1 and 1000000000
	Count string `pulumi:"count"`
	// Time value in seconds to enforce rate count. The period must be between 1 and 1000000000
	Period string `pulumi:"period"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs and NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs struct {
	// Set to true if the connection should be closed
	ActionCloseConnection pulumi.BoolPtrInput `pulumi:"actionCloseConnection"`
	// Send custom response
	ActionLocalResponses NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayInput `pulumi:"actionLocalResponses"`
	// Redirect based on rate limits
	ActionRedirects NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayInput `pulumi:"actionRedirects"`
	// Maximum number of connections, requests or packets permitted each period. The count must be between 1 and 1000000000
	Count pulumi.StringInput `pulumi:"count"`
	// Time value in seconds to enforce rate count. The period must be between 1 and 1000000000
	Period pulumi.StringInput `pulumi:"period"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput)
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput).ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs, NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtr and NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput
}

type nsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrType NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs

func NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtr(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrInput {
	return (*nsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) *NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit {
		return &v
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput)
}

// Set to true if the connection should be closed
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput) ActionCloseConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) *bool { return v.ActionCloseConnection }).(pulumi.BoolPtrOutput)
}

// Send custom response
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput) ActionLocalResponses() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) []NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse {
		return v.ActionLocalResponses
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput)
}

// Redirect based on rate limits
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput) ActionRedirects() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) []NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect {
		return v.ActionRedirects
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput)
}

// Maximum number of connections, requests or packets permitted each period. The count must be between 1 and 1000000000
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput) Count() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) string { return v.Count }).(pulumi.StringOutput)
}

// Time value in seconds to enforce rate count. The period must be between 1 and 1000000000
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) string { return v.Period }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput) Elem() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit
		return ret
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput)
}

// Set to true if the connection should be closed
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput) ActionCloseConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) *bool {
		if v == nil {
			return nil
		}
		return v.ActionCloseConnection
	}).(pulumi.BoolPtrOutput)
}

// Send custom response
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput) ActionLocalResponses() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) []NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse {
		if v == nil {
			return nil
		}
		return v.ActionLocalResponses
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput)
}

// Redirect based on rate limits
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput) ActionRedirects() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) []NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect {
		if v == nil {
			return nil
		}
		return v.ActionRedirects
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput)
}

// Maximum number of connections, requests or packets permitted each period. The count must be between 1 and 1000000000
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) *string {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.StringPtrOutput)
}

// Time value in seconds to enforce rate count. The period must be between 1 and 1000000000
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimit) *string {
		if v == nil {
			return nil
		}
		return &v.Period
	}).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse struct {
	// Base64 encoded content
	Content *string `pulumi:"content"`
	// MIME type for the content
	ContentType *string `pulumi:"contentType"`
	// HTTP Status code to send
	StatusCode string `pulumi:"statusCode"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArgs and NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArgs struct {
	// Base64 encoded content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// MIME type for the content
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// HTTP Status code to send
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArray and NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArray{ NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArgs{...} }
type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArray []NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseInput

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArray) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArray) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput {
	return o
}

// Base64 encoded content
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse) *string {
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// MIME type for the content
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse) *string {
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

// HTTP Status code to send
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse) string {
		return v.StatusCode
	}).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse {
		return vs[0].([]NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponse)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect struct {
	// Host to which redirect the request
	Host *string `pulumi:"host"`
	// Should the query part be preserved
	KeepQuery *bool `pulumi:"keepQuery"`
	// Path to which redirect the request
	Path *string `pulumi:"path"`
	// Port to which redirect the request
	Port string `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol string `pulumi:"protocol"`
	// One of the redirect status codes - 301, 302, 307
	StatusCode int `pulumi:"statusCode"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArgs and NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArgs struct {
	// Host to which redirect the request
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Should the query part be preserved
	KeepQuery pulumi.BoolPtrInput `pulumi:"keepQuery"`
	// Path to which redirect the request
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Port to which redirect the request
	Port pulumi.StringInput `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// One of the redirect status codes - 301, 302, 307
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArray and NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArray{ NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArgs{...} }
type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArray []NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectInput

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArray) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArray) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput {
	return o
}

// Host to which redirect the request
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Should the query part be preserved
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput) KeepQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect) *bool { return v.KeepQuery }).(pulumi.BoolPtrOutput)
}

// Path to which redirect the request
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Port to which redirect the request
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect) string { return v.Port }).(pulumi.StringOutput)
}

// HTTP or HTTPS protocol
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect) string { return v.Protocol }).(pulumi.StringOutput)
}

// One of the redirect status codes - 301, 302, 307
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect) int { return v.StatusCode }).(pulumi.IntOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect {
		return vs[0].([]NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirect)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse struct {
	// Base64 encoded content
	Content *string `pulumi:"content"`
	// MIME type for the content
	ContentType *string `pulumi:"contentType"`
	// HTTP Status code to send
	StatusCode string `pulumi:"statusCode"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs and NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs struct {
	// Base64 encoded content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// MIME type for the content
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// HTTP Status code to send
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput)
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput).ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs, NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtr and NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput
}

type nsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrType NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs

func NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtr(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs) NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrInput {
	return (*nsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse) *NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse {
		return &v
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput)
}

// Base64 encoded content
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// MIME type for the content
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// HTTP Status code to send
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse) string { return v.StatusCode }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput) Elem() NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse) NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse
		return ret
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput)
}

// Base64 encoded content
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// MIME type for the content
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

// HTTP Status code to send
func (o NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria struct {
	// Client IP Address criteria
	ClientIpAddress *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress `pulumi:"clientIpAddress"`
	// Criteria for matching cookie
	Cookie *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie `pulumi:"cookie"`
	// HTTP methods that should be matched
	HttpMethods *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods `pulumi:"httpMethods"`
	// Request path criteria
	Path *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath `pulumi:"path"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType *string `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries []string `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders []NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader `pulumi:"requestHeaders"`
	// Service Port criteria
	ServicePorts *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts `pulumi:"servicePorts"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs struct {
	// Client IP Address criteria
	ClientIpAddress NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrInput `pulumi:"clientIpAddress"`
	// Criteria for matching cookie
	Cookie NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrInput `pulumi:"cookie"`
	// HTTP methods that should be matched
	HttpMethods NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrInput `pulumi:"httpMethods"`
	// Request path criteria
	Path NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrInput `pulumi:"path"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries pulumi.StringArrayInput `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// Service Port criteria
	ServicePorts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrInput `pulumi:"servicePorts"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput {
	return o
}

// Client IP Address criteria
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ClientIpAddress() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress {
		return v.ClientIpAddress
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput)
}

// Criteria for matching cookie
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) Cookie() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie {
		return v.Cookie
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput)
}

// HTTP methods that should be matched
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) HttpMethods() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods {
		return v.HttpMethods
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput)
}

// Request path criteria
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) Path() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath {
		return v.Path
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput)
}

// Protocol to match - 'HTTP' or 'HTTPS'
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

// HTTP request query strings to match
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) []string { return v.Queries }).(pulumi.StringArrayOutput)
}

// A set of rules for matching request headers
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) RequestHeaders() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) []NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader {
		return v.RequestHeaders
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

// Service Port criteria
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ServicePorts() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts {
		return v.ServicePorts
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
	Criteria string `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses []string `pulumi:"ipAddresses"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput)
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput).ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs, NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtr and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput
}

type nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrType NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs

func NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtr(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrInput {
	return (*nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress) *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress {
		return &v
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of IP addresses
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress) []string {
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput) Elem() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress
		return ret
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN.
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// A set of IP addresses
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie struct {
	// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value string `pulumi:"value"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs struct {
	// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value pulumi.StringInput `pulumi:"value"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput)
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput).ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs, NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtr and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput
}

type nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrType NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs

func NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtr(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrInput {
	return (*nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie {
		return &v
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput)
}

// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP cookie whose value is to be matched
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP cookie
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) string { return v.Value }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput) Elem() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie
		return ret
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput)
}

// Criteria to use for matching cookies in the HTTP request. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// Name of the HTTP cookie whose value is to be matched
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// String values to match for an HTTP cookie
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria string `pulumi:"criteria"`
	// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
	Methods []string `pulumi:"methods"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
	Methods pulumi.StringArrayInput `pulumi:"methods"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput)
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput).ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs, NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtr and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput
}

type nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrType NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs

func NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtr(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrInput {
	return (*nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods) *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods {
		return &v
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods) string { return v.Criteria }).(pulumi.StringOutput)
}

// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput) Elem() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods
		return ret
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// HTTP methods to match. Options - GET, PUT, POST, DELETE, HEAD, OPTIONS, TRACE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethods) []string {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath struct {
	// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
	Criteria string `pulumi:"criteria"`
	// String values to match the path
	Paths []string `pulumi:"paths"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs struct {
	// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// String values to match the path
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput)
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput).ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs, NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtr and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput
}

type nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrType NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs

func NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtr(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrInput {
	return (*nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath) *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath {
		return &v
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput)
}

// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath) string { return v.Criteria }).(pulumi.StringOutput)
}

// String values to match the path
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput) Elem() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath
		return ret
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput)
}

// Criteria to use for matching the path in the HTTP request URI. Options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// String values to match the path
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP header
	Values []string `pulumi:"values"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP header
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray{ NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs{...} }
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray []NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderInput

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

// Criteria to use for matching headers and cookies in the HTTP request amd response. Options - EXISTS, DOES_NOT_EXIST, BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP header whose value is to be matched
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP header
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader {
		return vs[0].([]NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria string `pulumi:"criteria"`
	// A set of TCP ports. Allowed values are 1-65535
	Ports []int `pulumi:"ports"`
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsInput` via:
//
//	NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs{...}
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs struct {
	// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of TCP ports. Allowed values are 1-65535
	Ports pulumi.IntArrayInput `pulumi:"ports"`
}

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput)
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput).ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx)
}

// NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrInput is an input type that accepts NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs, NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtr and NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrInput` via:
//
//	        NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs{...}
//
//	or:
//
//	        nil
type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput
	ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput
}

type nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrType NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs

func NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtr(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrInput {
	return (*nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrType)(v)
}

func (*nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput {
	return i.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Background())
}

func (i *nsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrType) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o.ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(context.Background())
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts) *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts {
		return &v
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of TCP ports. Allowed values are 1-65535
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

type NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput) ToNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput {
	return o
}

func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput) Elem() NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts) NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts {
		if v != nil {
			return *v
		}
		var ret NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts
		return ret
	}).(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput)
}

// Criteria to use for IP address matching the HTTP request. Options - IS_IN, IS_NOT_IN
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput) Criteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts) *string {
		if v == nil {
			return nil
		}
		return &v.Criteria
	}).(pulumi.StringPtrOutput)
}

// A set of TCP ports. Allowed values are 1-65535
func (o NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePorts) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

type NsxtAlbVirtualServiceServicePort struct {
	// Last port in the range
	EndPort *int `pulumi:"endPort"`
	// Defines if certificate should be used
	SslEnabled *bool `pulumi:"sslEnabled"`
	// Starting port in the range
	StartPort int `pulumi:"startPort"`
	// One of 'TCP_PROXY', 'TCP_FAST_PATH', 'UDP_FAST_PATH'
	Type string `pulumi:"type"`
}

// NsxtAlbVirtualServiceServicePortInput is an input type that accepts NsxtAlbVirtualServiceServicePortArgs and NsxtAlbVirtualServiceServicePortOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceServicePortInput` via:
//
//	NsxtAlbVirtualServiceServicePortArgs{...}
type NsxtAlbVirtualServiceServicePortInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceServicePortOutput() NsxtAlbVirtualServiceServicePortOutput
	ToNsxtAlbVirtualServiceServicePortOutputWithContext(context.Context) NsxtAlbVirtualServiceServicePortOutput
}

type NsxtAlbVirtualServiceServicePortArgs struct {
	// Last port in the range
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Defines if certificate should be used
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// Starting port in the range
	StartPort pulumi.IntInput `pulumi:"startPort"`
	// One of 'TCP_PROXY', 'TCP_FAST_PATH', 'UDP_FAST_PATH'
	Type pulumi.StringInput `pulumi:"type"`
}

func (NsxtAlbVirtualServiceServicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceServicePort)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceServicePortArgs) ToNsxtAlbVirtualServiceServicePortOutput() NsxtAlbVirtualServiceServicePortOutput {
	return i.ToNsxtAlbVirtualServiceServicePortOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceServicePortArgs) ToNsxtAlbVirtualServiceServicePortOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceServicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceServicePortOutput)
}

// NsxtAlbVirtualServiceServicePortArrayInput is an input type that accepts NsxtAlbVirtualServiceServicePortArray and NsxtAlbVirtualServiceServicePortArrayOutput values.
// You can construct a concrete instance of `NsxtAlbVirtualServiceServicePortArrayInput` via:
//
//	NsxtAlbVirtualServiceServicePortArray{ NsxtAlbVirtualServiceServicePortArgs{...} }
type NsxtAlbVirtualServiceServicePortArrayInput interface {
	pulumi.Input

	ToNsxtAlbVirtualServiceServicePortArrayOutput() NsxtAlbVirtualServiceServicePortArrayOutput
	ToNsxtAlbVirtualServiceServicePortArrayOutputWithContext(context.Context) NsxtAlbVirtualServiceServicePortArrayOutput
}

type NsxtAlbVirtualServiceServicePortArray []NsxtAlbVirtualServiceServicePortInput

func (NsxtAlbVirtualServiceServicePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceServicePort)(nil)).Elem()
}

func (i NsxtAlbVirtualServiceServicePortArray) ToNsxtAlbVirtualServiceServicePortArrayOutput() NsxtAlbVirtualServiceServicePortArrayOutput {
	return i.ToNsxtAlbVirtualServiceServicePortArrayOutputWithContext(context.Background())
}

func (i NsxtAlbVirtualServiceServicePortArray) ToNsxtAlbVirtualServiceServicePortArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceServicePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbVirtualServiceServicePortArrayOutput)
}

type NsxtAlbVirtualServiceServicePortOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceServicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAlbVirtualServiceServicePort)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceServicePortOutput) ToNsxtAlbVirtualServiceServicePortOutput() NsxtAlbVirtualServiceServicePortOutput {
	return o
}

func (o NsxtAlbVirtualServiceServicePortOutput) ToNsxtAlbVirtualServiceServicePortOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceServicePortOutput {
	return o
}

// Last port in the range
func (o NsxtAlbVirtualServiceServicePortOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceServicePort) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Defines if certificate should be used
func (o NsxtAlbVirtualServiceServicePortOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceServicePort) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// Starting port in the range
func (o NsxtAlbVirtualServiceServicePortOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceServicePort) int { return v.StartPort }).(pulumi.IntOutput)
}

// One of 'TCP_PROXY', 'TCP_FAST_PATH', 'UDP_FAST_PATH'
func (o NsxtAlbVirtualServiceServicePortOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAlbVirtualServiceServicePort) string { return v.Type }).(pulumi.StringOutput)
}

type NsxtAlbVirtualServiceServicePortArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbVirtualServiceServicePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAlbVirtualServiceServicePort)(nil)).Elem()
}

func (o NsxtAlbVirtualServiceServicePortArrayOutput) ToNsxtAlbVirtualServiceServicePortArrayOutput() NsxtAlbVirtualServiceServicePortArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceServicePortArrayOutput) ToNsxtAlbVirtualServiceServicePortArrayOutputWithContext(ctx context.Context) NsxtAlbVirtualServiceServicePortArrayOutput {
	return o
}

func (o NsxtAlbVirtualServiceServicePortArrayOutput) Index(i pulumi.IntInput) NsxtAlbVirtualServiceServicePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAlbVirtualServiceServicePort {
		return vs[0].([]NsxtAlbVirtualServiceServicePort)[vs[1].(int)]
	}).(NsxtAlbVirtualServiceServicePortOutput)
}

type NsxtAppPortProfileAppPort struct {
	// Set of ports or ranges
	Ports    []string `pulumi:"ports"`
	Protocol string   `pulumi:"protocol"`
}

// NsxtAppPortProfileAppPortInput is an input type that accepts NsxtAppPortProfileAppPortArgs and NsxtAppPortProfileAppPortOutput values.
// You can construct a concrete instance of `NsxtAppPortProfileAppPortInput` via:
//
//	NsxtAppPortProfileAppPortArgs{...}
type NsxtAppPortProfileAppPortInput interface {
	pulumi.Input

	ToNsxtAppPortProfileAppPortOutput() NsxtAppPortProfileAppPortOutput
	ToNsxtAppPortProfileAppPortOutputWithContext(context.Context) NsxtAppPortProfileAppPortOutput
}

type NsxtAppPortProfileAppPortArgs struct {
	// Set of ports or ranges
	Ports    pulumi.StringArrayInput `pulumi:"ports"`
	Protocol pulumi.StringInput      `pulumi:"protocol"`
}

func (NsxtAppPortProfileAppPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAppPortProfileAppPort)(nil)).Elem()
}

func (i NsxtAppPortProfileAppPortArgs) ToNsxtAppPortProfileAppPortOutput() NsxtAppPortProfileAppPortOutput {
	return i.ToNsxtAppPortProfileAppPortOutputWithContext(context.Background())
}

func (i NsxtAppPortProfileAppPortArgs) ToNsxtAppPortProfileAppPortOutputWithContext(ctx context.Context) NsxtAppPortProfileAppPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAppPortProfileAppPortOutput)
}

// NsxtAppPortProfileAppPortArrayInput is an input type that accepts NsxtAppPortProfileAppPortArray and NsxtAppPortProfileAppPortArrayOutput values.
// You can construct a concrete instance of `NsxtAppPortProfileAppPortArrayInput` via:
//
//	NsxtAppPortProfileAppPortArray{ NsxtAppPortProfileAppPortArgs{...} }
type NsxtAppPortProfileAppPortArrayInput interface {
	pulumi.Input

	ToNsxtAppPortProfileAppPortArrayOutput() NsxtAppPortProfileAppPortArrayOutput
	ToNsxtAppPortProfileAppPortArrayOutputWithContext(context.Context) NsxtAppPortProfileAppPortArrayOutput
}

type NsxtAppPortProfileAppPortArray []NsxtAppPortProfileAppPortInput

func (NsxtAppPortProfileAppPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAppPortProfileAppPort)(nil)).Elem()
}

func (i NsxtAppPortProfileAppPortArray) ToNsxtAppPortProfileAppPortArrayOutput() NsxtAppPortProfileAppPortArrayOutput {
	return i.ToNsxtAppPortProfileAppPortArrayOutputWithContext(context.Background())
}

func (i NsxtAppPortProfileAppPortArray) ToNsxtAppPortProfileAppPortArrayOutputWithContext(ctx context.Context) NsxtAppPortProfileAppPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAppPortProfileAppPortArrayOutput)
}

type NsxtAppPortProfileAppPortOutput struct{ *pulumi.OutputState }

func (NsxtAppPortProfileAppPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtAppPortProfileAppPort)(nil)).Elem()
}

func (o NsxtAppPortProfileAppPortOutput) ToNsxtAppPortProfileAppPortOutput() NsxtAppPortProfileAppPortOutput {
	return o
}

func (o NsxtAppPortProfileAppPortOutput) ToNsxtAppPortProfileAppPortOutputWithContext(ctx context.Context) NsxtAppPortProfileAppPortOutput {
	return o
}

// Set of ports or ranges
func (o NsxtAppPortProfileAppPortOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtAppPortProfileAppPort) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

func (o NsxtAppPortProfileAppPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtAppPortProfileAppPort) string { return v.Protocol }).(pulumi.StringOutput)
}

type NsxtAppPortProfileAppPortArrayOutput struct{ *pulumi.OutputState }

func (NsxtAppPortProfileAppPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtAppPortProfileAppPort)(nil)).Elem()
}

func (o NsxtAppPortProfileAppPortArrayOutput) ToNsxtAppPortProfileAppPortArrayOutput() NsxtAppPortProfileAppPortArrayOutput {
	return o
}

func (o NsxtAppPortProfileAppPortArrayOutput) ToNsxtAppPortProfileAppPortArrayOutputWithContext(ctx context.Context) NsxtAppPortProfileAppPortArrayOutput {
	return o
}

func (o NsxtAppPortProfileAppPortArrayOutput) Index(i pulumi.IntInput) NsxtAppPortProfileAppPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtAppPortProfileAppPort {
		return vs[0].([]NsxtAppPortProfileAppPort)[vs[1].(int)]
	}).(NsxtAppPortProfileAppPortOutput)
}

type NsxtDistributedFirewallRuleType struct {
	// Defines if the rule should 'ALLOW', 'DROP', 'REJECT' matching traffic
	Action string `pulumi:"action"`
	// A set of Application Port Profile IDs. Leaving it empty means 'Any'
	AppPortProfileIds []string `pulumi:"appPortProfileIds"`
	// Comment that is shown next to rule in UI (VCD 10.3.2+)
	Comment *string `pulumi:"comment"`
	// Description is not shown in UI
	Description *string `pulumi:"description"`
	// Reverses firewall matching for to match all except Destinations Groups specified in 'destination_ids' (VCD 10.3.2+)
	DestinationGroupsExcluded *bool `pulumi:"destinationGroupsExcluded"`
	// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	DestinationIds []string `pulumi:"destinationIds"`
	// Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')
	Direction *string `pulumi:"direction"`
	// Defined if Firewall Rule is active
	Enabled *bool `pulumi:"enabled"`
	// Firewall Rule ID
	Id *string `pulumi:"id"`
	// Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')
	IpProtocol *string `pulumi:"ipProtocol"`
	// Defines if matching traffic should be logged
	Logging *bool `pulumi:"logging"`
	// Firewall Rule name
	Name string `pulumi:"name"`
	// A set of Network Context Profile IDs. Leaving it empty means 'Any'
	NetworkContextProfileIds []string `pulumi:"networkContextProfileIds"`
	// Reverses firewall matching for to match all except Source Groups specified in 'source_ids' (VCD 10.3.2+)
	SourceGroupsExcluded *bool `pulumi:"sourceGroupsExcluded"`
	// A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	SourceIds []string `pulumi:"sourceIds"`
}

// NsxtDistributedFirewallRuleTypeInput is an input type that accepts NsxtDistributedFirewallRuleTypeArgs and NsxtDistributedFirewallRuleTypeOutput values.
// You can construct a concrete instance of `NsxtDistributedFirewallRuleTypeInput` via:
//
//	NsxtDistributedFirewallRuleTypeArgs{...}
type NsxtDistributedFirewallRuleTypeInput interface {
	pulumi.Input

	ToNsxtDistributedFirewallRuleTypeOutput() NsxtDistributedFirewallRuleTypeOutput
	ToNsxtDistributedFirewallRuleTypeOutputWithContext(context.Context) NsxtDistributedFirewallRuleTypeOutput
}

type NsxtDistributedFirewallRuleTypeArgs struct {
	// Defines if the rule should 'ALLOW', 'DROP', 'REJECT' matching traffic
	Action pulumi.StringInput `pulumi:"action"`
	// A set of Application Port Profile IDs. Leaving it empty means 'Any'
	AppPortProfileIds pulumi.StringArrayInput `pulumi:"appPortProfileIds"`
	// Comment that is shown next to rule in UI (VCD 10.3.2+)
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Description is not shown in UI
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Reverses firewall matching for to match all except Destinations Groups specified in 'destination_ids' (VCD 10.3.2+)
	DestinationGroupsExcluded pulumi.BoolPtrInput `pulumi:"destinationGroupsExcluded"`
	// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	DestinationIds pulumi.StringArrayInput `pulumi:"destinationIds"`
	// Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Defined if Firewall Rule is active
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Firewall Rule ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// Defines if matching traffic should be logged
	Logging pulumi.BoolPtrInput `pulumi:"logging"`
	// Firewall Rule name
	Name pulumi.StringInput `pulumi:"name"`
	// A set of Network Context Profile IDs. Leaving it empty means 'Any'
	NetworkContextProfileIds pulumi.StringArrayInput `pulumi:"networkContextProfileIds"`
	// Reverses firewall matching for to match all except Source Groups specified in 'source_ids' (VCD 10.3.2+)
	SourceGroupsExcluded pulumi.BoolPtrInput `pulumi:"sourceGroupsExcluded"`
	// A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	SourceIds pulumi.StringArrayInput `pulumi:"sourceIds"`
}

func (NsxtDistributedFirewallRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtDistributedFirewallRuleType)(nil)).Elem()
}

func (i NsxtDistributedFirewallRuleTypeArgs) ToNsxtDistributedFirewallRuleTypeOutput() NsxtDistributedFirewallRuleTypeOutput {
	return i.ToNsxtDistributedFirewallRuleTypeOutputWithContext(context.Background())
}

func (i NsxtDistributedFirewallRuleTypeArgs) ToNsxtDistributedFirewallRuleTypeOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDistributedFirewallRuleTypeOutput)
}

// NsxtDistributedFirewallRuleTypeArrayInput is an input type that accepts NsxtDistributedFirewallRuleTypeArray and NsxtDistributedFirewallRuleTypeArrayOutput values.
// You can construct a concrete instance of `NsxtDistributedFirewallRuleTypeArrayInput` via:
//
//	NsxtDistributedFirewallRuleTypeArray{ NsxtDistributedFirewallRuleTypeArgs{...} }
type NsxtDistributedFirewallRuleTypeArrayInput interface {
	pulumi.Input

	ToNsxtDistributedFirewallRuleTypeArrayOutput() NsxtDistributedFirewallRuleTypeArrayOutput
	ToNsxtDistributedFirewallRuleTypeArrayOutputWithContext(context.Context) NsxtDistributedFirewallRuleTypeArrayOutput
}

type NsxtDistributedFirewallRuleTypeArray []NsxtDistributedFirewallRuleTypeInput

func (NsxtDistributedFirewallRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtDistributedFirewallRuleType)(nil)).Elem()
}

func (i NsxtDistributedFirewallRuleTypeArray) ToNsxtDistributedFirewallRuleTypeArrayOutput() NsxtDistributedFirewallRuleTypeArrayOutput {
	return i.ToNsxtDistributedFirewallRuleTypeArrayOutputWithContext(context.Background())
}

func (i NsxtDistributedFirewallRuleTypeArray) ToNsxtDistributedFirewallRuleTypeArrayOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDistributedFirewallRuleTypeArrayOutput)
}

type NsxtDistributedFirewallRuleTypeOutput struct{ *pulumi.OutputState }

func (NsxtDistributedFirewallRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtDistributedFirewallRuleType)(nil)).Elem()
}

func (o NsxtDistributedFirewallRuleTypeOutput) ToNsxtDistributedFirewallRuleTypeOutput() NsxtDistributedFirewallRuleTypeOutput {
	return o
}

func (o NsxtDistributedFirewallRuleTypeOutput) ToNsxtDistributedFirewallRuleTypeOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleTypeOutput {
	return o
}

// Defines if the rule should 'ALLOW', 'DROP', 'REJECT' matching traffic
func (o NsxtDistributedFirewallRuleTypeOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) string { return v.Action }).(pulumi.StringOutput)
}

// A set of Application Port Profile IDs. Leaving it empty means 'Any'
func (o NsxtDistributedFirewallRuleTypeOutput) AppPortProfileIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) []string { return v.AppPortProfileIds }).(pulumi.StringArrayOutput)
}

// Comment that is shown next to rule in UI (VCD 10.3.2+)
func (o NsxtDistributedFirewallRuleTypeOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Description is not shown in UI
func (o NsxtDistributedFirewallRuleTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Reverses firewall matching for to match all except Destinations Groups specified in 'destination_ids' (VCD 10.3.2+)
func (o NsxtDistributedFirewallRuleTypeOutput) DestinationGroupsExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) *bool { return v.DestinationGroupsExcluded }).(pulumi.BoolPtrOutput)
}

// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
func (o NsxtDistributedFirewallRuleTypeOutput) DestinationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) []string { return v.DestinationIds }).(pulumi.StringArrayOutput)
}

// Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')
func (o NsxtDistributedFirewallRuleTypeOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Defined if Firewall Rule is active
func (o NsxtDistributedFirewallRuleTypeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Firewall Rule ID
func (o NsxtDistributedFirewallRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')
func (o NsxtDistributedFirewallRuleTypeOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// Defines if matching traffic should be logged
func (o NsxtDistributedFirewallRuleTypeOutput) Logging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) *bool { return v.Logging }).(pulumi.BoolPtrOutput)
}

// Firewall Rule name
func (o NsxtDistributedFirewallRuleTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) string { return v.Name }).(pulumi.StringOutput)
}

// A set of Network Context Profile IDs. Leaving it empty means 'Any'
func (o NsxtDistributedFirewallRuleTypeOutput) NetworkContextProfileIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) []string { return v.NetworkContextProfileIds }).(pulumi.StringArrayOutput)
}

// Reverses firewall matching for to match all except Source Groups specified in 'source_ids' (VCD 10.3.2+)
func (o NsxtDistributedFirewallRuleTypeOutput) SourceGroupsExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) *bool { return v.SourceGroupsExcluded }).(pulumi.BoolPtrOutput)
}

// A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
func (o NsxtDistributedFirewallRuleTypeOutput) SourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtDistributedFirewallRuleType) []string { return v.SourceIds }).(pulumi.StringArrayOutput)
}

type NsxtDistributedFirewallRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (NsxtDistributedFirewallRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtDistributedFirewallRuleType)(nil)).Elem()
}

func (o NsxtDistributedFirewallRuleTypeArrayOutput) ToNsxtDistributedFirewallRuleTypeArrayOutput() NsxtDistributedFirewallRuleTypeArrayOutput {
	return o
}

func (o NsxtDistributedFirewallRuleTypeArrayOutput) ToNsxtDistributedFirewallRuleTypeArrayOutputWithContext(ctx context.Context) NsxtDistributedFirewallRuleTypeArrayOutput {
	return o
}

func (o NsxtDistributedFirewallRuleTypeArrayOutput) Index(i pulumi.IntInput) NsxtDistributedFirewallRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtDistributedFirewallRuleType {
		return vs[0].([]NsxtDistributedFirewallRuleType)[vs[1].(int)]
	}).(NsxtDistributedFirewallRuleTypeOutput)
}

type NsxtDynamicSecurityGroupCriteria struct {
	// Up to 4 rules for matching VMs. List of rules are matched with boolean `AND`
	// operation and all defines rules must match to include object. See Rule for rule
	// definition structure.
	//
	// <a id="rule"></a>
	Rules []NsxtDynamicSecurityGroupCriteriaRule `pulumi:"rules"`
}

// NsxtDynamicSecurityGroupCriteriaInput is an input type that accepts NsxtDynamicSecurityGroupCriteriaArgs and NsxtDynamicSecurityGroupCriteriaOutput values.
// You can construct a concrete instance of `NsxtDynamicSecurityGroupCriteriaInput` via:
//
//	NsxtDynamicSecurityGroupCriteriaArgs{...}
type NsxtDynamicSecurityGroupCriteriaInput interface {
	pulumi.Input

	ToNsxtDynamicSecurityGroupCriteriaOutput() NsxtDynamicSecurityGroupCriteriaOutput
	ToNsxtDynamicSecurityGroupCriteriaOutputWithContext(context.Context) NsxtDynamicSecurityGroupCriteriaOutput
}

type NsxtDynamicSecurityGroupCriteriaArgs struct {
	// Up to 4 rules for matching VMs. List of rules are matched with boolean `AND`
	// operation and all defines rules must match to include object. See Rule for rule
	// definition structure.
	//
	// <a id="rule"></a>
	Rules NsxtDynamicSecurityGroupCriteriaRuleArrayInput `pulumi:"rules"`
}

func (NsxtDynamicSecurityGroupCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtDynamicSecurityGroupCriteria)(nil)).Elem()
}

func (i NsxtDynamicSecurityGroupCriteriaArgs) ToNsxtDynamicSecurityGroupCriteriaOutput() NsxtDynamicSecurityGroupCriteriaOutput {
	return i.ToNsxtDynamicSecurityGroupCriteriaOutputWithContext(context.Background())
}

func (i NsxtDynamicSecurityGroupCriteriaArgs) ToNsxtDynamicSecurityGroupCriteriaOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDynamicSecurityGroupCriteriaOutput)
}

// NsxtDynamicSecurityGroupCriteriaArrayInput is an input type that accepts NsxtDynamicSecurityGroupCriteriaArray and NsxtDynamicSecurityGroupCriteriaArrayOutput values.
// You can construct a concrete instance of `NsxtDynamicSecurityGroupCriteriaArrayInput` via:
//
//	NsxtDynamicSecurityGroupCriteriaArray{ NsxtDynamicSecurityGroupCriteriaArgs{...} }
type NsxtDynamicSecurityGroupCriteriaArrayInput interface {
	pulumi.Input

	ToNsxtDynamicSecurityGroupCriteriaArrayOutput() NsxtDynamicSecurityGroupCriteriaArrayOutput
	ToNsxtDynamicSecurityGroupCriteriaArrayOutputWithContext(context.Context) NsxtDynamicSecurityGroupCriteriaArrayOutput
}

type NsxtDynamicSecurityGroupCriteriaArray []NsxtDynamicSecurityGroupCriteriaInput

func (NsxtDynamicSecurityGroupCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtDynamicSecurityGroupCriteria)(nil)).Elem()
}

func (i NsxtDynamicSecurityGroupCriteriaArray) ToNsxtDynamicSecurityGroupCriteriaArrayOutput() NsxtDynamicSecurityGroupCriteriaArrayOutput {
	return i.ToNsxtDynamicSecurityGroupCriteriaArrayOutputWithContext(context.Background())
}

func (i NsxtDynamicSecurityGroupCriteriaArray) ToNsxtDynamicSecurityGroupCriteriaArrayOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDynamicSecurityGroupCriteriaArrayOutput)
}

type NsxtDynamicSecurityGroupCriteriaOutput struct{ *pulumi.OutputState }

func (NsxtDynamicSecurityGroupCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtDynamicSecurityGroupCriteria)(nil)).Elem()
}

func (o NsxtDynamicSecurityGroupCriteriaOutput) ToNsxtDynamicSecurityGroupCriteriaOutput() NsxtDynamicSecurityGroupCriteriaOutput {
	return o
}

func (o NsxtDynamicSecurityGroupCriteriaOutput) ToNsxtDynamicSecurityGroupCriteriaOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupCriteriaOutput {
	return o
}

// Up to 4 rules for matching VMs. List of rules are matched with boolean `AND`
// operation and all defines rules must match to include object. See Rule for rule
// definition structure.
//
// <a id="rule"></a>
func (o NsxtDynamicSecurityGroupCriteriaOutput) Rules() NsxtDynamicSecurityGroupCriteriaRuleArrayOutput {
	return o.ApplyT(func(v NsxtDynamicSecurityGroupCriteria) []NsxtDynamicSecurityGroupCriteriaRule { return v.Rules }).(NsxtDynamicSecurityGroupCriteriaRuleArrayOutput)
}

type NsxtDynamicSecurityGroupCriteriaArrayOutput struct{ *pulumi.OutputState }

func (NsxtDynamicSecurityGroupCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtDynamicSecurityGroupCriteria)(nil)).Elem()
}

func (o NsxtDynamicSecurityGroupCriteriaArrayOutput) ToNsxtDynamicSecurityGroupCriteriaArrayOutput() NsxtDynamicSecurityGroupCriteriaArrayOutput {
	return o
}

func (o NsxtDynamicSecurityGroupCriteriaArrayOutput) ToNsxtDynamicSecurityGroupCriteriaArrayOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupCriteriaArrayOutput {
	return o
}

func (o NsxtDynamicSecurityGroupCriteriaArrayOutput) Index(i pulumi.IntInput) NsxtDynamicSecurityGroupCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtDynamicSecurityGroupCriteria {
		return vs[0].([]NsxtDynamicSecurityGroupCriteria)[vs[1].(int)]
	}).(NsxtDynamicSecurityGroupCriteriaOutput)
}

type NsxtDynamicSecurityGroupCriteriaRule struct {
	// Operator can be one of 'EQUALS', 'CONTAINS', 'STARTS_WITH', 'ENDS_WITH'
	Operator string `pulumi:"operator"`
	// Type of object matching 'VM_TAG' or 'VM_NAME'
	Type string `pulumi:"type"`
	// Filter value
	Value string `pulumi:"value"`
}

// NsxtDynamicSecurityGroupCriteriaRuleInput is an input type that accepts NsxtDynamicSecurityGroupCriteriaRuleArgs and NsxtDynamicSecurityGroupCriteriaRuleOutput values.
// You can construct a concrete instance of `NsxtDynamicSecurityGroupCriteriaRuleInput` via:
//
//	NsxtDynamicSecurityGroupCriteriaRuleArgs{...}
type NsxtDynamicSecurityGroupCriteriaRuleInput interface {
	pulumi.Input

	ToNsxtDynamicSecurityGroupCriteriaRuleOutput() NsxtDynamicSecurityGroupCriteriaRuleOutput
	ToNsxtDynamicSecurityGroupCriteriaRuleOutputWithContext(context.Context) NsxtDynamicSecurityGroupCriteriaRuleOutput
}

type NsxtDynamicSecurityGroupCriteriaRuleArgs struct {
	// Operator can be one of 'EQUALS', 'CONTAINS', 'STARTS_WITH', 'ENDS_WITH'
	Operator pulumi.StringInput `pulumi:"operator"`
	// Type of object matching 'VM_TAG' or 'VM_NAME'
	Type pulumi.StringInput `pulumi:"type"`
	// Filter value
	Value pulumi.StringInput `pulumi:"value"`
}

func (NsxtDynamicSecurityGroupCriteriaRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtDynamicSecurityGroupCriteriaRule)(nil)).Elem()
}

func (i NsxtDynamicSecurityGroupCriteriaRuleArgs) ToNsxtDynamicSecurityGroupCriteriaRuleOutput() NsxtDynamicSecurityGroupCriteriaRuleOutput {
	return i.ToNsxtDynamicSecurityGroupCriteriaRuleOutputWithContext(context.Background())
}

func (i NsxtDynamicSecurityGroupCriteriaRuleArgs) ToNsxtDynamicSecurityGroupCriteriaRuleOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupCriteriaRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDynamicSecurityGroupCriteriaRuleOutput)
}

// NsxtDynamicSecurityGroupCriteriaRuleArrayInput is an input type that accepts NsxtDynamicSecurityGroupCriteriaRuleArray and NsxtDynamicSecurityGroupCriteriaRuleArrayOutput values.
// You can construct a concrete instance of `NsxtDynamicSecurityGroupCriteriaRuleArrayInput` via:
//
//	NsxtDynamicSecurityGroupCriteriaRuleArray{ NsxtDynamicSecurityGroupCriteriaRuleArgs{...} }
type NsxtDynamicSecurityGroupCriteriaRuleArrayInput interface {
	pulumi.Input

	ToNsxtDynamicSecurityGroupCriteriaRuleArrayOutput() NsxtDynamicSecurityGroupCriteriaRuleArrayOutput
	ToNsxtDynamicSecurityGroupCriteriaRuleArrayOutputWithContext(context.Context) NsxtDynamicSecurityGroupCriteriaRuleArrayOutput
}

type NsxtDynamicSecurityGroupCriteriaRuleArray []NsxtDynamicSecurityGroupCriteriaRuleInput

func (NsxtDynamicSecurityGroupCriteriaRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtDynamicSecurityGroupCriteriaRule)(nil)).Elem()
}

func (i NsxtDynamicSecurityGroupCriteriaRuleArray) ToNsxtDynamicSecurityGroupCriteriaRuleArrayOutput() NsxtDynamicSecurityGroupCriteriaRuleArrayOutput {
	return i.ToNsxtDynamicSecurityGroupCriteriaRuleArrayOutputWithContext(context.Background())
}

func (i NsxtDynamicSecurityGroupCriteriaRuleArray) ToNsxtDynamicSecurityGroupCriteriaRuleArrayOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupCriteriaRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDynamicSecurityGroupCriteriaRuleArrayOutput)
}

type NsxtDynamicSecurityGroupCriteriaRuleOutput struct{ *pulumi.OutputState }

func (NsxtDynamicSecurityGroupCriteriaRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtDynamicSecurityGroupCriteriaRule)(nil)).Elem()
}

func (o NsxtDynamicSecurityGroupCriteriaRuleOutput) ToNsxtDynamicSecurityGroupCriteriaRuleOutput() NsxtDynamicSecurityGroupCriteriaRuleOutput {
	return o
}

func (o NsxtDynamicSecurityGroupCriteriaRuleOutput) ToNsxtDynamicSecurityGroupCriteriaRuleOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupCriteriaRuleOutput {
	return o
}

// Operator can be one of 'EQUALS', 'CONTAINS', 'STARTS_WITH', 'ENDS_WITH'
func (o NsxtDynamicSecurityGroupCriteriaRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtDynamicSecurityGroupCriteriaRule) string { return v.Operator }).(pulumi.StringOutput)
}

// Type of object matching 'VM_TAG' or 'VM_NAME'
func (o NsxtDynamicSecurityGroupCriteriaRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtDynamicSecurityGroupCriteriaRule) string { return v.Type }).(pulumi.StringOutput)
}

// Filter value
func (o NsxtDynamicSecurityGroupCriteriaRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtDynamicSecurityGroupCriteriaRule) string { return v.Value }).(pulumi.StringOutput)
}

type NsxtDynamicSecurityGroupCriteriaRuleArrayOutput struct{ *pulumi.OutputState }

func (NsxtDynamicSecurityGroupCriteriaRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtDynamicSecurityGroupCriteriaRule)(nil)).Elem()
}

func (o NsxtDynamicSecurityGroupCriteriaRuleArrayOutput) ToNsxtDynamicSecurityGroupCriteriaRuleArrayOutput() NsxtDynamicSecurityGroupCriteriaRuleArrayOutput {
	return o
}

func (o NsxtDynamicSecurityGroupCriteriaRuleArrayOutput) ToNsxtDynamicSecurityGroupCriteriaRuleArrayOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupCriteriaRuleArrayOutput {
	return o
}

func (o NsxtDynamicSecurityGroupCriteriaRuleArrayOutput) Index(i pulumi.IntInput) NsxtDynamicSecurityGroupCriteriaRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtDynamicSecurityGroupCriteriaRule {
		return vs[0].([]NsxtDynamicSecurityGroupCriteriaRule)[vs[1].(int)]
	}).(NsxtDynamicSecurityGroupCriteriaRuleOutput)
}

type NsxtDynamicSecurityGroupMemberVm struct {
	// Parent vApp name (if exists) for member VM
	VappId *string `pulumi:"vappId"`
	// Parent vApp ID (if exists) for member VM
	VappName *string `pulumi:"vappName"`
	// Member VM ID
	VmId *string `pulumi:"vmId"`
	// Member VM Name
	VmName *string `pulumi:"vmName"`
}

// NsxtDynamicSecurityGroupMemberVmInput is an input type that accepts NsxtDynamicSecurityGroupMemberVmArgs and NsxtDynamicSecurityGroupMemberVmOutput values.
// You can construct a concrete instance of `NsxtDynamicSecurityGroupMemberVmInput` via:
//
//	NsxtDynamicSecurityGroupMemberVmArgs{...}
type NsxtDynamicSecurityGroupMemberVmInput interface {
	pulumi.Input

	ToNsxtDynamicSecurityGroupMemberVmOutput() NsxtDynamicSecurityGroupMemberVmOutput
	ToNsxtDynamicSecurityGroupMemberVmOutputWithContext(context.Context) NsxtDynamicSecurityGroupMemberVmOutput
}

type NsxtDynamicSecurityGroupMemberVmArgs struct {
	// Parent vApp name (if exists) for member VM
	VappId pulumi.StringPtrInput `pulumi:"vappId"`
	// Parent vApp ID (if exists) for member VM
	VappName pulumi.StringPtrInput `pulumi:"vappName"`
	// Member VM ID
	VmId pulumi.StringPtrInput `pulumi:"vmId"`
	// Member VM Name
	VmName pulumi.StringPtrInput `pulumi:"vmName"`
}

func (NsxtDynamicSecurityGroupMemberVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtDynamicSecurityGroupMemberVm)(nil)).Elem()
}

func (i NsxtDynamicSecurityGroupMemberVmArgs) ToNsxtDynamicSecurityGroupMemberVmOutput() NsxtDynamicSecurityGroupMemberVmOutput {
	return i.ToNsxtDynamicSecurityGroupMemberVmOutputWithContext(context.Background())
}

func (i NsxtDynamicSecurityGroupMemberVmArgs) ToNsxtDynamicSecurityGroupMemberVmOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupMemberVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDynamicSecurityGroupMemberVmOutput)
}

// NsxtDynamicSecurityGroupMemberVmArrayInput is an input type that accepts NsxtDynamicSecurityGroupMemberVmArray and NsxtDynamicSecurityGroupMemberVmArrayOutput values.
// You can construct a concrete instance of `NsxtDynamicSecurityGroupMemberVmArrayInput` via:
//
//	NsxtDynamicSecurityGroupMemberVmArray{ NsxtDynamicSecurityGroupMemberVmArgs{...} }
type NsxtDynamicSecurityGroupMemberVmArrayInput interface {
	pulumi.Input

	ToNsxtDynamicSecurityGroupMemberVmArrayOutput() NsxtDynamicSecurityGroupMemberVmArrayOutput
	ToNsxtDynamicSecurityGroupMemberVmArrayOutputWithContext(context.Context) NsxtDynamicSecurityGroupMemberVmArrayOutput
}

type NsxtDynamicSecurityGroupMemberVmArray []NsxtDynamicSecurityGroupMemberVmInput

func (NsxtDynamicSecurityGroupMemberVmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtDynamicSecurityGroupMemberVm)(nil)).Elem()
}

func (i NsxtDynamicSecurityGroupMemberVmArray) ToNsxtDynamicSecurityGroupMemberVmArrayOutput() NsxtDynamicSecurityGroupMemberVmArrayOutput {
	return i.ToNsxtDynamicSecurityGroupMemberVmArrayOutputWithContext(context.Background())
}

func (i NsxtDynamicSecurityGroupMemberVmArray) ToNsxtDynamicSecurityGroupMemberVmArrayOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupMemberVmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtDynamicSecurityGroupMemberVmArrayOutput)
}

type NsxtDynamicSecurityGroupMemberVmOutput struct{ *pulumi.OutputState }

func (NsxtDynamicSecurityGroupMemberVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtDynamicSecurityGroupMemberVm)(nil)).Elem()
}

func (o NsxtDynamicSecurityGroupMemberVmOutput) ToNsxtDynamicSecurityGroupMemberVmOutput() NsxtDynamicSecurityGroupMemberVmOutput {
	return o
}

func (o NsxtDynamicSecurityGroupMemberVmOutput) ToNsxtDynamicSecurityGroupMemberVmOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupMemberVmOutput {
	return o
}

// Parent vApp name (if exists) for member VM
func (o NsxtDynamicSecurityGroupMemberVmOutput) VappId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtDynamicSecurityGroupMemberVm) *string { return v.VappId }).(pulumi.StringPtrOutput)
}

// Parent vApp ID (if exists) for member VM
func (o NsxtDynamicSecurityGroupMemberVmOutput) VappName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtDynamicSecurityGroupMemberVm) *string { return v.VappName }).(pulumi.StringPtrOutput)
}

// Member VM ID
func (o NsxtDynamicSecurityGroupMemberVmOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtDynamicSecurityGroupMemberVm) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// Member VM Name
func (o NsxtDynamicSecurityGroupMemberVmOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtDynamicSecurityGroupMemberVm) *string { return v.VmName }).(pulumi.StringPtrOutput)
}

type NsxtDynamicSecurityGroupMemberVmArrayOutput struct{ *pulumi.OutputState }

func (NsxtDynamicSecurityGroupMemberVmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtDynamicSecurityGroupMemberVm)(nil)).Elem()
}

func (o NsxtDynamicSecurityGroupMemberVmArrayOutput) ToNsxtDynamicSecurityGroupMemberVmArrayOutput() NsxtDynamicSecurityGroupMemberVmArrayOutput {
	return o
}

func (o NsxtDynamicSecurityGroupMemberVmArrayOutput) ToNsxtDynamicSecurityGroupMemberVmArrayOutputWithContext(ctx context.Context) NsxtDynamicSecurityGroupMemberVmArrayOutput {
	return o
}

func (o NsxtDynamicSecurityGroupMemberVmArrayOutput) Index(i pulumi.IntInput) NsxtDynamicSecurityGroupMemberVmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtDynamicSecurityGroupMemberVm {
		return vs[0].([]NsxtDynamicSecurityGroupMemberVm)[vs[1].(int)]
	}).(NsxtDynamicSecurityGroupMemberVmOutput)
}

type NsxtEdgegatewayBgpIpPrefixListIpPrefix struct {
	// Action 'PERMIT' or 'DENY'
	Action string `pulumi:"action"`
	// Greater than or equal to subnet mask
	GreaterThanOrEqualTo *int `pulumi:"greaterThanOrEqualTo"`
	// Less than or equal to subnet mask
	LessThanOrEqualTo *int `pulumi:"lessThanOrEqualTo"`
	// Network in CIDR notation (e.g. '192.168.100.0/24', '2001:db8::/48')
	Network string `pulumi:"network"`
}

// NsxtEdgegatewayBgpIpPrefixListIpPrefixInput is an input type that accepts NsxtEdgegatewayBgpIpPrefixListIpPrefixArgs and NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayBgpIpPrefixListIpPrefixInput` via:
//
//	NsxtEdgegatewayBgpIpPrefixListIpPrefixArgs{...}
type NsxtEdgegatewayBgpIpPrefixListIpPrefixInput interface {
	pulumi.Input

	ToNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput() NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput
	ToNsxtEdgegatewayBgpIpPrefixListIpPrefixOutputWithContext(context.Context) NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput
}

type NsxtEdgegatewayBgpIpPrefixListIpPrefixArgs struct {
	// Action 'PERMIT' or 'DENY'
	Action pulumi.StringInput `pulumi:"action"`
	// Greater than or equal to subnet mask
	GreaterThanOrEqualTo pulumi.IntPtrInput `pulumi:"greaterThanOrEqualTo"`
	// Less than or equal to subnet mask
	LessThanOrEqualTo pulumi.IntPtrInput `pulumi:"lessThanOrEqualTo"`
	// Network in CIDR notation (e.g. '192.168.100.0/24', '2001:db8::/48')
	Network pulumi.StringInput `pulumi:"network"`
}

func (NsxtEdgegatewayBgpIpPrefixListIpPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayBgpIpPrefixListIpPrefix)(nil)).Elem()
}

func (i NsxtEdgegatewayBgpIpPrefixListIpPrefixArgs) ToNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput() NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput {
	return i.ToNsxtEdgegatewayBgpIpPrefixListIpPrefixOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayBgpIpPrefixListIpPrefixArgs) ToNsxtEdgegatewayBgpIpPrefixListIpPrefixOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput)
}

// NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayInput is an input type that accepts NsxtEdgegatewayBgpIpPrefixListIpPrefixArray and NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayInput` via:
//
//	NsxtEdgegatewayBgpIpPrefixListIpPrefixArray{ NsxtEdgegatewayBgpIpPrefixListIpPrefixArgs{...} }
type NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput() NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput
	ToNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutputWithContext(context.Context) NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput
}

type NsxtEdgegatewayBgpIpPrefixListIpPrefixArray []NsxtEdgegatewayBgpIpPrefixListIpPrefixInput

func (NsxtEdgegatewayBgpIpPrefixListIpPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewayBgpIpPrefixListIpPrefix)(nil)).Elem()
}

func (i NsxtEdgegatewayBgpIpPrefixListIpPrefixArray) ToNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput() NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput {
	return i.ToNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayBgpIpPrefixListIpPrefixArray) ToNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput)
}

type NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayBgpIpPrefixListIpPrefix)(nil)).Elem()
}

func (o NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) ToNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput() NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput {
	return o
}

func (o NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) ToNsxtEdgegatewayBgpIpPrefixListIpPrefixOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput {
	return o
}

// Action 'PERMIT' or 'DENY'
func (o NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewayBgpIpPrefixListIpPrefix) string { return v.Action }).(pulumi.StringOutput)
}

// Greater than or equal to subnet mask
func (o NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) GreaterThanOrEqualTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewayBgpIpPrefixListIpPrefix) *int { return v.GreaterThanOrEqualTo }).(pulumi.IntPtrOutput)
}

// Less than or equal to subnet mask
func (o NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) LessThanOrEqualTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewayBgpIpPrefixListIpPrefix) *int { return v.LessThanOrEqualTo }).(pulumi.IntPtrOutput)
}

// Network in CIDR notation (e.g. '192.168.100.0/24', '2001:db8::/48')
func (o NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewayBgpIpPrefixListIpPrefix) string { return v.Network }).(pulumi.StringOutput)
}

type NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewayBgpIpPrefixListIpPrefix)(nil)).Elem()
}

func (o NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput) ToNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput() NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput {
	return o
}

func (o NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput) ToNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput {
	return o
}

func (o NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtEdgegatewayBgpIpPrefixListIpPrefix {
		return vs[0].([]NsxtEdgegatewayBgpIpPrefixListIpPrefix)[vs[1].(int)]
	}).(NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput)
}

type NsxtEdgegatewayDnsConditionalForwarderZone struct {
	// Set of domain names on which conditional forwarding is based.
	DomainNames []string `pulumi:"domainNames"`
	// Unique ID of the forwarder zone.
	Id *string `pulumi:"id"`
	// Name of the forwarder zone.
	Name string `pulumi:"name"`
	// Servers to which DNS requests should be forwarded to.
	UpstreamServers []string `pulumi:"upstreamServers"`
}

// NsxtEdgegatewayDnsConditionalForwarderZoneInput is an input type that accepts NsxtEdgegatewayDnsConditionalForwarderZoneArgs and NsxtEdgegatewayDnsConditionalForwarderZoneOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayDnsConditionalForwarderZoneInput` via:
//
//	NsxtEdgegatewayDnsConditionalForwarderZoneArgs{...}
type NsxtEdgegatewayDnsConditionalForwarderZoneInput interface {
	pulumi.Input

	ToNsxtEdgegatewayDnsConditionalForwarderZoneOutput() NsxtEdgegatewayDnsConditionalForwarderZoneOutput
	ToNsxtEdgegatewayDnsConditionalForwarderZoneOutputWithContext(context.Context) NsxtEdgegatewayDnsConditionalForwarderZoneOutput
}

type NsxtEdgegatewayDnsConditionalForwarderZoneArgs struct {
	// Set of domain names on which conditional forwarding is based.
	DomainNames pulumi.StringArrayInput `pulumi:"domainNames"`
	// Unique ID of the forwarder zone.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the forwarder zone.
	Name pulumi.StringInput `pulumi:"name"`
	// Servers to which DNS requests should be forwarded to.
	UpstreamServers pulumi.StringArrayInput `pulumi:"upstreamServers"`
}

func (NsxtEdgegatewayDnsConditionalForwarderZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayDnsConditionalForwarderZone)(nil)).Elem()
}

func (i NsxtEdgegatewayDnsConditionalForwarderZoneArgs) ToNsxtEdgegatewayDnsConditionalForwarderZoneOutput() NsxtEdgegatewayDnsConditionalForwarderZoneOutput {
	return i.ToNsxtEdgegatewayDnsConditionalForwarderZoneOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayDnsConditionalForwarderZoneArgs) ToNsxtEdgegatewayDnsConditionalForwarderZoneOutputWithContext(ctx context.Context) NsxtEdgegatewayDnsConditionalForwarderZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDnsConditionalForwarderZoneOutput)
}

// NsxtEdgegatewayDnsConditionalForwarderZoneArrayInput is an input type that accepts NsxtEdgegatewayDnsConditionalForwarderZoneArray and NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayDnsConditionalForwarderZoneArrayInput` via:
//
//	NsxtEdgegatewayDnsConditionalForwarderZoneArray{ NsxtEdgegatewayDnsConditionalForwarderZoneArgs{...} }
type NsxtEdgegatewayDnsConditionalForwarderZoneArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput() NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput
	ToNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutputWithContext(context.Context) NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput
}

type NsxtEdgegatewayDnsConditionalForwarderZoneArray []NsxtEdgegatewayDnsConditionalForwarderZoneInput

func (NsxtEdgegatewayDnsConditionalForwarderZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewayDnsConditionalForwarderZone)(nil)).Elem()
}

func (i NsxtEdgegatewayDnsConditionalForwarderZoneArray) ToNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput() NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput {
	return i.ToNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayDnsConditionalForwarderZoneArray) ToNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput)
}

type NsxtEdgegatewayDnsConditionalForwarderZoneOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayDnsConditionalForwarderZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayDnsConditionalForwarderZone)(nil)).Elem()
}

func (o NsxtEdgegatewayDnsConditionalForwarderZoneOutput) ToNsxtEdgegatewayDnsConditionalForwarderZoneOutput() NsxtEdgegatewayDnsConditionalForwarderZoneOutput {
	return o
}

func (o NsxtEdgegatewayDnsConditionalForwarderZoneOutput) ToNsxtEdgegatewayDnsConditionalForwarderZoneOutputWithContext(ctx context.Context) NsxtEdgegatewayDnsConditionalForwarderZoneOutput {
	return o
}

// Set of domain names on which conditional forwarding is based.
func (o NsxtEdgegatewayDnsConditionalForwarderZoneOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtEdgegatewayDnsConditionalForwarderZone) []string { return v.DomainNames }).(pulumi.StringArrayOutput)
}

// Unique ID of the forwarder zone.
func (o NsxtEdgegatewayDnsConditionalForwarderZoneOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewayDnsConditionalForwarderZone) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the forwarder zone.
func (o NsxtEdgegatewayDnsConditionalForwarderZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewayDnsConditionalForwarderZone) string { return v.Name }).(pulumi.StringOutput)
}

// Servers to which DNS requests should be forwarded to.
func (o NsxtEdgegatewayDnsConditionalForwarderZoneOutput) UpstreamServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtEdgegatewayDnsConditionalForwarderZone) []string { return v.UpstreamServers }).(pulumi.StringArrayOutput)
}

type NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewayDnsConditionalForwarderZone)(nil)).Elem()
}

func (o NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput) ToNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput() NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput {
	return o
}

func (o NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput) ToNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput {
	return o
}

func (o NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewayDnsConditionalForwarderZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtEdgegatewayDnsConditionalForwarderZone {
		return vs[0].([]NsxtEdgegatewayDnsConditionalForwarderZone)[vs[1].(int)]
	}).(NsxtEdgegatewayDnsConditionalForwarderZoneOutput)
}

type NsxtEdgegatewayDnsDefaultForwarderZone struct {
	// Unique ID of the forwarder zone.
	Id *string `pulumi:"id"`
	// Name of the forwarder zone.
	Name string `pulumi:"name"`
	// Servers to which DNS requests should be forwarded to.
	UpstreamServers []string `pulumi:"upstreamServers"`
}

// NsxtEdgegatewayDnsDefaultForwarderZoneInput is an input type that accepts NsxtEdgegatewayDnsDefaultForwarderZoneArgs and NsxtEdgegatewayDnsDefaultForwarderZoneOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayDnsDefaultForwarderZoneInput` via:
//
//	NsxtEdgegatewayDnsDefaultForwarderZoneArgs{...}
type NsxtEdgegatewayDnsDefaultForwarderZoneInput interface {
	pulumi.Input

	ToNsxtEdgegatewayDnsDefaultForwarderZoneOutput() NsxtEdgegatewayDnsDefaultForwarderZoneOutput
	ToNsxtEdgegatewayDnsDefaultForwarderZoneOutputWithContext(context.Context) NsxtEdgegatewayDnsDefaultForwarderZoneOutput
}

type NsxtEdgegatewayDnsDefaultForwarderZoneArgs struct {
	// Unique ID of the forwarder zone.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the forwarder zone.
	Name pulumi.StringInput `pulumi:"name"`
	// Servers to which DNS requests should be forwarded to.
	UpstreamServers pulumi.StringArrayInput `pulumi:"upstreamServers"`
}

func (NsxtEdgegatewayDnsDefaultForwarderZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayDnsDefaultForwarderZone)(nil)).Elem()
}

func (i NsxtEdgegatewayDnsDefaultForwarderZoneArgs) ToNsxtEdgegatewayDnsDefaultForwarderZoneOutput() NsxtEdgegatewayDnsDefaultForwarderZoneOutput {
	return i.ToNsxtEdgegatewayDnsDefaultForwarderZoneOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayDnsDefaultForwarderZoneArgs) ToNsxtEdgegatewayDnsDefaultForwarderZoneOutputWithContext(ctx context.Context) NsxtEdgegatewayDnsDefaultForwarderZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDnsDefaultForwarderZoneOutput)
}

func (i NsxtEdgegatewayDnsDefaultForwarderZoneArgs) ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutput() NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput {
	return i.ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayDnsDefaultForwarderZoneArgs) ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutputWithContext(ctx context.Context) NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDnsDefaultForwarderZoneOutput).ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutputWithContext(ctx)
}

// NsxtEdgegatewayDnsDefaultForwarderZonePtrInput is an input type that accepts NsxtEdgegatewayDnsDefaultForwarderZoneArgs, NsxtEdgegatewayDnsDefaultForwarderZonePtr and NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayDnsDefaultForwarderZonePtrInput` via:
//
//	        NsxtEdgegatewayDnsDefaultForwarderZoneArgs{...}
//
//	or:
//
//	        nil
type NsxtEdgegatewayDnsDefaultForwarderZonePtrInput interface {
	pulumi.Input

	ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutput() NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput
	ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutputWithContext(context.Context) NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput
}

type nsxtEdgegatewayDnsDefaultForwarderZonePtrType NsxtEdgegatewayDnsDefaultForwarderZoneArgs

func NsxtEdgegatewayDnsDefaultForwarderZonePtr(v *NsxtEdgegatewayDnsDefaultForwarderZoneArgs) NsxtEdgegatewayDnsDefaultForwarderZonePtrInput {
	return (*nsxtEdgegatewayDnsDefaultForwarderZonePtrType)(v)
}

func (*nsxtEdgegatewayDnsDefaultForwarderZonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegatewayDnsDefaultForwarderZone)(nil)).Elem()
}

func (i *nsxtEdgegatewayDnsDefaultForwarderZonePtrType) ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutput() NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput {
	return i.ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutputWithContext(context.Background())
}

func (i *nsxtEdgegatewayDnsDefaultForwarderZonePtrType) ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutputWithContext(ctx context.Context) NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput)
}

type NsxtEdgegatewayDnsDefaultForwarderZoneOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayDnsDefaultForwarderZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayDnsDefaultForwarderZone)(nil)).Elem()
}

func (o NsxtEdgegatewayDnsDefaultForwarderZoneOutput) ToNsxtEdgegatewayDnsDefaultForwarderZoneOutput() NsxtEdgegatewayDnsDefaultForwarderZoneOutput {
	return o
}

func (o NsxtEdgegatewayDnsDefaultForwarderZoneOutput) ToNsxtEdgegatewayDnsDefaultForwarderZoneOutputWithContext(ctx context.Context) NsxtEdgegatewayDnsDefaultForwarderZoneOutput {
	return o
}

func (o NsxtEdgegatewayDnsDefaultForwarderZoneOutput) ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutput() NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput {
	return o.ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutputWithContext(context.Background())
}

func (o NsxtEdgegatewayDnsDefaultForwarderZoneOutput) ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutputWithContext(ctx context.Context) NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtEdgegatewayDnsDefaultForwarderZone) *NsxtEdgegatewayDnsDefaultForwarderZone {
		return &v
	}).(NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput)
}

// Unique ID of the forwarder zone.
func (o NsxtEdgegatewayDnsDefaultForwarderZoneOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewayDnsDefaultForwarderZone) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the forwarder zone.
func (o NsxtEdgegatewayDnsDefaultForwarderZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewayDnsDefaultForwarderZone) string { return v.Name }).(pulumi.StringOutput)
}

// Servers to which DNS requests should be forwarded to.
func (o NsxtEdgegatewayDnsDefaultForwarderZoneOutput) UpstreamServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtEdgegatewayDnsDefaultForwarderZone) []string { return v.UpstreamServers }).(pulumi.StringArrayOutput)
}

type NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegatewayDnsDefaultForwarderZone)(nil)).Elem()
}

func (o NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput) ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutput() NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput {
	return o
}

func (o NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput) ToNsxtEdgegatewayDnsDefaultForwarderZonePtrOutputWithContext(ctx context.Context) NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput {
	return o
}

func (o NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput) Elem() NsxtEdgegatewayDnsDefaultForwarderZoneOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDnsDefaultForwarderZone) NsxtEdgegatewayDnsDefaultForwarderZone {
		if v != nil {
			return *v
		}
		var ret NsxtEdgegatewayDnsDefaultForwarderZone
		return ret
	}).(NsxtEdgegatewayDnsDefaultForwarderZoneOutput)
}

// Unique ID of the forwarder zone.
func (o NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDnsDefaultForwarderZone) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the forwarder zone.
func (o NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDnsDefaultForwarderZone) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Servers to which DNS requests should be forwarded to.
func (o NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput) UpstreamServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDnsDefaultForwarderZone) []string {
		if v == nil {
			return nil
		}
		return v.UpstreamServers
	}).(pulumi.StringArrayOutput)
}

type NsxtEdgegatewayExternalNetwork struct {
	// Number of allocated IPs
	AllocatedIpCount int `pulumi:"allocatedIpCount"`
	// An external network ID. **Note:** Data source [ExternalNetworkV2](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/external_network_v2)
	// can be used to lookup ID by name.
	ExternalNetworkId string `pulumi:"externalNetworkId"`
	// Gateway IP Address
	Gateway string `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength int `pulumi:"prefixLength"`
	// Primary IP address exposed for an easy access without nesting.
	PrimaryIp *string `pulumi:"primaryIp"`
}

// NsxtEdgegatewayExternalNetworkInput is an input type that accepts NsxtEdgegatewayExternalNetworkArgs and NsxtEdgegatewayExternalNetworkOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayExternalNetworkInput` via:
//
//	NsxtEdgegatewayExternalNetworkArgs{...}
type NsxtEdgegatewayExternalNetworkInput interface {
	pulumi.Input

	ToNsxtEdgegatewayExternalNetworkOutput() NsxtEdgegatewayExternalNetworkOutput
	ToNsxtEdgegatewayExternalNetworkOutputWithContext(context.Context) NsxtEdgegatewayExternalNetworkOutput
}

type NsxtEdgegatewayExternalNetworkArgs struct {
	// Number of allocated IPs
	AllocatedIpCount pulumi.IntInput `pulumi:"allocatedIpCount"`
	// An external network ID. **Note:** Data source [ExternalNetworkV2](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/external_network_v2)
	// can be used to lookup ID by name.
	ExternalNetworkId pulumi.StringInput `pulumi:"externalNetworkId"`
	// Gateway IP Address
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// Primary IP address exposed for an easy access without nesting.
	PrimaryIp pulumi.StringPtrInput `pulumi:"primaryIp"`
}

func (NsxtEdgegatewayExternalNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayExternalNetwork)(nil)).Elem()
}

func (i NsxtEdgegatewayExternalNetworkArgs) ToNsxtEdgegatewayExternalNetworkOutput() NsxtEdgegatewayExternalNetworkOutput {
	return i.ToNsxtEdgegatewayExternalNetworkOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayExternalNetworkArgs) ToNsxtEdgegatewayExternalNetworkOutputWithContext(ctx context.Context) NsxtEdgegatewayExternalNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayExternalNetworkOutput)
}

// NsxtEdgegatewayExternalNetworkArrayInput is an input type that accepts NsxtEdgegatewayExternalNetworkArray and NsxtEdgegatewayExternalNetworkArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayExternalNetworkArrayInput` via:
//
//	NsxtEdgegatewayExternalNetworkArray{ NsxtEdgegatewayExternalNetworkArgs{...} }
type NsxtEdgegatewayExternalNetworkArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewayExternalNetworkArrayOutput() NsxtEdgegatewayExternalNetworkArrayOutput
	ToNsxtEdgegatewayExternalNetworkArrayOutputWithContext(context.Context) NsxtEdgegatewayExternalNetworkArrayOutput
}

type NsxtEdgegatewayExternalNetworkArray []NsxtEdgegatewayExternalNetworkInput

func (NsxtEdgegatewayExternalNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewayExternalNetwork)(nil)).Elem()
}

func (i NsxtEdgegatewayExternalNetworkArray) ToNsxtEdgegatewayExternalNetworkArrayOutput() NsxtEdgegatewayExternalNetworkArrayOutput {
	return i.ToNsxtEdgegatewayExternalNetworkArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayExternalNetworkArray) ToNsxtEdgegatewayExternalNetworkArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayExternalNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayExternalNetworkArrayOutput)
}

type NsxtEdgegatewayExternalNetworkOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayExternalNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayExternalNetwork)(nil)).Elem()
}

func (o NsxtEdgegatewayExternalNetworkOutput) ToNsxtEdgegatewayExternalNetworkOutput() NsxtEdgegatewayExternalNetworkOutput {
	return o
}

func (o NsxtEdgegatewayExternalNetworkOutput) ToNsxtEdgegatewayExternalNetworkOutputWithContext(ctx context.Context) NsxtEdgegatewayExternalNetworkOutput {
	return o
}

// Number of allocated IPs
func (o NsxtEdgegatewayExternalNetworkOutput) AllocatedIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v NsxtEdgegatewayExternalNetwork) int { return v.AllocatedIpCount }).(pulumi.IntOutput)
}

// An external network ID. **Note:** Data source [ExternalNetworkV2](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/external_network_v2)
// can be used to lookup ID by name.
func (o NsxtEdgegatewayExternalNetworkOutput) ExternalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewayExternalNetwork) string { return v.ExternalNetworkId }).(pulumi.StringOutput)
}

// Gateway IP Address
func (o NsxtEdgegatewayExternalNetworkOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewayExternalNetwork) string { return v.Gateway }).(pulumi.StringOutput)
}

// Prefix length for a subnet (e.g. 24)
func (o NsxtEdgegatewayExternalNetworkOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v NsxtEdgegatewayExternalNetwork) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// Primary IP address exposed for an easy access without nesting.
func (o NsxtEdgegatewayExternalNetworkOutput) PrimaryIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewayExternalNetwork) *string { return v.PrimaryIp }).(pulumi.StringPtrOutput)
}

type NsxtEdgegatewayExternalNetworkArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayExternalNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewayExternalNetwork)(nil)).Elem()
}

func (o NsxtEdgegatewayExternalNetworkArrayOutput) ToNsxtEdgegatewayExternalNetworkArrayOutput() NsxtEdgegatewayExternalNetworkArrayOutput {
	return o
}

func (o NsxtEdgegatewayExternalNetworkArrayOutput) ToNsxtEdgegatewayExternalNetworkArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayExternalNetworkArrayOutput {
	return o
}

func (o NsxtEdgegatewayExternalNetworkArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewayExternalNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtEdgegatewayExternalNetwork {
		return vs[0].([]NsxtEdgegatewayExternalNetwork)[vs[1].(int)]
	}).(NsxtEdgegatewayExternalNetworkOutput)
}

type NsxtEdgegatewayL2VpnTunnelStretchedNetwork struct {
	// ID of the Org VDC network
	NetworkId string `pulumi:"networkId"`
	// Tunnel ID of the network for the tunnel. Read-only for `SERVER` sessions.
	TunnelId *int `pulumi:"tunnelId"`
}

// NsxtEdgegatewayL2VpnTunnelStretchedNetworkInput is an input type that accepts NsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs and NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayL2VpnTunnelStretchedNetworkInput` via:
//
//	NsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs{...}
type NsxtEdgegatewayL2VpnTunnelStretchedNetworkInput interface {
	pulumi.Input

	ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput() NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput
	ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutputWithContext(context.Context) NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput
}

type NsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs struct {
	// ID of the Org VDC network
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Tunnel ID of the network for the tunnel. Read-only for `SERVER` sessions.
	TunnelId pulumi.IntPtrInput `pulumi:"tunnelId"`
}

func (NsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayL2VpnTunnelStretchedNetwork)(nil)).Elem()
}

func (i NsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs) ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput() NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput {
	return i.ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs) ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutputWithContext(ctx context.Context) NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput)
}

// NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayInput is an input type that accepts NsxtEdgegatewayL2VpnTunnelStretchedNetworkArray and NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayInput` via:
//
//	NsxtEdgegatewayL2VpnTunnelStretchedNetworkArray{ NsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs{...} }
type NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput() NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput
	ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutputWithContext(context.Context) NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput
}

type NsxtEdgegatewayL2VpnTunnelStretchedNetworkArray []NsxtEdgegatewayL2VpnTunnelStretchedNetworkInput

func (NsxtEdgegatewayL2VpnTunnelStretchedNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewayL2VpnTunnelStretchedNetwork)(nil)).Elem()
}

func (i NsxtEdgegatewayL2VpnTunnelStretchedNetworkArray) ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput() NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput {
	return i.ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayL2VpnTunnelStretchedNetworkArray) ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput)
}

type NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayL2VpnTunnelStretchedNetwork)(nil)).Elem()
}

func (o NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput) ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput() NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput {
	return o
}

func (o NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput) ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutputWithContext(ctx context.Context) NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput {
	return o
}

// ID of the Org VDC network
func (o NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewayL2VpnTunnelStretchedNetwork) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Tunnel ID of the network for the tunnel. Read-only for `SERVER` sessions.
func (o NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput) TunnelId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewayL2VpnTunnelStretchedNetwork) *int { return v.TunnelId }).(pulumi.IntPtrOutput)
}

type NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewayL2VpnTunnelStretchedNetwork)(nil)).Elem()
}

func (o NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput) ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput() NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput {
	return o
}

func (o NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput) ToNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput {
	return o
}

func (o NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtEdgegatewayL2VpnTunnelStretchedNetwork {
		return vs[0].([]NsxtEdgegatewayL2VpnTunnelStretchedNetwork)[vs[1].(int)]
	}).(NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput)
}

type NsxtEdgegatewayStaticRouteNextHop struct {
	// Admin distance of next hop
	AdminDistance int `pulumi:"adminDistance"`
	// IP Address of next hop
	IpAddress string                                  `pulumi:"ipAddress"`
	Scope     *NsxtEdgegatewayStaticRouteNextHopScope `pulumi:"scope"`
}

// NsxtEdgegatewayStaticRouteNextHopInput is an input type that accepts NsxtEdgegatewayStaticRouteNextHopArgs and NsxtEdgegatewayStaticRouteNextHopOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayStaticRouteNextHopInput` via:
//
//	NsxtEdgegatewayStaticRouteNextHopArgs{...}
type NsxtEdgegatewayStaticRouteNextHopInput interface {
	pulumi.Input

	ToNsxtEdgegatewayStaticRouteNextHopOutput() NsxtEdgegatewayStaticRouteNextHopOutput
	ToNsxtEdgegatewayStaticRouteNextHopOutputWithContext(context.Context) NsxtEdgegatewayStaticRouteNextHopOutput
}

type NsxtEdgegatewayStaticRouteNextHopArgs struct {
	// Admin distance of next hop
	AdminDistance pulumi.IntInput `pulumi:"adminDistance"`
	// IP Address of next hop
	IpAddress pulumi.StringInput                             `pulumi:"ipAddress"`
	Scope     NsxtEdgegatewayStaticRouteNextHopScopePtrInput `pulumi:"scope"`
}

func (NsxtEdgegatewayStaticRouteNextHopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayStaticRouteNextHop)(nil)).Elem()
}

func (i NsxtEdgegatewayStaticRouteNextHopArgs) ToNsxtEdgegatewayStaticRouteNextHopOutput() NsxtEdgegatewayStaticRouteNextHopOutput {
	return i.ToNsxtEdgegatewayStaticRouteNextHopOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayStaticRouteNextHopArgs) ToNsxtEdgegatewayStaticRouteNextHopOutputWithContext(ctx context.Context) NsxtEdgegatewayStaticRouteNextHopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayStaticRouteNextHopOutput)
}

// NsxtEdgegatewayStaticRouteNextHopArrayInput is an input type that accepts NsxtEdgegatewayStaticRouteNextHopArray and NsxtEdgegatewayStaticRouteNextHopArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayStaticRouteNextHopArrayInput` via:
//
//	NsxtEdgegatewayStaticRouteNextHopArray{ NsxtEdgegatewayStaticRouteNextHopArgs{...} }
type NsxtEdgegatewayStaticRouteNextHopArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewayStaticRouteNextHopArrayOutput() NsxtEdgegatewayStaticRouteNextHopArrayOutput
	ToNsxtEdgegatewayStaticRouteNextHopArrayOutputWithContext(context.Context) NsxtEdgegatewayStaticRouteNextHopArrayOutput
}

type NsxtEdgegatewayStaticRouteNextHopArray []NsxtEdgegatewayStaticRouteNextHopInput

func (NsxtEdgegatewayStaticRouteNextHopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewayStaticRouteNextHop)(nil)).Elem()
}

func (i NsxtEdgegatewayStaticRouteNextHopArray) ToNsxtEdgegatewayStaticRouteNextHopArrayOutput() NsxtEdgegatewayStaticRouteNextHopArrayOutput {
	return i.ToNsxtEdgegatewayStaticRouteNextHopArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayStaticRouteNextHopArray) ToNsxtEdgegatewayStaticRouteNextHopArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayStaticRouteNextHopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayStaticRouteNextHopArrayOutput)
}

type NsxtEdgegatewayStaticRouteNextHopOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayStaticRouteNextHopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayStaticRouteNextHop)(nil)).Elem()
}

func (o NsxtEdgegatewayStaticRouteNextHopOutput) ToNsxtEdgegatewayStaticRouteNextHopOutput() NsxtEdgegatewayStaticRouteNextHopOutput {
	return o
}

func (o NsxtEdgegatewayStaticRouteNextHopOutput) ToNsxtEdgegatewayStaticRouteNextHopOutputWithContext(ctx context.Context) NsxtEdgegatewayStaticRouteNextHopOutput {
	return o
}

// Admin distance of next hop
func (o NsxtEdgegatewayStaticRouteNextHopOutput) AdminDistance() pulumi.IntOutput {
	return o.ApplyT(func(v NsxtEdgegatewayStaticRouteNextHop) int { return v.AdminDistance }).(pulumi.IntOutput)
}

// IP Address of next hop
func (o NsxtEdgegatewayStaticRouteNextHopOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewayStaticRouteNextHop) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o NsxtEdgegatewayStaticRouteNextHopOutput) Scope() NsxtEdgegatewayStaticRouteNextHopScopePtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewayStaticRouteNextHop) *NsxtEdgegatewayStaticRouteNextHopScope { return v.Scope }).(NsxtEdgegatewayStaticRouteNextHopScopePtrOutput)
}

type NsxtEdgegatewayStaticRouteNextHopArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayStaticRouteNextHopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewayStaticRouteNextHop)(nil)).Elem()
}

func (o NsxtEdgegatewayStaticRouteNextHopArrayOutput) ToNsxtEdgegatewayStaticRouteNextHopArrayOutput() NsxtEdgegatewayStaticRouteNextHopArrayOutput {
	return o
}

func (o NsxtEdgegatewayStaticRouteNextHopArrayOutput) ToNsxtEdgegatewayStaticRouteNextHopArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayStaticRouteNextHopArrayOutput {
	return o
}

func (o NsxtEdgegatewayStaticRouteNextHopArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewayStaticRouteNextHopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtEdgegatewayStaticRouteNextHop {
		return vs[0].([]NsxtEdgegatewayStaticRouteNextHop)[vs[1].(int)]
	}).(NsxtEdgegatewayStaticRouteNextHopOutput)
}

type NsxtEdgegatewayStaticRouteNextHopScope struct {
	// ID of Scope element
	Id string `pulumi:"id"`
	// Name for NSX-T Edge Gateway Static Route
	Name *string `pulumi:"name"`
	// Scope type - One of 'NETWORK', 'SYSTEM_OWNED'
	Type string `pulumi:"type"`
}

// NsxtEdgegatewayStaticRouteNextHopScopeInput is an input type that accepts NsxtEdgegatewayStaticRouteNextHopScopeArgs and NsxtEdgegatewayStaticRouteNextHopScopeOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayStaticRouteNextHopScopeInput` via:
//
//	NsxtEdgegatewayStaticRouteNextHopScopeArgs{...}
type NsxtEdgegatewayStaticRouteNextHopScopeInput interface {
	pulumi.Input

	ToNsxtEdgegatewayStaticRouteNextHopScopeOutput() NsxtEdgegatewayStaticRouteNextHopScopeOutput
	ToNsxtEdgegatewayStaticRouteNextHopScopeOutputWithContext(context.Context) NsxtEdgegatewayStaticRouteNextHopScopeOutput
}

type NsxtEdgegatewayStaticRouteNextHopScopeArgs struct {
	// ID of Scope element
	Id pulumi.StringInput `pulumi:"id"`
	// Name for NSX-T Edge Gateway Static Route
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Scope type - One of 'NETWORK', 'SYSTEM_OWNED'
	Type pulumi.StringInput `pulumi:"type"`
}

func (NsxtEdgegatewayStaticRouteNextHopScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayStaticRouteNextHopScope)(nil)).Elem()
}

func (i NsxtEdgegatewayStaticRouteNextHopScopeArgs) ToNsxtEdgegatewayStaticRouteNextHopScopeOutput() NsxtEdgegatewayStaticRouteNextHopScopeOutput {
	return i.ToNsxtEdgegatewayStaticRouteNextHopScopeOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayStaticRouteNextHopScopeArgs) ToNsxtEdgegatewayStaticRouteNextHopScopeOutputWithContext(ctx context.Context) NsxtEdgegatewayStaticRouteNextHopScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayStaticRouteNextHopScopeOutput)
}

func (i NsxtEdgegatewayStaticRouteNextHopScopeArgs) ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutput() NsxtEdgegatewayStaticRouteNextHopScopePtrOutput {
	return i.ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayStaticRouteNextHopScopeArgs) ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutputWithContext(ctx context.Context) NsxtEdgegatewayStaticRouteNextHopScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayStaticRouteNextHopScopeOutput).ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutputWithContext(ctx)
}

// NsxtEdgegatewayStaticRouteNextHopScopePtrInput is an input type that accepts NsxtEdgegatewayStaticRouteNextHopScopeArgs, NsxtEdgegatewayStaticRouteNextHopScopePtr and NsxtEdgegatewayStaticRouteNextHopScopePtrOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayStaticRouteNextHopScopePtrInput` via:
//
//	        NsxtEdgegatewayStaticRouteNextHopScopeArgs{...}
//
//	or:
//
//	        nil
type NsxtEdgegatewayStaticRouteNextHopScopePtrInput interface {
	pulumi.Input

	ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutput() NsxtEdgegatewayStaticRouteNextHopScopePtrOutput
	ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutputWithContext(context.Context) NsxtEdgegatewayStaticRouteNextHopScopePtrOutput
}

type nsxtEdgegatewayStaticRouteNextHopScopePtrType NsxtEdgegatewayStaticRouteNextHopScopeArgs

func NsxtEdgegatewayStaticRouteNextHopScopePtr(v *NsxtEdgegatewayStaticRouteNextHopScopeArgs) NsxtEdgegatewayStaticRouteNextHopScopePtrInput {
	return (*nsxtEdgegatewayStaticRouteNextHopScopePtrType)(v)
}

func (*nsxtEdgegatewayStaticRouteNextHopScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegatewayStaticRouteNextHopScope)(nil)).Elem()
}

func (i *nsxtEdgegatewayStaticRouteNextHopScopePtrType) ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutput() NsxtEdgegatewayStaticRouteNextHopScopePtrOutput {
	return i.ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutputWithContext(context.Background())
}

func (i *nsxtEdgegatewayStaticRouteNextHopScopePtrType) ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutputWithContext(ctx context.Context) NsxtEdgegatewayStaticRouteNextHopScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayStaticRouteNextHopScopePtrOutput)
}

type NsxtEdgegatewayStaticRouteNextHopScopeOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayStaticRouteNextHopScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewayStaticRouteNextHopScope)(nil)).Elem()
}

func (o NsxtEdgegatewayStaticRouteNextHopScopeOutput) ToNsxtEdgegatewayStaticRouteNextHopScopeOutput() NsxtEdgegatewayStaticRouteNextHopScopeOutput {
	return o
}

func (o NsxtEdgegatewayStaticRouteNextHopScopeOutput) ToNsxtEdgegatewayStaticRouteNextHopScopeOutputWithContext(ctx context.Context) NsxtEdgegatewayStaticRouteNextHopScopeOutput {
	return o
}

func (o NsxtEdgegatewayStaticRouteNextHopScopeOutput) ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutput() NsxtEdgegatewayStaticRouteNextHopScopePtrOutput {
	return o.ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutputWithContext(context.Background())
}

func (o NsxtEdgegatewayStaticRouteNextHopScopeOutput) ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutputWithContext(ctx context.Context) NsxtEdgegatewayStaticRouteNextHopScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtEdgegatewayStaticRouteNextHopScope) *NsxtEdgegatewayStaticRouteNextHopScope {
		return &v
	}).(NsxtEdgegatewayStaticRouteNextHopScopePtrOutput)
}

// ID of Scope element
func (o NsxtEdgegatewayStaticRouteNextHopScopeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewayStaticRouteNextHopScope) string { return v.Id }).(pulumi.StringOutput)
}

// Name for NSX-T Edge Gateway Static Route
func (o NsxtEdgegatewayStaticRouteNextHopScopeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewayStaticRouteNextHopScope) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Scope type - One of 'NETWORK', 'SYSTEM_OWNED'
func (o NsxtEdgegatewayStaticRouteNextHopScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewayStaticRouteNextHopScope) string { return v.Type }).(pulumi.StringOutput)
}

type NsxtEdgegatewayStaticRouteNextHopScopePtrOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayStaticRouteNextHopScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegatewayStaticRouteNextHopScope)(nil)).Elem()
}

func (o NsxtEdgegatewayStaticRouteNextHopScopePtrOutput) ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutput() NsxtEdgegatewayStaticRouteNextHopScopePtrOutput {
	return o
}

func (o NsxtEdgegatewayStaticRouteNextHopScopePtrOutput) ToNsxtEdgegatewayStaticRouteNextHopScopePtrOutputWithContext(ctx context.Context) NsxtEdgegatewayStaticRouteNextHopScopePtrOutput {
	return o
}

func (o NsxtEdgegatewayStaticRouteNextHopScopePtrOutput) Elem() NsxtEdgegatewayStaticRouteNextHopScopeOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayStaticRouteNextHopScope) NsxtEdgegatewayStaticRouteNextHopScope {
		if v != nil {
			return *v
		}
		var ret NsxtEdgegatewayStaticRouteNextHopScope
		return ret
	}).(NsxtEdgegatewayStaticRouteNextHopScopeOutput)
}

// ID of Scope element
func (o NsxtEdgegatewayStaticRouteNextHopScopePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayStaticRouteNextHopScope) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Name for NSX-T Edge Gateway Static Route
func (o NsxtEdgegatewayStaticRouteNextHopScopePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayStaticRouteNextHopScope) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Scope type - One of 'NETWORK', 'SYSTEM_OWNED'
func (o NsxtEdgegatewayStaticRouteNextHopScopePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayStaticRouteNextHopScope) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type NsxtEdgegatewaySubnet struct {
	// Define one or more blocks to sub-allocate pools on the edge gateway
	AllocatedIps []NsxtEdgegatewaySubnetAllocatedIp `pulumi:"allocatedIps"`
	// Gateway address for a subnet
	Gateway string `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength int `pulumi:"prefixLength"`
	// Primary IP address exposed for an easy access without nesting.
	PrimaryIp *string `pulumi:"primaryIp"`
}

// NsxtEdgegatewaySubnetInput is an input type that accepts NsxtEdgegatewaySubnetArgs and NsxtEdgegatewaySubnetOutput values.
// You can construct a concrete instance of `NsxtEdgegatewaySubnetInput` via:
//
//	NsxtEdgegatewaySubnetArgs{...}
type NsxtEdgegatewaySubnetInput interface {
	pulumi.Input

	ToNsxtEdgegatewaySubnetOutput() NsxtEdgegatewaySubnetOutput
	ToNsxtEdgegatewaySubnetOutputWithContext(context.Context) NsxtEdgegatewaySubnetOutput
}

type NsxtEdgegatewaySubnetArgs struct {
	// Define one or more blocks to sub-allocate pools on the edge gateway
	AllocatedIps NsxtEdgegatewaySubnetAllocatedIpArrayInput `pulumi:"allocatedIps"`
	// Gateway address for a subnet
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// Primary IP address exposed for an easy access without nesting.
	PrimaryIp pulumi.StringPtrInput `pulumi:"primaryIp"`
}

func (NsxtEdgegatewaySubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewaySubnet)(nil)).Elem()
}

func (i NsxtEdgegatewaySubnetArgs) ToNsxtEdgegatewaySubnetOutput() NsxtEdgegatewaySubnetOutput {
	return i.ToNsxtEdgegatewaySubnetOutputWithContext(context.Background())
}

func (i NsxtEdgegatewaySubnetArgs) ToNsxtEdgegatewaySubnetOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewaySubnetOutput)
}

// NsxtEdgegatewaySubnetArrayInput is an input type that accepts NsxtEdgegatewaySubnetArray and NsxtEdgegatewaySubnetArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewaySubnetArrayInput` via:
//
//	NsxtEdgegatewaySubnetArray{ NsxtEdgegatewaySubnetArgs{...} }
type NsxtEdgegatewaySubnetArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewaySubnetArrayOutput() NsxtEdgegatewaySubnetArrayOutput
	ToNsxtEdgegatewaySubnetArrayOutputWithContext(context.Context) NsxtEdgegatewaySubnetArrayOutput
}

type NsxtEdgegatewaySubnetArray []NsxtEdgegatewaySubnetInput

func (NsxtEdgegatewaySubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewaySubnet)(nil)).Elem()
}

func (i NsxtEdgegatewaySubnetArray) ToNsxtEdgegatewaySubnetArrayOutput() NsxtEdgegatewaySubnetArrayOutput {
	return i.ToNsxtEdgegatewaySubnetArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewaySubnetArray) ToNsxtEdgegatewaySubnetArrayOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewaySubnetArrayOutput)
}

type NsxtEdgegatewaySubnetOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewaySubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewaySubnet)(nil)).Elem()
}

func (o NsxtEdgegatewaySubnetOutput) ToNsxtEdgegatewaySubnetOutput() NsxtEdgegatewaySubnetOutput {
	return o
}

func (o NsxtEdgegatewaySubnetOutput) ToNsxtEdgegatewaySubnetOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetOutput {
	return o
}

// Define one or more blocks to sub-allocate pools on the edge gateway
func (o NsxtEdgegatewaySubnetOutput) AllocatedIps() NsxtEdgegatewaySubnetAllocatedIpArrayOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnet) []NsxtEdgegatewaySubnetAllocatedIp { return v.AllocatedIps }).(NsxtEdgegatewaySubnetAllocatedIpArrayOutput)
}

// Gateway address for a subnet
func (o NsxtEdgegatewaySubnetOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnet) string { return v.Gateway }).(pulumi.StringOutput)
}

// Prefix length for a subnet (e.g. 24)
func (o NsxtEdgegatewaySubnetOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnet) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// Primary IP address exposed for an easy access without nesting.
func (o NsxtEdgegatewaySubnetOutput) PrimaryIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnet) *string { return v.PrimaryIp }).(pulumi.StringPtrOutput)
}

type NsxtEdgegatewaySubnetArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewaySubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewaySubnet)(nil)).Elem()
}

func (o NsxtEdgegatewaySubnetArrayOutput) ToNsxtEdgegatewaySubnetArrayOutput() NsxtEdgegatewaySubnetArrayOutput {
	return o
}

func (o NsxtEdgegatewaySubnetArrayOutput) ToNsxtEdgegatewaySubnetArrayOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetArrayOutput {
	return o
}

func (o NsxtEdgegatewaySubnetArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewaySubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtEdgegatewaySubnet {
		return vs[0].([]NsxtEdgegatewaySubnet)[vs[1].(int)]
	}).(NsxtEdgegatewaySubnetOutput)
}

type NsxtEdgegatewaySubnetAllocatedIp struct {
	EndAddress   string `pulumi:"endAddress"`
	StartAddress string `pulumi:"startAddress"`
}

// NsxtEdgegatewaySubnetAllocatedIpInput is an input type that accepts NsxtEdgegatewaySubnetAllocatedIpArgs and NsxtEdgegatewaySubnetAllocatedIpOutput values.
// You can construct a concrete instance of `NsxtEdgegatewaySubnetAllocatedIpInput` via:
//
//	NsxtEdgegatewaySubnetAllocatedIpArgs{...}
type NsxtEdgegatewaySubnetAllocatedIpInput interface {
	pulumi.Input

	ToNsxtEdgegatewaySubnetAllocatedIpOutput() NsxtEdgegatewaySubnetAllocatedIpOutput
	ToNsxtEdgegatewaySubnetAllocatedIpOutputWithContext(context.Context) NsxtEdgegatewaySubnetAllocatedIpOutput
}

type NsxtEdgegatewaySubnetAllocatedIpArgs struct {
	EndAddress   pulumi.StringInput `pulumi:"endAddress"`
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NsxtEdgegatewaySubnetAllocatedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewaySubnetAllocatedIp)(nil)).Elem()
}

func (i NsxtEdgegatewaySubnetAllocatedIpArgs) ToNsxtEdgegatewaySubnetAllocatedIpOutput() NsxtEdgegatewaySubnetAllocatedIpOutput {
	return i.ToNsxtEdgegatewaySubnetAllocatedIpOutputWithContext(context.Background())
}

func (i NsxtEdgegatewaySubnetAllocatedIpArgs) ToNsxtEdgegatewaySubnetAllocatedIpOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetAllocatedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewaySubnetAllocatedIpOutput)
}

// NsxtEdgegatewaySubnetAllocatedIpArrayInput is an input type that accepts NsxtEdgegatewaySubnetAllocatedIpArray and NsxtEdgegatewaySubnetAllocatedIpArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewaySubnetAllocatedIpArrayInput` via:
//
//	NsxtEdgegatewaySubnetAllocatedIpArray{ NsxtEdgegatewaySubnetAllocatedIpArgs{...} }
type NsxtEdgegatewaySubnetAllocatedIpArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewaySubnetAllocatedIpArrayOutput() NsxtEdgegatewaySubnetAllocatedIpArrayOutput
	ToNsxtEdgegatewaySubnetAllocatedIpArrayOutputWithContext(context.Context) NsxtEdgegatewaySubnetAllocatedIpArrayOutput
}

type NsxtEdgegatewaySubnetAllocatedIpArray []NsxtEdgegatewaySubnetAllocatedIpInput

func (NsxtEdgegatewaySubnetAllocatedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewaySubnetAllocatedIp)(nil)).Elem()
}

func (i NsxtEdgegatewaySubnetAllocatedIpArray) ToNsxtEdgegatewaySubnetAllocatedIpArrayOutput() NsxtEdgegatewaySubnetAllocatedIpArrayOutput {
	return i.ToNsxtEdgegatewaySubnetAllocatedIpArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewaySubnetAllocatedIpArray) ToNsxtEdgegatewaySubnetAllocatedIpArrayOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetAllocatedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewaySubnetAllocatedIpArrayOutput)
}

type NsxtEdgegatewaySubnetAllocatedIpOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewaySubnetAllocatedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewaySubnetAllocatedIp)(nil)).Elem()
}

func (o NsxtEdgegatewaySubnetAllocatedIpOutput) ToNsxtEdgegatewaySubnetAllocatedIpOutput() NsxtEdgegatewaySubnetAllocatedIpOutput {
	return o
}

func (o NsxtEdgegatewaySubnetAllocatedIpOutput) ToNsxtEdgegatewaySubnetAllocatedIpOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetAllocatedIpOutput {
	return o
}

func (o NsxtEdgegatewaySubnetAllocatedIpOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnetAllocatedIp) string { return v.EndAddress }).(pulumi.StringOutput)
}

func (o NsxtEdgegatewaySubnetAllocatedIpOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnetAllocatedIp) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NsxtEdgegatewaySubnetAllocatedIpArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewaySubnetAllocatedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewaySubnetAllocatedIp)(nil)).Elem()
}

func (o NsxtEdgegatewaySubnetAllocatedIpArrayOutput) ToNsxtEdgegatewaySubnetAllocatedIpArrayOutput() NsxtEdgegatewaySubnetAllocatedIpArrayOutput {
	return o
}

func (o NsxtEdgegatewaySubnetAllocatedIpArrayOutput) ToNsxtEdgegatewaySubnetAllocatedIpArrayOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetAllocatedIpArrayOutput {
	return o
}

func (o NsxtEdgegatewaySubnetAllocatedIpArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewaySubnetAllocatedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtEdgegatewaySubnetAllocatedIp {
		return vs[0].([]NsxtEdgegatewaySubnetAllocatedIp)[vs[1].(int)]
	}).(NsxtEdgegatewaySubnetAllocatedIpOutput)
}

type NsxtEdgegatewaySubnetWithIpCount struct {
	// Number of IP addresses to allocate
	AllocatedIpCount int `pulumi:"allocatedIpCount"`
	// Gateway address for a subnet
	Gateway string `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength int `pulumi:"prefixLength"`
	// Primary IP address exposed for an easy access without nesting.
	PrimaryIp *string `pulumi:"primaryIp"`
}

// NsxtEdgegatewaySubnetWithIpCountInput is an input type that accepts NsxtEdgegatewaySubnetWithIpCountArgs and NsxtEdgegatewaySubnetWithIpCountOutput values.
// You can construct a concrete instance of `NsxtEdgegatewaySubnetWithIpCountInput` via:
//
//	NsxtEdgegatewaySubnetWithIpCountArgs{...}
type NsxtEdgegatewaySubnetWithIpCountInput interface {
	pulumi.Input

	ToNsxtEdgegatewaySubnetWithIpCountOutput() NsxtEdgegatewaySubnetWithIpCountOutput
	ToNsxtEdgegatewaySubnetWithIpCountOutputWithContext(context.Context) NsxtEdgegatewaySubnetWithIpCountOutput
}

type NsxtEdgegatewaySubnetWithIpCountArgs struct {
	// Number of IP addresses to allocate
	AllocatedIpCount pulumi.IntInput `pulumi:"allocatedIpCount"`
	// Gateway address for a subnet
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// Primary IP address exposed for an easy access without nesting.
	PrimaryIp pulumi.StringPtrInput `pulumi:"primaryIp"`
}

func (NsxtEdgegatewaySubnetWithIpCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewaySubnetWithIpCount)(nil)).Elem()
}

func (i NsxtEdgegatewaySubnetWithIpCountArgs) ToNsxtEdgegatewaySubnetWithIpCountOutput() NsxtEdgegatewaySubnetWithIpCountOutput {
	return i.ToNsxtEdgegatewaySubnetWithIpCountOutputWithContext(context.Background())
}

func (i NsxtEdgegatewaySubnetWithIpCountArgs) ToNsxtEdgegatewaySubnetWithIpCountOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetWithIpCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewaySubnetWithIpCountOutput)
}

// NsxtEdgegatewaySubnetWithIpCountArrayInput is an input type that accepts NsxtEdgegatewaySubnetWithIpCountArray and NsxtEdgegatewaySubnetWithIpCountArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewaySubnetWithIpCountArrayInput` via:
//
//	NsxtEdgegatewaySubnetWithIpCountArray{ NsxtEdgegatewaySubnetWithIpCountArgs{...} }
type NsxtEdgegatewaySubnetWithIpCountArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewaySubnetWithIpCountArrayOutput() NsxtEdgegatewaySubnetWithIpCountArrayOutput
	ToNsxtEdgegatewaySubnetWithIpCountArrayOutputWithContext(context.Context) NsxtEdgegatewaySubnetWithIpCountArrayOutput
}

type NsxtEdgegatewaySubnetWithIpCountArray []NsxtEdgegatewaySubnetWithIpCountInput

func (NsxtEdgegatewaySubnetWithIpCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewaySubnetWithIpCount)(nil)).Elem()
}

func (i NsxtEdgegatewaySubnetWithIpCountArray) ToNsxtEdgegatewaySubnetWithIpCountArrayOutput() NsxtEdgegatewaySubnetWithIpCountArrayOutput {
	return i.ToNsxtEdgegatewaySubnetWithIpCountArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewaySubnetWithIpCountArray) ToNsxtEdgegatewaySubnetWithIpCountArrayOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetWithIpCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewaySubnetWithIpCountArrayOutput)
}

type NsxtEdgegatewaySubnetWithIpCountOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewaySubnetWithIpCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewaySubnetWithIpCount)(nil)).Elem()
}

func (o NsxtEdgegatewaySubnetWithIpCountOutput) ToNsxtEdgegatewaySubnetWithIpCountOutput() NsxtEdgegatewaySubnetWithIpCountOutput {
	return o
}

func (o NsxtEdgegatewaySubnetWithIpCountOutput) ToNsxtEdgegatewaySubnetWithIpCountOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetWithIpCountOutput {
	return o
}

// Number of IP addresses to allocate
func (o NsxtEdgegatewaySubnetWithIpCountOutput) AllocatedIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnetWithIpCount) int { return v.AllocatedIpCount }).(pulumi.IntOutput)
}

// Gateway address for a subnet
func (o NsxtEdgegatewaySubnetWithIpCountOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnetWithIpCount) string { return v.Gateway }).(pulumi.StringOutput)
}

// Prefix length for a subnet (e.g. 24)
func (o NsxtEdgegatewaySubnetWithIpCountOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnetWithIpCount) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// Primary IP address exposed for an easy access without nesting.
func (o NsxtEdgegatewaySubnetWithIpCountOutput) PrimaryIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnetWithIpCount) *string { return v.PrimaryIp }).(pulumi.StringPtrOutput)
}

type NsxtEdgegatewaySubnetWithIpCountArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewaySubnetWithIpCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewaySubnetWithIpCount)(nil)).Elem()
}

func (o NsxtEdgegatewaySubnetWithIpCountArrayOutput) ToNsxtEdgegatewaySubnetWithIpCountArrayOutput() NsxtEdgegatewaySubnetWithIpCountArrayOutput {
	return o
}

func (o NsxtEdgegatewaySubnetWithIpCountArrayOutput) ToNsxtEdgegatewaySubnetWithIpCountArrayOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetWithIpCountArrayOutput {
	return o
}

func (o NsxtEdgegatewaySubnetWithIpCountArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewaySubnetWithIpCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtEdgegatewaySubnetWithIpCount {
		return vs[0].([]NsxtEdgegatewaySubnetWithIpCount)[vs[1].(int)]
	}).(NsxtEdgegatewaySubnetWithIpCountOutput)
}

type NsxtEdgegatewaySubnetWithTotalIpCount struct {
	// Gateway address for a subnet
	Gateway string `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength int `pulumi:"prefixLength"`
	// Primary IP address exposed for an easy access without nesting.
	PrimaryIp *string `pulumi:"primaryIp"`
}

// NsxtEdgegatewaySubnetWithTotalIpCountInput is an input type that accepts NsxtEdgegatewaySubnetWithTotalIpCountArgs and NsxtEdgegatewaySubnetWithTotalIpCountOutput values.
// You can construct a concrete instance of `NsxtEdgegatewaySubnetWithTotalIpCountInput` via:
//
//	NsxtEdgegatewaySubnetWithTotalIpCountArgs{...}
type NsxtEdgegatewaySubnetWithTotalIpCountInput interface {
	pulumi.Input

	ToNsxtEdgegatewaySubnetWithTotalIpCountOutput() NsxtEdgegatewaySubnetWithTotalIpCountOutput
	ToNsxtEdgegatewaySubnetWithTotalIpCountOutputWithContext(context.Context) NsxtEdgegatewaySubnetWithTotalIpCountOutput
}

type NsxtEdgegatewaySubnetWithTotalIpCountArgs struct {
	// Gateway address for a subnet
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// Primary IP address exposed for an easy access without nesting.
	PrimaryIp pulumi.StringPtrInput `pulumi:"primaryIp"`
}

func (NsxtEdgegatewaySubnetWithTotalIpCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewaySubnetWithTotalIpCount)(nil)).Elem()
}

func (i NsxtEdgegatewaySubnetWithTotalIpCountArgs) ToNsxtEdgegatewaySubnetWithTotalIpCountOutput() NsxtEdgegatewaySubnetWithTotalIpCountOutput {
	return i.ToNsxtEdgegatewaySubnetWithTotalIpCountOutputWithContext(context.Background())
}

func (i NsxtEdgegatewaySubnetWithTotalIpCountArgs) ToNsxtEdgegatewaySubnetWithTotalIpCountOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetWithTotalIpCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewaySubnetWithTotalIpCountOutput)
}

// NsxtEdgegatewaySubnetWithTotalIpCountArrayInput is an input type that accepts NsxtEdgegatewaySubnetWithTotalIpCountArray and NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewaySubnetWithTotalIpCountArrayInput` via:
//
//	NsxtEdgegatewaySubnetWithTotalIpCountArray{ NsxtEdgegatewaySubnetWithTotalIpCountArgs{...} }
type NsxtEdgegatewaySubnetWithTotalIpCountArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput() NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput
	ToNsxtEdgegatewaySubnetWithTotalIpCountArrayOutputWithContext(context.Context) NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput
}

type NsxtEdgegatewaySubnetWithTotalIpCountArray []NsxtEdgegatewaySubnetWithTotalIpCountInput

func (NsxtEdgegatewaySubnetWithTotalIpCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewaySubnetWithTotalIpCount)(nil)).Elem()
}

func (i NsxtEdgegatewaySubnetWithTotalIpCountArray) ToNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput() NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput {
	return i.ToNsxtEdgegatewaySubnetWithTotalIpCountArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewaySubnetWithTotalIpCountArray) ToNsxtEdgegatewaySubnetWithTotalIpCountArrayOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput)
}

type NsxtEdgegatewaySubnetWithTotalIpCountOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewaySubnetWithTotalIpCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtEdgegatewaySubnetWithTotalIpCount)(nil)).Elem()
}

func (o NsxtEdgegatewaySubnetWithTotalIpCountOutput) ToNsxtEdgegatewaySubnetWithTotalIpCountOutput() NsxtEdgegatewaySubnetWithTotalIpCountOutput {
	return o
}

func (o NsxtEdgegatewaySubnetWithTotalIpCountOutput) ToNsxtEdgegatewaySubnetWithTotalIpCountOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetWithTotalIpCountOutput {
	return o
}

// Gateway address for a subnet
func (o NsxtEdgegatewaySubnetWithTotalIpCountOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnetWithTotalIpCount) string { return v.Gateway }).(pulumi.StringOutput)
}

// Prefix length for a subnet (e.g. 24)
func (o NsxtEdgegatewaySubnetWithTotalIpCountOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnetWithTotalIpCount) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// Primary IP address exposed for an easy access without nesting.
func (o NsxtEdgegatewaySubnetWithTotalIpCountOutput) PrimaryIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtEdgegatewaySubnetWithTotalIpCount) *string { return v.PrimaryIp }).(pulumi.StringPtrOutput)
}

type NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtEdgegatewaySubnetWithTotalIpCount)(nil)).Elem()
}

func (o NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput) ToNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput() NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput {
	return o
}

func (o NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput) ToNsxtEdgegatewaySubnetWithTotalIpCountArrayOutputWithContext(ctx context.Context) NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput {
	return o
}

func (o NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewaySubnetWithTotalIpCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtEdgegatewaySubnetWithTotalIpCount {
		return vs[0].([]NsxtEdgegatewaySubnetWithTotalIpCount)[vs[1].(int)]
	}).(NsxtEdgegatewaySubnetWithTotalIpCountOutput)
}

type NsxtFirewallRule struct {
	// Defines if the rule should 'ALLOW', 'DROP' or 'REJECT' matching traffic
	Action string `pulumi:"action"`
	// A set of Application Port Profile IDs. Leaving it empty means 'Any'
	AppPortProfileIds []string `pulumi:"appPortProfileIds"`
	// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	DestinationIds []string `pulumi:"destinationIds"`
	// Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')
	Direction string `pulumi:"direction"`
	// Defined if Firewall Rule is active
	Enabled *bool `pulumi:"enabled"`
	// Firewall Rule ID
	Id *string `pulumi:"id"`
	// Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')
	IpProtocol string `pulumi:"ipProtocol"`
	// Defines if matching traffic should be logged
	Logging *bool `pulumi:"logging"`
	// Firewall Rule name
	Name string `pulumi:"name"`
	// A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	SourceIds []string `pulumi:"sourceIds"`
}

// NsxtFirewallRuleInput is an input type that accepts NsxtFirewallRuleArgs and NsxtFirewallRuleOutput values.
// You can construct a concrete instance of `NsxtFirewallRuleInput` via:
//
//	NsxtFirewallRuleArgs{...}
type NsxtFirewallRuleInput interface {
	pulumi.Input

	ToNsxtFirewallRuleOutput() NsxtFirewallRuleOutput
	ToNsxtFirewallRuleOutputWithContext(context.Context) NsxtFirewallRuleOutput
}

type NsxtFirewallRuleArgs struct {
	// Defines if the rule should 'ALLOW', 'DROP' or 'REJECT' matching traffic
	Action pulumi.StringInput `pulumi:"action"`
	// A set of Application Port Profile IDs. Leaving it empty means 'Any'
	AppPortProfileIds pulumi.StringArrayInput `pulumi:"appPortProfileIds"`
	// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	DestinationIds pulumi.StringArrayInput `pulumi:"destinationIds"`
	// Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')
	Direction pulumi.StringInput `pulumi:"direction"`
	// Defined if Firewall Rule is active
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Firewall Rule ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// Defines if matching traffic should be logged
	Logging pulumi.BoolPtrInput `pulumi:"logging"`
	// Firewall Rule name
	Name pulumi.StringInput `pulumi:"name"`
	// A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	SourceIds pulumi.StringArrayInput `pulumi:"sourceIds"`
}

func (NsxtFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtFirewallRule)(nil)).Elem()
}

func (i NsxtFirewallRuleArgs) ToNsxtFirewallRuleOutput() NsxtFirewallRuleOutput {
	return i.ToNsxtFirewallRuleOutputWithContext(context.Background())
}

func (i NsxtFirewallRuleArgs) ToNsxtFirewallRuleOutputWithContext(ctx context.Context) NsxtFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtFirewallRuleOutput)
}

// NsxtFirewallRuleArrayInput is an input type that accepts NsxtFirewallRuleArray and NsxtFirewallRuleArrayOutput values.
// You can construct a concrete instance of `NsxtFirewallRuleArrayInput` via:
//
//	NsxtFirewallRuleArray{ NsxtFirewallRuleArgs{...} }
type NsxtFirewallRuleArrayInput interface {
	pulumi.Input

	ToNsxtFirewallRuleArrayOutput() NsxtFirewallRuleArrayOutput
	ToNsxtFirewallRuleArrayOutputWithContext(context.Context) NsxtFirewallRuleArrayOutput
}

type NsxtFirewallRuleArray []NsxtFirewallRuleInput

func (NsxtFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtFirewallRule)(nil)).Elem()
}

func (i NsxtFirewallRuleArray) ToNsxtFirewallRuleArrayOutput() NsxtFirewallRuleArrayOutput {
	return i.ToNsxtFirewallRuleArrayOutputWithContext(context.Background())
}

func (i NsxtFirewallRuleArray) ToNsxtFirewallRuleArrayOutputWithContext(ctx context.Context) NsxtFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtFirewallRuleArrayOutput)
}

type NsxtFirewallRuleOutput struct{ *pulumi.OutputState }

func (NsxtFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtFirewallRule)(nil)).Elem()
}

func (o NsxtFirewallRuleOutput) ToNsxtFirewallRuleOutput() NsxtFirewallRuleOutput {
	return o
}

func (o NsxtFirewallRuleOutput) ToNsxtFirewallRuleOutputWithContext(ctx context.Context) NsxtFirewallRuleOutput {
	return o
}

// Defines if the rule should 'ALLOW', 'DROP' or 'REJECT' matching traffic
func (o NsxtFirewallRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtFirewallRule) string { return v.Action }).(pulumi.StringOutput)
}

// A set of Application Port Profile IDs. Leaving it empty means 'Any'
func (o NsxtFirewallRuleOutput) AppPortProfileIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtFirewallRule) []string { return v.AppPortProfileIds }).(pulumi.StringArrayOutput)
}

// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
func (o NsxtFirewallRuleOutput) DestinationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtFirewallRule) []string { return v.DestinationIds }).(pulumi.StringArrayOutput)
}

// Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')
func (o NsxtFirewallRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtFirewallRule) string { return v.Direction }).(pulumi.StringOutput)
}

// Defined if Firewall Rule is active
func (o NsxtFirewallRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtFirewallRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Firewall Rule ID
func (o NsxtFirewallRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtFirewallRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')
func (o NsxtFirewallRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtFirewallRule) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// Defines if matching traffic should be logged
func (o NsxtFirewallRuleOutput) Logging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtFirewallRule) *bool { return v.Logging }).(pulumi.BoolPtrOutput)
}

// Firewall Rule name
func (o NsxtFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

// A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
func (o NsxtFirewallRuleOutput) SourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtFirewallRule) []string { return v.SourceIds }).(pulumi.StringArrayOutput)
}

type NsxtFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (NsxtFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtFirewallRule)(nil)).Elem()
}

func (o NsxtFirewallRuleArrayOutput) ToNsxtFirewallRuleArrayOutput() NsxtFirewallRuleArrayOutput {
	return o
}

func (o NsxtFirewallRuleArrayOutput) ToNsxtFirewallRuleArrayOutputWithContext(ctx context.Context) NsxtFirewallRuleArrayOutput {
	return o
}

func (o NsxtFirewallRuleArrayOutput) Index(i pulumi.IntInput) NsxtFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtFirewallRule {
		return vs[0].([]NsxtFirewallRule)[vs[1].(int)]
	}).(NsxtFirewallRuleOutput)
}

type NsxtIpsecVpnTunnelSecurityProfileCustomization struct {
	// Value in seconds of dead probe detection interval. Minimum is 3 seconds and the maximum is 60 seconds
	DpdProbeInternal *int `pulumi:"dpdProbeInternal"`
	// Diffie-Hellman groups to be used if Perfect Forward Secrecy is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
	IkeDhGroups []string `pulumi:"ikeDhGroups"`
	// Secure hashing algorithms to use during the IKE negotiation. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	IkeDigestAlgorithms []string `pulumi:"ikeDigestAlgorithms"`
	// Encryption algorithms. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	IkeEncryptionAlgorithms []string `pulumi:"ikeEncryptionAlgorithms"`
	// Security Association life time (in seconds). It is number of seconds before the IPsec tunnel needs to reestablish
	IkeSaLifetime *int `pulumi:"ikeSaLifetime"`
	// IKE version one of IKE_V1, IKE_V2, IKE_FLEX
	IkeVersion string `pulumi:"ikeVersion"`
	// Policy for handling defragmentation bit. One of COPY, CLEAR
	TunnelDfPolicy *string `pulumi:"tunnelDfPolicy"`
	// Diffie-Hellman groups to be used is PFS is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
	TunnelDhGroups []string `pulumi:"tunnelDhGroups"`
	// Digest algorithms to be used for message digest. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	TunnelDigestAlgorithms []string `pulumi:"tunnelDigestAlgorithms"`
	// Encryption algorithms to use in IPSec tunnel establishment. One of AES_128, AES_256, AES_GCM_128, AES_GCM_192, AES_GCM_256, NO_ENCRYPTION_AUTH_AES_GMAC_128, NO_ENCRYPTION_AUTH_AES_GMAC_192, NO_ENCRYPTION_AUTH_AES_GMAC_256, NO_ENCRYPTION
	TunnelEncryptionAlgorithms []string `pulumi:"tunnelEncryptionAlgorithms"`
	// Perfect Forward Secrecy Enabled or Disabled. Default (enabled)
	TunnelPfsEnabled *bool `pulumi:"tunnelPfsEnabled"`
	// Security Association life time (in seconds)
	TunnelSaLifetime *int `pulumi:"tunnelSaLifetime"`
}

// NsxtIpsecVpnTunnelSecurityProfileCustomizationInput is an input type that accepts NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs and NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput values.
// You can construct a concrete instance of `NsxtIpsecVpnTunnelSecurityProfileCustomizationInput` via:
//
//	NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs{...}
type NsxtIpsecVpnTunnelSecurityProfileCustomizationInput interface {
	pulumi.Input

	ToNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput() NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput
	ToNsxtIpsecVpnTunnelSecurityProfileCustomizationOutputWithContext(context.Context) NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput
}

type NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs struct {
	// Value in seconds of dead probe detection interval. Minimum is 3 seconds and the maximum is 60 seconds
	DpdProbeInternal pulumi.IntPtrInput `pulumi:"dpdProbeInternal"`
	// Diffie-Hellman groups to be used if Perfect Forward Secrecy is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
	IkeDhGroups pulumi.StringArrayInput `pulumi:"ikeDhGroups"`
	// Secure hashing algorithms to use during the IKE negotiation. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	IkeDigestAlgorithms pulumi.StringArrayInput `pulumi:"ikeDigestAlgorithms"`
	// Encryption algorithms. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	IkeEncryptionAlgorithms pulumi.StringArrayInput `pulumi:"ikeEncryptionAlgorithms"`
	// Security Association life time (in seconds). It is number of seconds before the IPsec tunnel needs to reestablish
	IkeSaLifetime pulumi.IntPtrInput `pulumi:"ikeSaLifetime"`
	// IKE version one of IKE_V1, IKE_V2, IKE_FLEX
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// Policy for handling defragmentation bit. One of COPY, CLEAR
	TunnelDfPolicy pulumi.StringPtrInput `pulumi:"tunnelDfPolicy"`
	// Diffie-Hellman groups to be used is PFS is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
	TunnelDhGroups pulumi.StringArrayInput `pulumi:"tunnelDhGroups"`
	// Digest algorithms to be used for message digest. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	TunnelDigestAlgorithms pulumi.StringArrayInput `pulumi:"tunnelDigestAlgorithms"`
	// Encryption algorithms to use in IPSec tunnel establishment. One of AES_128, AES_256, AES_GCM_128, AES_GCM_192, AES_GCM_256, NO_ENCRYPTION_AUTH_AES_GMAC_128, NO_ENCRYPTION_AUTH_AES_GMAC_192, NO_ENCRYPTION_AUTH_AES_GMAC_256, NO_ENCRYPTION
	TunnelEncryptionAlgorithms pulumi.StringArrayInput `pulumi:"tunnelEncryptionAlgorithms"`
	// Perfect Forward Secrecy Enabled or Disabled. Default (enabled)
	TunnelPfsEnabled pulumi.BoolPtrInput `pulumi:"tunnelPfsEnabled"`
	// Security Association life time (in seconds)
	TunnelSaLifetime pulumi.IntPtrInput `pulumi:"tunnelSaLifetime"`
}

func (NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtIpsecVpnTunnelSecurityProfileCustomization)(nil)).Elem()
}

func (i NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput() NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput {
	return i.ToNsxtIpsecVpnTunnelSecurityProfileCustomizationOutputWithContext(context.Background())
}

func (i NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationOutputWithContext(ctx context.Context) NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput)
}

func (i NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput() NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput {
	return i.ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutputWithContext(context.Background())
}

func (i NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutputWithContext(ctx context.Context) NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput).ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutputWithContext(ctx)
}

// NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrInput is an input type that accepts NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs, NsxtIpsecVpnTunnelSecurityProfileCustomizationPtr and NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput values.
// You can construct a concrete instance of `NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrInput` via:
//
//	        NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs{...}
//
//	or:
//
//	        nil
type NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrInput interface {
	pulumi.Input

	ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput() NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput
	ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutputWithContext(context.Context) NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput
}

type nsxtIpsecVpnTunnelSecurityProfileCustomizationPtrType NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs

func NsxtIpsecVpnTunnelSecurityProfileCustomizationPtr(v *NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs) NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrInput {
	return (*nsxtIpsecVpnTunnelSecurityProfileCustomizationPtrType)(v)
}

func (*nsxtIpsecVpnTunnelSecurityProfileCustomizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtIpsecVpnTunnelSecurityProfileCustomization)(nil)).Elem()
}

func (i *nsxtIpsecVpnTunnelSecurityProfileCustomizationPtrType) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput() NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput {
	return i.ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutputWithContext(context.Background())
}

func (i *nsxtIpsecVpnTunnelSecurityProfileCustomizationPtrType) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutputWithContext(ctx context.Context) NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput)
}

type NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput struct{ *pulumi.OutputState }

func (NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtIpsecVpnTunnelSecurityProfileCustomization)(nil)).Elem()
}

func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput() NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput {
	return o
}

func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationOutputWithContext(ctx context.Context) NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput {
	return o
}

func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput() NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput {
	return o.ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutputWithContext(context.Background())
}

func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutputWithContext(ctx context.Context) NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtIpsecVpnTunnelSecurityProfileCustomization) *NsxtIpsecVpnTunnelSecurityProfileCustomization {
		return &v
	}).(NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput)
}

// Value in seconds of dead probe detection interval. Minimum is 3 seconds and the maximum is 60 seconds
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) DpdProbeInternal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) *int { return v.DpdProbeInternal }).(pulumi.IntPtrOutput)
}

// Diffie-Hellman groups to be used if Perfect Forward Secrecy is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) IkeDhGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.IkeDhGroups }).(pulumi.StringArrayOutput)
}

// Secure hashing algorithms to use during the IKE negotiation. One of SHA1, SHA2_256, SHA2_384, SHA2_512
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) IkeDigestAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.IkeDigestAlgorithms }).(pulumi.StringArrayOutput)
}

// Encryption algorithms. One of SHA1, SHA2_256, SHA2_384, SHA2_512
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) IkeEncryptionAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.IkeEncryptionAlgorithms }).(pulumi.StringArrayOutput)
}

// Security Association life time (in seconds). It is number of seconds before the IPsec tunnel needs to reestablish
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) IkeSaLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) *int { return v.IkeSaLifetime }).(pulumi.IntPtrOutput)
}

// IKE version one of IKE_V1, IKE_V2, IKE_FLEX
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) string { return v.IkeVersion }).(pulumi.StringOutput)
}

// Policy for handling defragmentation bit. One of COPY, CLEAR
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelDfPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) *string { return v.TunnelDfPolicy }).(pulumi.StringPtrOutput)
}

// Diffie-Hellman groups to be used is PFS is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelDhGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.TunnelDhGroups }).(pulumi.StringArrayOutput)
}

// Digest algorithms to be used for message digest. One of SHA1, SHA2_256, SHA2_384, SHA2_512
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelDigestAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.TunnelDigestAlgorithms }).(pulumi.StringArrayOutput)
}

// Encryption algorithms to use in IPSec tunnel establishment. One of AES_128, AES_256, AES_GCM_128, AES_GCM_192, AES_GCM_256, NO_ENCRYPTION_AUTH_AES_GMAC_128, NO_ENCRYPTION_AUTH_AES_GMAC_192, NO_ENCRYPTION_AUTH_AES_GMAC_256, NO_ENCRYPTION
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelEncryptionAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.TunnelEncryptionAlgorithms }).(pulumi.StringArrayOutput)
}

// Perfect Forward Secrecy Enabled or Disabled. Default (enabled)
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelPfsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) *bool { return v.TunnelPfsEnabled }).(pulumi.BoolPtrOutput)
}

// Security Association life time (in seconds)
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelSaLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtIpsecVpnTunnelSecurityProfileCustomization) *int { return v.TunnelSaLifetime }).(pulumi.IntPtrOutput)
}

type NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput struct{ *pulumi.OutputState }

func (NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtIpsecVpnTunnelSecurityProfileCustomization)(nil)).Elem()
}

func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput() NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput {
	return o
}

func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) ToNsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutputWithContext(ctx context.Context) NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput {
	return o
}

func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) Elem() NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) NsxtIpsecVpnTunnelSecurityProfileCustomization {
		if v != nil {
			return *v
		}
		var ret NsxtIpsecVpnTunnelSecurityProfileCustomization
		return ret
	}).(NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput)
}

// Value in seconds of dead probe detection interval. Minimum is 3 seconds and the maximum is 60 seconds
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) DpdProbeInternal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) *int {
		if v == nil {
			return nil
		}
		return v.DpdProbeInternal
	}).(pulumi.IntPtrOutput)
}

// Diffie-Hellman groups to be used if Perfect Forward Secrecy is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) IkeDhGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) []string {
		if v == nil {
			return nil
		}
		return v.IkeDhGroups
	}).(pulumi.StringArrayOutput)
}

// Secure hashing algorithms to use during the IKE negotiation. One of SHA1, SHA2_256, SHA2_384, SHA2_512
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) IkeDigestAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) []string {
		if v == nil {
			return nil
		}
		return v.IkeDigestAlgorithms
	}).(pulumi.StringArrayOutput)
}

// Encryption algorithms. One of SHA1, SHA2_256, SHA2_384, SHA2_512
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) IkeEncryptionAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) []string {
		if v == nil {
			return nil
		}
		return v.IkeEncryptionAlgorithms
	}).(pulumi.StringArrayOutput)
}

// Security Association life time (in seconds). It is number of seconds before the IPsec tunnel needs to reestablish
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) IkeSaLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) *int {
		if v == nil {
			return nil
		}
		return v.IkeSaLifetime
	}).(pulumi.IntPtrOutput)
}

// IKE version one of IKE_V1, IKE_V2, IKE_FLEX
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) *string {
		if v == nil {
			return nil
		}
		return &v.IkeVersion
	}).(pulumi.StringPtrOutput)
}

// Policy for handling defragmentation bit. One of COPY, CLEAR
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) TunnelDfPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) *string {
		if v == nil {
			return nil
		}
		return v.TunnelDfPolicy
	}).(pulumi.StringPtrOutput)
}

// Diffie-Hellman groups to be used is PFS is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) TunnelDhGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) []string {
		if v == nil {
			return nil
		}
		return v.TunnelDhGroups
	}).(pulumi.StringArrayOutput)
}

// Digest algorithms to be used for message digest. One of SHA1, SHA2_256, SHA2_384, SHA2_512
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) TunnelDigestAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) []string {
		if v == nil {
			return nil
		}
		return v.TunnelDigestAlgorithms
	}).(pulumi.StringArrayOutput)
}

// Encryption algorithms to use in IPSec tunnel establishment. One of AES_128, AES_256, AES_GCM_128, AES_GCM_192, AES_GCM_256, NO_ENCRYPTION_AUTH_AES_GMAC_128, NO_ENCRYPTION_AUTH_AES_GMAC_192, NO_ENCRYPTION_AUTH_AES_GMAC_256, NO_ENCRYPTION
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) TunnelEncryptionAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) []string {
		if v == nil {
			return nil
		}
		return v.TunnelEncryptionAlgorithms
	}).(pulumi.StringArrayOutput)
}

// Perfect Forward Secrecy Enabled or Disabled. Default (enabled)
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) TunnelPfsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.TunnelPfsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Security Association life time (in seconds)
func (o NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput) TunnelSaLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NsxtIpsecVpnTunnelSecurityProfileCustomization) *int {
		if v == nil {
			return nil
		}
		return v.TunnelSaLifetime
	}).(pulumi.IntPtrOutput)
}

type NsxtNetworkDhcpBindingDhcpV4Config struct {
	// IPv4 gateway address
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Hostname for the DHCP client
	Hostname *string `pulumi:"hostname"`
}

// NsxtNetworkDhcpBindingDhcpV4ConfigInput is an input type that accepts NsxtNetworkDhcpBindingDhcpV4ConfigArgs and NsxtNetworkDhcpBindingDhcpV4ConfigOutput values.
// You can construct a concrete instance of `NsxtNetworkDhcpBindingDhcpV4ConfigInput` via:
//
//	NsxtNetworkDhcpBindingDhcpV4ConfigArgs{...}
type NsxtNetworkDhcpBindingDhcpV4ConfigInput interface {
	pulumi.Input

	ToNsxtNetworkDhcpBindingDhcpV4ConfigOutput() NsxtNetworkDhcpBindingDhcpV4ConfigOutput
	ToNsxtNetworkDhcpBindingDhcpV4ConfigOutputWithContext(context.Context) NsxtNetworkDhcpBindingDhcpV4ConfigOutput
}

type NsxtNetworkDhcpBindingDhcpV4ConfigArgs struct {
	// IPv4 gateway address
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Hostname for the DHCP client
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
}

func (NsxtNetworkDhcpBindingDhcpV4ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtNetworkDhcpBindingDhcpV4Config)(nil)).Elem()
}

func (i NsxtNetworkDhcpBindingDhcpV4ConfigArgs) ToNsxtNetworkDhcpBindingDhcpV4ConfigOutput() NsxtNetworkDhcpBindingDhcpV4ConfigOutput {
	return i.ToNsxtNetworkDhcpBindingDhcpV4ConfigOutputWithContext(context.Background())
}

func (i NsxtNetworkDhcpBindingDhcpV4ConfigArgs) ToNsxtNetworkDhcpBindingDhcpV4ConfigOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV4ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkDhcpBindingDhcpV4ConfigOutput)
}

func (i NsxtNetworkDhcpBindingDhcpV4ConfigArgs) ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput() NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput {
	return i.ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutputWithContext(context.Background())
}

func (i NsxtNetworkDhcpBindingDhcpV4ConfigArgs) ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkDhcpBindingDhcpV4ConfigOutput).ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutputWithContext(ctx)
}

// NsxtNetworkDhcpBindingDhcpV4ConfigPtrInput is an input type that accepts NsxtNetworkDhcpBindingDhcpV4ConfigArgs, NsxtNetworkDhcpBindingDhcpV4ConfigPtr and NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput values.
// You can construct a concrete instance of `NsxtNetworkDhcpBindingDhcpV4ConfigPtrInput` via:
//
//	        NsxtNetworkDhcpBindingDhcpV4ConfigArgs{...}
//
//	or:
//
//	        nil
type NsxtNetworkDhcpBindingDhcpV4ConfigPtrInput interface {
	pulumi.Input

	ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput() NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput
	ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutputWithContext(context.Context) NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput
}

type nsxtNetworkDhcpBindingDhcpV4ConfigPtrType NsxtNetworkDhcpBindingDhcpV4ConfigArgs

func NsxtNetworkDhcpBindingDhcpV4ConfigPtr(v *NsxtNetworkDhcpBindingDhcpV4ConfigArgs) NsxtNetworkDhcpBindingDhcpV4ConfigPtrInput {
	return (*nsxtNetworkDhcpBindingDhcpV4ConfigPtrType)(v)
}

func (*nsxtNetworkDhcpBindingDhcpV4ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtNetworkDhcpBindingDhcpV4Config)(nil)).Elem()
}

func (i *nsxtNetworkDhcpBindingDhcpV4ConfigPtrType) ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput() NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput {
	return i.ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutputWithContext(context.Background())
}

func (i *nsxtNetworkDhcpBindingDhcpV4ConfigPtrType) ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput)
}

type NsxtNetworkDhcpBindingDhcpV4ConfigOutput struct{ *pulumi.OutputState }

func (NsxtNetworkDhcpBindingDhcpV4ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtNetworkDhcpBindingDhcpV4Config)(nil)).Elem()
}

func (o NsxtNetworkDhcpBindingDhcpV4ConfigOutput) ToNsxtNetworkDhcpBindingDhcpV4ConfigOutput() NsxtNetworkDhcpBindingDhcpV4ConfigOutput {
	return o
}

func (o NsxtNetworkDhcpBindingDhcpV4ConfigOutput) ToNsxtNetworkDhcpBindingDhcpV4ConfigOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV4ConfigOutput {
	return o
}

func (o NsxtNetworkDhcpBindingDhcpV4ConfigOutput) ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput() NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput {
	return o.ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutputWithContext(context.Background())
}

func (o NsxtNetworkDhcpBindingDhcpV4ConfigOutput) ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtNetworkDhcpBindingDhcpV4Config) *NsxtNetworkDhcpBindingDhcpV4Config {
		return &v
	}).(NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput)
}

// IPv4 gateway address
func (o NsxtNetworkDhcpBindingDhcpV4ConfigOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtNetworkDhcpBindingDhcpV4Config) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Hostname for the DHCP client
func (o NsxtNetworkDhcpBindingDhcpV4ConfigOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtNetworkDhcpBindingDhcpV4Config) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

type NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput struct{ *pulumi.OutputState }

func (NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtNetworkDhcpBindingDhcpV4Config)(nil)).Elem()
}

func (o NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput) ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput() NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput {
	return o
}

func (o NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput) ToNsxtNetworkDhcpBindingDhcpV4ConfigPtrOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput {
	return o
}

func (o NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput) Elem() NsxtNetworkDhcpBindingDhcpV4ConfigOutput {
	return o.ApplyT(func(v *NsxtNetworkDhcpBindingDhcpV4Config) NsxtNetworkDhcpBindingDhcpV4Config {
		if v != nil {
			return *v
		}
		var ret NsxtNetworkDhcpBindingDhcpV4Config
		return ret
	}).(NsxtNetworkDhcpBindingDhcpV4ConfigOutput)
}

// IPv4 gateway address
func (o NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtNetworkDhcpBindingDhcpV4Config) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Hostname for the DHCP client
func (o NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtNetworkDhcpBindingDhcpV4Config) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

type NsxtNetworkDhcpBindingDhcpV6Config struct {
	// Set of domain names
	DomainNames []string `pulumi:"domainNames"`
	// Set of SNTP servers
	SntpServers []string `pulumi:"sntpServers"`
}

// NsxtNetworkDhcpBindingDhcpV6ConfigInput is an input type that accepts NsxtNetworkDhcpBindingDhcpV6ConfigArgs and NsxtNetworkDhcpBindingDhcpV6ConfigOutput values.
// You can construct a concrete instance of `NsxtNetworkDhcpBindingDhcpV6ConfigInput` via:
//
//	NsxtNetworkDhcpBindingDhcpV6ConfigArgs{...}
type NsxtNetworkDhcpBindingDhcpV6ConfigInput interface {
	pulumi.Input

	ToNsxtNetworkDhcpBindingDhcpV6ConfigOutput() NsxtNetworkDhcpBindingDhcpV6ConfigOutput
	ToNsxtNetworkDhcpBindingDhcpV6ConfigOutputWithContext(context.Context) NsxtNetworkDhcpBindingDhcpV6ConfigOutput
}

type NsxtNetworkDhcpBindingDhcpV6ConfigArgs struct {
	// Set of domain names
	DomainNames pulumi.StringArrayInput `pulumi:"domainNames"`
	// Set of SNTP servers
	SntpServers pulumi.StringArrayInput `pulumi:"sntpServers"`
}

func (NsxtNetworkDhcpBindingDhcpV6ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtNetworkDhcpBindingDhcpV6Config)(nil)).Elem()
}

func (i NsxtNetworkDhcpBindingDhcpV6ConfigArgs) ToNsxtNetworkDhcpBindingDhcpV6ConfigOutput() NsxtNetworkDhcpBindingDhcpV6ConfigOutput {
	return i.ToNsxtNetworkDhcpBindingDhcpV6ConfigOutputWithContext(context.Background())
}

func (i NsxtNetworkDhcpBindingDhcpV6ConfigArgs) ToNsxtNetworkDhcpBindingDhcpV6ConfigOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV6ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkDhcpBindingDhcpV6ConfigOutput)
}

func (i NsxtNetworkDhcpBindingDhcpV6ConfigArgs) ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput() NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput {
	return i.ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutputWithContext(context.Background())
}

func (i NsxtNetworkDhcpBindingDhcpV6ConfigArgs) ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkDhcpBindingDhcpV6ConfigOutput).ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutputWithContext(ctx)
}

// NsxtNetworkDhcpBindingDhcpV6ConfigPtrInput is an input type that accepts NsxtNetworkDhcpBindingDhcpV6ConfigArgs, NsxtNetworkDhcpBindingDhcpV6ConfigPtr and NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput values.
// You can construct a concrete instance of `NsxtNetworkDhcpBindingDhcpV6ConfigPtrInput` via:
//
//	        NsxtNetworkDhcpBindingDhcpV6ConfigArgs{...}
//
//	or:
//
//	        nil
type NsxtNetworkDhcpBindingDhcpV6ConfigPtrInput interface {
	pulumi.Input

	ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput() NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput
	ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutputWithContext(context.Context) NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput
}

type nsxtNetworkDhcpBindingDhcpV6ConfigPtrType NsxtNetworkDhcpBindingDhcpV6ConfigArgs

func NsxtNetworkDhcpBindingDhcpV6ConfigPtr(v *NsxtNetworkDhcpBindingDhcpV6ConfigArgs) NsxtNetworkDhcpBindingDhcpV6ConfigPtrInput {
	return (*nsxtNetworkDhcpBindingDhcpV6ConfigPtrType)(v)
}

func (*nsxtNetworkDhcpBindingDhcpV6ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtNetworkDhcpBindingDhcpV6Config)(nil)).Elem()
}

func (i *nsxtNetworkDhcpBindingDhcpV6ConfigPtrType) ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput() NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput {
	return i.ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutputWithContext(context.Background())
}

func (i *nsxtNetworkDhcpBindingDhcpV6ConfigPtrType) ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput)
}

type NsxtNetworkDhcpBindingDhcpV6ConfigOutput struct{ *pulumi.OutputState }

func (NsxtNetworkDhcpBindingDhcpV6ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtNetworkDhcpBindingDhcpV6Config)(nil)).Elem()
}

func (o NsxtNetworkDhcpBindingDhcpV6ConfigOutput) ToNsxtNetworkDhcpBindingDhcpV6ConfigOutput() NsxtNetworkDhcpBindingDhcpV6ConfigOutput {
	return o
}

func (o NsxtNetworkDhcpBindingDhcpV6ConfigOutput) ToNsxtNetworkDhcpBindingDhcpV6ConfigOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV6ConfigOutput {
	return o
}

func (o NsxtNetworkDhcpBindingDhcpV6ConfigOutput) ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput() NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput {
	return o.ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutputWithContext(context.Background())
}

func (o NsxtNetworkDhcpBindingDhcpV6ConfigOutput) ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxtNetworkDhcpBindingDhcpV6Config) *NsxtNetworkDhcpBindingDhcpV6Config {
		return &v
	}).(NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput)
}

// Set of domain names
func (o NsxtNetworkDhcpBindingDhcpV6ConfigOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtNetworkDhcpBindingDhcpV6Config) []string { return v.DomainNames }).(pulumi.StringArrayOutput)
}

// Set of SNTP servers
func (o NsxtNetworkDhcpBindingDhcpV6ConfigOutput) SntpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxtNetworkDhcpBindingDhcpV6Config) []string { return v.SntpServers }).(pulumi.StringArrayOutput)
}

type NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput struct{ *pulumi.OutputState }

func (NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtNetworkDhcpBindingDhcpV6Config)(nil)).Elem()
}

func (o NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput) ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput() NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput {
	return o
}

func (o NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput) ToNsxtNetworkDhcpBindingDhcpV6ConfigPtrOutputWithContext(ctx context.Context) NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput {
	return o
}

func (o NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput) Elem() NsxtNetworkDhcpBindingDhcpV6ConfigOutput {
	return o.ApplyT(func(v *NsxtNetworkDhcpBindingDhcpV6Config) NsxtNetworkDhcpBindingDhcpV6Config {
		if v != nil {
			return *v
		}
		var ret NsxtNetworkDhcpBindingDhcpV6Config
		return ret
	}).(NsxtNetworkDhcpBindingDhcpV6ConfigOutput)
}

// Set of domain names
func (o NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtNetworkDhcpBindingDhcpV6Config) []string {
		if v == nil {
			return nil
		}
		return v.DomainNames
	}).(pulumi.StringArrayOutput)
}

// Set of SNTP servers
func (o NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput) SntpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtNetworkDhcpBindingDhcpV6Config) []string {
		if v == nil {
			return nil
		}
		return v.SntpServers
	}).(pulumi.StringArrayOutput)
}

type NsxtNetworkDhcpPool struct {
	// End address of DHCP pool IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of DHCP pool IP range
	StartAddress string `pulumi:"startAddress"`
}

// NsxtNetworkDhcpPoolInput is an input type that accepts NsxtNetworkDhcpPoolArgs and NsxtNetworkDhcpPoolOutput values.
// You can construct a concrete instance of `NsxtNetworkDhcpPoolInput` via:
//
//	NsxtNetworkDhcpPoolArgs{...}
type NsxtNetworkDhcpPoolInput interface {
	pulumi.Input

	ToNsxtNetworkDhcpPoolOutput() NsxtNetworkDhcpPoolOutput
	ToNsxtNetworkDhcpPoolOutputWithContext(context.Context) NsxtNetworkDhcpPoolOutput
}

type NsxtNetworkDhcpPoolArgs struct {
	// End address of DHCP pool IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of DHCP pool IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NsxtNetworkDhcpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtNetworkDhcpPool)(nil)).Elem()
}

func (i NsxtNetworkDhcpPoolArgs) ToNsxtNetworkDhcpPoolOutput() NsxtNetworkDhcpPoolOutput {
	return i.ToNsxtNetworkDhcpPoolOutputWithContext(context.Background())
}

func (i NsxtNetworkDhcpPoolArgs) ToNsxtNetworkDhcpPoolOutputWithContext(ctx context.Context) NsxtNetworkDhcpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkDhcpPoolOutput)
}

// NsxtNetworkDhcpPoolArrayInput is an input type that accepts NsxtNetworkDhcpPoolArray and NsxtNetworkDhcpPoolArrayOutput values.
// You can construct a concrete instance of `NsxtNetworkDhcpPoolArrayInput` via:
//
//	NsxtNetworkDhcpPoolArray{ NsxtNetworkDhcpPoolArgs{...} }
type NsxtNetworkDhcpPoolArrayInput interface {
	pulumi.Input

	ToNsxtNetworkDhcpPoolArrayOutput() NsxtNetworkDhcpPoolArrayOutput
	ToNsxtNetworkDhcpPoolArrayOutputWithContext(context.Context) NsxtNetworkDhcpPoolArrayOutput
}

type NsxtNetworkDhcpPoolArray []NsxtNetworkDhcpPoolInput

func (NsxtNetworkDhcpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtNetworkDhcpPool)(nil)).Elem()
}

func (i NsxtNetworkDhcpPoolArray) ToNsxtNetworkDhcpPoolArrayOutput() NsxtNetworkDhcpPoolArrayOutput {
	return i.ToNsxtNetworkDhcpPoolArrayOutputWithContext(context.Background())
}

func (i NsxtNetworkDhcpPoolArray) ToNsxtNetworkDhcpPoolArrayOutputWithContext(ctx context.Context) NsxtNetworkDhcpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkDhcpPoolArrayOutput)
}

type NsxtNetworkDhcpPoolOutput struct{ *pulumi.OutputState }

func (NsxtNetworkDhcpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtNetworkDhcpPool)(nil)).Elem()
}

func (o NsxtNetworkDhcpPoolOutput) ToNsxtNetworkDhcpPoolOutput() NsxtNetworkDhcpPoolOutput {
	return o
}

func (o NsxtNetworkDhcpPoolOutput) ToNsxtNetworkDhcpPoolOutputWithContext(ctx context.Context) NsxtNetworkDhcpPoolOutput {
	return o
}

// End address of DHCP pool IP range
func (o NsxtNetworkDhcpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtNetworkDhcpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of DHCP pool IP range
func (o NsxtNetworkDhcpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtNetworkDhcpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NsxtNetworkDhcpPoolArrayOutput struct{ *pulumi.OutputState }

func (NsxtNetworkDhcpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtNetworkDhcpPool)(nil)).Elem()
}

func (o NsxtNetworkDhcpPoolArrayOutput) ToNsxtNetworkDhcpPoolArrayOutput() NsxtNetworkDhcpPoolArrayOutput {
	return o
}

func (o NsxtNetworkDhcpPoolArrayOutput) ToNsxtNetworkDhcpPoolArrayOutputWithContext(ctx context.Context) NsxtNetworkDhcpPoolArrayOutput {
	return o
}

func (o NsxtNetworkDhcpPoolArrayOutput) Index(i pulumi.IntInput) NsxtNetworkDhcpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtNetworkDhcpPool {
		return vs[0].([]NsxtNetworkDhcpPool)[vs[1].(int)]
	}).(NsxtNetworkDhcpPoolOutput)
}

type NsxtNetworkImportedSecondaryStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// NsxtNetworkImportedSecondaryStaticIpPoolInput is an input type that accepts NsxtNetworkImportedSecondaryStaticIpPoolArgs and NsxtNetworkImportedSecondaryStaticIpPoolOutput values.
// You can construct a concrete instance of `NsxtNetworkImportedSecondaryStaticIpPoolInput` via:
//
//	NsxtNetworkImportedSecondaryStaticIpPoolArgs{...}
type NsxtNetworkImportedSecondaryStaticIpPoolInput interface {
	pulumi.Input

	ToNsxtNetworkImportedSecondaryStaticIpPoolOutput() NsxtNetworkImportedSecondaryStaticIpPoolOutput
	ToNsxtNetworkImportedSecondaryStaticIpPoolOutputWithContext(context.Context) NsxtNetworkImportedSecondaryStaticIpPoolOutput
}

type NsxtNetworkImportedSecondaryStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NsxtNetworkImportedSecondaryStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtNetworkImportedSecondaryStaticIpPool)(nil)).Elem()
}

func (i NsxtNetworkImportedSecondaryStaticIpPoolArgs) ToNsxtNetworkImportedSecondaryStaticIpPoolOutput() NsxtNetworkImportedSecondaryStaticIpPoolOutput {
	return i.ToNsxtNetworkImportedSecondaryStaticIpPoolOutputWithContext(context.Background())
}

func (i NsxtNetworkImportedSecondaryStaticIpPoolArgs) ToNsxtNetworkImportedSecondaryStaticIpPoolOutputWithContext(ctx context.Context) NsxtNetworkImportedSecondaryStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkImportedSecondaryStaticIpPoolOutput)
}

// NsxtNetworkImportedSecondaryStaticIpPoolArrayInput is an input type that accepts NsxtNetworkImportedSecondaryStaticIpPoolArray and NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `NsxtNetworkImportedSecondaryStaticIpPoolArrayInput` via:
//
//	NsxtNetworkImportedSecondaryStaticIpPoolArray{ NsxtNetworkImportedSecondaryStaticIpPoolArgs{...} }
type NsxtNetworkImportedSecondaryStaticIpPoolArrayInput interface {
	pulumi.Input

	ToNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput() NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput
	ToNsxtNetworkImportedSecondaryStaticIpPoolArrayOutputWithContext(context.Context) NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput
}

type NsxtNetworkImportedSecondaryStaticIpPoolArray []NsxtNetworkImportedSecondaryStaticIpPoolInput

func (NsxtNetworkImportedSecondaryStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtNetworkImportedSecondaryStaticIpPool)(nil)).Elem()
}

func (i NsxtNetworkImportedSecondaryStaticIpPoolArray) ToNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput() NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput {
	return i.ToNsxtNetworkImportedSecondaryStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i NsxtNetworkImportedSecondaryStaticIpPoolArray) ToNsxtNetworkImportedSecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput)
}

type NsxtNetworkImportedSecondaryStaticIpPoolOutput struct{ *pulumi.OutputState }

func (NsxtNetworkImportedSecondaryStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtNetworkImportedSecondaryStaticIpPool)(nil)).Elem()
}

func (o NsxtNetworkImportedSecondaryStaticIpPoolOutput) ToNsxtNetworkImportedSecondaryStaticIpPoolOutput() NsxtNetworkImportedSecondaryStaticIpPoolOutput {
	return o
}

func (o NsxtNetworkImportedSecondaryStaticIpPoolOutput) ToNsxtNetworkImportedSecondaryStaticIpPoolOutputWithContext(ctx context.Context) NsxtNetworkImportedSecondaryStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o NsxtNetworkImportedSecondaryStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtNetworkImportedSecondaryStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o NsxtNetworkImportedSecondaryStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtNetworkImportedSecondaryStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtNetworkImportedSecondaryStaticIpPool)(nil)).Elem()
}

func (o NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput) ToNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput() NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput {
	return o
}

func (o NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput) ToNsxtNetworkImportedSecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput {
	return o
}

func (o NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput) Index(i pulumi.IntInput) NsxtNetworkImportedSecondaryStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtNetworkImportedSecondaryStaticIpPool {
		return vs[0].([]NsxtNetworkImportedSecondaryStaticIpPool)[vs[1].(int)]
	}).(NsxtNetworkImportedSecondaryStaticIpPoolOutput)
}

type NsxtNetworkImportedStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// NsxtNetworkImportedStaticIpPoolInput is an input type that accepts NsxtNetworkImportedStaticIpPoolArgs and NsxtNetworkImportedStaticIpPoolOutput values.
// You can construct a concrete instance of `NsxtNetworkImportedStaticIpPoolInput` via:
//
//	NsxtNetworkImportedStaticIpPoolArgs{...}
type NsxtNetworkImportedStaticIpPoolInput interface {
	pulumi.Input

	ToNsxtNetworkImportedStaticIpPoolOutput() NsxtNetworkImportedStaticIpPoolOutput
	ToNsxtNetworkImportedStaticIpPoolOutputWithContext(context.Context) NsxtNetworkImportedStaticIpPoolOutput
}

type NsxtNetworkImportedStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (NsxtNetworkImportedStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtNetworkImportedStaticIpPool)(nil)).Elem()
}

func (i NsxtNetworkImportedStaticIpPoolArgs) ToNsxtNetworkImportedStaticIpPoolOutput() NsxtNetworkImportedStaticIpPoolOutput {
	return i.ToNsxtNetworkImportedStaticIpPoolOutputWithContext(context.Background())
}

func (i NsxtNetworkImportedStaticIpPoolArgs) ToNsxtNetworkImportedStaticIpPoolOutputWithContext(ctx context.Context) NsxtNetworkImportedStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkImportedStaticIpPoolOutput)
}

// NsxtNetworkImportedStaticIpPoolArrayInput is an input type that accepts NsxtNetworkImportedStaticIpPoolArray and NsxtNetworkImportedStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `NsxtNetworkImportedStaticIpPoolArrayInput` via:
//
//	NsxtNetworkImportedStaticIpPoolArray{ NsxtNetworkImportedStaticIpPoolArgs{...} }
type NsxtNetworkImportedStaticIpPoolArrayInput interface {
	pulumi.Input

	ToNsxtNetworkImportedStaticIpPoolArrayOutput() NsxtNetworkImportedStaticIpPoolArrayOutput
	ToNsxtNetworkImportedStaticIpPoolArrayOutputWithContext(context.Context) NsxtNetworkImportedStaticIpPoolArrayOutput
}

type NsxtNetworkImportedStaticIpPoolArray []NsxtNetworkImportedStaticIpPoolInput

func (NsxtNetworkImportedStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtNetworkImportedStaticIpPool)(nil)).Elem()
}

func (i NsxtNetworkImportedStaticIpPoolArray) ToNsxtNetworkImportedStaticIpPoolArrayOutput() NsxtNetworkImportedStaticIpPoolArrayOutput {
	return i.ToNsxtNetworkImportedStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i NsxtNetworkImportedStaticIpPoolArray) ToNsxtNetworkImportedStaticIpPoolArrayOutputWithContext(ctx context.Context) NsxtNetworkImportedStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtNetworkImportedStaticIpPoolArrayOutput)
}

type NsxtNetworkImportedStaticIpPoolOutput struct{ *pulumi.OutputState }

func (NsxtNetworkImportedStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtNetworkImportedStaticIpPool)(nil)).Elem()
}

func (o NsxtNetworkImportedStaticIpPoolOutput) ToNsxtNetworkImportedStaticIpPoolOutput() NsxtNetworkImportedStaticIpPoolOutput {
	return o
}

func (o NsxtNetworkImportedStaticIpPoolOutput) ToNsxtNetworkImportedStaticIpPoolOutputWithContext(ctx context.Context) NsxtNetworkImportedStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o NsxtNetworkImportedStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtNetworkImportedStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o NsxtNetworkImportedStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NsxtNetworkImportedStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type NsxtNetworkImportedStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NsxtNetworkImportedStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtNetworkImportedStaticIpPool)(nil)).Elem()
}

func (o NsxtNetworkImportedStaticIpPoolArrayOutput) ToNsxtNetworkImportedStaticIpPoolArrayOutput() NsxtNetworkImportedStaticIpPoolArrayOutput {
	return o
}

func (o NsxtNetworkImportedStaticIpPoolArrayOutput) ToNsxtNetworkImportedStaticIpPoolArrayOutputWithContext(ctx context.Context) NsxtNetworkImportedStaticIpPoolArrayOutput {
	return o
}

func (o NsxtNetworkImportedStaticIpPoolArrayOutput) Index(i pulumi.IntInput) NsxtNetworkImportedStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtNetworkImportedStaticIpPool {
		return vs[0].([]NsxtNetworkImportedStaticIpPool)[vs[1].(int)]
	}).(NsxtNetworkImportedStaticIpPoolOutput)
}

type NsxtSecurityGroupMemberVm struct {
	// Parent vApp name (if exists) for member VM
	VappId *string `pulumi:"vappId"`
	// Parent vApp ID (if exists) for member VM
	VappName *string `pulumi:"vappName"`
	// Member VM ID
	VmId *string `pulumi:"vmId"`
	// Member VM Name
	VmName *string `pulumi:"vmName"`
}

// NsxtSecurityGroupMemberVmInput is an input type that accepts NsxtSecurityGroupMemberVmArgs and NsxtSecurityGroupMemberVmOutput values.
// You can construct a concrete instance of `NsxtSecurityGroupMemberVmInput` via:
//
//	NsxtSecurityGroupMemberVmArgs{...}
type NsxtSecurityGroupMemberVmInput interface {
	pulumi.Input

	ToNsxtSecurityGroupMemberVmOutput() NsxtSecurityGroupMemberVmOutput
	ToNsxtSecurityGroupMemberVmOutputWithContext(context.Context) NsxtSecurityGroupMemberVmOutput
}

type NsxtSecurityGroupMemberVmArgs struct {
	// Parent vApp name (if exists) for member VM
	VappId pulumi.StringPtrInput `pulumi:"vappId"`
	// Parent vApp ID (if exists) for member VM
	VappName pulumi.StringPtrInput `pulumi:"vappName"`
	// Member VM ID
	VmId pulumi.StringPtrInput `pulumi:"vmId"`
	// Member VM Name
	VmName pulumi.StringPtrInput `pulumi:"vmName"`
}

func (NsxtSecurityGroupMemberVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtSecurityGroupMemberVm)(nil)).Elem()
}

func (i NsxtSecurityGroupMemberVmArgs) ToNsxtSecurityGroupMemberVmOutput() NsxtSecurityGroupMemberVmOutput {
	return i.ToNsxtSecurityGroupMemberVmOutputWithContext(context.Background())
}

func (i NsxtSecurityGroupMemberVmArgs) ToNsxtSecurityGroupMemberVmOutputWithContext(ctx context.Context) NsxtSecurityGroupMemberVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtSecurityGroupMemberVmOutput)
}

// NsxtSecurityGroupMemberVmArrayInput is an input type that accepts NsxtSecurityGroupMemberVmArray and NsxtSecurityGroupMemberVmArrayOutput values.
// You can construct a concrete instance of `NsxtSecurityGroupMemberVmArrayInput` via:
//
//	NsxtSecurityGroupMemberVmArray{ NsxtSecurityGroupMemberVmArgs{...} }
type NsxtSecurityGroupMemberVmArrayInput interface {
	pulumi.Input

	ToNsxtSecurityGroupMemberVmArrayOutput() NsxtSecurityGroupMemberVmArrayOutput
	ToNsxtSecurityGroupMemberVmArrayOutputWithContext(context.Context) NsxtSecurityGroupMemberVmArrayOutput
}

type NsxtSecurityGroupMemberVmArray []NsxtSecurityGroupMemberVmInput

func (NsxtSecurityGroupMemberVmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtSecurityGroupMemberVm)(nil)).Elem()
}

func (i NsxtSecurityGroupMemberVmArray) ToNsxtSecurityGroupMemberVmArrayOutput() NsxtSecurityGroupMemberVmArrayOutput {
	return i.ToNsxtSecurityGroupMemberVmArrayOutputWithContext(context.Background())
}

func (i NsxtSecurityGroupMemberVmArray) ToNsxtSecurityGroupMemberVmArrayOutputWithContext(ctx context.Context) NsxtSecurityGroupMemberVmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtSecurityGroupMemberVmArrayOutput)
}

type NsxtSecurityGroupMemberVmOutput struct{ *pulumi.OutputState }

func (NsxtSecurityGroupMemberVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtSecurityGroupMemberVm)(nil)).Elem()
}

func (o NsxtSecurityGroupMemberVmOutput) ToNsxtSecurityGroupMemberVmOutput() NsxtSecurityGroupMemberVmOutput {
	return o
}

func (o NsxtSecurityGroupMemberVmOutput) ToNsxtSecurityGroupMemberVmOutputWithContext(ctx context.Context) NsxtSecurityGroupMemberVmOutput {
	return o
}

// Parent vApp name (if exists) for member VM
func (o NsxtSecurityGroupMemberVmOutput) VappId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtSecurityGroupMemberVm) *string { return v.VappId }).(pulumi.StringPtrOutput)
}

// Parent vApp ID (if exists) for member VM
func (o NsxtSecurityGroupMemberVmOutput) VappName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtSecurityGroupMemberVm) *string { return v.VappName }).(pulumi.StringPtrOutput)
}

// Member VM ID
func (o NsxtSecurityGroupMemberVmOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtSecurityGroupMemberVm) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// Member VM Name
func (o NsxtSecurityGroupMemberVmOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtSecurityGroupMemberVm) *string { return v.VmName }).(pulumi.StringPtrOutput)
}

type NsxtSecurityGroupMemberVmArrayOutput struct{ *pulumi.OutputState }

func (NsxtSecurityGroupMemberVmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtSecurityGroupMemberVm)(nil)).Elem()
}

func (o NsxtSecurityGroupMemberVmArrayOutput) ToNsxtSecurityGroupMemberVmArrayOutput() NsxtSecurityGroupMemberVmArrayOutput {
	return o
}

func (o NsxtSecurityGroupMemberVmArrayOutput) ToNsxtSecurityGroupMemberVmArrayOutputWithContext(ctx context.Context) NsxtSecurityGroupMemberVmArrayOutput {
	return o
}

func (o NsxtSecurityGroupMemberVmArrayOutput) Index(i pulumi.IntInput) NsxtSecurityGroupMemberVmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtSecurityGroupMemberVm {
		return vs[0].([]NsxtSecurityGroupMemberVm)[vs[1].(int)]
	}).(NsxtSecurityGroupMemberVmOutput)
}

type NsxvDhcpRelayRelayAgent struct {
	// Optional gateway IP address of org network which is to be used for relaying DHCP message to specified servers
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Org network which is to be used for relaying DHCP message to specified servers
	NetworkName string `pulumi:"networkName"`
}

// NsxvDhcpRelayRelayAgentInput is an input type that accepts NsxvDhcpRelayRelayAgentArgs and NsxvDhcpRelayRelayAgentOutput values.
// You can construct a concrete instance of `NsxvDhcpRelayRelayAgentInput` via:
//
//	NsxvDhcpRelayRelayAgentArgs{...}
type NsxvDhcpRelayRelayAgentInput interface {
	pulumi.Input

	ToNsxvDhcpRelayRelayAgentOutput() NsxvDhcpRelayRelayAgentOutput
	ToNsxvDhcpRelayRelayAgentOutputWithContext(context.Context) NsxvDhcpRelayRelayAgentOutput
}

type NsxvDhcpRelayRelayAgentArgs struct {
	// Optional gateway IP address of org network which is to be used for relaying DHCP message to specified servers
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Org network which is to be used for relaying DHCP message to specified servers
	NetworkName pulumi.StringInput `pulumi:"networkName"`
}

func (NsxvDhcpRelayRelayAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDhcpRelayRelayAgent)(nil)).Elem()
}

func (i NsxvDhcpRelayRelayAgentArgs) ToNsxvDhcpRelayRelayAgentOutput() NsxvDhcpRelayRelayAgentOutput {
	return i.ToNsxvDhcpRelayRelayAgentOutputWithContext(context.Background())
}

func (i NsxvDhcpRelayRelayAgentArgs) ToNsxvDhcpRelayRelayAgentOutputWithContext(ctx context.Context) NsxvDhcpRelayRelayAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDhcpRelayRelayAgentOutput)
}

// NsxvDhcpRelayRelayAgentArrayInput is an input type that accepts NsxvDhcpRelayRelayAgentArray and NsxvDhcpRelayRelayAgentArrayOutput values.
// You can construct a concrete instance of `NsxvDhcpRelayRelayAgentArrayInput` via:
//
//	NsxvDhcpRelayRelayAgentArray{ NsxvDhcpRelayRelayAgentArgs{...} }
type NsxvDhcpRelayRelayAgentArrayInput interface {
	pulumi.Input

	ToNsxvDhcpRelayRelayAgentArrayOutput() NsxvDhcpRelayRelayAgentArrayOutput
	ToNsxvDhcpRelayRelayAgentArrayOutputWithContext(context.Context) NsxvDhcpRelayRelayAgentArrayOutput
}

type NsxvDhcpRelayRelayAgentArray []NsxvDhcpRelayRelayAgentInput

func (NsxvDhcpRelayRelayAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDhcpRelayRelayAgent)(nil)).Elem()
}

func (i NsxvDhcpRelayRelayAgentArray) ToNsxvDhcpRelayRelayAgentArrayOutput() NsxvDhcpRelayRelayAgentArrayOutput {
	return i.ToNsxvDhcpRelayRelayAgentArrayOutputWithContext(context.Background())
}

func (i NsxvDhcpRelayRelayAgentArray) ToNsxvDhcpRelayRelayAgentArrayOutputWithContext(ctx context.Context) NsxvDhcpRelayRelayAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDhcpRelayRelayAgentArrayOutput)
}

type NsxvDhcpRelayRelayAgentOutput struct{ *pulumi.OutputState }

func (NsxvDhcpRelayRelayAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDhcpRelayRelayAgent)(nil)).Elem()
}

func (o NsxvDhcpRelayRelayAgentOutput) ToNsxvDhcpRelayRelayAgentOutput() NsxvDhcpRelayRelayAgentOutput {
	return o
}

func (o NsxvDhcpRelayRelayAgentOutput) ToNsxvDhcpRelayRelayAgentOutputWithContext(ctx context.Context) NsxvDhcpRelayRelayAgentOutput {
	return o
}

// Optional gateway IP address of org network which is to be used for relaying DHCP message to specified servers
func (o NsxvDhcpRelayRelayAgentOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvDhcpRelayRelayAgent) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Org network which is to be used for relaying DHCP message to specified servers
func (o NsxvDhcpRelayRelayAgentOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDhcpRelayRelayAgent) string { return v.NetworkName }).(pulumi.StringOutput)
}

type NsxvDhcpRelayRelayAgentArrayOutput struct{ *pulumi.OutputState }

func (NsxvDhcpRelayRelayAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDhcpRelayRelayAgent)(nil)).Elem()
}

func (o NsxvDhcpRelayRelayAgentArrayOutput) ToNsxvDhcpRelayRelayAgentArrayOutput() NsxvDhcpRelayRelayAgentArrayOutput {
	return o
}

func (o NsxvDhcpRelayRelayAgentArrayOutput) ToNsxvDhcpRelayRelayAgentArrayOutputWithContext(ctx context.Context) NsxvDhcpRelayRelayAgentArrayOutput {
	return o
}

func (o NsxvDhcpRelayRelayAgentArrayOutput) Index(i pulumi.IntInput) NsxvDhcpRelayRelayAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxvDhcpRelayRelayAgent {
		return vs[0].([]NsxvDhcpRelayRelayAgent)[vs[1].(int)]
	}).(NsxvDhcpRelayRelayAgentOutput)
}

type NsxvDistributedFirewallRule struct {
	// Action of the rule (allow, deny)
	Action string `pulumi:"action"`
	// Application definitions for this rule. An empty value means 'any'
	Applications []NsxvDistributedFirewallRuleApplication `pulumi:"applications"`
	// List of elements to which this rule applies
	AppliedTos []NsxvDistributedFirewallRuleAppliedTo `pulumi:"appliedTos"`
	// List of destination traffic for this rule. An empty value means 'any'
	Destinations []NsxvDistributedFirewallRuleDestination `pulumi:"destinations"`
	// Direction of the rule (in, out, inout)
	Direction string `pulumi:"direction"`
	// Shows whether the NSX-V Distributed Firewall is enabled.
	Enabled *bool `pulumi:"enabled"`
	// If true, the content of the destination elements is reversed
	ExcludeDestination *bool `pulumi:"excludeDestination"`
	// If true, the content of the source elements is reversed
	ExcludeSource *bool `pulumi:"excludeSource"`
	// Firewall Rule ID
	Id *int `pulumi:"id"`
	// Whether the rule traffic is logged
	Logged *bool `pulumi:"logged"`
	// Firewall Rule name
	Name *string `pulumi:"name"`
	// Packet type of the rule (any, ipv4, ipv6)
	PacketType *string `pulumi:"packetType"`
	// List of source traffic for this rule. An empty value means 'any'
	Sources []NsxvDistributedFirewallRuleSource `pulumi:"sources"`
}

// NsxvDistributedFirewallRuleInput is an input type that accepts NsxvDistributedFirewallRuleArgs and NsxvDistributedFirewallRuleOutput values.
// You can construct a concrete instance of `NsxvDistributedFirewallRuleInput` via:
//
//	NsxvDistributedFirewallRuleArgs{...}
type NsxvDistributedFirewallRuleInput interface {
	pulumi.Input

	ToNsxvDistributedFirewallRuleOutput() NsxvDistributedFirewallRuleOutput
	ToNsxvDistributedFirewallRuleOutputWithContext(context.Context) NsxvDistributedFirewallRuleOutput
}

type NsxvDistributedFirewallRuleArgs struct {
	// Action of the rule (allow, deny)
	Action pulumi.StringInput `pulumi:"action"`
	// Application definitions for this rule. An empty value means 'any'
	Applications NsxvDistributedFirewallRuleApplicationArrayInput `pulumi:"applications"`
	// List of elements to which this rule applies
	AppliedTos NsxvDistributedFirewallRuleAppliedToArrayInput `pulumi:"appliedTos"`
	// List of destination traffic for this rule. An empty value means 'any'
	Destinations NsxvDistributedFirewallRuleDestinationArrayInput `pulumi:"destinations"`
	// Direction of the rule (in, out, inout)
	Direction pulumi.StringInput `pulumi:"direction"`
	// Shows whether the NSX-V Distributed Firewall is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// If true, the content of the destination elements is reversed
	ExcludeDestination pulumi.BoolPtrInput `pulumi:"excludeDestination"`
	// If true, the content of the source elements is reversed
	ExcludeSource pulumi.BoolPtrInput `pulumi:"excludeSource"`
	// Firewall Rule ID
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Whether the rule traffic is logged
	Logged pulumi.BoolPtrInput `pulumi:"logged"`
	// Firewall Rule name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Packet type of the rule (any, ipv4, ipv6)
	PacketType pulumi.StringPtrInput `pulumi:"packetType"`
	// List of source traffic for this rule. An empty value means 'any'
	Sources NsxvDistributedFirewallRuleSourceArrayInput `pulumi:"sources"`
}

func (NsxvDistributedFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDistributedFirewallRule)(nil)).Elem()
}

func (i NsxvDistributedFirewallRuleArgs) ToNsxvDistributedFirewallRuleOutput() NsxvDistributedFirewallRuleOutput {
	return i.ToNsxvDistributedFirewallRuleOutputWithContext(context.Background())
}

func (i NsxvDistributedFirewallRuleArgs) ToNsxvDistributedFirewallRuleOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDistributedFirewallRuleOutput)
}

// NsxvDistributedFirewallRuleArrayInput is an input type that accepts NsxvDistributedFirewallRuleArray and NsxvDistributedFirewallRuleArrayOutput values.
// You can construct a concrete instance of `NsxvDistributedFirewallRuleArrayInput` via:
//
//	NsxvDistributedFirewallRuleArray{ NsxvDistributedFirewallRuleArgs{...} }
type NsxvDistributedFirewallRuleArrayInput interface {
	pulumi.Input

	ToNsxvDistributedFirewallRuleArrayOutput() NsxvDistributedFirewallRuleArrayOutput
	ToNsxvDistributedFirewallRuleArrayOutputWithContext(context.Context) NsxvDistributedFirewallRuleArrayOutput
}

type NsxvDistributedFirewallRuleArray []NsxvDistributedFirewallRuleInput

func (NsxvDistributedFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDistributedFirewallRule)(nil)).Elem()
}

func (i NsxvDistributedFirewallRuleArray) ToNsxvDistributedFirewallRuleArrayOutput() NsxvDistributedFirewallRuleArrayOutput {
	return i.ToNsxvDistributedFirewallRuleArrayOutputWithContext(context.Background())
}

func (i NsxvDistributedFirewallRuleArray) ToNsxvDistributedFirewallRuleArrayOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDistributedFirewallRuleArrayOutput)
}

type NsxvDistributedFirewallRuleOutput struct{ *pulumi.OutputState }

func (NsxvDistributedFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDistributedFirewallRule)(nil)).Elem()
}

func (o NsxvDistributedFirewallRuleOutput) ToNsxvDistributedFirewallRuleOutput() NsxvDistributedFirewallRuleOutput {
	return o
}

func (o NsxvDistributedFirewallRuleOutput) ToNsxvDistributedFirewallRuleOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleOutput {
	return o
}

// Action of the rule (allow, deny)
func (o NsxvDistributedFirewallRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) string { return v.Action }).(pulumi.StringOutput)
}

// Application definitions for this rule. An empty value means 'any'
func (o NsxvDistributedFirewallRuleOutput) Applications() NsxvDistributedFirewallRuleApplicationArrayOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) []NsxvDistributedFirewallRuleApplication { return v.Applications }).(NsxvDistributedFirewallRuleApplicationArrayOutput)
}

// List of elements to which this rule applies
func (o NsxvDistributedFirewallRuleOutput) AppliedTos() NsxvDistributedFirewallRuleAppliedToArrayOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) []NsxvDistributedFirewallRuleAppliedTo { return v.AppliedTos }).(NsxvDistributedFirewallRuleAppliedToArrayOutput)
}

// List of destination traffic for this rule. An empty value means 'any'
func (o NsxvDistributedFirewallRuleOutput) Destinations() NsxvDistributedFirewallRuleDestinationArrayOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) []NsxvDistributedFirewallRuleDestination { return v.Destinations }).(NsxvDistributedFirewallRuleDestinationArrayOutput)
}

// Direction of the rule (in, out, inout)
func (o NsxvDistributedFirewallRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) string { return v.Direction }).(pulumi.StringOutput)
}

// Shows whether the NSX-V Distributed Firewall is enabled.
func (o NsxvDistributedFirewallRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// If true, the content of the destination elements is reversed
func (o NsxvDistributedFirewallRuleOutput) ExcludeDestination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) *bool { return v.ExcludeDestination }).(pulumi.BoolPtrOutput)
}

// If true, the content of the source elements is reversed
func (o NsxvDistributedFirewallRuleOutput) ExcludeSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) *bool { return v.ExcludeSource }).(pulumi.BoolPtrOutput)
}

// Firewall Rule ID
func (o NsxvDistributedFirewallRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Whether the rule traffic is logged
func (o NsxvDistributedFirewallRuleOutput) Logged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) *bool { return v.Logged }).(pulumi.BoolPtrOutput)
}

// Firewall Rule name
func (o NsxvDistributedFirewallRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Packet type of the rule (any, ipv4, ipv6)
func (o NsxvDistributedFirewallRuleOutput) PacketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) *string { return v.PacketType }).(pulumi.StringPtrOutput)
}

// List of source traffic for this rule. An empty value means 'any'
func (o NsxvDistributedFirewallRuleOutput) Sources() NsxvDistributedFirewallRuleSourceArrayOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRule) []NsxvDistributedFirewallRuleSource { return v.Sources }).(NsxvDistributedFirewallRuleSourceArrayOutput)
}

type NsxvDistributedFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (NsxvDistributedFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDistributedFirewallRule)(nil)).Elem()
}

func (o NsxvDistributedFirewallRuleArrayOutput) ToNsxvDistributedFirewallRuleArrayOutput() NsxvDistributedFirewallRuleArrayOutput {
	return o
}

func (o NsxvDistributedFirewallRuleArrayOutput) ToNsxvDistributedFirewallRuleArrayOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleArrayOutput {
	return o
}

func (o NsxvDistributedFirewallRuleArrayOutput) Index(i pulumi.IntInput) NsxvDistributedFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxvDistributedFirewallRule {
		return vs[0].([]NsxvDistributedFirewallRule)[vs[1].(int)]
	}).(NsxvDistributedFirewallRuleOutput)
}

type NsxvDistributedFirewallRuleApplication struct {
	// Destination port for this application. Leaving it empty means 'any' port
	DestinationPort *string `pulumi:"destinationPort"`
	// Name of application (Application, ApplicationGroup)
	Name *string `pulumi:"name"`
	// Protocol of the application (one of TCP, UDP, ICMP) (When not using name/value)
	Protocol *string `pulumi:"protocol"`
	// Source port for this application. Leaving it empty means 'any' port
	SourcePort *string `pulumi:"sourcePort"`
	// Type of application
	Type *string `pulumi:"type"`
	// Value of the application
	Value *string `pulumi:"value"`
}

// NsxvDistributedFirewallRuleApplicationInput is an input type that accepts NsxvDistributedFirewallRuleApplicationArgs and NsxvDistributedFirewallRuleApplicationOutput values.
// You can construct a concrete instance of `NsxvDistributedFirewallRuleApplicationInput` via:
//
//	NsxvDistributedFirewallRuleApplicationArgs{...}
type NsxvDistributedFirewallRuleApplicationInput interface {
	pulumi.Input

	ToNsxvDistributedFirewallRuleApplicationOutput() NsxvDistributedFirewallRuleApplicationOutput
	ToNsxvDistributedFirewallRuleApplicationOutputWithContext(context.Context) NsxvDistributedFirewallRuleApplicationOutput
}

type NsxvDistributedFirewallRuleApplicationArgs struct {
	// Destination port for this application. Leaving it empty means 'any' port
	DestinationPort pulumi.StringPtrInput `pulumi:"destinationPort"`
	// Name of application (Application, ApplicationGroup)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol of the application (one of TCP, UDP, ICMP) (When not using name/value)
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Source port for this application. Leaving it empty means 'any' port
	SourcePort pulumi.StringPtrInput `pulumi:"sourcePort"`
	// Type of application
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Value of the application
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NsxvDistributedFirewallRuleApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDistributedFirewallRuleApplication)(nil)).Elem()
}

func (i NsxvDistributedFirewallRuleApplicationArgs) ToNsxvDistributedFirewallRuleApplicationOutput() NsxvDistributedFirewallRuleApplicationOutput {
	return i.ToNsxvDistributedFirewallRuleApplicationOutputWithContext(context.Background())
}

func (i NsxvDistributedFirewallRuleApplicationArgs) ToNsxvDistributedFirewallRuleApplicationOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDistributedFirewallRuleApplicationOutput)
}

// NsxvDistributedFirewallRuleApplicationArrayInput is an input type that accepts NsxvDistributedFirewallRuleApplicationArray and NsxvDistributedFirewallRuleApplicationArrayOutput values.
// You can construct a concrete instance of `NsxvDistributedFirewallRuleApplicationArrayInput` via:
//
//	NsxvDistributedFirewallRuleApplicationArray{ NsxvDistributedFirewallRuleApplicationArgs{...} }
type NsxvDistributedFirewallRuleApplicationArrayInput interface {
	pulumi.Input

	ToNsxvDistributedFirewallRuleApplicationArrayOutput() NsxvDistributedFirewallRuleApplicationArrayOutput
	ToNsxvDistributedFirewallRuleApplicationArrayOutputWithContext(context.Context) NsxvDistributedFirewallRuleApplicationArrayOutput
}

type NsxvDistributedFirewallRuleApplicationArray []NsxvDistributedFirewallRuleApplicationInput

func (NsxvDistributedFirewallRuleApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDistributedFirewallRuleApplication)(nil)).Elem()
}

func (i NsxvDistributedFirewallRuleApplicationArray) ToNsxvDistributedFirewallRuleApplicationArrayOutput() NsxvDistributedFirewallRuleApplicationArrayOutput {
	return i.ToNsxvDistributedFirewallRuleApplicationArrayOutputWithContext(context.Background())
}

func (i NsxvDistributedFirewallRuleApplicationArray) ToNsxvDistributedFirewallRuleApplicationArrayOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDistributedFirewallRuleApplicationArrayOutput)
}

type NsxvDistributedFirewallRuleApplicationOutput struct{ *pulumi.OutputState }

func (NsxvDistributedFirewallRuleApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDistributedFirewallRuleApplication)(nil)).Elem()
}

func (o NsxvDistributedFirewallRuleApplicationOutput) ToNsxvDistributedFirewallRuleApplicationOutput() NsxvDistributedFirewallRuleApplicationOutput {
	return o
}

func (o NsxvDistributedFirewallRuleApplicationOutput) ToNsxvDistributedFirewallRuleApplicationOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleApplicationOutput {
	return o
}

// Destination port for this application. Leaving it empty means 'any' port
func (o NsxvDistributedFirewallRuleApplicationOutput) DestinationPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleApplication) *string { return v.DestinationPort }).(pulumi.StringPtrOutput)
}

// Name of application (Application, ApplicationGroup)
func (o NsxvDistributedFirewallRuleApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleApplication) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol of the application (one of TCP, UDP, ICMP) (When not using name/value)
func (o NsxvDistributedFirewallRuleApplicationOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleApplication) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Source port for this application. Leaving it empty means 'any' port
func (o NsxvDistributedFirewallRuleApplicationOutput) SourcePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleApplication) *string { return v.SourcePort }).(pulumi.StringPtrOutput)
}

// Type of application
func (o NsxvDistributedFirewallRuleApplicationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleApplication) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Value of the application
func (o NsxvDistributedFirewallRuleApplicationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleApplication) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NsxvDistributedFirewallRuleApplicationArrayOutput struct{ *pulumi.OutputState }

func (NsxvDistributedFirewallRuleApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDistributedFirewallRuleApplication)(nil)).Elem()
}

func (o NsxvDistributedFirewallRuleApplicationArrayOutput) ToNsxvDistributedFirewallRuleApplicationArrayOutput() NsxvDistributedFirewallRuleApplicationArrayOutput {
	return o
}

func (o NsxvDistributedFirewallRuleApplicationArrayOutput) ToNsxvDistributedFirewallRuleApplicationArrayOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleApplicationArrayOutput {
	return o
}

func (o NsxvDistributedFirewallRuleApplicationArrayOutput) Index(i pulumi.IntInput) NsxvDistributedFirewallRuleApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxvDistributedFirewallRuleApplication {
		return vs[0].([]NsxvDistributedFirewallRuleApplication)[vs[1].(int)]
	}).(NsxvDistributedFirewallRuleApplicationOutput)
}

type NsxvDistributedFirewallRuleAppliedTo struct {
	// Name of the applied-to entity
	Name string `pulumi:"name"`
	// Type of the applied-to entity (one of Network, Edge, VirtualMachine, IPSet, VDC, Ipv4Address)
	Type string `pulumi:"type"`
	// Value of the applied-to entity
	Value string `pulumi:"value"`
}

// NsxvDistributedFirewallRuleAppliedToInput is an input type that accepts NsxvDistributedFirewallRuleAppliedToArgs and NsxvDistributedFirewallRuleAppliedToOutput values.
// You can construct a concrete instance of `NsxvDistributedFirewallRuleAppliedToInput` via:
//
//	NsxvDistributedFirewallRuleAppliedToArgs{...}
type NsxvDistributedFirewallRuleAppliedToInput interface {
	pulumi.Input

	ToNsxvDistributedFirewallRuleAppliedToOutput() NsxvDistributedFirewallRuleAppliedToOutput
	ToNsxvDistributedFirewallRuleAppliedToOutputWithContext(context.Context) NsxvDistributedFirewallRuleAppliedToOutput
}

type NsxvDistributedFirewallRuleAppliedToArgs struct {
	// Name of the applied-to entity
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the applied-to entity (one of Network, Edge, VirtualMachine, IPSet, VDC, Ipv4Address)
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the applied-to entity
	Value pulumi.StringInput `pulumi:"value"`
}

func (NsxvDistributedFirewallRuleAppliedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDistributedFirewallRuleAppliedTo)(nil)).Elem()
}

func (i NsxvDistributedFirewallRuleAppliedToArgs) ToNsxvDistributedFirewallRuleAppliedToOutput() NsxvDistributedFirewallRuleAppliedToOutput {
	return i.ToNsxvDistributedFirewallRuleAppliedToOutputWithContext(context.Background())
}

func (i NsxvDistributedFirewallRuleAppliedToArgs) ToNsxvDistributedFirewallRuleAppliedToOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleAppliedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDistributedFirewallRuleAppliedToOutput)
}

// NsxvDistributedFirewallRuleAppliedToArrayInput is an input type that accepts NsxvDistributedFirewallRuleAppliedToArray and NsxvDistributedFirewallRuleAppliedToArrayOutput values.
// You can construct a concrete instance of `NsxvDistributedFirewallRuleAppliedToArrayInput` via:
//
//	NsxvDistributedFirewallRuleAppliedToArray{ NsxvDistributedFirewallRuleAppliedToArgs{...} }
type NsxvDistributedFirewallRuleAppliedToArrayInput interface {
	pulumi.Input

	ToNsxvDistributedFirewallRuleAppliedToArrayOutput() NsxvDistributedFirewallRuleAppliedToArrayOutput
	ToNsxvDistributedFirewallRuleAppliedToArrayOutputWithContext(context.Context) NsxvDistributedFirewallRuleAppliedToArrayOutput
}

type NsxvDistributedFirewallRuleAppliedToArray []NsxvDistributedFirewallRuleAppliedToInput

func (NsxvDistributedFirewallRuleAppliedToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDistributedFirewallRuleAppliedTo)(nil)).Elem()
}

func (i NsxvDistributedFirewallRuleAppliedToArray) ToNsxvDistributedFirewallRuleAppliedToArrayOutput() NsxvDistributedFirewallRuleAppliedToArrayOutput {
	return i.ToNsxvDistributedFirewallRuleAppliedToArrayOutputWithContext(context.Background())
}

func (i NsxvDistributedFirewallRuleAppliedToArray) ToNsxvDistributedFirewallRuleAppliedToArrayOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleAppliedToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDistributedFirewallRuleAppliedToArrayOutput)
}

type NsxvDistributedFirewallRuleAppliedToOutput struct{ *pulumi.OutputState }

func (NsxvDistributedFirewallRuleAppliedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDistributedFirewallRuleAppliedTo)(nil)).Elem()
}

func (o NsxvDistributedFirewallRuleAppliedToOutput) ToNsxvDistributedFirewallRuleAppliedToOutput() NsxvDistributedFirewallRuleAppliedToOutput {
	return o
}

func (o NsxvDistributedFirewallRuleAppliedToOutput) ToNsxvDistributedFirewallRuleAppliedToOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleAppliedToOutput {
	return o
}

// Name of the applied-to entity
func (o NsxvDistributedFirewallRuleAppliedToOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleAppliedTo) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the applied-to entity (one of Network, Edge, VirtualMachine, IPSet, VDC, Ipv4Address)
func (o NsxvDistributedFirewallRuleAppliedToOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleAppliedTo) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the applied-to entity
func (o NsxvDistributedFirewallRuleAppliedToOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleAppliedTo) string { return v.Value }).(pulumi.StringOutput)
}

type NsxvDistributedFirewallRuleAppliedToArrayOutput struct{ *pulumi.OutputState }

func (NsxvDistributedFirewallRuleAppliedToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDistributedFirewallRuleAppliedTo)(nil)).Elem()
}

func (o NsxvDistributedFirewallRuleAppliedToArrayOutput) ToNsxvDistributedFirewallRuleAppliedToArrayOutput() NsxvDistributedFirewallRuleAppliedToArrayOutput {
	return o
}

func (o NsxvDistributedFirewallRuleAppliedToArrayOutput) ToNsxvDistributedFirewallRuleAppliedToArrayOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleAppliedToArrayOutput {
	return o
}

func (o NsxvDistributedFirewallRuleAppliedToArrayOutput) Index(i pulumi.IntInput) NsxvDistributedFirewallRuleAppliedToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxvDistributedFirewallRuleAppliedTo {
		return vs[0].([]NsxvDistributedFirewallRuleAppliedTo)[vs[1].(int)]
	}).(NsxvDistributedFirewallRuleAppliedToOutput)
}

type NsxvDistributedFirewallRuleDestination struct {
	// Name of the destination entity
	Name string `pulumi:"name"`
	// Type of the destination entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
	Type string `pulumi:"type"`
	// Value of the destination entity
	Value string `pulumi:"value"`
}

// NsxvDistributedFirewallRuleDestinationInput is an input type that accepts NsxvDistributedFirewallRuleDestinationArgs and NsxvDistributedFirewallRuleDestinationOutput values.
// You can construct a concrete instance of `NsxvDistributedFirewallRuleDestinationInput` via:
//
//	NsxvDistributedFirewallRuleDestinationArgs{...}
type NsxvDistributedFirewallRuleDestinationInput interface {
	pulumi.Input

	ToNsxvDistributedFirewallRuleDestinationOutput() NsxvDistributedFirewallRuleDestinationOutput
	ToNsxvDistributedFirewallRuleDestinationOutputWithContext(context.Context) NsxvDistributedFirewallRuleDestinationOutput
}

type NsxvDistributedFirewallRuleDestinationArgs struct {
	// Name of the destination entity
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the destination entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the destination entity
	Value pulumi.StringInput `pulumi:"value"`
}

func (NsxvDistributedFirewallRuleDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDistributedFirewallRuleDestination)(nil)).Elem()
}

func (i NsxvDistributedFirewallRuleDestinationArgs) ToNsxvDistributedFirewallRuleDestinationOutput() NsxvDistributedFirewallRuleDestinationOutput {
	return i.ToNsxvDistributedFirewallRuleDestinationOutputWithContext(context.Background())
}

func (i NsxvDistributedFirewallRuleDestinationArgs) ToNsxvDistributedFirewallRuleDestinationOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDistributedFirewallRuleDestinationOutput)
}

// NsxvDistributedFirewallRuleDestinationArrayInput is an input type that accepts NsxvDistributedFirewallRuleDestinationArray and NsxvDistributedFirewallRuleDestinationArrayOutput values.
// You can construct a concrete instance of `NsxvDistributedFirewallRuleDestinationArrayInput` via:
//
//	NsxvDistributedFirewallRuleDestinationArray{ NsxvDistributedFirewallRuleDestinationArgs{...} }
type NsxvDistributedFirewallRuleDestinationArrayInput interface {
	pulumi.Input

	ToNsxvDistributedFirewallRuleDestinationArrayOutput() NsxvDistributedFirewallRuleDestinationArrayOutput
	ToNsxvDistributedFirewallRuleDestinationArrayOutputWithContext(context.Context) NsxvDistributedFirewallRuleDestinationArrayOutput
}

type NsxvDistributedFirewallRuleDestinationArray []NsxvDistributedFirewallRuleDestinationInput

func (NsxvDistributedFirewallRuleDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDistributedFirewallRuleDestination)(nil)).Elem()
}

func (i NsxvDistributedFirewallRuleDestinationArray) ToNsxvDistributedFirewallRuleDestinationArrayOutput() NsxvDistributedFirewallRuleDestinationArrayOutput {
	return i.ToNsxvDistributedFirewallRuleDestinationArrayOutputWithContext(context.Background())
}

func (i NsxvDistributedFirewallRuleDestinationArray) ToNsxvDistributedFirewallRuleDestinationArrayOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDistributedFirewallRuleDestinationArrayOutput)
}

type NsxvDistributedFirewallRuleDestinationOutput struct{ *pulumi.OutputState }

func (NsxvDistributedFirewallRuleDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDistributedFirewallRuleDestination)(nil)).Elem()
}

func (o NsxvDistributedFirewallRuleDestinationOutput) ToNsxvDistributedFirewallRuleDestinationOutput() NsxvDistributedFirewallRuleDestinationOutput {
	return o
}

func (o NsxvDistributedFirewallRuleDestinationOutput) ToNsxvDistributedFirewallRuleDestinationOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleDestinationOutput {
	return o
}

// Name of the destination entity
func (o NsxvDistributedFirewallRuleDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleDestination) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the destination entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
func (o NsxvDistributedFirewallRuleDestinationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleDestination) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the destination entity
func (o NsxvDistributedFirewallRuleDestinationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleDestination) string { return v.Value }).(pulumi.StringOutput)
}

type NsxvDistributedFirewallRuleDestinationArrayOutput struct{ *pulumi.OutputState }

func (NsxvDistributedFirewallRuleDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDistributedFirewallRuleDestination)(nil)).Elem()
}

func (o NsxvDistributedFirewallRuleDestinationArrayOutput) ToNsxvDistributedFirewallRuleDestinationArrayOutput() NsxvDistributedFirewallRuleDestinationArrayOutput {
	return o
}

func (o NsxvDistributedFirewallRuleDestinationArrayOutput) ToNsxvDistributedFirewallRuleDestinationArrayOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleDestinationArrayOutput {
	return o
}

func (o NsxvDistributedFirewallRuleDestinationArrayOutput) Index(i pulumi.IntInput) NsxvDistributedFirewallRuleDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxvDistributedFirewallRuleDestination {
		return vs[0].([]NsxvDistributedFirewallRuleDestination)[vs[1].(int)]
	}).(NsxvDistributedFirewallRuleDestinationOutput)
}

type NsxvDistributedFirewallRuleSource struct {
	// Name of the source entity
	Name string `pulumi:"name"`
	// Type of the source entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
	Type string `pulumi:"type"`
	// Value of the source entity
	Value string `pulumi:"value"`
}

// NsxvDistributedFirewallRuleSourceInput is an input type that accepts NsxvDistributedFirewallRuleSourceArgs and NsxvDistributedFirewallRuleSourceOutput values.
// You can construct a concrete instance of `NsxvDistributedFirewallRuleSourceInput` via:
//
//	NsxvDistributedFirewallRuleSourceArgs{...}
type NsxvDistributedFirewallRuleSourceInput interface {
	pulumi.Input

	ToNsxvDistributedFirewallRuleSourceOutput() NsxvDistributedFirewallRuleSourceOutput
	ToNsxvDistributedFirewallRuleSourceOutputWithContext(context.Context) NsxvDistributedFirewallRuleSourceOutput
}

type NsxvDistributedFirewallRuleSourceArgs struct {
	// Name of the source entity
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the source entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the source entity
	Value pulumi.StringInput `pulumi:"value"`
}

func (NsxvDistributedFirewallRuleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDistributedFirewallRuleSource)(nil)).Elem()
}

func (i NsxvDistributedFirewallRuleSourceArgs) ToNsxvDistributedFirewallRuleSourceOutput() NsxvDistributedFirewallRuleSourceOutput {
	return i.ToNsxvDistributedFirewallRuleSourceOutputWithContext(context.Background())
}

func (i NsxvDistributedFirewallRuleSourceArgs) ToNsxvDistributedFirewallRuleSourceOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDistributedFirewallRuleSourceOutput)
}

// NsxvDistributedFirewallRuleSourceArrayInput is an input type that accepts NsxvDistributedFirewallRuleSourceArray and NsxvDistributedFirewallRuleSourceArrayOutput values.
// You can construct a concrete instance of `NsxvDistributedFirewallRuleSourceArrayInput` via:
//
//	NsxvDistributedFirewallRuleSourceArray{ NsxvDistributedFirewallRuleSourceArgs{...} }
type NsxvDistributedFirewallRuleSourceArrayInput interface {
	pulumi.Input

	ToNsxvDistributedFirewallRuleSourceArrayOutput() NsxvDistributedFirewallRuleSourceArrayOutput
	ToNsxvDistributedFirewallRuleSourceArrayOutputWithContext(context.Context) NsxvDistributedFirewallRuleSourceArrayOutput
}

type NsxvDistributedFirewallRuleSourceArray []NsxvDistributedFirewallRuleSourceInput

func (NsxvDistributedFirewallRuleSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDistributedFirewallRuleSource)(nil)).Elem()
}

func (i NsxvDistributedFirewallRuleSourceArray) ToNsxvDistributedFirewallRuleSourceArrayOutput() NsxvDistributedFirewallRuleSourceArrayOutput {
	return i.ToNsxvDistributedFirewallRuleSourceArrayOutputWithContext(context.Background())
}

func (i NsxvDistributedFirewallRuleSourceArray) ToNsxvDistributedFirewallRuleSourceArrayOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvDistributedFirewallRuleSourceArrayOutput)
}

type NsxvDistributedFirewallRuleSourceOutput struct{ *pulumi.OutputState }

func (NsxvDistributedFirewallRuleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvDistributedFirewallRuleSource)(nil)).Elem()
}

func (o NsxvDistributedFirewallRuleSourceOutput) ToNsxvDistributedFirewallRuleSourceOutput() NsxvDistributedFirewallRuleSourceOutput {
	return o
}

func (o NsxvDistributedFirewallRuleSourceOutput) ToNsxvDistributedFirewallRuleSourceOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleSourceOutput {
	return o
}

// Name of the source entity
func (o NsxvDistributedFirewallRuleSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleSource) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the source entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
func (o NsxvDistributedFirewallRuleSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleSource) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the source entity
func (o NsxvDistributedFirewallRuleSourceOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvDistributedFirewallRuleSource) string { return v.Value }).(pulumi.StringOutput)
}

type NsxvDistributedFirewallRuleSourceArrayOutput struct{ *pulumi.OutputState }

func (NsxvDistributedFirewallRuleSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvDistributedFirewallRuleSource)(nil)).Elem()
}

func (o NsxvDistributedFirewallRuleSourceArrayOutput) ToNsxvDistributedFirewallRuleSourceArrayOutput() NsxvDistributedFirewallRuleSourceArrayOutput {
	return o
}

func (o NsxvDistributedFirewallRuleSourceArrayOutput) ToNsxvDistributedFirewallRuleSourceArrayOutputWithContext(ctx context.Context) NsxvDistributedFirewallRuleSourceArrayOutput {
	return o
}

func (o NsxvDistributedFirewallRuleSourceArrayOutput) Index(i pulumi.IntInput) NsxvDistributedFirewallRuleSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxvDistributedFirewallRuleSource {
		return vs[0].([]NsxvDistributedFirewallRuleSource)[vs[1].(int)]
	}).(NsxvDistributedFirewallRuleSourceOutput)
}

type NsxvFirewallRuleDestination struct {
	// Rule is applied to traffic going to any destinations except for the excluded destination. Default 'false'
	Exclude *bool `pulumi:"exclude"`
	// 'vse', 'internal', 'external' or network name
	GatewayInterfaces []string `pulumi:"gatewayInterfaces"`
	// IP address, CIDR, an IP range, or the keyword 'any'
	IpAddresses []string `pulumi:"ipAddresses"`
	// Set of IP set names
	IpSets []string `pulumi:"ipSets"`
	// Set of org network names
	OrgNetworks []string `pulumi:"orgNetworks"`
	// Set of VM IDs
	VmIds []string `pulumi:"vmIds"`
}

// NsxvFirewallRuleDestinationInput is an input type that accepts NsxvFirewallRuleDestinationArgs and NsxvFirewallRuleDestinationOutput values.
// You can construct a concrete instance of `NsxvFirewallRuleDestinationInput` via:
//
//	NsxvFirewallRuleDestinationArgs{...}
type NsxvFirewallRuleDestinationInput interface {
	pulumi.Input

	ToNsxvFirewallRuleDestinationOutput() NsxvFirewallRuleDestinationOutput
	ToNsxvFirewallRuleDestinationOutputWithContext(context.Context) NsxvFirewallRuleDestinationOutput
}

type NsxvFirewallRuleDestinationArgs struct {
	// Rule is applied to traffic going to any destinations except for the excluded destination. Default 'false'
	Exclude pulumi.BoolPtrInput `pulumi:"exclude"`
	// 'vse', 'internal', 'external' or network name
	GatewayInterfaces pulumi.StringArrayInput `pulumi:"gatewayInterfaces"`
	// IP address, CIDR, an IP range, or the keyword 'any'
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// Set of IP set names
	IpSets pulumi.StringArrayInput `pulumi:"ipSets"`
	// Set of org network names
	OrgNetworks pulumi.StringArrayInput `pulumi:"orgNetworks"`
	// Set of VM IDs
	VmIds pulumi.StringArrayInput `pulumi:"vmIds"`
}

func (NsxvFirewallRuleDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvFirewallRuleDestination)(nil)).Elem()
}

func (i NsxvFirewallRuleDestinationArgs) ToNsxvFirewallRuleDestinationOutput() NsxvFirewallRuleDestinationOutput {
	return i.ToNsxvFirewallRuleDestinationOutputWithContext(context.Background())
}

func (i NsxvFirewallRuleDestinationArgs) ToNsxvFirewallRuleDestinationOutputWithContext(ctx context.Context) NsxvFirewallRuleDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvFirewallRuleDestinationOutput)
}

func (i NsxvFirewallRuleDestinationArgs) ToNsxvFirewallRuleDestinationPtrOutput() NsxvFirewallRuleDestinationPtrOutput {
	return i.ToNsxvFirewallRuleDestinationPtrOutputWithContext(context.Background())
}

func (i NsxvFirewallRuleDestinationArgs) ToNsxvFirewallRuleDestinationPtrOutputWithContext(ctx context.Context) NsxvFirewallRuleDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvFirewallRuleDestinationOutput).ToNsxvFirewallRuleDestinationPtrOutputWithContext(ctx)
}

// NsxvFirewallRuleDestinationPtrInput is an input type that accepts NsxvFirewallRuleDestinationArgs, NsxvFirewallRuleDestinationPtr and NsxvFirewallRuleDestinationPtrOutput values.
// You can construct a concrete instance of `NsxvFirewallRuleDestinationPtrInput` via:
//
//	        NsxvFirewallRuleDestinationArgs{...}
//
//	or:
//
//	        nil
type NsxvFirewallRuleDestinationPtrInput interface {
	pulumi.Input

	ToNsxvFirewallRuleDestinationPtrOutput() NsxvFirewallRuleDestinationPtrOutput
	ToNsxvFirewallRuleDestinationPtrOutputWithContext(context.Context) NsxvFirewallRuleDestinationPtrOutput
}

type nsxvFirewallRuleDestinationPtrType NsxvFirewallRuleDestinationArgs

func NsxvFirewallRuleDestinationPtr(v *NsxvFirewallRuleDestinationArgs) NsxvFirewallRuleDestinationPtrInput {
	return (*nsxvFirewallRuleDestinationPtrType)(v)
}

func (*nsxvFirewallRuleDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxvFirewallRuleDestination)(nil)).Elem()
}

func (i *nsxvFirewallRuleDestinationPtrType) ToNsxvFirewallRuleDestinationPtrOutput() NsxvFirewallRuleDestinationPtrOutput {
	return i.ToNsxvFirewallRuleDestinationPtrOutputWithContext(context.Background())
}

func (i *nsxvFirewallRuleDestinationPtrType) ToNsxvFirewallRuleDestinationPtrOutputWithContext(ctx context.Context) NsxvFirewallRuleDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvFirewallRuleDestinationPtrOutput)
}

type NsxvFirewallRuleDestinationOutput struct{ *pulumi.OutputState }

func (NsxvFirewallRuleDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvFirewallRuleDestination)(nil)).Elem()
}

func (o NsxvFirewallRuleDestinationOutput) ToNsxvFirewallRuleDestinationOutput() NsxvFirewallRuleDestinationOutput {
	return o
}

func (o NsxvFirewallRuleDestinationOutput) ToNsxvFirewallRuleDestinationOutputWithContext(ctx context.Context) NsxvFirewallRuleDestinationOutput {
	return o
}

func (o NsxvFirewallRuleDestinationOutput) ToNsxvFirewallRuleDestinationPtrOutput() NsxvFirewallRuleDestinationPtrOutput {
	return o.ToNsxvFirewallRuleDestinationPtrOutputWithContext(context.Background())
}

func (o NsxvFirewallRuleDestinationOutput) ToNsxvFirewallRuleDestinationPtrOutputWithContext(ctx context.Context) NsxvFirewallRuleDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxvFirewallRuleDestination) *NsxvFirewallRuleDestination {
		return &v
	}).(NsxvFirewallRuleDestinationPtrOutput)
}

// Rule is applied to traffic going to any destinations except for the excluded destination. Default 'false'
func (o NsxvFirewallRuleDestinationOutput) Exclude() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxvFirewallRuleDestination) *bool { return v.Exclude }).(pulumi.BoolPtrOutput)
}

// 'vse', 'internal', 'external' or network name
func (o NsxvFirewallRuleDestinationOutput) GatewayInterfaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxvFirewallRuleDestination) []string { return v.GatewayInterfaces }).(pulumi.StringArrayOutput)
}

// IP address, CIDR, an IP range, or the keyword 'any'
func (o NsxvFirewallRuleDestinationOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxvFirewallRuleDestination) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Set of IP set names
func (o NsxvFirewallRuleDestinationOutput) IpSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxvFirewallRuleDestination) []string { return v.IpSets }).(pulumi.StringArrayOutput)
}

// Set of org network names
func (o NsxvFirewallRuleDestinationOutput) OrgNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxvFirewallRuleDestination) []string { return v.OrgNetworks }).(pulumi.StringArrayOutput)
}

// Set of VM IDs
func (o NsxvFirewallRuleDestinationOutput) VmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxvFirewallRuleDestination) []string { return v.VmIds }).(pulumi.StringArrayOutput)
}

type NsxvFirewallRuleDestinationPtrOutput struct{ *pulumi.OutputState }

func (NsxvFirewallRuleDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxvFirewallRuleDestination)(nil)).Elem()
}

func (o NsxvFirewallRuleDestinationPtrOutput) ToNsxvFirewallRuleDestinationPtrOutput() NsxvFirewallRuleDestinationPtrOutput {
	return o
}

func (o NsxvFirewallRuleDestinationPtrOutput) ToNsxvFirewallRuleDestinationPtrOutputWithContext(ctx context.Context) NsxvFirewallRuleDestinationPtrOutput {
	return o
}

func (o NsxvFirewallRuleDestinationPtrOutput) Elem() NsxvFirewallRuleDestinationOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleDestination) NsxvFirewallRuleDestination {
		if v != nil {
			return *v
		}
		var ret NsxvFirewallRuleDestination
		return ret
	}).(NsxvFirewallRuleDestinationOutput)
}

// Rule is applied to traffic going to any destinations except for the excluded destination. Default 'false'
func (o NsxvFirewallRuleDestinationPtrOutput) Exclude() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleDestination) *bool {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.BoolPtrOutput)
}

// 'vse', 'internal', 'external' or network name
func (o NsxvFirewallRuleDestinationPtrOutput) GatewayInterfaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleDestination) []string {
		if v == nil {
			return nil
		}
		return v.GatewayInterfaces
	}).(pulumi.StringArrayOutput)
}

// IP address, CIDR, an IP range, or the keyword 'any'
func (o NsxvFirewallRuleDestinationPtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleDestination) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// Set of IP set names
func (o NsxvFirewallRuleDestinationPtrOutput) IpSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleDestination) []string {
		if v == nil {
			return nil
		}
		return v.IpSets
	}).(pulumi.StringArrayOutput)
}

// Set of org network names
func (o NsxvFirewallRuleDestinationPtrOutput) OrgNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleDestination) []string {
		if v == nil {
			return nil
		}
		return v.OrgNetworks
	}).(pulumi.StringArrayOutput)
}

// Set of VM IDs
func (o NsxvFirewallRuleDestinationPtrOutput) VmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleDestination) []string {
		if v == nil {
			return nil
		}
		return v.VmIds
	}).(pulumi.StringArrayOutput)
}

type NsxvFirewallRuleService struct {
	Port       *string `pulumi:"port"`
	Protocol   string  `pulumi:"protocol"`
	SourcePort *string `pulumi:"sourcePort"`
}

// NsxvFirewallRuleServiceInput is an input type that accepts NsxvFirewallRuleServiceArgs and NsxvFirewallRuleServiceOutput values.
// You can construct a concrete instance of `NsxvFirewallRuleServiceInput` via:
//
//	NsxvFirewallRuleServiceArgs{...}
type NsxvFirewallRuleServiceInput interface {
	pulumi.Input

	ToNsxvFirewallRuleServiceOutput() NsxvFirewallRuleServiceOutput
	ToNsxvFirewallRuleServiceOutputWithContext(context.Context) NsxvFirewallRuleServiceOutput
}

type NsxvFirewallRuleServiceArgs struct {
	Port       pulumi.StringPtrInput `pulumi:"port"`
	Protocol   pulumi.StringInput    `pulumi:"protocol"`
	SourcePort pulumi.StringPtrInput `pulumi:"sourcePort"`
}

func (NsxvFirewallRuleServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvFirewallRuleService)(nil)).Elem()
}

func (i NsxvFirewallRuleServiceArgs) ToNsxvFirewallRuleServiceOutput() NsxvFirewallRuleServiceOutput {
	return i.ToNsxvFirewallRuleServiceOutputWithContext(context.Background())
}

func (i NsxvFirewallRuleServiceArgs) ToNsxvFirewallRuleServiceOutputWithContext(ctx context.Context) NsxvFirewallRuleServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvFirewallRuleServiceOutput)
}

// NsxvFirewallRuleServiceArrayInput is an input type that accepts NsxvFirewallRuleServiceArray and NsxvFirewallRuleServiceArrayOutput values.
// You can construct a concrete instance of `NsxvFirewallRuleServiceArrayInput` via:
//
//	NsxvFirewallRuleServiceArray{ NsxvFirewallRuleServiceArgs{...} }
type NsxvFirewallRuleServiceArrayInput interface {
	pulumi.Input

	ToNsxvFirewallRuleServiceArrayOutput() NsxvFirewallRuleServiceArrayOutput
	ToNsxvFirewallRuleServiceArrayOutputWithContext(context.Context) NsxvFirewallRuleServiceArrayOutput
}

type NsxvFirewallRuleServiceArray []NsxvFirewallRuleServiceInput

func (NsxvFirewallRuleServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvFirewallRuleService)(nil)).Elem()
}

func (i NsxvFirewallRuleServiceArray) ToNsxvFirewallRuleServiceArrayOutput() NsxvFirewallRuleServiceArrayOutput {
	return i.ToNsxvFirewallRuleServiceArrayOutputWithContext(context.Background())
}

func (i NsxvFirewallRuleServiceArray) ToNsxvFirewallRuleServiceArrayOutputWithContext(ctx context.Context) NsxvFirewallRuleServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvFirewallRuleServiceArrayOutput)
}

type NsxvFirewallRuleServiceOutput struct{ *pulumi.OutputState }

func (NsxvFirewallRuleServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvFirewallRuleService)(nil)).Elem()
}

func (o NsxvFirewallRuleServiceOutput) ToNsxvFirewallRuleServiceOutput() NsxvFirewallRuleServiceOutput {
	return o
}

func (o NsxvFirewallRuleServiceOutput) ToNsxvFirewallRuleServiceOutputWithContext(ctx context.Context) NsxvFirewallRuleServiceOutput {
	return o
}

func (o NsxvFirewallRuleServiceOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvFirewallRuleService) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o NsxvFirewallRuleServiceOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NsxvFirewallRuleService) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o NsxvFirewallRuleServiceOutput) SourcePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxvFirewallRuleService) *string { return v.SourcePort }).(pulumi.StringPtrOutput)
}

type NsxvFirewallRuleServiceArrayOutput struct{ *pulumi.OutputState }

func (NsxvFirewallRuleServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxvFirewallRuleService)(nil)).Elem()
}

func (o NsxvFirewallRuleServiceArrayOutput) ToNsxvFirewallRuleServiceArrayOutput() NsxvFirewallRuleServiceArrayOutput {
	return o
}

func (o NsxvFirewallRuleServiceArrayOutput) ToNsxvFirewallRuleServiceArrayOutputWithContext(ctx context.Context) NsxvFirewallRuleServiceArrayOutput {
	return o
}

func (o NsxvFirewallRuleServiceArrayOutput) Index(i pulumi.IntInput) NsxvFirewallRuleServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxvFirewallRuleService {
		return vs[0].([]NsxvFirewallRuleService)[vs[1].(int)]
	}).(NsxvFirewallRuleServiceOutput)
}

type NsxvFirewallRuleSource struct {
	// Rule is applied to traffic coming from all sources except for the excluded source. Default 'false'
	Exclude *bool `pulumi:"exclude"`
	// 'vse', 'internal', 'external' or network name
	GatewayInterfaces []string `pulumi:"gatewayInterfaces"`
	// IP address, CIDR, an IP range, or the keyword 'any'
	IpAddresses []string `pulumi:"ipAddresses"`
	// Set of IP set names
	IpSets []string `pulumi:"ipSets"`
	// Set of org network names
	OrgNetworks []string `pulumi:"orgNetworks"`
	// Set of VM IDs
	VmIds []string `pulumi:"vmIds"`
}

// NsxvFirewallRuleSourceInput is an input type that accepts NsxvFirewallRuleSourceArgs and NsxvFirewallRuleSourceOutput values.
// You can construct a concrete instance of `NsxvFirewallRuleSourceInput` via:
//
//	NsxvFirewallRuleSourceArgs{...}
type NsxvFirewallRuleSourceInput interface {
	pulumi.Input

	ToNsxvFirewallRuleSourceOutput() NsxvFirewallRuleSourceOutput
	ToNsxvFirewallRuleSourceOutputWithContext(context.Context) NsxvFirewallRuleSourceOutput
}

type NsxvFirewallRuleSourceArgs struct {
	// Rule is applied to traffic coming from all sources except for the excluded source. Default 'false'
	Exclude pulumi.BoolPtrInput `pulumi:"exclude"`
	// 'vse', 'internal', 'external' or network name
	GatewayInterfaces pulumi.StringArrayInput `pulumi:"gatewayInterfaces"`
	// IP address, CIDR, an IP range, or the keyword 'any'
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// Set of IP set names
	IpSets pulumi.StringArrayInput `pulumi:"ipSets"`
	// Set of org network names
	OrgNetworks pulumi.StringArrayInput `pulumi:"orgNetworks"`
	// Set of VM IDs
	VmIds pulumi.StringArrayInput `pulumi:"vmIds"`
}

func (NsxvFirewallRuleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvFirewallRuleSource)(nil)).Elem()
}

func (i NsxvFirewallRuleSourceArgs) ToNsxvFirewallRuleSourceOutput() NsxvFirewallRuleSourceOutput {
	return i.ToNsxvFirewallRuleSourceOutputWithContext(context.Background())
}

func (i NsxvFirewallRuleSourceArgs) ToNsxvFirewallRuleSourceOutputWithContext(ctx context.Context) NsxvFirewallRuleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvFirewallRuleSourceOutput)
}

func (i NsxvFirewallRuleSourceArgs) ToNsxvFirewallRuleSourcePtrOutput() NsxvFirewallRuleSourcePtrOutput {
	return i.ToNsxvFirewallRuleSourcePtrOutputWithContext(context.Background())
}

func (i NsxvFirewallRuleSourceArgs) ToNsxvFirewallRuleSourcePtrOutputWithContext(ctx context.Context) NsxvFirewallRuleSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvFirewallRuleSourceOutput).ToNsxvFirewallRuleSourcePtrOutputWithContext(ctx)
}

// NsxvFirewallRuleSourcePtrInput is an input type that accepts NsxvFirewallRuleSourceArgs, NsxvFirewallRuleSourcePtr and NsxvFirewallRuleSourcePtrOutput values.
// You can construct a concrete instance of `NsxvFirewallRuleSourcePtrInput` via:
//
//	        NsxvFirewallRuleSourceArgs{...}
//
//	or:
//
//	        nil
type NsxvFirewallRuleSourcePtrInput interface {
	pulumi.Input

	ToNsxvFirewallRuleSourcePtrOutput() NsxvFirewallRuleSourcePtrOutput
	ToNsxvFirewallRuleSourcePtrOutputWithContext(context.Context) NsxvFirewallRuleSourcePtrOutput
}

type nsxvFirewallRuleSourcePtrType NsxvFirewallRuleSourceArgs

func NsxvFirewallRuleSourcePtr(v *NsxvFirewallRuleSourceArgs) NsxvFirewallRuleSourcePtrInput {
	return (*nsxvFirewallRuleSourcePtrType)(v)
}

func (*nsxvFirewallRuleSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxvFirewallRuleSource)(nil)).Elem()
}

func (i *nsxvFirewallRuleSourcePtrType) ToNsxvFirewallRuleSourcePtrOutput() NsxvFirewallRuleSourcePtrOutput {
	return i.ToNsxvFirewallRuleSourcePtrOutputWithContext(context.Background())
}

func (i *nsxvFirewallRuleSourcePtrType) ToNsxvFirewallRuleSourcePtrOutputWithContext(ctx context.Context) NsxvFirewallRuleSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxvFirewallRuleSourcePtrOutput)
}

type NsxvFirewallRuleSourceOutput struct{ *pulumi.OutputState }

func (NsxvFirewallRuleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxvFirewallRuleSource)(nil)).Elem()
}

func (o NsxvFirewallRuleSourceOutput) ToNsxvFirewallRuleSourceOutput() NsxvFirewallRuleSourceOutput {
	return o
}

func (o NsxvFirewallRuleSourceOutput) ToNsxvFirewallRuleSourceOutputWithContext(ctx context.Context) NsxvFirewallRuleSourceOutput {
	return o
}

func (o NsxvFirewallRuleSourceOutput) ToNsxvFirewallRuleSourcePtrOutput() NsxvFirewallRuleSourcePtrOutput {
	return o.ToNsxvFirewallRuleSourcePtrOutputWithContext(context.Background())
}

func (o NsxvFirewallRuleSourceOutput) ToNsxvFirewallRuleSourcePtrOutputWithContext(ctx context.Context) NsxvFirewallRuleSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsxvFirewallRuleSource) *NsxvFirewallRuleSource {
		return &v
	}).(NsxvFirewallRuleSourcePtrOutput)
}

// Rule is applied to traffic coming from all sources except for the excluded source. Default 'false'
func (o NsxvFirewallRuleSourceOutput) Exclude() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NsxvFirewallRuleSource) *bool { return v.Exclude }).(pulumi.BoolPtrOutput)
}

// 'vse', 'internal', 'external' or network name
func (o NsxvFirewallRuleSourceOutput) GatewayInterfaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxvFirewallRuleSource) []string { return v.GatewayInterfaces }).(pulumi.StringArrayOutput)
}

// IP address, CIDR, an IP range, or the keyword 'any'
func (o NsxvFirewallRuleSourceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxvFirewallRuleSource) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Set of IP set names
func (o NsxvFirewallRuleSourceOutput) IpSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxvFirewallRuleSource) []string { return v.IpSets }).(pulumi.StringArrayOutput)
}

// Set of org network names
func (o NsxvFirewallRuleSourceOutput) OrgNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxvFirewallRuleSource) []string { return v.OrgNetworks }).(pulumi.StringArrayOutput)
}

// Set of VM IDs
func (o NsxvFirewallRuleSourceOutput) VmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NsxvFirewallRuleSource) []string { return v.VmIds }).(pulumi.StringArrayOutput)
}

type NsxvFirewallRuleSourcePtrOutput struct{ *pulumi.OutputState }

func (NsxvFirewallRuleSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxvFirewallRuleSource)(nil)).Elem()
}

func (o NsxvFirewallRuleSourcePtrOutput) ToNsxvFirewallRuleSourcePtrOutput() NsxvFirewallRuleSourcePtrOutput {
	return o
}

func (o NsxvFirewallRuleSourcePtrOutput) ToNsxvFirewallRuleSourcePtrOutputWithContext(ctx context.Context) NsxvFirewallRuleSourcePtrOutput {
	return o
}

func (o NsxvFirewallRuleSourcePtrOutput) Elem() NsxvFirewallRuleSourceOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleSource) NsxvFirewallRuleSource {
		if v != nil {
			return *v
		}
		var ret NsxvFirewallRuleSource
		return ret
	}).(NsxvFirewallRuleSourceOutput)
}

// Rule is applied to traffic coming from all sources except for the excluded source. Default 'false'
func (o NsxvFirewallRuleSourcePtrOutput) Exclude() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleSource) *bool {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.BoolPtrOutput)
}

// 'vse', 'internal', 'external' or network name
func (o NsxvFirewallRuleSourcePtrOutput) GatewayInterfaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleSource) []string {
		if v == nil {
			return nil
		}
		return v.GatewayInterfaces
	}).(pulumi.StringArrayOutput)
}

// IP address, CIDR, an IP range, or the keyword 'any'
func (o NsxvFirewallRuleSourcePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleSource) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// Set of IP set names
func (o NsxvFirewallRuleSourcePtrOutput) IpSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleSource) []string {
		if v == nil {
			return nil
		}
		return v.IpSets
	}).(pulumi.StringArrayOutput)
}

// Set of org network names
func (o NsxvFirewallRuleSourcePtrOutput) OrgNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleSource) []string {
		if v == nil {
			return nil
		}
		return v.OrgNetworks
	}).(pulumi.StringArrayOutput)
}

// Set of VM IDs
func (o NsxvFirewallRuleSourcePtrOutput) VmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxvFirewallRuleSource) []string {
		if v == nil {
			return nil
		}
		return v.VmIds
	}).(pulumi.StringArrayOutput)
}

type OrgAccountLockout struct {
	// Whether account lockout is enabled or not
	Enabled bool `pulumi:"enabled"`
	// Number of login attempts that will trigger an account lockout for the given user
	InvalidLoginsBeforeLockout int `pulumi:"invalidLoginsBeforeLockout"`
	// Once a user is locked out, they will not be able to log back in for this time period
	LockoutIntervalMinutes int `pulumi:"lockoutIntervalMinutes"`
}

// OrgAccountLockoutInput is an input type that accepts OrgAccountLockoutArgs and OrgAccountLockoutOutput values.
// You can construct a concrete instance of `OrgAccountLockoutInput` via:
//
//	OrgAccountLockoutArgs{...}
type OrgAccountLockoutInput interface {
	pulumi.Input

	ToOrgAccountLockoutOutput() OrgAccountLockoutOutput
	ToOrgAccountLockoutOutputWithContext(context.Context) OrgAccountLockoutOutput
}

type OrgAccountLockoutArgs struct {
	// Whether account lockout is enabled or not
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Number of login attempts that will trigger an account lockout for the given user
	InvalidLoginsBeforeLockout pulumi.IntInput `pulumi:"invalidLoginsBeforeLockout"`
	// Once a user is locked out, they will not be able to log back in for this time period
	LockoutIntervalMinutes pulumi.IntInput `pulumi:"lockoutIntervalMinutes"`
}

func (OrgAccountLockoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgAccountLockout)(nil)).Elem()
}

func (i OrgAccountLockoutArgs) ToOrgAccountLockoutOutput() OrgAccountLockoutOutput {
	return i.ToOrgAccountLockoutOutputWithContext(context.Background())
}

func (i OrgAccountLockoutArgs) ToOrgAccountLockoutOutputWithContext(ctx context.Context) OrgAccountLockoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgAccountLockoutOutput)
}

func (i OrgAccountLockoutArgs) ToOrgAccountLockoutPtrOutput() OrgAccountLockoutPtrOutput {
	return i.ToOrgAccountLockoutPtrOutputWithContext(context.Background())
}

func (i OrgAccountLockoutArgs) ToOrgAccountLockoutPtrOutputWithContext(ctx context.Context) OrgAccountLockoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgAccountLockoutOutput).ToOrgAccountLockoutPtrOutputWithContext(ctx)
}

// OrgAccountLockoutPtrInput is an input type that accepts OrgAccountLockoutArgs, OrgAccountLockoutPtr and OrgAccountLockoutPtrOutput values.
// You can construct a concrete instance of `OrgAccountLockoutPtrInput` via:
//
//	        OrgAccountLockoutArgs{...}
//
//	or:
//
//	        nil
type OrgAccountLockoutPtrInput interface {
	pulumi.Input

	ToOrgAccountLockoutPtrOutput() OrgAccountLockoutPtrOutput
	ToOrgAccountLockoutPtrOutputWithContext(context.Context) OrgAccountLockoutPtrOutput
}

type orgAccountLockoutPtrType OrgAccountLockoutArgs

func OrgAccountLockoutPtr(v *OrgAccountLockoutArgs) OrgAccountLockoutPtrInput {
	return (*orgAccountLockoutPtrType)(v)
}

func (*orgAccountLockoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgAccountLockout)(nil)).Elem()
}

func (i *orgAccountLockoutPtrType) ToOrgAccountLockoutPtrOutput() OrgAccountLockoutPtrOutput {
	return i.ToOrgAccountLockoutPtrOutputWithContext(context.Background())
}

func (i *orgAccountLockoutPtrType) ToOrgAccountLockoutPtrOutputWithContext(ctx context.Context) OrgAccountLockoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgAccountLockoutPtrOutput)
}

type OrgAccountLockoutOutput struct{ *pulumi.OutputState }

func (OrgAccountLockoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgAccountLockout)(nil)).Elem()
}

func (o OrgAccountLockoutOutput) ToOrgAccountLockoutOutput() OrgAccountLockoutOutput {
	return o
}

func (o OrgAccountLockoutOutput) ToOrgAccountLockoutOutputWithContext(ctx context.Context) OrgAccountLockoutOutput {
	return o
}

func (o OrgAccountLockoutOutput) ToOrgAccountLockoutPtrOutput() OrgAccountLockoutPtrOutput {
	return o.ToOrgAccountLockoutPtrOutputWithContext(context.Background())
}

func (o OrgAccountLockoutOutput) ToOrgAccountLockoutPtrOutputWithContext(ctx context.Context) OrgAccountLockoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgAccountLockout) *OrgAccountLockout {
		return &v
	}).(OrgAccountLockoutPtrOutput)
}

// Whether account lockout is enabled or not
func (o OrgAccountLockoutOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v OrgAccountLockout) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Number of login attempts that will trigger an account lockout for the given user
func (o OrgAccountLockoutOutput) InvalidLoginsBeforeLockout() pulumi.IntOutput {
	return o.ApplyT(func(v OrgAccountLockout) int { return v.InvalidLoginsBeforeLockout }).(pulumi.IntOutput)
}

// Once a user is locked out, they will not be able to log back in for this time period
func (o OrgAccountLockoutOutput) LockoutIntervalMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v OrgAccountLockout) int { return v.LockoutIntervalMinutes }).(pulumi.IntOutput)
}

type OrgAccountLockoutPtrOutput struct{ *pulumi.OutputState }

func (OrgAccountLockoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgAccountLockout)(nil)).Elem()
}

func (o OrgAccountLockoutPtrOutput) ToOrgAccountLockoutPtrOutput() OrgAccountLockoutPtrOutput {
	return o
}

func (o OrgAccountLockoutPtrOutput) ToOrgAccountLockoutPtrOutputWithContext(ctx context.Context) OrgAccountLockoutPtrOutput {
	return o
}

func (o OrgAccountLockoutPtrOutput) Elem() OrgAccountLockoutOutput {
	return o.ApplyT(func(v *OrgAccountLockout) OrgAccountLockout {
		if v != nil {
			return *v
		}
		var ret OrgAccountLockout
		return ret
	}).(OrgAccountLockoutOutput)
}

// Whether account lockout is enabled or not
func (o OrgAccountLockoutPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgAccountLockout) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Number of login attempts that will trigger an account lockout for the given user
func (o OrgAccountLockoutPtrOutput) InvalidLoginsBeforeLockout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgAccountLockout) *int {
		if v == nil {
			return nil
		}
		return &v.InvalidLoginsBeforeLockout
	}).(pulumi.IntPtrOutput)
}

// Once a user is locked out, they will not be able to log back in for this time period
func (o OrgAccountLockoutPtrOutput) LockoutIntervalMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgAccountLockout) *int {
		if v == nil {
			return nil
		}
		return &v.LockoutIntervalMinutes
	}).(pulumi.IntPtrOutput)
}

type OrgLdapCustomSettings struct {
	// authentication method: one of SIMPLE, MD5DIGEST, NTLM
	AuthenticationMethod string `pulumi:"authenticationMethod"`
	// LDAP search base
	BaseDistinguishedName *string `pulumi:"baseDistinguishedName"`
	// type of connector: one of OPEN_LDAP, ACTIVE_DIRECTORY
	ConnectorType string `pulumi:"connectorType"`
	// Group settings when `ldapMode` is CUSTOM
	GroupAttributes OrgLdapCustomSettingsGroupAttributes `pulumi:"groupAttributes"`
	// True if the LDAP service requires an SSL connection
	IsSsl *bool `pulumi:"isSsl"`
	// Password for the user identified by UserName. This value is never returned by GET. It is inspected on create and modify. On modify, the absence of this element indicates that the password should not be changed
	Password *string `pulumi:"password"`
	// Port number for LDAP service
	Port int `pulumi:"port"`
	// host name or IP of the LDAP server
	Server string `pulumi:"server"`
	// User settings when `ldapMode` is CUSTOM
	UserAttributes OrgLdapCustomSettingsUserAttributes `pulumi:"userAttributes"`
	// Username to use when logging in to LDAP, specified using LDAP attribute=value pairs (for example: cn="ldap-admin", c="example", dc="com")
	Username *string `pulumi:"username"`
}

// OrgLdapCustomSettingsInput is an input type that accepts OrgLdapCustomSettingsArgs and OrgLdapCustomSettingsOutput values.
// You can construct a concrete instance of `OrgLdapCustomSettingsInput` via:
//
//	OrgLdapCustomSettingsArgs{...}
type OrgLdapCustomSettingsInput interface {
	pulumi.Input

	ToOrgLdapCustomSettingsOutput() OrgLdapCustomSettingsOutput
	ToOrgLdapCustomSettingsOutputWithContext(context.Context) OrgLdapCustomSettingsOutput
}

type OrgLdapCustomSettingsArgs struct {
	// authentication method: one of SIMPLE, MD5DIGEST, NTLM
	AuthenticationMethod pulumi.StringInput `pulumi:"authenticationMethod"`
	// LDAP search base
	BaseDistinguishedName pulumi.StringPtrInput `pulumi:"baseDistinguishedName"`
	// type of connector: one of OPEN_LDAP, ACTIVE_DIRECTORY
	ConnectorType pulumi.StringInput `pulumi:"connectorType"`
	// Group settings when `ldapMode` is CUSTOM
	GroupAttributes OrgLdapCustomSettingsGroupAttributesInput `pulumi:"groupAttributes"`
	// True if the LDAP service requires an SSL connection
	IsSsl pulumi.BoolPtrInput `pulumi:"isSsl"`
	// Password for the user identified by UserName. This value is never returned by GET. It is inspected on create and modify. On modify, the absence of this element indicates that the password should not be changed
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number for LDAP service
	Port pulumi.IntInput `pulumi:"port"`
	// host name or IP of the LDAP server
	Server pulumi.StringInput `pulumi:"server"`
	// User settings when `ldapMode` is CUSTOM
	UserAttributes OrgLdapCustomSettingsUserAttributesInput `pulumi:"userAttributes"`
	// Username to use when logging in to LDAP, specified using LDAP attribute=value pairs (for example: cn="ldap-admin", c="example", dc="com")
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (OrgLdapCustomSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLdapCustomSettings)(nil)).Elem()
}

func (i OrgLdapCustomSettingsArgs) ToOrgLdapCustomSettingsOutput() OrgLdapCustomSettingsOutput {
	return i.ToOrgLdapCustomSettingsOutputWithContext(context.Background())
}

func (i OrgLdapCustomSettingsArgs) ToOrgLdapCustomSettingsOutputWithContext(ctx context.Context) OrgLdapCustomSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLdapCustomSettingsOutput)
}

func (i OrgLdapCustomSettingsArgs) ToOrgLdapCustomSettingsPtrOutput() OrgLdapCustomSettingsPtrOutput {
	return i.ToOrgLdapCustomSettingsPtrOutputWithContext(context.Background())
}

func (i OrgLdapCustomSettingsArgs) ToOrgLdapCustomSettingsPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLdapCustomSettingsOutput).ToOrgLdapCustomSettingsPtrOutputWithContext(ctx)
}

// OrgLdapCustomSettingsPtrInput is an input type that accepts OrgLdapCustomSettingsArgs, OrgLdapCustomSettingsPtr and OrgLdapCustomSettingsPtrOutput values.
// You can construct a concrete instance of `OrgLdapCustomSettingsPtrInput` via:
//
//	        OrgLdapCustomSettingsArgs{...}
//
//	or:
//
//	        nil
type OrgLdapCustomSettingsPtrInput interface {
	pulumi.Input

	ToOrgLdapCustomSettingsPtrOutput() OrgLdapCustomSettingsPtrOutput
	ToOrgLdapCustomSettingsPtrOutputWithContext(context.Context) OrgLdapCustomSettingsPtrOutput
}

type orgLdapCustomSettingsPtrType OrgLdapCustomSettingsArgs

func OrgLdapCustomSettingsPtr(v *OrgLdapCustomSettingsArgs) OrgLdapCustomSettingsPtrInput {
	return (*orgLdapCustomSettingsPtrType)(v)
}

func (*orgLdapCustomSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLdapCustomSettings)(nil)).Elem()
}

func (i *orgLdapCustomSettingsPtrType) ToOrgLdapCustomSettingsPtrOutput() OrgLdapCustomSettingsPtrOutput {
	return i.ToOrgLdapCustomSettingsPtrOutputWithContext(context.Background())
}

func (i *orgLdapCustomSettingsPtrType) ToOrgLdapCustomSettingsPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLdapCustomSettingsPtrOutput)
}

type OrgLdapCustomSettingsOutput struct{ *pulumi.OutputState }

func (OrgLdapCustomSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLdapCustomSettings)(nil)).Elem()
}

func (o OrgLdapCustomSettingsOutput) ToOrgLdapCustomSettingsOutput() OrgLdapCustomSettingsOutput {
	return o
}

func (o OrgLdapCustomSettingsOutput) ToOrgLdapCustomSettingsOutputWithContext(ctx context.Context) OrgLdapCustomSettingsOutput {
	return o
}

func (o OrgLdapCustomSettingsOutput) ToOrgLdapCustomSettingsPtrOutput() OrgLdapCustomSettingsPtrOutput {
	return o.ToOrgLdapCustomSettingsPtrOutputWithContext(context.Background())
}

func (o OrgLdapCustomSettingsOutput) ToOrgLdapCustomSettingsPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgLdapCustomSettings) *OrgLdapCustomSettings {
		return &v
	}).(OrgLdapCustomSettingsPtrOutput)
}

// authentication method: one of SIMPLE, MD5DIGEST, NTLM
func (o OrgLdapCustomSettingsOutput) AuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettings) string { return v.AuthenticationMethod }).(pulumi.StringOutput)
}

// LDAP search base
func (o OrgLdapCustomSettingsOutput) BaseDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgLdapCustomSettings) *string { return v.BaseDistinguishedName }).(pulumi.StringPtrOutput)
}

// type of connector: one of OPEN_LDAP, ACTIVE_DIRECTORY
func (o OrgLdapCustomSettingsOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettings) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// Group settings when `ldapMode` is CUSTOM
func (o OrgLdapCustomSettingsOutput) GroupAttributes() OrgLdapCustomSettingsGroupAttributesOutput {
	return o.ApplyT(func(v OrgLdapCustomSettings) OrgLdapCustomSettingsGroupAttributes { return v.GroupAttributes }).(OrgLdapCustomSettingsGroupAttributesOutput)
}

// True if the LDAP service requires an SSL connection
func (o OrgLdapCustomSettingsOutput) IsSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgLdapCustomSettings) *bool { return v.IsSsl }).(pulumi.BoolPtrOutput)
}

// Password for the user identified by UserName. This value is never returned by GET. It is inspected on create and modify. On modify, the absence of this element indicates that the password should not be changed
func (o OrgLdapCustomSettingsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgLdapCustomSettings) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number for LDAP service
func (o OrgLdapCustomSettingsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v OrgLdapCustomSettings) int { return v.Port }).(pulumi.IntOutput)
}

// host name or IP of the LDAP server
func (o OrgLdapCustomSettingsOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettings) string { return v.Server }).(pulumi.StringOutput)
}

// User settings when `ldapMode` is CUSTOM
func (o OrgLdapCustomSettingsOutput) UserAttributes() OrgLdapCustomSettingsUserAttributesOutput {
	return o.ApplyT(func(v OrgLdapCustomSettings) OrgLdapCustomSettingsUserAttributes { return v.UserAttributes }).(OrgLdapCustomSettingsUserAttributesOutput)
}

// Username to use when logging in to LDAP, specified using LDAP attribute=value pairs (for example: cn="ldap-admin", c="example", dc="com")
func (o OrgLdapCustomSettingsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgLdapCustomSettings) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type OrgLdapCustomSettingsPtrOutput struct{ *pulumi.OutputState }

func (OrgLdapCustomSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLdapCustomSettings)(nil)).Elem()
}

func (o OrgLdapCustomSettingsPtrOutput) ToOrgLdapCustomSettingsPtrOutput() OrgLdapCustomSettingsPtrOutput {
	return o
}

func (o OrgLdapCustomSettingsPtrOutput) ToOrgLdapCustomSettingsPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsPtrOutput {
	return o
}

func (o OrgLdapCustomSettingsPtrOutput) Elem() OrgLdapCustomSettingsOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) OrgLdapCustomSettings {
		if v != nil {
			return *v
		}
		var ret OrgLdapCustomSettings
		return ret
	}).(OrgLdapCustomSettingsOutput)
}

// authentication method: one of SIMPLE, MD5DIGEST, NTLM
func (o OrgLdapCustomSettingsPtrOutput) AuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationMethod
	}).(pulumi.StringPtrOutput)
}

// LDAP search base
func (o OrgLdapCustomSettingsPtrOutput) BaseDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) *string {
		if v == nil {
			return nil
		}
		return v.BaseDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// type of connector: one of OPEN_LDAP, ACTIVE_DIRECTORY
func (o OrgLdapCustomSettingsPtrOutput) ConnectorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectorType
	}).(pulumi.StringPtrOutput)
}

// Group settings when `ldapMode` is CUSTOM
func (o OrgLdapCustomSettingsPtrOutput) GroupAttributes() OrgLdapCustomSettingsGroupAttributesPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) *OrgLdapCustomSettingsGroupAttributes {
		if v == nil {
			return nil
		}
		return &v.GroupAttributes
	}).(OrgLdapCustomSettingsGroupAttributesPtrOutput)
}

// True if the LDAP service requires an SSL connection
func (o OrgLdapCustomSettingsPtrOutput) IsSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IsSsl
	}).(pulumi.BoolPtrOutput)
}

// Password for the user identified by UserName. This value is never returned by GET. It is inspected on create and modify. On modify, the absence of this element indicates that the password should not be changed
func (o OrgLdapCustomSettingsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port number for LDAP service
func (o OrgLdapCustomSettingsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// host name or IP of the LDAP server
func (o OrgLdapCustomSettingsPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// User settings when `ldapMode` is CUSTOM
func (o OrgLdapCustomSettingsPtrOutput) UserAttributes() OrgLdapCustomSettingsUserAttributesPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) *OrgLdapCustomSettingsUserAttributes {
		if v == nil {
			return nil
		}
		return &v.UserAttributes
	}).(OrgLdapCustomSettingsUserAttributesPtrOutput)
}

// Username to use when logging in to LDAP, specified using LDAP attribute=value pairs (for example: cn="ldap-admin", c="example", dc="com")
func (o OrgLdapCustomSettingsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettings) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type OrgLdapCustomSettingsGroupAttributes struct {
	// LDAP group attribute used to identify a group member
	GroupBackLinkIdentifier *string `pulumi:"groupBackLinkIdentifier"`
	// LDAP attribute that identifies a group as a member of another group. For example, dn
	GroupMembershipIdentifier string `pulumi:"groupMembershipIdentifier"`
	// LDAP attribute to use when getting the members of a group. For example, member
	Membership string `pulumi:"membership"`
	// LDAP attribute to use for the group name. For example, cn
	Name string `pulumi:"name"`
	// LDAP objectClass of which imported groups are members. For example, group
	ObjectClass string `pulumi:"objectClass"`
	// LDAP attribute to use as the unique identifier for a group. For example, objectGuid
	UniqueIdentifier string `pulumi:"uniqueIdentifier"`
}

// OrgLdapCustomSettingsGroupAttributesInput is an input type that accepts OrgLdapCustomSettingsGroupAttributesArgs and OrgLdapCustomSettingsGroupAttributesOutput values.
// You can construct a concrete instance of `OrgLdapCustomSettingsGroupAttributesInput` via:
//
//	OrgLdapCustomSettingsGroupAttributesArgs{...}
type OrgLdapCustomSettingsGroupAttributesInput interface {
	pulumi.Input

	ToOrgLdapCustomSettingsGroupAttributesOutput() OrgLdapCustomSettingsGroupAttributesOutput
	ToOrgLdapCustomSettingsGroupAttributesOutputWithContext(context.Context) OrgLdapCustomSettingsGroupAttributesOutput
}

type OrgLdapCustomSettingsGroupAttributesArgs struct {
	// LDAP group attribute used to identify a group member
	GroupBackLinkIdentifier pulumi.StringPtrInput `pulumi:"groupBackLinkIdentifier"`
	// LDAP attribute that identifies a group as a member of another group. For example, dn
	GroupMembershipIdentifier pulumi.StringInput `pulumi:"groupMembershipIdentifier"`
	// LDAP attribute to use when getting the members of a group. For example, member
	Membership pulumi.StringInput `pulumi:"membership"`
	// LDAP attribute to use for the group name. For example, cn
	Name pulumi.StringInput `pulumi:"name"`
	// LDAP objectClass of which imported groups are members. For example, group
	ObjectClass pulumi.StringInput `pulumi:"objectClass"`
	// LDAP attribute to use as the unique identifier for a group. For example, objectGuid
	UniqueIdentifier pulumi.StringInput `pulumi:"uniqueIdentifier"`
}

func (OrgLdapCustomSettingsGroupAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLdapCustomSettingsGroupAttributes)(nil)).Elem()
}

func (i OrgLdapCustomSettingsGroupAttributesArgs) ToOrgLdapCustomSettingsGroupAttributesOutput() OrgLdapCustomSettingsGroupAttributesOutput {
	return i.ToOrgLdapCustomSettingsGroupAttributesOutputWithContext(context.Background())
}

func (i OrgLdapCustomSettingsGroupAttributesArgs) ToOrgLdapCustomSettingsGroupAttributesOutputWithContext(ctx context.Context) OrgLdapCustomSettingsGroupAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLdapCustomSettingsGroupAttributesOutput)
}

func (i OrgLdapCustomSettingsGroupAttributesArgs) ToOrgLdapCustomSettingsGroupAttributesPtrOutput() OrgLdapCustomSettingsGroupAttributesPtrOutput {
	return i.ToOrgLdapCustomSettingsGroupAttributesPtrOutputWithContext(context.Background())
}

func (i OrgLdapCustomSettingsGroupAttributesArgs) ToOrgLdapCustomSettingsGroupAttributesPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsGroupAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLdapCustomSettingsGroupAttributesOutput).ToOrgLdapCustomSettingsGroupAttributesPtrOutputWithContext(ctx)
}

// OrgLdapCustomSettingsGroupAttributesPtrInput is an input type that accepts OrgLdapCustomSettingsGroupAttributesArgs, OrgLdapCustomSettingsGroupAttributesPtr and OrgLdapCustomSettingsGroupAttributesPtrOutput values.
// You can construct a concrete instance of `OrgLdapCustomSettingsGroupAttributesPtrInput` via:
//
//	        OrgLdapCustomSettingsGroupAttributesArgs{...}
//
//	or:
//
//	        nil
type OrgLdapCustomSettingsGroupAttributesPtrInput interface {
	pulumi.Input

	ToOrgLdapCustomSettingsGroupAttributesPtrOutput() OrgLdapCustomSettingsGroupAttributesPtrOutput
	ToOrgLdapCustomSettingsGroupAttributesPtrOutputWithContext(context.Context) OrgLdapCustomSettingsGroupAttributesPtrOutput
}

type orgLdapCustomSettingsGroupAttributesPtrType OrgLdapCustomSettingsGroupAttributesArgs

func OrgLdapCustomSettingsGroupAttributesPtr(v *OrgLdapCustomSettingsGroupAttributesArgs) OrgLdapCustomSettingsGroupAttributesPtrInput {
	return (*orgLdapCustomSettingsGroupAttributesPtrType)(v)
}

func (*orgLdapCustomSettingsGroupAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLdapCustomSettingsGroupAttributes)(nil)).Elem()
}

func (i *orgLdapCustomSettingsGroupAttributesPtrType) ToOrgLdapCustomSettingsGroupAttributesPtrOutput() OrgLdapCustomSettingsGroupAttributesPtrOutput {
	return i.ToOrgLdapCustomSettingsGroupAttributesPtrOutputWithContext(context.Background())
}

func (i *orgLdapCustomSettingsGroupAttributesPtrType) ToOrgLdapCustomSettingsGroupAttributesPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsGroupAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLdapCustomSettingsGroupAttributesPtrOutput)
}

type OrgLdapCustomSettingsGroupAttributesOutput struct{ *pulumi.OutputState }

func (OrgLdapCustomSettingsGroupAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLdapCustomSettingsGroupAttributes)(nil)).Elem()
}

func (o OrgLdapCustomSettingsGroupAttributesOutput) ToOrgLdapCustomSettingsGroupAttributesOutput() OrgLdapCustomSettingsGroupAttributesOutput {
	return o
}

func (o OrgLdapCustomSettingsGroupAttributesOutput) ToOrgLdapCustomSettingsGroupAttributesOutputWithContext(ctx context.Context) OrgLdapCustomSettingsGroupAttributesOutput {
	return o
}

func (o OrgLdapCustomSettingsGroupAttributesOutput) ToOrgLdapCustomSettingsGroupAttributesPtrOutput() OrgLdapCustomSettingsGroupAttributesPtrOutput {
	return o.ToOrgLdapCustomSettingsGroupAttributesPtrOutputWithContext(context.Background())
}

func (o OrgLdapCustomSettingsGroupAttributesOutput) ToOrgLdapCustomSettingsGroupAttributesPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsGroupAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgLdapCustomSettingsGroupAttributes) *OrgLdapCustomSettingsGroupAttributes {
		return &v
	}).(OrgLdapCustomSettingsGroupAttributesPtrOutput)
}

// LDAP group attribute used to identify a group member
func (o OrgLdapCustomSettingsGroupAttributesOutput) GroupBackLinkIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsGroupAttributes) *string { return v.GroupBackLinkIdentifier }).(pulumi.StringPtrOutput)
}

// LDAP attribute that identifies a group as a member of another group. For example, dn
func (o OrgLdapCustomSettingsGroupAttributesOutput) GroupMembershipIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsGroupAttributes) string { return v.GroupMembershipIdentifier }).(pulumi.StringOutput)
}

// LDAP attribute to use when getting the members of a group. For example, member
func (o OrgLdapCustomSettingsGroupAttributesOutput) Membership() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsGroupAttributes) string { return v.Membership }).(pulumi.StringOutput)
}

// LDAP attribute to use for the group name. For example, cn
func (o OrgLdapCustomSettingsGroupAttributesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsGroupAttributes) string { return v.Name }).(pulumi.StringOutput)
}

// LDAP objectClass of which imported groups are members. For example, group
func (o OrgLdapCustomSettingsGroupAttributesOutput) ObjectClass() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsGroupAttributes) string { return v.ObjectClass }).(pulumi.StringOutput)
}

// LDAP attribute to use as the unique identifier for a group. For example, objectGuid
func (o OrgLdapCustomSettingsGroupAttributesOutput) UniqueIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsGroupAttributes) string { return v.UniqueIdentifier }).(pulumi.StringOutput)
}

type OrgLdapCustomSettingsGroupAttributesPtrOutput struct{ *pulumi.OutputState }

func (OrgLdapCustomSettingsGroupAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLdapCustomSettingsGroupAttributes)(nil)).Elem()
}

func (o OrgLdapCustomSettingsGroupAttributesPtrOutput) ToOrgLdapCustomSettingsGroupAttributesPtrOutput() OrgLdapCustomSettingsGroupAttributesPtrOutput {
	return o
}

func (o OrgLdapCustomSettingsGroupAttributesPtrOutput) ToOrgLdapCustomSettingsGroupAttributesPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsGroupAttributesPtrOutput {
	return o
}

func (o OrgLdapCustomSettingsGroupAttributesPtrOutput) Elem() OrgLdapCustomSettingsGroupAttributesOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsGroupAttributes) OrgLdapCustomSettingsGroupAttributes {
		if v != nil {
			return *v
		}
		var ret OrgLdapCustomSettingsGroupAttributes
		return ret
	}).(OrgLdapCustomSettingsGroupAttributesOutput)
}

// LDAP group attribute used to identify a group member
func (o OrgLdapCustomSettingsGroupAttributesPtrOutput) GroupBackLinkIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsGroupAttributes) *string {
		if v == nil {
			return nil
		}
		return v.GroupBackLinkIdentifier
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute that identifies a group as a member of another group. For example, dn
func (o OrgLdapCustomSettingsGroupAttributesPtrOutput) GroupMembershipIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsGroupAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.GroupMembershipIdentifier
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute to use when getting the members of a group. For example, member
func (o OrgLdapCustomSettingsGroupAttributesPtrOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsGroupAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Membership
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute to use for the group name. For example, cn
func (o OrgLdapCustomSettingsGroupAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsGroupAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// LDAP objectClass of which imported groups are members. For example, group
func (o OrgLdapCustomSettingsGroupAttributesPtrOutput) ObjectClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsGroupAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectClass
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute to use as the unique identifier for a group. For example, objectGuid
func (o OrgLdapCustomSettingsGroupAttributesPtrOutput) UniqueIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsGroupAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.UniqueIdentifier
	}).(pulumi.StringPtrOutput)
}

type OrgLdapCustomSettingsUserAttributes struct {
	// LDAP attribute to use for the user's full name. For example, displayName
	DisplayName string `pulumi:"displayName"`
	// LDAP attribute to use for the user's email address. For example, mail
	Email string `pulumi:"email"`
	// LDAP attribute to use for the user's given name. For example, givenName
	GivenName string `pulumi:"givenName"`
	// LDAP attribute that returns the identifiers of all the groups of which the user is a member
	GroupBackLinkIdentifier *string `pulumi:"groupBackLinkIdentifier"`
	// LDAP attribute that identifies a user as a member of a group. For example, dn
	GroupMembershipIdentifier string `pulumi:"groupMembershipIdentifier"`
	// LDAP objectClass of which imported users are members. For example, user or person
	ObjectClass string `pulumi:"objectClass"`
	// LDAP attribute to use for the user's surname. For example, sn
	Surname string `pulumi:"surname"`
	// LDAP attribute to use for the user's telephone number. For example, telephoneNumber
	Telephone string `pulumi:"telephone"`
	// LDAP attribute to use as the unique identifier for a user. For example, objectGuid
	UniqueIdentifier string `pulumi:"uniqueIdentifier"`
	// LDAP attribute to use when looking up a user name to import. For example, userPrincipalName or samAccountName
	Username string `pulumi:"username"`
}

// OrgLdapCustomSettingsUserAttributesInput is an input type that accepts OrgLdapCustomSettingsUserAttributesArgs and OrgLdapCustomSettingsUserAttributesOutput values.
// You can construct a concrete instance of `OrgLdapCustomSettingsUserAttributesInput` via:
//
//	OrgLdapCustomSettingsUserAttributesArgs{...}
type OrgLdapCustomSettingsUserAttributesInput interface {
	pulumi.Input

	ToOrgLdapCustomSettingsUserAttributesOutput() OrgLdapCustomSettingsUserAttributesOutput
	ToOrgLdapCustomSettingsUserAttributesOutputWithContext(context.Context) OrgLdapCustomSettingsUserAttributesOutput
}

type OrgLdapCustomSettingsUserAttributesArgs struct {
	// LDAP attribute to use for the user's full name. For example, displayName
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// LDAP attribute to use for the user's email address. For example, mail
	Email pulumi.StringInput `pulumi:"email"`
	// LDAP attribute to use for the user's given name. For example, givenName
	GivenName pulumi.StringInput `pulumi:"givenName"`
	// LDAP attribute that returns the identifiers of all the groups of which the user is a member
	GroupBackLinkIdentifier pulumi.StringPtrInput `pulumi:"groupBackLinkIdentifier"`
	// LDAP attribute that identifies a user as a member of a group. For example, dn
	GroupMembershipIdentifier pulumi.StringInput `pulumi:"groupMembershipIdentifier"`
	// LDAP objectClass of which imported users are members. For example, user or person
	ObjectClass pulumi.StringInput `pulumi:"objectClass"`
	// LDAP attribute to use for the user's surname. For example, sn
	Surname pulumi.StringInput `pulumi:"surname"`
	// LDAP attribute to use for the user's telephone number. For example, telephoneNumber
	Telephone pulumi.StringInput `pulumi:"telephone"`
	// LDAP attribute to use as the unique identifier for a user. For example, objectGuid
	UniqueIdentifier pulumi.StringInput `pulumi:"uniqueIdentifier"`
	// LDAP attribute to use when looking up a user name to import. For example, userPrincipalName or samAccountName
	Username pulumi.StringInput `pulumi:"username"`
}

func (OrgLdapCustomSettingsUserAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLdapCustomSettingsUserAttributes)(nil)).Elem()
}

func (i OrgLdapCustomSettingsUserAttributesArgs) ToOrgLdapCustomSettingsUserAttributesOutput() OrgLdapCustomSettingsUserAttributesOutput {
	return i.ToOrgLdapCustomSettingsUserAttributesOutputWithContext(context.Background())
}

func (i OrgLdapCustomSettingsUserAttributesArgs) ToOrgLdapCustomSettingsUserAttributesOutputWithContext(ctx context.Context) OrgLdapCustomSettingsUserAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLdapCustomSettingsUserAttributesOutput)
}

func (i OrgLdapCustomSettingsUserAttributesArgs) ToOrgLdapCustomSettingsUserAttributesPtrOutput() OrgLdapCustomSettingsUserAttributesPtrOutput {
	return i.ToOrgLdapCustomSettingsUserAttributesPtrOutputWithContext(context.Background())
}

func (i OrgLdapCustomSettingsUserAttributesArgs) ToOrgLdapCustomSettingsUserAttributesPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsUserAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLdapCustomSettingsUserAttributesOutput).ToOrgLdapCustomSettingsUserAttributesPtrOutputWithContext(ctx)
}

// OrgLdapCustomSettingsUserAttributesPtrInput is an input type that accepts OrgLdapCustomSettingsUserAttributesArgs, OrgLdapCustomSettingsUserAttributesPtr and OrgLdapCustomSettingsUserAttributesPtrOutput values.
// You can construct a concrete instance of `OrgLdapCustomSettingsUserAttributesPtrInput` via:
//
//	        OrgLdapCustomSettingsUserAttributesArgs{...}
//
//	or:
//
//	        nil
type OrgLdapCustomSettingsUserAttributesPtrInput interface {
	pulumi.Input

	ToOrgLdapCustomSettingsUserAttributesPtrOutput() OrgLdapCustomSettingsUserAttributesPtrOutput
	ToOrgLdapCustomSettingsUserAttributesPtrOutputWithContext(context.Context) OrgLdapCustomSettingsUserAttributesPtrOutput
}

type orgLdapCustomSettingsUserAttributesPtrType OrgLdapCustomSettingsUserAttributesArgs

func OrgLdapCustomSettingsUserAttributesPtr(v *OrgLdapCustomSettingsUserAttributesArgs) OrgLdapCustomSettingsUserAttributesPtrInput {
	return (*orgLdapCustomSettingsUserAttributesPtrType)(v)
}

func (*orgLdapCustomSettingsUserAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLdapCustomSettingsUserAttributes)(nil)).Elem()
}

func (i *orgLdapCustomSettingsUserAttributesPtrType) ToOrgLdapCustomSettingsUserAttributesPtrOutput() OrgLdapCustomSettingsUserAttributesPtrOutput {
	return i.ToOrgLdapCustomSettingsUserAttributesPtrOutputWithContext(context.Background())
}

func (i *orgLdapCustomSettingsUserAttributesPtrType) ToOrgLdapCustomSettingsUserAttributesPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsUserAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgLdapCustomSettingsUserAttributesPtrOutput)
}

type OrgLdapCustomSettingsUserAttributesOutput struct{ *pulumi.OutputState }

func (OrgLdapCustomSettingsUserAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgLdapCustomSettingsUserAttributes)(nil)).Elem()
}

func (o OrgLdapCustomSettingsUserAttributesOutput) ToOrgLdapCustomSettingsUserAttributesOutput() OrgLdapCustomSettingsUserAttributesOutput {
	return o
}

func (o OrgLdapCustomSettingsUserAttributesOutput) ToOrgLdapCustomSettingsUserAttributesOutputWithContext(ctx context.Context) OrgLdapCustomSettingsUserAttributesOutput {
	return o
}

func (o OrgLdapCustomSettingsUserAttributesOutput) ToOrgLdapCustomSettingsUserAttributesPtrOutput() OrgLdapCustomSettingsUserAttributesPtrOutput {
	return o.ToOrgLdapCustomSettingsUserAttributesPtrOutputWithContext(context.Background())
}

func (o OrgLdapCustomSettingsUserAttributesOutput) ToOrgLdapCustomSettingsUserAttributesPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsUserAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgLdapCustomSettingsUserAttributes) *OrgLdapCustomSettingsUserAttributes {
		return &v
	}).(OrgLdapCustomSettingsUserAttributesPtrOutput)
}

// LDAP attribute to use for the user's full name. For example, displayName
func (o OrgLdapCustomSettingsUserAttributesOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsUserAttributes) string { return v.DisplayName }).(pulumi.StringOutput)
}

// LDAP attribute to use for the user's email address. For example, mail
func (o OrgLdapCustomSettingsUserAttributesOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsUserAttributes) string { return v.Email }).(pulumi.StringOutput)
}

// LDAP attribute to use for the user's given name. For example, givenName
func (o OrgLdapCustomSettingsUserAttributesOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsUserAttributes) string { return v.GivenName }).(pulumi.StringOutput)
}

// LDAP attribute that returns the identifiers of all the groups of which the user is a member
func (o OrgLdapCustomSettingsUserAttributesOutput) GroupBackLinkIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsUserAttributes) *string { return v.GroupBackLinkIdentifier }).(pulumi.StringPtrOutput)
}

// LDAP attribute that identifies a user as a member of a group. For example, dn
func (o OrgLdapCustomSettingsUserAttributesOutput) GroupMembershipIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsUserAttributes) string { return v.GroupMembershipIdentifier }).(pulumi.StringOutput)
}

// LDAP objectClass of which imported users are members. For example, user or person
func (o OrgLdapCustomSettingsUserAttributesOutput) ObjectClass() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsUserAttributes) string { return v.ObjectClass }).(pulumi.StringOutput)
}

// LDAP attribute to use for the user's surname. For example, sn
func (o OrgLdapCustomSettingsUserAttributesOutput) Surname() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsUserAttributes) string { return v.Surname }).(pulumi.StringOutput)
}

// LDAP attribute to use for the user's telephone number. For example, telephoneNumber
func (o OrgLdapCustomSettingsUserAttributesOutput) Telephone() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsUserAttributes) string { return v.Telephone }).(pulumi.StringOutput)
}

// LDAP attribute to use as the unique identifier for a user. For example, objectGuid
func (o OrgLdapCustomSettingsUserAttributesOutput) UniqueIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsUserAttributes) string { return v.UniqueIdentifier }).(pulumi.StringOutput)
}

// LDAP attribute to use when looking up a user name to import. For example, userPrincipalName or samAccountName
func (o OrgLdapCustomSettingsUserAttributesOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v OrgLdapCustomSettingsUserAttributes) string { return v.Username }).(pulumi.StringOutput)
}

type OrgLdapCustomSettingsUserAttributesPtrOutput struct{ *pulumi.OutputState }

func (OrgLdapCustomSettingsUserAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgLdapCustomSettingsUserAttributes)(nil)).Elem()
}

func (o OrgLdapCustomSettingsUserAttributesPtrOutput) ToOrgLdapCustomSettingsUserAttributesPtrOutput() OrgLdapCustomSettingsUserAttributesPtrOutput {
	return o
}

func (o OrgLdapCustomSettingsUserAttributesPtrOutput) ToOrgLdapCustomSettingsUserAttributesPtrOutputWithContext(ctx context.Context) OrgLdapCustomSettingsUserAttributesPtrOutput {
	return o
}

func (o OrgLdapCustomSettingsUserAttributesPtrOutput) Elem() OrgLdapCustomSettingsUserAttributesOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) OrgLdapCustomSettingsUserAttributes {
		if v != nil {
			return *v
		}
		var ret OrgLdapCustomSettingsUserAttributes
		return ret
	}).(OrgLdapCustomSettingsUserAttributesOutput)
}

// LDAP attribute to use for the user's full name. For example, displayName
func (o OrgLdapCustomSettingsUserAttributesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute to use for the user's email address. For example, mail
func (o OrgLdapCustomSettingsUserAttributesPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute to use for the user's given name. For example, givenName
func (o OrgLdapCustomSettingsUserAttributesPtrOutput) GivenName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.GivenName
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute that returns the identifiers of all the groups of which the user is a member
func (o OrgLdapCustomSettingsUserAttributesPtrOutput) GroupBackLinkIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) *string {
		if v == nil {
			return nil
		}
		return v.GroupBackLinkIdentifier
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute that identifies a user as a member of a group. For example, dn
func (o OrgLdapCustomSettingsUserAttributesPtrOutput) GroupMembershipIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.GroupMembershipIdentifier
	}).(pulumi.StringPtrOutput)
}

// LDAP objectClass of which imported users are members. For example, user or person
func (o OrgLdapCustomSettingsUserAttributesPtrOutput) ObjectClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectClass
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute to use for the user's surname. For example, sn
func (o OrgLdapCustomSettingsUserAttributesPtrOutput) Surname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Surname
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute to use for the user's telephone number. For example, telephoneNumber
func (o OrgLdapCustomSettingsUserAttributesPtrOutput) Telephone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Telephone
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute to use as the unique identifier for a user. For example, objectGuid
func (o OrgLdapCustomSettingsUserAttributesPtrOutput) UniqueIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.UniqueIdentifier
	}).(pulumi.StringPtrOutput)
}

// LDAP attribute to use when looking up a user name to import. For example, userPrincipalName or samAccountName
func (o OrgLdapCustomSettingsUserAttributesPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgLdapCustomSettingsUserAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type OrgMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// OrgMetadataEntryInput is an input type that accepts OrgMetadataEntryArgs and OrgMetadataEntryOutput values.
// You can construct a concrete instance of `OrgMetadataEntryInput` via:
//
//	OrgMetadataEntryArgs{...}
type OrgMetadataEntryInput interface {
	pulumi.Input

	ToOrgMetadataEntryOutput() OrgMetadataEntryOutput
	ToOrgMetadataEntryOutputWithContext(context.Context) OrgMetadataEntryOutput
}

type OrgMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (OrgMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgMetadataEntry)(nil)).Elem()
}

func (i OrgMetadataEntryArgs) ToOrgMetadataEntryOutput() OrgMetadataEntryOutput {
	return i.ToOrgMetadataEntryOutputWithContext(context.Background())
}

func (i OrgMetadataEntryArgs) ToOrgMetadataEntryOutputWithContext(ctx context.Context) OrgMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgMetadataEntryOutput)
}

// OrgMetadataEntryArrayInput is an input type that accepts OrgMetadataEntryArray and OrgMetadataEntryArrayOutput values.
// You can construct a concrete instance of `OrgMetadataEntryArrayInput` via:
//
//	OrgMetadataEntryArray{ OrgMetadataEntryArgs{...} }
type OrgMetadataEntryArrayInput interface {
	pulumi.Input

	ToOrgMetadataEntryArrayOutput() OrgMetadataEntryArrayOutput
	ToOrgMetadataEntryArrayOutputWithContext(context.Context) OrgMetadataEntryArrayOutput
}

type OrgMetadataEntryArray []OrgMetadataEntryInput

func (OrgMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgMetadataEntry)(nil)).Elem()
}

func (i OrgMetadataEntryArray) ToOrgMetadataEntryArrayOutput() OrgMetadataEntryArrayOutput {
	return i.ToOrgMetadataEntryArrayOutputWithContext(context.Background())
}

func (i OrgMetadataEntryArray) ToOrgMetadataEntryArrayOutputWithContext(ctx context.Context) OrgMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgMetadataEntryArrayOutput)
}

type OrgMetadataEntryOutput struct{ *pulumi.OutputState }

func (OrgMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgMetadataEntry)(nil)).Elem()
}

func (o OrgMetadataEntryOutput) ToOrgMetadataEntryOutput() OrgMetadataEntryOutput {
	return o
}

func (o OrgMetadataEntryOutput) ToOrgMetadataEntryOutputWithContext(ctx context.Context) OrgMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o OrgMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o OrgMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o OrgMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o OrgMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o OrgMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OrgMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (OrgMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgMetadataEntry)(nil)).Elem()
}

func (o OrgMetadataEntryArrayOutput) ToOrgMetadataEntryArrayOutput() OrgMetadataEntryArrayOutput {
	return o
}

func (o OrgMetadataEntryArrayOutput) ToOrgMetadataEntryArrayOutputWithContext(ctx context.Context) OrgMetadataEntryArrayOutput {
	return o
}

func (o OrgMetadataEntryArrayOutput) Index(i pulumi.IntInput) OrgMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgMetadataEntry {
		return vs[0].([]OrgMetadataEntry)[vs[1].(int)]
	}).(OrgMetadataEntryOutput)
}

type OrgOidcClaimsMapping struct {
	// Required if `wellknownEndpoint` doesn't give info about it
	Email *string `pulumi:"email"`
	// Required if `wellknownEndpoint` doesn't give info about it
	FirstName *string `pulumi:"firstName"`
	// Required if `wellknownEndpoint` doesn't give info about it
	FullName *string `pulumi:"fullName"`
	// Optional
	Groups *string `pulumi:"groups"`
	// Required if `wellknownEndpoint` doesn't give info about it
	LastName *string `pulumi:"lastName"`
	// Optional
	Roles *string `pulumi:"roles"`
	// Required if `wellknownEndpoint` doesn't give info about it
	Subject *string `pulumi:"subject"`
}

// OrgOidcClaimsMappingInput is an input type that accepts OrgOidcClaimsMappingArgs and OrgOidcClaimsMappingOutput values.
// You can construct a concrete instance of `OrgOidcClaimsMappingInput` via:
//
//	OrgOidcClaimsMappingArgs{...}
type OrgOidcClaimsMappingInput interface {
	pulumi.Input

	ToOrgOidcClaimsMappingOutput() OrgOidcClaimsMappingOutput
	ToOrgOidcClaimsMappingOutputWithContext(context.Context) OrgOidcClaimsMappingOutput
}

type OrgOidcClaimsMappingArgs struct {
	// Required if `wellknownEndpoint` doesn't give info about it
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Required if `wellknownEndpoint` doesn't give info about it
	FirstName pulumi.StringPtrInput `pulumi:"firstName"`
	// Required if `wellknownEndpoint` doesn't give info about it
	FullName pulumi.StringPtrInput `pulumi:"fullName"`
	// Optional
	Groups pulumi.StringPtrInput `pulumi:"groups"`
	// Required if `wellknownEndpoint` doesn't give info about it
	LastName pulumi.StringPtrInput `pulumi:"lastName"`
	// Optional
	Roles pulumi.StringPtrInput `pulumi:"roles"`
	// Required if `wellknownEndpoint` doesn't give info about it
	Subject pulumi.StringPtrInput `pulumi:"subject"`
}

func (OrgOidcClaimsMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgOidcClaimsMapping)(nil)).Elem()
}

func (i OrgOidcClaimsMappingArgs) ToOrgOidcClaimsMappingOutput() OrgOidcClaimsMappingOutput {
	return i.ToOrgOidcClaimsMappingOutputWithContext(context.Background())
}

func (i OrgOidcClaimsMappingArgs) ToOrgOidcClaimsMappingOutputWithContext(ctx context.Context) OrgOidcClaimsMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgOidcClaimsMappingOutput)
}

func (i OrgOidcClaimsMappingArgs) ToOrgOidcClaimsMappingPtrOutput() OrgOidcClaimsMappingPtrOutput {
	return i.ToOrgOidcClaimsMappingPtrOutputWithContext(context.Background())
}

func (i OrgOidcClaimsMappingArgs) ToOrgOidcClaimsMappingPtrOutputWithContext(ctx context.Context) OrgOidcClaimsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgOidcClaimsMappingOutput).ToOrgOidcClaimsMappingPtrOutputWithContext(ctx)
}

// OrgOidcClaimsMappingPtrInput is an input type that accepts OrgOidcClaimsMappingArgs, OrgOidcClaimsMappingPtr and OrgOidcClaimsMappingPtrOutput values.
// You can construct a concrete instance of `OrgOidcClaimsMappingPtrInput` via:
//
//	        OrgOidcClaimsMappingArgs{...}
//
//	or:
//
//	        nil
type OrgOidcClaimsMappingPtrInput interface {
	pulumi.Input

	ToOrgOidcClaimsMappingPtrOutput() OrgOidcClaimsMappingPtrOutput
	ToOrgOidcClaimsMappingPtrOutputWithContext(context.Context) OrgOidcClaimsMappingPtrOutput
}

type orgOidcClaimsMappingPtrType OrgOidcClaimsMappingArgs

func OrgOidcClaimsMappingPtr(v *OrgOidcClaimsMappingArgs) OrgOidcClaimsMappingPtrInput {
	return (*orgOidcClaimsMappingPtrType)(v)
}

func (*orgOidcClaimsMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgOidcClaimsMapping)(nil)).Elem()
}

func (i *orgOidcClaimsMappingPtrType) ToOrgOidcClaimsMappingPtrOutput() OrgOidcClaimsMappingPtrOutput {
	return i.ToOrgOidcClaimsMappingPtrOutputWithContext(context.Background())
}

func (i *orgOidcClaimsMappingPtrType) ToOrgOidcClaimsMappingPtrOutputWithContext(ctx context.Context) OrgOidcClaimsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgOidcClaimsMappingPtrOutput)
}

type OrgOidcClaimsMappingOutput struct{ *pulumi.OutputState }

func (OrgOidcClaimsMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgOidcClaimsMapping)(nil)).Elem()
}

func (o OrgOidcClaimsMappingOutput) ToOrgOidcClaimsMappingOutput() OrgOidcClaimsMappingOutput {
	return o
}

func (o OrgOidcClaimsMappingOutput) ToOrgOidcClaimsMappingOutputWithContext(ctx context.Context) OrgOidcClaimsMappingOutput {
	return o
}

func (o OrgOidcClaimsMappingOutput) ToOrgOidcClaimsMappingPtrOutput() OrgOidcClaimsMappingPtrOutput {
	return o.ToOrgOidcClaimsMappingPtrOutputWithContext(context.Background())
}

func (o OrgOidcClaimsMappingOutput) ToOrgOidcClaimsMappingPtrOutputWithContext(ctx context.Context) OrgOidcClaimsMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgOidcClaimsMapping) *OrgOidcClaimsMapping {
		return &v
	}).(OrgOidcClaimsMappingPtrOutput)
}

// Required if `wellknownEndpoint` doesn't give info about it
func (o OrgOidcClaimsMappingOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgOidcClaimsMapping) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Required if `wellknownEndpoint` doesn't give info about it
func (o OrgOidcClaimsMappingOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgOidcClaimsMapping) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

// Required if `wellknownEndpoint` doesn't give info about it
func (o OrgOidcClaimsMappingOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgOidcClaimsMapping) *string { return v.FullName }).(pulumi.StringPtrOutput)
}

// Optional
func (o OrgOidcClaimsMappingOutput) Groups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgOidcClaimsMapping) *string { return v.Groups }).(pulumi.StringPtrOutput)
}

// Required if `wellknownEndpoint` doesn't give info about it
func (o OrgOidcClaimsMappingOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgOidcClaimsMapping) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

// Optional
func (o OrgOidcClaimsMappingOutput) Roles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgOidcClaimsMapping) *string { return v.Roles }).(pulumi.StringPtrOutput)
}

// Required if `wellknownEndpoint` doesn't give info about it
func (o OrgOidcClaimsMappingOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgOidcClaimsMapping) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type OrgOidcClaimsMappingPtrOutput struct{ *pulumi.OutputState }

func (OrgOidcClaimsMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgOidcClaimsMapping)(nil)).Elem()
}

func (o OrgOidcClaimsMappingPtrOutput) ToOrgOidcClaimsMappingPtrOutput() OrgOidcClaimsMappingPtrOutput {
	return o
}

func (o OrgOidcClaimsMappingPtrOutput) ToOrgOidcClaimsMappingPtrOutputWithContext(ctx context.Context) OrgOidcClaimsMappingPtrOutput {
	return o
}

func (o OrgOidcClaimsMappingPtrOutput) Elem() OrgOidcClaimsMappingOutput {
	return o.ApplyT(func(v *OrgOidcClaimsMapping) OrgOidcClaimsMapping {
		if v != nil {
			return *v
		}
		var ret OrgOidcClaimsMapping
		return ret
	}).(OrgOidcClaimsMappingOutput)
}

// Required if `wellknownEndpoint` doesn't give info about it
func (o OrgOidcClaimsMappingPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgOidcClaimsMapping) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Required if `wellknownEndpoint` doesn't give info about it
func (o OrgOidcClaimsMappingPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgOidcClaimsMapping) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

// Required if `wellknownEndpoint` doesn't give info about it
func (o OrgOidcClaimsMappingPtrOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgOidcClaimsMapping) *string {
		if v == nil {
			return nil
		}
		return v.FullName
	}).(pulumi.StringPtrOutput)
}

// Optional
func (o OrgOidcClaimsMappingPtrOutput) Groups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgOidcClaimsMapping) *string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringPtrOutput)
}

// Required if `wellknownEndpoint` doesn't give info about it
func (o OrgOidcClaimsMappingPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgOidcClaimsMapping) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

// Optional
func (o OrgOidcClaimsMappingPtrOutput) Roles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgOidcClaimsMapping) *string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringPtrOutput)
}

// Required if `wellknownEndpoint` doesn't give info about it
func (o OrgOidcClaimsMappingPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgOidcClaimsMapping) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

type OrgOidcKey struct {
	// Algorithm used by the key. Can be `RSA` or `EC`
	Algorithm string `pulumi:"algorithm"`
	// The contents of a PEM file to create/update the key
	Certificate string `pulumi:"certificate"`
	// Expiration date for the key. The accepted format is `YYYY-MM-DD`, like `2077-12-31`
	ExpirationDate *string `pulumi:"expirationDate"`
	// Identifier of the key
	Id string `pulumi:"id"`
}

// OrgOidcKeyInput is an input type that accepts OrgOidcKeyArgs and OrgOidcKeyOutput values.
// You can construct a concrete instance of `OrgOidcKeyInput` via:
//
//	OrgOidcKeyArgs{...}
type OrgOidcKeyInput interface {
	pulumi.Input

	ToOrgOidcKeyOutput() OrgOidcKeyOutput
	ToOrgOidcKeyOutputWithContext(context.Context) OrgOidcKeyOutput
}

type OrgOidcKeyArgs struct {
	// Algorithm used by the key. Can be `RSA` or `EC`
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The contents of a PEM file to create/update the key
	Certificate pulumi.StringInput `pulumi:"certificate"`
	// Expiration date for the key. The accepted format is `YYYY-MM-DD`, like `2077-12-31`
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Identifier of the key
	Id pulumi.StringInput `pulumi:"id"`
}

func (OrgOidcKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgOidcKey)(nil)).Elem()
}

func (i OrgOidcKeyArgs) ToOrgOidcKeyOutput() OrgOidcKeyOutput {
	return i.ToOrgOidcKeyOutputWithContext(context.Background())
}

func (i OrgOidcKeyArgs) ToOrgOidcKeyOutputWithContext(ctx context.Context) OrgOidcKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgOidcKeyOutput)
}

// OrgOidcKeyArrayInput is an input type that accepts OrgOidcKeyArray and OrgOidcKeyArrayOutput values.
// You can construct a concrete instance of `OrgOidcKeyArrayInput` via:
//
//	OrgOidcKeyArray{ OrgOidcKeyArgs{...} }
type OrgOidcKeyArrayInput interface {
	pulumi.Input

	ToOrgOidcKeyArrayOutput() OrgOidcKeyArrayOutput
	ToOrgOidcKeyArrayOutputWithContext(context.Context) OrgOidcKeyArrayOutput
}

type OrgOidcKeyArray []OrgOidcKeyInput

func (OrgOidcKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgOidcKey)(nil)).Elem()
}

func (i OrgOidcKeyArray) ToOrgOidcKeyArrayOutput() OrgOidcKeyArrayOutput {
	return i.ToOrgOidcKeyArrayOutputWithContext(context.Background())
}

func (i OrgOidcKeyArray) ToOrgOidcKeyArrayOutputWithContext(ctx context.Context) OrgOidcKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgOidcKeyArrayOutput)
}

type OrgOidcKeyOutput struct{ *pulumi.OutputState }

func (OrgOidcKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgOidcKey)(nil)).Elem()
}

func (o OrgOidcKeyOutput) ToOrgOidcKeyOutput() OrgOidcKeyOutput {
	return o
}

func (o OrgOidcKeyOutput) ToOrgOidcKeyOutputWithContext(ctx context.Context) OrgOidcKeyOutput {
	return o
}

// Algorithm used by the key. Can be `RSA` or `EC`
func (o OrgOidcKeyOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v OrgOidcKey) string { return v.Algorithm }).(pulumi.StringOutput)
}

// The contents of a PEM file to create/update the key
func (o OrgOidcKeyOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v OrgOidcKey) string { return v.Certificate }).(pulumi.StringOutput)
}

// Expiration date for the key. The accepted format is `YYYY-MM-DD`, like `2077-12-31`
func (o OrgOidcKeyOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgOidcKey) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Identifier of the key
func (o OrgOidcKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OrgOidcKey) string { return v.Id }).(pulumi.StringOutput)
}

type OrgOidcKeyArrayOutput struct{ *pulumi.OutputState }

func (OrgOidcKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgOidcKey)(nil)).Elem()
}

func (o OrgOidcKeyArrayOutput) ToOrgOidcKeyArrayOutput() OrgOidcKeyArrayOutput {
	return o
}

func (o OrgOidcKeyArrayOutput) ToOrgOidcKeyArrayOutputWithContext(ctx context.Context) OrgOidcKeyArrayOutput {
	return o
}

func (o OrgOidcKeyArrayOutput) Index(i pulumi.IntInput) OrgOidcKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgOidcKey {
		return vs[0].([]OrgOidcKey)[vs[1].(int)]
	}).(OrgOidcKeyOutput)
}

type OrgVappLease struct {
	// If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted.
	DeleteOnStorageLeaseExpiration bool `pulumi:"deleteOnStorageLeaseExpiration"`
	// How long vApps can run before they are automatically stopped (in seconds). 0 means never expires
	MaximumRuntimeLeaseInSec int `pulumi:"maximumRuntimeLeaseInSec"`
	// How long stopped vApps are available before being automatically cleaned up (in seconds). 0 means never expires
	MaximumStorageLeaseInSec int `pulumi:"maximumStorageLeaseInSec"`
	// When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires
	PowerOffOnRuntimeLeaseExpiration bool `pulumi:"powerOffOnRuntimeLeaseExpiration"`
}

// OrgVappLeaseInput is an input type that accepts OrgVappLeaseArgs and OrgVappLeaseOutput values.
// You can construct a concrete instance of `OrgVappLeaseInput` via:
//
//	OrgVappLeaseArgs{...}
type OrgVappLeaseInput interface {
	pulumi.Input

	ToOrgVappLeaseOutput() OrgVappLeaseOutput
	ToOrgVappLeaseOutputWithContext(context.Context) OrgVappLeaseOutput
}

type OrgVappLeaseArgs struct {
	// If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted.
	DeleteOnStorageLeaseExpiration pulumi.BoolInput `pulumi:"deleteOnStorageLeaseExpiration"`
	// How long vApps can run before they are automatically stopped (in seconds). 0 means never expires
	MaximumRuntimeLeaseInSec pulumi.IntInput `pulumi:"maximumRuntimeLeaseInSec"`
	// How long stopped vApps are available before being automatically cleaned up (in seconds). 0 means never expires
	MaximumStorageLeaseInSec pulumi.IntInput `pulumi:"maximumStorageLeaseInSec"`
	// When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires
	PowerOffOnRuntimeLeaseExpiration pulumi.BoolInput `pulumi:"powerOffOnRuntimeLeaseExpiration"`
}

func (OrgVappLeaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVappLease)(nil)).Elem()
}

func (i OrgVappLeaseArgs) ToOrgVappLeaseOutput() OrgVappLeaseOutput {
	return i.ToOrgVappLeaseOutputWithContext(context.Background())
}

func (i OrgVappLeaseArgs) ToOrgVappLeaseOutputWithContext(ctx context.Context) OrgVappLeaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVappLeaseOutput)
}

func (i OrgVappLeaseArgs) ToOrgVappLeasePtrOutput() OrgVappLeasePtrOutput {
	return i.ToOrgVappLeasePtrOutputWithContext(context.Background())
}

func (i OrgVappLeaseArgs) ToOrgVappLeasePtrOutputWithContext(ctx context.Context) OrgVappLeasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVappLeaseOutput).ToOrgVappLeasePtrOutputWithContext(ctx)
}

// OrgVappLeasePtrInput is an input type that accepts OrgVappLeaseArgs, OrgVappLeasePtr and OrgVappLeasePtrOutput values.
// You can construct a concrete instance of `OrgVappLeasePtrInput` via:
//
//	        OrgVappLeaseArgs{...}
//
//	or:
//
//	        nil
type OrgVappLeasePtrInput interface {
	pulumi.Input

	ToOrgVappLeasePtrOutput() OrgVappLeasePtrOutput
	ToOrgVappLeasePtrOutputWithContext(context.Context) OrgVappLeasePtrOutput
}

type orgVappLeasePtrType OrgVappLeaseArgs

func OrgVappLeasePtr(v *OrgVappLeaseArgs) OrgVappLeasePtrInput {
	return (*orgVappLeasePtrType)(v)
}

func (*orgVappLeasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVappLease)(nil)).Elem()
}

func (i *orgVappLeasePtrType) ToOrgVappLeasePtrOutput() OrgVappLeasePtrOutput {
	return i.ToOrgVappLeasePtrOutputWithContext(context.Background())
}

func (i *orgVappLeasePtrType) ToOrgVappLeasePtrOutputWithContext(ctx context.Context) OrgVappLeasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVappLeasePtrOutput)
}

type OrgVappLeaseOutput struct{ *pulumi.OutputState }

func (OrgVappLeaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVappLease)(nil)).Elem()
}

func (o OrgVappLeaseOutput) ToOrgVappLeaseOutput() OrgVappLeaseOutput {
	return o
}

func (o OrgVappLeaseOutput) ToOrgVappLeaseOutputWithContext(ctx context.Context) OrgVappLeaseOutput {
	return o
}

func (o OrgVappLeaseOutput) ToOrgVappLeasePtrOutput() OrgVappLeasePtrOutput {
	return o.ToOrgVappLeasePtrOutputWithContext(context.Background())
}

func (o OrgVappLeaseOutput) ToOrgVappLeasePtrOutputWithContext(ctx context.Context) OrgVappLeasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgVappLease) *OrgVappLease {
		return &v
	}).(OrgVappLeasePtrOutput)
}

// If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted.
func (o OrgVappLeaseOutput) DeleteOnStorageLeaseExpiration() pulumi.BoolOutput {
	return o.ApplyT(func(v OrgVappLease) bool { return v.DeleteOnStorageLeaseExpiration }).(pulumi.BoolOutput)
}

// How long vApps can run before they are automatically stopped (in seconds). 0 means never expires
func (o OrgVappLeaseOutput) MaximumRuntimeLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v OrgVappLease) int { return v.MaximumRuntimeLeaseInSec }).(pulumi.IntOutput)
}

// How long stopped vApps are available before being automatically cleaned up (in seconds). 0 means never expires
func (o OrgVappLeaseOutput) MaximumStorageLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v OrgVappLease) int { return v.MaximumStorageLeaseInSec }).(pulumi.IntOutput)
}

// When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires
func (o OrgVappLeaseOutput) PowerOffOnRuntimeLeaseExpiration() pulumi.BoolOutput {
	return o.ApplyT(func(v OrgVappLease) bool { return v.PowerOffOnRuntimeLeaseExpiration }).(pulumi.BoolOutput)
}

type OrgVappLeasePtrOutput struct{ *pulumi.OutputState }

func (OrgVappLeasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVappLease)(nil)).Elem()
}

func (o OrgVappLeasePtrOutput) ToOrgVappLeasePtrOutput() OrgVappLeasePtrOutput {
	return o
}

func (o OrgVappLeasePtrOutput) ToOrgVappLeasePtrOutputWithContext(ctx context.Context) OrgVappLeasePtrOutput {
	return o
}

func (o OrgVappLeasePtrOutput) Elem() OrgVappLeaseOutput {
	return o.ApplyT(func(v *OrgVappLease) OrgVappLease {
		if v != nil {
			return *v
		}
		var ret OrgVappLease
		return ret
	}).(OrgVappLeaseOutput)
}

// If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted.
func (o OrgVappLeasePtrOutput) DeleteOnStorageLeaseExpiration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgVappLease) *bool {
		if v == nil {
			return nil
		}
		return &v.DeleteOnStorageLeaseExpiration
	}).(pulumi.BoolPtrOutput)
}

// How long vApps can run before they are automatically stopped (in seconds). 0 means never expires
func (o OrgVappLeasePtrOutput) MaximumRuntimeLeaseInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVappLease) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumRuntimeLeaseInSec
	}).(pulumi.IntPtrOutput)
}

// How long stopped vApps are available before being automatically cleaned up (in seconds). 0 means never expires
func (o OrgVappLeasePtrOutput) MaximumStorageLeaseInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVappLease) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumStorageLeaseInSec
	}).(pulumi.IntPtrOutput)
}

// When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires
func (o OrgVappLeasePtrOutput) PowerOffOnRuntimeLeaseExpiration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgVappLease) *bool {
		if v == nil {
			return nil
		}
		return &v.PowerOffOnRuntimeLeaseExpiration
	}).(pulumi.BoolPtrOutput)
}

type OrgVappTemplateLease struct {
	// If true, storage for a vAppTemplate is deleted when the vAppTemplate lease expires. If false, the storage is flagged for deletion, but not deleted
	DeleteOnStorageLeaseExpiration bool `pulumi:"deleteOnStorageLeaseExpiration"`
	// How long vApp templates are available before being automatically cleaned up (in seconds). 0 means never expires
	MaximumStorageLeaseInSec int `pulumi:"maximumStorageLeaseInSec"`
}

// OrgVappTemplateLeaseInput is an input type that accepts OrgVappTemplateLeaseArgs and OrgVappTemplateLeaseOutput values.
// You can construct a concrete instance of `OrgVappTemplateLeaseInput` via:
//
//	OrgVappTemplateLeaseArgs{...}
type OrgVappTemplateLeaseInput interface {
	pulumi.Input

	ToOrgVappTemplateLeaseOutput() OrgVappTemplateLeaseOutput
	ToOrgVappTemplateLeaseOutputWithContext(context.Context) OrgVappTemplateLeaseOutput
}

type OrgVappTemplateLeaseArgs struct {
	// If true, storage for a vAppTemplate is deleted when the vAppTemplate lease expires. If false, the storage is flagged for deletion, but not deleted
	DeleteOnStorageLeaseExpiration pulumi.BoolInput `pulumi:"deleteOnStorageLeaseExpiration"`
	// How long vApp templates are available before being automatically cleaned up (in seconds). 0 means never expires
	MaximumStorageLeaseInSec pulumi.IntInput `pulumi:"maximumStorageLeaseInSec"`
}

func (OrgVappTemplateLeaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVappTemplateLease)(nil)).Elem()
}

func (i OrgVappTemplateLeaseArgs) ToOrgVappTemplateLeaseOutput() OrgVappTemplateLeaseOutput {
	return i.ToOrgVappTemplateLeaseOutputWithContext(context.Background())
}

func (i OrgVappTemplateLeaseArgs) ToOrgVappTemplateLeaseOutputWithContext(ctx context.Context) OrgVappTemplateLeaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVappTemplateLeaseOutput)
}

func (i OrgVappTemplateLeaseArgs) ToOrgVappTemplateLeasePtrOutput() OrgVappTemplateLeasePtrOutput {
	return i.ToOrgVappTemplateLeasePtrOutputWithContext(context.Background())
}

func (i OrgVappTemplateLeaseArgs) ToOrgVappTemplateLeasePtrOutputWithContext(ctx context.Context) OrgVappTemplateLeasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVappTemplateLeaseOutput).ToOrgVappTemplateLeasePtrOutputWithContext(ctx)
}

// OrgVappTemplateLeasePtrInput is an input type that accepts OrgVappTemplateLeaseArgs, OrgVappTemplateLeasePtr and OrgVappTemplateLeasePtrOutput values.
// You can construct a concrete instance of `OrgVappTemplateLeasePtrInput` via:
//
//	        OrgVappTemplateLeaseArgs{...}
//
//	or:
//
//	        nil
type OrgVappTemplateLeasePtrInput interface {
	pulumi.Input

	ToOrgVappTemplateLeasePtrOutput() OrgVappTemplateLeasePtrOutput
	ToOrgVappTemplateLeasePtrOutputWithContext(context.Context) OrgVappTemplateLeasePtrOutput
}

type orgVappTemplateLeasePtrType OrgVappTemplateLeaseArgs

func OrgVappTemplateLeasePtr(v *OrgVappTemplateLeaseArgs) OrgVappTemplateLeasePtrInput {
	return (*orgVappTemplateLeasePtrType)(v)
}

func (*orgVappTemplateLeasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVappTemplateLease)(nil)).Elem()
}

func (i *orgVappTemplateLeasePtrType) ToOrgVappTemplateLeasePtrOutput() OrgVappTemplateLeasePtrOutput {
	return i.ToOrgVappTemplateLeasePtrOutputWithContext(context.Background())
}

func (i *orgVappTemplateLeasePtrType) ToOrgVappTemplateLeasePtrOutputWithContext(ctx context.Context) OrgVappTemplateLeasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVappTemplateLeasePtrOutput)
}

type OrgVappTemplateLeaseOutput struct{ *pulumi.OutputState }

func (OrgVappTemplateLeaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVappTemplateLease)(nil)).Elem()
}

func (o OrgVappTemplateLeaseOutput) ToOrgVappTemplateLeaseOutput() OrgVappTemplateLeaseOutput {
	return o
}

func (o OrgVappTemplateLeaseOutput) ToOrgVappTemplateLeaseOutputWithContext(ctx context.Context) OrgVappTemplateLeaseOutput {
	return o
}

func (o OrgVappTemplateLeaseOutput) ToOrgVappTemplateLeasePtrOutput() OrgVappTemplateLeasePtrOutput {
	return o.ToOrgVappTemplateLeasePtrOutputWithContext(context.Background())
}

func (o OrgVappTemplateLeaseOutput) ToOrgVappTemplateLeasePtrOutputWithContext(ctx context.Context) OrgVappTemplateLeasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgVappTemplateLease) *OrgVappTemplateLease {
		return &v
	}).(OrgVappTemplateLeasePtrOutput)
}

// If true, storage for a vAppTemplate is deleted when the vAppTemplate lease expires. If false, the storage is flagged for deletion, but not deleted
func (o OrgVappTemplateLeaseOutput) DeleteOnStorageLeaseExpiration() pulumi.BoolOutput {
	return o.ApplyT(func(v OrgVappTemplateLease) bool { return v.DeleteOnStorageLeaseExpiration }).(pulumi.BoolOutput)
}

// How long vApp templates are available before being automatically cleaned up (in seconds). 0 means never expires
func (o OrgVappTemplateLeaseOutput) MaximumStorageLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v OrgVappTemplateLease) int { return v.MaximumStorageLeaseInSec }).(pulumi.IntOutput)
}

type OrgVappTemplateLeasePtrOutput struct{ *pulumi.OutputState }

func (OrgVappTemplateLeasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVappTemplateLease)(nil)).Elem()
}

func (o OrgVappTemplateLeasePtrOutput) ToOrgVappTemplateLeasePtrOutput() OrgVappTemplateLeasePtrOutput {
	return o
}

func (o OrgVappTemplateLeasePtrOutput) ToOrgVappTemplateLeasePtrOutputWithContext(ctx context.Context) OrgVappTemplateLeasePtrOutput {
	return o
}

func (o OrgVappTemplateLeasePtrOutput) Elem() OrgVappTemplateLeaseOutput {
	return o.ApplyT(func(v *OrgVappTemplateLease) OrgVappTemplateLease {
		if v != nil {
			return *v
		}
		var ret OrgVappTemplateLease
		return ret
	}).(OrgVappTemplateLeaseOutput)
}

// If true, storage for a vAppTemplate is deleted when the vAppTemplate lease expires. If false, the storage is flagged for deletion, but not deleted
func (o OrgVappTemplateLeasePtrOutput) DeleteOnStorageLeaseExpiration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgVappTemplateLease) *bool {
		if v == nil {
			return nil
		}
		return &v.DeleteOnStorageLeaseExpiration
	}).(pulumi.BoolPtrOutput)
}

// How long vApp templates are available before being automatically cleaned up (in seconds). 0 means never expires
func (o OrgVappTemplateLeasePtrOutput) MaximumStorageLeaseInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVappTemplateLease) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumStorageLeaseInSec
	}).(pulumi.IntPtrOutput)
}

type OrgVdcAccessControlSharedWith struct {
	// The access level for the user or group to which we are sharing. (Only `ReadOnly` is available)
	AccessLevel string `pulumi:"accessLevel"`
	// The ID of a group which we are sharing with. Required if `userId` is not set.
	GroupId *string `pulumi:"groupId"`
	// The name of the subject (group or user) which we are sharing with.
	SubjectName *string `pulumi:"subjectName"`
	// The ID of a user which we are sharing with. Required if `groupId` is not set.
	UserId *string `pulumi:"userId"`
}

// OrgVdcAccessControlSharedWithInput is an input type that accepts OrgVdcAccessControlSharedWithArgs and OrgVdcAccessControlSharedWithOutput values.
// You can construct a concrete instance of `OrgVdcAccessControlSharedWithInput` via:
//
//	OrgVdcAccessControlSharedWithArgs{...}
type OrgVdcAccessControlSharedWithInput interface {
	pulumi.Input

	ToOrgVdcAccessControlSharedWithOutput() OrgVdcAccessControlSharedWithOutput
	ToOrgVdcAccessControlSharedWithOutputWithContext(context.Context) OrgVdcAccessControlSharedWithOutput
}

type OrgVdcAccessControlSharedWithArgs struct {
	// The access level for the user or group to which we are sharing. (Only `ReadOnly` is available)
	AccessLevel pulumi.StringInput `pulumi:"accessLevel"`
	// The ID of a group which we are sharing with. Required if `userId` is not set.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The name of the subject (group or user) which we are sharing with.
	SubjectName pulumi.StringPtrInput `pulumi:"subjectName"`
	// The ID of a user which we are sharing with. Required if `groupId` is not set.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (OrgVdcAccessControlSharedWithArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcAccessControlSharedWith)(nil)).Elem()
}

func (i OrgVdcAccessControlSharedWithArgs) ToOrgVdcAccessControlSharedWithOutput() OrgVdcAccessControlSharedWithOutput {
	return i.ToOrgVdcAccessControlSharedWithOutputWithContext(context.Background())
}

func (i OrgVdcAccessControlSharedWithArgs) ToOrgVdcAccessControlSharedWithOutputWithContext(ctx context.Context) OrgVdcAccessControlSharedWithOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcAccessControlSharedWithOutput)
}

// OrgVdcAccessControlSharedWithArrayInput is an input type that accepts OrgVdcAccessControlSharedWithArray and OrgVdcAccessControlSharedWithArrayOutput values.
// You can construct a concrete instance of `OrgVdcAccessControlSharedWithArrayInput` via:
//
//	OrgVdcAccessControlSharedWithArray{ OrgVdcAccessControlSharedWithArgs{...} }
type OrgVdcAccessControlSharedWithArrayInput interface {
	pulumi.Input

	ToOrgVdcAccessControlSharedWithArrayOutput() OrgVdcAccessControlSharedWithArrayOutput
	ToOrgVdcAccessControlSharedWithArrayOutputWithContext(context.Context) OrgVdcAccessControlSharedWithArrayOutput
}

type OrgVdcAccessControlSharedWithArray []OrgVdcAccessControlSharedWithInput

func (OrgVdcAccessControlSharedWithArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgVdcAccessControlSharedWith)(nil)).Elem()
}

func (i OrgVdcAccessControlSharedWithArray) ToOrgVdcAccessControlSharedWithArrayOutput() OrgVdcAccessControlSharedWithArrayOutput {
	return i.ToOrgVdcAccessControlSharedWithArrayOutputWithContext(context.Background())
}

func (i OrgVdcAccessControlSharedWithArray) ToOrgVdcAccessControlSharedWithArrayOutputWithContext(ctx context.Context) OrgVdcAccessControlSharedWithArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcAccessControlSharedWithArrayOutput)
}

type OrgVdcAccessControlSharedWithOutput struct{ *pulumi.OutputState }

func (OrgVdcAccessControlSharedWithOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcAccessControlSharedWith)(nil)).Elem()
}

func (o OrgVdcAccessControlSharedWithOutput) ToOrgVdcAccessControlSharedWithOutput() OrgVdcAccessControlSharedWithOutput {
	return o
}

func (o OrgVdcAccessControlSharedWithOutput) ToOrgVdcAccessControlSharedWithOutputWithContext(ctx context.Context) OrgVdcAccessControlSharedWithOutput {
	return o
}

// The access level for the user or group to which we are sharing. (Only `ReadOnly` is available)
func (o OrgVdcAccessControlSharedWithOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v OrgVdcAccessControlSharedWith) string { return v.AccessLevel }).(pulumi.StringOutput)
}

// The ID of a group which we are sharing with. Required if `userId` is not set.
func (o OrgVdcAccessControlSharedWithOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcAccessControlSharedWith) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The name of the subject (group or user) which we are sharing with.
func (o OrgVdcAccessControlSharedWithOutput) SubjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcAccessControlSharedWith) *string { return v.SubjectName }).(pulumi.StringPtrOutput)
}

// The ID of a user which we are sharing with. Required if `groupId` is not set.
func (o OrgVdcAccessControlSharedWithOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcAccessControlSharedWith) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type OrgVdcAccessControlSharedWithArrayOutput struct{ *pulumi.OutputState }

func (OrgVdcAccessControlSharedWithArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgVdcAccessControlSharedWith)(nil)).Elem()
}

func (o OrgVdcAccessControlSharedWithArrayOutput) ToOrgVdcAccessControlSharedWithArrayOutput() OrgVdcAccessControlSharedWithArrayOutput {
	return o
}

func (o OrgVdcAccessControlSharedWithArrayOutput) ToOrgVdcAccessControlSharedWithArrayOutputWithContext(ctx context.Context) OrgVdcAccessControlSharedWithArrayOutput {
	return o
}

func (o OrgVdcAccessControlSharedWithArrayOutput) Index(i pulumi.IntInput) OrgVdcAccessControlSharedWithOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgVdcAccessControlSharedWith {
		return vs[0].([]OrgVdcAccessControlSharedWith)[vs[1].(int)]
	}).(OrgVdcAccessControlSharedWithOutput)
}

type OrgVdcComputeCapacity struct {
	Cpu    OrgVdcComputeCapacityCpu    `pulumi:"cpu"`
	Memory OrgVdcComputeCapacityMemory `pulumi:"memory"`
}

// OrgVdcComputeCapacityInput is an input type that accepts OrgVdcComputeCapacityArgs and OrgVdcComputeCapacityOutput values.
// You can construct a concrete instance of `OrgVdcComputeCapacityInput` via:
//
//	OrgVdcComputeCapacityArgs{...}
type OrgVdcComputeCapacityInput interface {
	pulumi.Input

	ToOrgVdcComputeCapacityOutput() OrgVdcComputeCapacityOutput
	ToOrgVdcComputeCapacityOutputWithContext(context.Context) OrgVdcComputeCapacityOutput
}

type OrgVdcComputeCapacityArgs struct {
	Cpu    OrgVdcComputeCapacityCpuInput    `pulumi:"cpu"`
	Memory OrgVdcComputeCapacityMemoryInput `pulumi:"memory"`
}

func (OrgVdcComputeCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcComputeCapacity)(nil)).Elem()
}

func (i OrgVdcComputeCapacityArgs) ToOrgVdcComputeCapacityOutput() OrgVdcComputeCapacityOutput {
	return i.ToOrgVdcComputeCapacityOutputWithContext(context.Background())
}

func (i OrgVdcComputeCapacityArgs) ToOrgVdcComputeCapacityOutputWithContext(ctx context.Context) OrgVdcComputeCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcComputeCapacityOutput)
}

func (i OrgVdcComputeCapacityArgs) ToOrgVdcComputeCapacityPtrOutput() OrgVdcComputeCapacityPtrOutput {
	return i.ToOrgVdcComputeCapacityPtrOutputWithContext(context.Background())
}

func (i OrgVdcComputeCapacityArgs) ToOrgVdcComputeCapacityPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcComputeCapacityOutput).ToOrgVdcComputeCapacityPtrOutputWithContext(ctx)
}

// OrgVdcComputeCapacityPtrInput is an input type that accepts OrgVdcComputeCapacityArgs, OrgVdcComputeCapacityPtr and OrgVdcComputeCapacityPtrOutput values.
// You can construct a concrete instance of `OrgVdcComputeCapacityPtrInput` via:
//
//	        OrgVdcComputeCapacityArgs{...}
//
//	or:
//
//	        nil
type OrgVdcComputeCapacityPtrInput interface {
	pulumi.Input

	ToOrgVdcComputeCapacityPtrOutput() OrgVdcComputeCapacityPtrOutput
	ToOrgVdcComputeCapacityPtrOutputWithContext(context.Context) OrgVdcComputeCapacityPtrOutput
}

type orgVdcComputeCapacityPtrType OrgVdcComputeCapacityArgs

func OrgVdcComputeCapacityPtr(v *OrgVdcComputeCapacityArgs) OrgVdcComputeCapacityPtrInput {
	return (*orgVdcComputeCapacityPtrType)(v)
}

func (*orgVdcComputeCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcComputeCapacity)(nil)).Elem()
}

func (i *orgVdcComputeCapacityPtrType) ToOrgVdcComputeCapacityPtrOutput() OrgVdcComputeCapacityPtrOutput {
	return i.ToOrgVdcComputeCapacityPtrOutputWithContext(context.Background())
}

func (i *orgVdcComputeCapacityPtrType) ToOrgVdcComputeCapacityPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcComputeCapacityPtrOutput)
}

type OrgVdcComputeCapacityOutput struct{ *pulumi.OutputState }

func (OrgVdcComputeCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcComputeCapacity)(nil)).Elem()
}

func (o OrgVdcComputeCapacityOutput) ToOrgVdcComputeCapacityOutput() OrgVdcComputeCapacityOutput {
	return o
}

func (o OrgVdcComputeCapacityOutput) ToOrgVdcComputeCapacityOutputWithContext(ctx context.Context) OrgVdcComputeCapacityOutput {
	return o
}

func (o OrgVdcComputeCapacityOutput) ToOrgVdcComputeCapacityPtrOutput() OrgVdcComputeCapacityPtrOutput {
	return o.ToOrgVdcComputeCapacityPtrOutputWithContext(context.Background())
}

func (o OrgVdcComputeCapacityOutput) ToOrgVdcComputeCapacityPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgVdcComputeCapacity) *OrgVdcComputeCapacity {
		return &v
	}).(OrgVdcComputeCapacityPtrOutput)
}

func (o OrgVdcComputeCapacityOutput) Cpu() OrgVdcComputeCapacityCpuOutput {
	return o.ApplyT(func(v OrgVdcComputeCapacity) OrgVdcComputeCapacityCpu { return v.Cpu }).(OrgVdcComputeCapacityCpuOutput)
}

func (o OrgVdcComputeCapacityOutput) Memory() OrgVdcComputeCapacityMemoryOutput {
	return o.ApplyT(func(v OrgVdcComputeCapacity) OrgVdcComputeCapacityMemory { return v.Memory }).(OrgVdcComputeCapacityMemoryOutput)
}

type OrgVdcComputeCapacityPtrOutput struct{ *pulumi.OutputState }

func (OrgVdcComputeCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcComputeCapacity)(nil)).Elem()
}

func (o OrgVdcComputeCapacityPtrOutput) ToOrgVdcComputeCapacityPtrOutput() OrgVdcComputeCapacityPtrOutput {
	return o
}

func (o OrgVdcComputeCapacityPtrOutput) ToOrgVdcComputeCapacityPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityPtrOutput {
	return o
}

func (o OrgVdcComputeCapacityPtrOutput) Elem() OrgVdcComputeCapacityOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacity) OrgVdcComputeCapacity {
		if v != nil {
			return *v
		}
		var ret OrgVdcComputeCapacity
		return ret
	}).(OrgVdcComputeCapacityOutput)
}

func (o OrgVdcComputeCapacityPtrOutput) Cpu() OrgVdcComputeCapacityCpuPtrOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacity) *OrgVdcComputeCapacityCpu {
		if v == nil {
			return nil
		}
		return &v.Cpu
	}).(OrgVdcComputeCapacityCpuPtrOutput)
}

func (o OrgVdcComputeCapacityPtrOutput) Memory() OrgVdcComputeCapacityMemoryPtrOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacity) *OrgVdcComputeCapacityMemory {
		if v == nil {
			return nil
		}
		return &v.Memory
	}).(OrgVdcComputeCapacityMemoryPtrOutput)
}

type OrgVdcComputeCapacityCpu struct {
	// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
	Allocated *int `pulumi:"allocated"`
	// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
	Limit    *int `pulumi:"limit"`
	Reserved *int `pulumi:"reserved"`
	Used     *int `pulumi:"used"`
}

// OrgVdcComputeCapacityCpuInput is an input type that accepts OrgVdcComputeCapacityCpuArgs and OrgVdcComputeCapacityCpuOutput values.
// You can construct a concrete instance of `OrgVdcComputeCapacityCpuInput` via:
//
//	OrgVdcComputeCapacityCpuArgs{...}
type OrgVdcComputeCapacityCpuInput interface {
	pulumi.Input

	ToOrgVdcComputeCapacityCpuOutput() OrgVdcComputeCapacityCpuOutput
	ToOrgVdcComputeCapacityCpuOutputWithContext(context.Context) OrgVdcComputeCapacityCpuOutput
}

type OrgVdcComputeCapacityCpuArgs struct {
	// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
	Allocated pulumi.IntPtrInput `pulumi:"allocated"`
	// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
	Limit    pulumi.IntPtrInput `pulumi:"limit"`
	Reserved pulumi.IntPtrInput `pulumi:"reserved"`
	Used     pulumi.IntPtrInput `pulumi:"used"`
}

func (OrgVdcComputeCapacityCpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcComputeCapacityCpu)(nil)).Elem()
}

func (i OrgVdcComputeCapacityCpuArgs) ToOrgVdcComputeCapacityCpuOutput() OrgVdcComputeCapacityCpuOutput {
	return i.ToOrgVdcComputeCapacityCpuOutputWithContext(context.Background())
}

func (i OrgVdcComputeCapacityCpuArgs) ToOrgVdcComputeCapacityCpuOutputWithContext(ctx context.Context) OrgVdcComputeCapacityCpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcComputeCapacityCpuOutput)
}

func (i OrgVdcComputeCapacityCpuArgs) ToOrgVdcComputeCapacityCpuPtrOutput() OrgVdcComputeCapacityCpuPtrOutput {
	return i.ToOrgVdcComputeCapacityCpuPtrOutputWithContext(context.Background())
}

func (i OrgVdcComputeCapacityCpuArgs) ToOrgVdcComputeCapacityCpuPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcComputeCapacityCpuOutput).ToOrgVdcComputeCapacityCpuPtrOutputWithContext(ctx)
}

// OrgVdcComputeCapacityCpuPtrInput is an input type that accepts OrgVdcComputeCapacityCpuArgs, OrgVdcComputeCapacityCpuPtr and OrgVdcComputeCapacityCpuPtrOutput values.
// You can construct a concrete instance of `OrgVdcComputeCapacityCpuPtrInput` via:
//
//	        OrgVdcComputeCapacityCpuArgs{...}
//
//	or:
//
//	        nil
type OrgVdcComputeCapacityCpuPtrInput interface {
	pulumi.Input

	ToOrgVdcComputeCapacityCpuPtrOutput() OrgVdcComputeCapacityCpuPtrOutput
	ToOrgVdcComputeCapacityCpuPtrOutputWithContext(context.Context) OrgVdcComputeCapacityCpuPtrOutput
}

type orgVdcComputeCapacityCpuPtrType OrgVdcComputeCapacityCpuArgs

func OrgVdcComputeCapacityCpuPtr(v *OrgVdcComputeCapacityCpuArgs) OrgVdcComputeCapacityCpuPtrInput {
	return (*orgVdcComputeCapacityCpuPtrType)(v)
}

func (*orgVdcComputeCapacityCpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcComputeCapacityCpu)(nil)).Elem()
}

func (i *orgVdcComputeCapacityCpuPtrType) ToOrgVdcComputeCapacityCpuPtrOutput() OrgVdcComputeCapacityCpuPtrOutput {
	return i.ToOrgVdcComputeCapacityCpuPtrOutputWithContext(context.Background())
}

func (i *orgVdcComputeCapacityCpuPtrType) ToOrgVdcComputeCapacityCpuPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcComputeCapacityCpuPtrOutput)
}

type OrgVdcComputeCapacityCpuOutput struct{ *pulumi.OutputState }

func (OrgVdcComputeCapacityCpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcComputeCapacityCpu)(nil)).Elem()
}

func (o OrgVdcComputeCapacityCpuOutput) ToOrgVdcComputeCapacityCpuOutput() OrgVdcComputeCapacityCpuOutput {
	return o
}

func (o OrgVdcComputeCapacityCpuOutput) ToOrgVdcComputeCapacityCpuOutputWithContext(ctx context.Context) OrgVdcComputeCapacityCpuOutput {
	return o
}

func (o OrgVdcComputeCapacityCpuOutput) ToOrgVdcComputeCapacityCpuPtrOutput() OrgVdcComputeCapacityCpuPtrOutput {
	return o.ToOrgVdcComputeCapacityCpuPtrOutputWithContext(context.Background())
}

func (o OrgVdcComputeCapacityCpuOutput) ToOrgVdcComputeCapacityCpuPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityCpuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgVdcComputeCapacityCpu) *OrgVdcComputeCapacityCpu {
		return &v
	}).(OrgVdcComputeCapacityCpuPtrOutput)
}

// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
func (o OrgVdcComputeCapacityCpuOutput) Allocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcComputeCapacityCpu) *int { return v.Allocated }).(pulumi.IntPtrOutput)
}

// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
func (o OrgVdcComputeCapacityCpuOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcComputeCapacityCpu) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o OrgVdcComputeCapacityCpuOutput) Reserved() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcComputeCapacityCpu) *int { return v.Reserved }).(pulumi.IntPtrOutput)
}

func (o OrgVdcComputeCapacityCpuOutput) Used() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcComputeCapacityCpu) *int { return v.Used }).(pulumi.IntPtrOutput)
}

type OrgVdcComputeCapacityCpuPtrOutput struct{ *pulumi.OutputState }

func (OrgVdcComputeCapacityCpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcComputeCapacityCpu)(nil)).Elem()
}

func (o OrgVdcComputeCapacityCpuPtrOutput) ToOrgVdcComputeCapacityCpuPtrOutput() OrgVdcComputeCapacityCpuPtrOutput {
	return o
}

func (o OrgVdcComputeCapacityCpuPtrOutput) ToOrgVdcComputeCapacityCpuPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityCpuPtrOutput {
	return o
}

func (o OrgVdcComputeCapacityCpuPtrOutput) Elem() OrgVdcComputeCapacityCpuOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacityCpu) OrgVdcComputeCapacityCpu {
		if v != nil {
			return *v
		}
		var ret OrgVdcComputeCapacityCpu
		return ret
	}).(OrgVdcComputeCapacityCpuOutput)
}

// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
func (o OrgVdcComputeCapacityCpuPtrOutput) Allocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacityCpu) *int {
		if v == nil {
			return nil
		}
		return v.Allocated
	}).(pulumi.IntPtrOutput)
}

// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
func (o OrgVdcComputeCapacityCpuPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacityCpu) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

func (o OrgVdcComputeCapacityCpuPtrOutput) Reserved() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacityCpu) *int {
		if v == nil {
			return nil
		}
		return v.Reserved
	}).(pulumi.IntPtrOutput)
}

func (o OrgVdcComputeCapacityCpuPtrOutput) Used() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacityCpu) *int {
		if v == nil {
			return nil
		}
		return v.Used
	}).(pulumi.IntPtrOutput)
}

type OrgVdcComputeCapacityMemory struct {
	// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
	Allocated *int `pulumi:"allocated"`
	// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
	Limit    *int `pulumi:"limit"`
	Reserved *int `pulumi:"reserved"`
	Used     *int `pulumi:"used"`
}

// OrgVdcComputeCapacityMemoryInput is an input type that accepts OrgVdcComputeCapacityMemoryArgs and OrgVdcComputeCapacityMemoryOutput values.
// You can construct a concrete instance of `OrgVdcComputeCapacityMemoryInput` via:
//
//	OrgVdcComputeCapacityMemoryArgs{...}
type OrgVdcComputeCapacityMemoryInput interface {
	pulumi.Input

	ToOrgVdcComputeCapacityMemoryOutput() OrgVdcComputeCapacityMemoryOutput
	ToOrgVdcComputeCapacityMemoryOutputWithContext(context.Context) OrgVdcComputeCapacityMemoryOutput
}

type OrgVdcComputeCapacityMemoryArgs struct {
	// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
	Allocated pulumi.IntPtrInput `pulumi:"allocated"`
	// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
	Limit    pulumi.IntPtrInput `pulumi:"limit"`
	Reserved pulumi.IntPtrInput `pulumi:"reserved"`
	Used     pulumi.IntPtrInput `pulumi:"used"`
}

func (OrgVdcComputeCapacityMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcComputeCapacityMemory)(nil)).Elem()
}

func (i OrgVdcComputeCapacityMemoryArgs) ToOrgVdcComputeCapacityMemoryOutput() OrgVdcComputeCapacityMemoryOutput {
	return i.ToOrgVdcComputeCapacityMemoryOutputWithContext(context.Background())
}

func (i OrgVdcComputeCapacityMemoryArgs) ToOrgVdcComputeCapacityMemoryOutputWithContext(ctx context.Context) OrgVdcComputeCapacityMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcComputeCapacityMemoryOutput)
}

func (i OrgVdcComputeCapacityMemoryArgs) ToOrgVdcComputeCapacityMemoryPtrOutput() OrgVdcComputeCapacityMemoryPtrOutput {
	return i.ToOrgVdcComputeCapacityMemoryPtrOutputWithContext(context.Background())
}

func (i OrgVdcComputeCapacityMemoryArgs) ToOrgVdcComputeCapacityMemoryPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcComputeCapacityMemoryOutput).ToOrgVdcComputeCapacityMemoryPtrOutputWithContext(ctx)
}

// OrgVdcComputeCapacityMemoryPtrInput is an input type that accepts OrgVdcComputeCapacityMemoryArgs, OrgVdcComputeCapacityMemoryPtr and OrgVdcComputeCapacityMemoryPtrOutput values.
// You can construct a concrete instance of `OrgVdcComputeCapacityMemoryPtrInput` via:
//
//	        OrgVdcComputeCapacityMemoryArgs{...}
//
//	or:
//
//	        nil
type OrgVdcComputeCapacityMemoryPtrInput interface {
	pulumi.Input

	ToOrgVdcComputeCapacityMemoryPtrOutput() OrgVdcComputeCapacityMemoryPtrOutput
	ToOrgVdcComputeCapacityMemoryPtrOutputWithContext(context.Context) OrgVdcComputeCapacityMemoryPtrOutput
}

type orgVdcComputeCapacityMemoryPtrType OrgVdcComputeCapacityMemoryArgs

func OrgVdcComputeCapacityMemoryPtr(v *OrgVdcComputeCapacityMemoryArgs) OrgVdcComputeCapacityMemoryPtrInput {
	return (*orgVdcComputeCapacityMemoryPtrType)(v)
}

func (*orgVdcComputeCapacityMemoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcComputeCapacityMemory)(nil)).Elem()
}

func (i *orgVdcComputeCapacityMemoryPtrType) ToOrgVdcComputeCapacityMemoryPtrOutput() OrgVdcComputeCapacityMemoryPtrOutput {
	return i.ToOrgVdcComputeCapacityMemoryPtrOutputWithContext(context.Background())
}

func (i *orgVdcComputeCapacityMemoryPtrType) ToOrgVdcComputeCapacityMemoryPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcComputeCapacityMemoryPtrOutput)
}

type OrgVdcComputeCapacityMemoryOutput struct{ *pulumi.OutputState }

func (OrgVdcComputeCapacityMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcComputeCapacityMemory)(nil)).Elem()
}

func (o OrgVdcComputeCapacityMemoryOutput) ToOrgVdcComputeCapacityMemoryOutput() OrgVdcComputeCapacityMemoryOutput {
	return o
}

func (o OrgVdcComputeCapacityMemoryOutput) ToOrgVdcComputeCapacityMemoryOutputWithContext(ctx context.Context) OrgVdcComputeCapacityMemoryOutput {
	return o
}

func (o OrgVdcComputeCapacityMemoryOutput) ToOrgVdcComputeCapacityMemoryPtrOutput() OrgVdcComputeCapacityMemoryPtrOutput {
	return o.ToOrgVdcComputeCapacityMemoryPtrOutputWithContext(context.Background())
}

func (o OrgVdcComputeCapacityMemoryOutput) ToOrgVdcComputeCapacityMemoryPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityMemoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgVdcComputeCapacityMemory) *OrgVdcComputeCapacityMemory {
		return &v
	}).(OrgVdcComputeCapacityMemoryPtrOutput)
}

// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
func (o OrgVdcComputeCapacityMemoryOutput) Allocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcComputeCapacityMemory) *int { return v.Allocated }).(pulumi.IntPtrOutput)
}

// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
func (o OrgVdcComputeCapacityMemoryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcComputeCapacityMemory) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o OrgVdcComputeCapacityMemoryOutput) Reserved() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcComputeCapacityMemory) *int { return v.Reserved }).(pulumi.IntPtrOutput)
}

func (o OrgVdcComputeCapacityMemoryOutput) Used() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcComputeCapacityMemory) *int { return v.Used }).(pulumi.IntPtrOutput)
}

type OrgVdcComputeCapacityMemoryPtrOutput struct{ *pulumi.OutputState }

func (OrgVdcComputeCapacityMemoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcComputeCapacityMemory)(nil)).Elem()
}

func (o OrgVdcComputeCapacityMemoryPtrOutput) ToOrgVdcComputeCapacityMemoryPtrOutput() OrgVdcComputeCapacityMemoryPtrOutput {
	return o
}

func (o OrgVdcComputeCapacityMemoryPtrOutput) ToOrgVdcComputeCapacityMemoryPtrOutputWithContext(ctx context.Context) OrgVdcComputeCapacityMemoryPtrOutput {
	return o
}

func (o OrgVdcComputeCapacityMemoryPtrOutput) Elem() OrgVdcComputeCapacityMemoryOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacityMemory) OrgVdcComputeCapacityMemory {
		if v != nil {
			return *v
		}
		var ret OrgVdcComputeCapacityMemory
		return ret
	}).(OrgVdcComputeCapacityMemoryOutput)
}

// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
func (o OrgVdcComputeCapacityMemoryPtrOutput) Allocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacityMemory) *int {
		if v == nil {
			return nil
		}
		return v.Allocated
	}).(pulumi.IntPtrOutput)
}

// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
func (o OrgVdcComputeCapacityMemoryPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacityMemory) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

func (o OrgVdcComputeCapacityMemoryPtrOutput) Reserved() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacityMemory) *int {
		if v == nil {
			return nil
		}
		return v.Reserved
	}).(pulumi.IntPtrOutput)
}

func (o OrgVdcComputeCapacityMemoryPtrOutput) Used() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcComputeCapacityMemory) *int {
		if v == nil {
			return nil
		}
		return v.Used
	}).(pulumi.IntPtrOutput)
}

type OrgVdcMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// OrgVdcMetadataEntryInput is an input type that accepts OrgVdcMetadataEntryArgs and OrgVdcMetadataEntryOutput values.
// You can construct a concrete instance of `OrgVdcMetadataEntryInput` via:
//
//	OrgVdcMetadataEntryArgs{...}
type OrgVdcMetadataEntryInput interface {
	pulumi.Input

	ToOrgVdcMetadataEntryOutput() OrgVdcMetadataEntryOutput
	ToOrgVdcMetadataEntryOutputWithContext(context.Context) OrgVdcMetadataEntryOutput
}

type OrgVdcMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (OrgVdcMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcMetadataEntry)(nil)).Elem()
}

func (i OrgVdcMetadataEntryArgs) ToOrgVdcMetadataEntryOutput() OrgVdcMetadataEntryOutput {
	return i.ToOrgVdcMetadataEntryOutputWithContext(context.Background())
}

func (i OrgVdcMetadataEntryArgs) ToOrgVdcMetadataEntryOutputWithContext(ctx context.Context) OrgVdcMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcMetadataEntryOutput)
}

// OrgVdcMetadataEntryArrayInput is an input type that accepts OrgVdcMetadataEntryArray and OrgVdcMetadataEntryArrayOutput values.
// You can construct a concrete instance of `OrgVdcMetadataEntryArrayInput` via:
//
//	OrgVdcMetadataEntryArray{ OrgVdcMetadataEntryArgs{...} }
type OrgVdcMetadataEntryArrayInput interface {
	pulumi.Input

	ToOrgVdcMetadataEntryArrayOutput() OrgVdcMetadataEntryArrayOutput
	ToOrgVdcMetadataEntryArrayOutputWithContext(context.Context) OrgVdcMetadataEntryArrayOutput
}

type OrgVdcMetadataEntryArray []OrgVdcMetadataEntryInput

func (OrgVdcMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgVdcMetadataEntry)(nil)).Elem()
}

func (i OrgVdcMetadataEntryArray) ToOrgVdcMetadataEntryArrayOutput() OrgVdcMetadataEntryArrayOutput {
	return i.ToOrgVdcMetadataEntryArrayOutputWithContext(context.Background())
}

func (i OrgVdcMetadataEntryArray) ToOrgVdcMetadataEntryArrayOutputWithContext(ctx context.Context) OrgVdcMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcMetadataEntryArrayOutput)
}

type OrgVdcMetadataEntryOutput struct{ *pulumi.OutputState }

func (OrgVdcMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcMetadataEntry)(nil)).Elem()
}

func (o OrgVdcMetadataEntryOutput) ToOrgVdcMetadataEntryOutput() OrgVdcMetadataEntryOutput {
	return o
}

func (o OrgVdcMetadataEntryOutput) ToOrgVdcMetadataEntryOutputWithContext(ctx context.Context) OrgVdcMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o OrgVdcMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgVdcMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o OrgVdcMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o OrgVdcMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o OrgVdcMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o OrgVdcMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OrgVdcMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (OrgVdcMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgVdcMetadataEntry)(nil)).Elem()
}

func (o OrgVdcMetadataEntryArrayOutput) ToOrgVdcMetadataEntryArrayOutput() OrgVdcMetadataEntryArrayOutput {
	return o
}

func (o OrgVdcMetadataEntryArrayOutput) ToOrgVdcMetadataEntryArrayOutputWithContext(ctx context.Context) OrgVdcMetadataEntryArrayOutput {
	return o
}

func (o OrgVdcMetadataEntryArrayOutput) Index(i pulumi.IntInput) OrgVdcMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgVdcMetadataEntry {
		return vs[0].([]OrgVdcMetadataEntry)[vs[1].(int)]
	}).(OrgVdcMetadataEntryOutput)
}

type OrgVdcStorageProfile struct {
	// True if this is default storage profile for this VDC. The default storage profile is used when an object that can specify a storage profile is created with no storage profile specified.
	Default bool `pulumi:"default"`
	// True if this VDC is enabled for use by the organization VDCs. Default is true.
	Enabled *bool `pulumi:"enabled"`
	// Maximum number of MB allocated for this storage profile. A value of 0 specifies unlimited MB.
	Limit int `pulumi:"limit"`
	// VDC name
	Name string `pulumi:"name"`
	// Storage used in MB
	StorageUsedInMb *int `pulumi:"storageUsedInMb"`
}

// OrgVdcStorageProfileInput is an input type that accepts OrgVdcStorageProfileArgs and OrgVdcStorageProfileOutput values.
// You can construct a concrete instance of `OrgVdcStorageProfileInput` via:
//
//	OrgVdcStorageProfileArgs{...}
type OrgVdcStorageProfileInput interface {
	pulumi.Input

	ToOrgVdcStorageProfileOutput() OrgVdcStorageProfileOutput
	ToOrgVdcStorageProfileOutputWithContext(context.Context) OrgVdcStorageProfileOutput
}

type OrgVdcStorageProfileArgs struct {
	// True if this is default storage profile for this VDC. The default storage profile is used when an object that can specify a storage profile is created with no storage profile specified.
	Default pulumi.BoolInput `pulumi:"default"`
	// True if this VDC is enabled for use by the organization VDCs. Default is true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Maximum number of MB allocated for this storage profile. A value of 0 specifies unlimited MB.
	Limit pulumi.IntInput `pulumi:"limit"`
	// VDC name
	Name pulumi.StringInput `pulumi:"name"`
	// Storage used in MB
	StorageUsedInMb pulumi.IntPtrInput `pulumi:"storageUsedInMb"`
}

func (OrgVdcStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcStorageProfile)(nil)).Elem()
}

func (i OrgVdcStorageProfileArgs) ToOrgVdcStorageProfileOutput() OrgVdcStorageProfileOutput {
	return i.ToOrgVdcStorageProfileOutputWithContext(context.Background())
}

func (i OrgVdcStorageProfileArgs) ToOrgVdcStorageProfileOutputWithContext(ctx context.Context) OrgVdcStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcStorageProfileOutput)
}

// OrgVdcStorageProfileArrayInput is an input type that accepts OrgVdcStorageProfileArray and OrgVdcStorageProfileArrayOutput values.
// You can construct a concrete instance of `OrgVdcStorageProfileArrayInput` via:
//
//	OrgVdcStorageProfileArray{ OrgVdcStorageProfileArgs{...} }
type OrgVdcStorageProfileArrayInput interface {
	pulumi.Input

	ToOrgVdcStorageProfileArrayOutput() OrgVdcStorageProfileArrayOutput
	ToOrgVdcStorageProfileArrayOutputWithContext(context.Context) OrgVdcStorageProfileArrayOutput
}

type OrgVdcStorageProfileArray []OrgVdcStorageProfileInput

func (OrgVdcStorageProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgVdcStorageProfile)(nil)).Elem()
}

func (i OrgVdcStorageProfileArray) ToOrgVdcStorageProfileArrayOutput() OrgVdcStorageProfileArrayOutput {
	return i.ToOrgVdcStorageProfileArrayOutputWithContext(context.Background())
}

func (i OrgVdcStorageProfileArray) ToOrgVdcStorageProfileArrayOutputWithContext(ctx context.Context) OrgVdcStorageProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcStorageProfileArrayOutput)
}

type OrgVdcStorageProfileOutput struct{ *pulumi.OutputState }

func (OrgVdcStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcStorageProfile)(nil)).Elem()
}

func (o OrgVdcStorageProfileOutput) ToOrgVdcStorageProfileOutput() OrgVdcStorageProfileOutput {
	return o
}

func (o OrgVdcStorageProfileOutput) ToOrgVdcStorageProfileOutputWithContext(ctx context.Context) OrgVdcStorageProfileOutput {
	return o
}

// True if this is default storage profile for this VDC. The default storage profile is used when an object that can specify a storage profile is created with no storage profile specified.
func (o OrgVdcStorageProfileOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v OrgVdcStorageProfile) bool { return v.Default }).(pulumi.BoolOutput)
}

// True if this VDC is enabled for use by the organization VDCs. Default is true.
func (o OrgVdcStorageProfileOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgVdcStorageProfile) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Maximum number of MB allocated for this storage profile. A value of 0 specifies unlimited MB.
func (o OrgVdcStorageProfileOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v OrgVdcStorageProfile) int { return v.Limit }).(pulumi.IntOutput)
}

// VDC name
func (o OrgVdcStorageProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrgVdcStorageProfile) string { return v.Name }).(pulumi.StringOutput)
}

// Storage used in MB
func (o OrgVdcStorageProfileOutput) StorageUsedInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcStorageProfile) *int { return v.StorageUsedInMb }).(pulumi.IntPtrOutput)
}

type OrgVdcStorageProfileArrayOutput struct{ *pulumi.OutputState }

func (OrgVdcStorageProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgVdcStorageProfile)(nil)).Elem()
}

func (o OrgVdcStorageProfileArrayOutput) ToOrgVdcStorageProfileArrayOutput() OrgVdcStorageProfileArrayOutput {
	return o
}

func (o OrgVdcStorageProfileArrayOutput) ToOrgVdcStorageProfileArrayOutputWithContext(ctx context.Context) OrgVdcStorageProfileArrayOutput {
	return o
}

func (o OrgVdcStorageProfileArrayOutput) Index(i pulumi.IntInput) OrgVdcStorageProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgVdcStorageProfile {
		return vs[0].([]OrgVdcStorageProfile)[vs[1].(int)]
	}).(OrgVdcStorageProfileOutput)
}

type OrgVdcTemplateComputeConfiguration struct {
	// The maximum amount of CPU, in MHz, available to the VMs running within the VDC that is instantiated from this template. Minimum is 256MHz
	CpuAllocated *int `pulumi:"cpuAllocated"`
	// The percentage of the CPU guaranteed to be available to VMs running within the VDC instantiated from this template
	CpuGuaranteed *int `pulumi:"cpuGuaranteed"`
	// The limit amount of CPU, in MHz, of the VDC that is instantiated from this template. Minimum is 256MHz. 0 means unlimited
	CpuLimit *int `pulumi:"cpuLimit"`
	// Specifies the clock frequency, in MHz, for any virtual CPU that is allocated to a VM. Minimum is 256MHz
	CpuSpeed *int `pulumi:"cpuSpeed"`
	// True if compute capacity can grow or shrink based on demand
	Elasticity *bool `pulumi:"elasticity"`
	// True if the instantiated VDC includes memory overhead into its accounting for admission control
	IncludeVmMemoryOverhead *bool `pulumi:"includeVmMemoryOverhead"`
	// The maximum amount of Memory, in MB, available to the VMs running within the VDC that is instantiated from this template
	MemoryAllocated *int `pulumi:"memoryAllocated"`
	// The percentage of the Memory guaranteed to be available to VMs running within the VDC instantiated from this template
	MemoryGuaranteed *int `pulumi:"memoryGuaranteed"`
	// The limit amount of Memory, in MB, of the VDC that is instantiated from this template. Minimum is 1024MB. 0 means unlimited
	MemoryLimit *int `pulumi:"memoryLimit"`
}

// OrgVdcTemplateComputeConfigurationInput is an input type that accepts OrgVdcTemplateComputeConfigurationArgs and OrgVdcTemplateComputeConfigurationOutput values.
// You can construct a concrete instance of `OrgVdcTemplateComputeConfigurationInput` via:
//
//	OrgVdcTemplateComputeConfigurationArgs{...}
type OrgVdcTemplateComputeConfigurationInput interface {
	pulumi.Input

	ToOrgVdcTemplateComputeConfigurationOutput() OrgVdcTemplateComputeConfigurationOutput
	ToOrgVdcTemplateComputeConfigurationOutputWithContext(context.Context) OrgVdcTemplateComputeConfigurationOutput
}

type OrgVdcTemplateComputeConfigurationArgs struct {
	// The maximum amount of CPU, in MHz, available to the VMs running within the VDC that is instantiated from this template. Minimum is 256MHz
	CpuAllocated pulumi.IntPtrInput `pulumi:"cpuAllocated"`
	// The percentage of the CPU guaranteed to be available to VMs running within the VDC instantiated from this template
	CpuGuaranteed pulumi.IntPtrInput `pulumi:"cpuGuaranteed"`
	// The limit amount of CPU, in MHz, of the VDC that is instantiated from this template. Minimum is 256MHz. 0 means unlimited
	CpuLimit pulumi.IntPtrInput `pulumi:"cpuLimit"`
	// Specifies the clock frequency, in MHz, for any virtual CPU that is allocated to a VM. Minimum is 256MHz
	CpuSpeed pulumi.IntPtrInput `pulumi:"cpuSpeed"`
	// True if compute capacity can grow or shrink based on demand
	Elasticity pulumi.BoolPtrInput `pulumi:"elasticity"`
	// True if the instantiated VDC includes memory overhead into its accounting for admission control
	IncludeVmMemoryOverhead pulumi.BoolPtrInput `pulumi:"includeVmMemoryOverhead"`
	// The maximum amount of Memory, in MB, available to the VMs running within the VDC that is instantiated from this template
	MemoryAllocated pulumi.IntPtrInput `pulumi:"memoryAllocated"`
	// The percentage of the Memory guaranteed to be available to VMs running within the VDC instantiated from this template
	MemoryGuaranteed pulumi.IntPtrInput `pulumi:"memoryGuaranteed"`
	// The limit amount of Memory, in MB, of the VDC that is instantiated from this template. Minimum is 1024MB. 0 means unlimited
	MemoryLimit pulumi.IntPtrInput `pulumi:"memoryLimit"`
}

func (OrgVdcTemplateComputeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcTemplateComputeConfiguration)(nil)).Elem()
}

func (i OrgVdcTemplateComputeConfigurationArgs) ToOrgVdcTemplateComputeConfigurationOutput() OrgVdcTemplateComputeConfigurationOutput {
	return i.ToOrgVdcTemplateComputeConfigurationOutputWithContext(context.Background())
}

func (i OrgVdcTemplateComputeConfigurationArgs) ToOrgVdcTemplateComputeConfigurationOutputWithContext(ctx context.Context) OrgVdcTemplateComputeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateComputeConfigurationOutput)
}

func (i OrgVdcTemplateComputeConfigurationArgs) ToOrgVdcTemplateComputeConfigurationPtrOutput() OrgVdcTemplateComputeConfigurationPtrOutput {
	return i.ToOrgVdcTemplateComputeConfigurationPtrOutputWithContext(context.Background())
}

func (i OrgVdcTemplateComputeConfigurationArgs) ToOrgVdcTemplateComputeConfigurationPtrOutputWithContext(ctx context.Context) OrgVdcTemplateComputeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateComputeConfigurationOutput).ToOrgVdcTemplateComputeConfigurationPtrOutputWithContext(ctx)
}

// OrgVdcTemplateComputeConfigurationPtrInput is an input type that accepts OrgVdcTemplateComputeConfigurationArgs, OrgVdcTemplateComputeConfigurationPtr and OrgVdcTemplateComputeConfigurationPtrOutput values.
// You can construct a concrete instance of `OrgVdcTemplateComputeConfigurationPtrInput` via:
//
//	        OrgVdcTemplateComputeConfigurationArgs{...}
//
//	or:
//
//	        nil
type OrgVdcTemplateComputeConfigurationPtrInput interface {
	pulumi.Input

	ToOrgVdcTemplateComputeConfigurationPtrOutput() OrgVdcTemplateComputeConfigurationPtrOutput
	ToOrgVdcTemplateComputeConfigurationPtrOutputWithContext(context.Context) OrgVdcTemplateComputeConfigurationPtrOutput
}

type orgVdcTemplateComputeConfigurationPtrType OrgVdcTemplateComputeConfigurationArgs

func OrgVdcTemplateComputeConfigurationPtr(v *OrgVdcTemplateComputeConfigurationArgs) OrgVdcTemplateComputeConfigurationPtrInput {
	return (*orgVdcTemplateComputeConfigurationPtrType)(v)
}

func (*orgVdcTemplateComputeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcTemplateComputeConfiguration)(nil)).Elem()
}

func (i *orgVdcTemplateComputeConfigurationPtrType) ToOrgVdcTemplateComputeConfigurationPtrOutput() OrgVdcTemplateComputeConfigurationPtrOutput {
	return i.ToOrgVdcTemplateComputeConfigurationPtrOutputWithContext(context.Background())
}

func (i *orgVdcTemplateComputeConfigurationPtrType) ToOrgVdcTemplateComputeConfigurationPtrOutputWithContext(ctx context.Context) OrgVdcTemplateComputeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateComputeConfigurationPtrOutput)
}

type OrgVdcTemplateComputeConfigurationOutput struct{ *pulumi.OutputState }

func (OrgVdcTemplateComputeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcTemplateComputeConfiguration)(nil)).Elem()
}

func (o OrgVdcTemplateComputeConfigurationOutput) ToOrgVdcTemplateComputeConfigurationOutput() OrgVdcTemplateComputeConfigurationOutput {
	return o
}

func (o OrgVdcTemplateComputeConfigurationOutput) ToOrgVdcTemplateComputeConfigurationOutputWithContext(ctx context.Context) OrgVdcTemplateComputeConfigurationOutput {
	return o
}

func (o OrgVdcTemplateComputeConfigurationOutput) ToOrgVdcTemplateComputeConfigurationPtrOutput() OrgVdcTemplateComputeConfigurationPtrOutput {
	return o.ToOrgVdcTemplateComputeConfigurationPtrOutputWithContext(context.Background())
}

func (o OrgVdcTemplateComputeConfigurationOutput) ToOrgVdcTemplateComputeConfigurationPtrOutputWithContext(ctx context.Context) OrgVdcTemplateComputeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgVdcTemplateComputeConfiguration) *OrgVdcTemplateComputeConfiguration {
		return &v
	}).(OrgVdcTemplateComputeConfigurationPtrOutput)
}

// The maximum amount of CPU, in MHz, available to the VMs running within the VDC that is instantiated from this template. Minimum is 256MHz
func (o OrgVdcTemplateComputeConfigurationOutput) CpuAllocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateComputeConfiguration) *int { return v.CpuAllocated }).(pulumi.IntPtrOutput)
}

// The percentage of the CPU guaranteed to be available to VMs running within the VDC instantiated from this template
func (o OrgVdcTemplateComputeConfigurationOutput) CpuGuaranteed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateComputeConfiguration) *int { return v.CpuGuaranteed }).(pulumi.IntPtrOutput)
}

// The limit amount of CPU, in MHz, of the VDC that is instantiated from this template. Minimum is 256MHz. 0 means unlimited
func (o OrgVdcTemplateComputeConfigurationOutput) CpuLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateComputeConfiguration) *int { return v.CpuLimit }).(pulumi.IntPtrOutput)
}

// Specifies the clock frequency, in MHz, for any virtual CPU that is allocated to a VM. Minimum is 256MHz
func (o OrgVdcTemplateComputeConfigurationOutput) CpuSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateComputeConfiguration) *int { return v.CpuSpeed }).(pulumi.IntPtrOutput)
}

// True if compute capacity can grow or shrink based on demand
func (o OrgVdcTemplateComputeConfigurationOutput) Elasticity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateComputeConfiguration) *bool { return v.Elasticity }).(pulumi.BoolPtrOutput)
}

// True if the instantiated VDC includes memory overhead into its accounting for admission control
func (o OrgVdcTemplateComputeConfigurationOutput) IncludeVmMemoryOverhead() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateComputeConfiguration) *bool { return v.IncludeVmMemoryOverhead }).(pulumi.BoolPtrOutput)
}

// The maximum amount of Memory, in MB, available to the VMs running within the VDC that is instantiated from this template
func (o OrgVdcTemplateComputeConfigurationOutput) MemoryAllocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateComputeConfiguration) *int { return v.MemoryAllocated }).(pulumi.IntPtrOutput)
}

// The percentage of the Memory guaranteed to be available to VMs running within the VDC instantiated from this template
func (o OrgVdcTemplateComputeConfigurationOutput) MemoryGuaranteed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateComputeConfiguration) *int { return v.MemoryGuaranteed }).(pulumi.IntPtrOutput)
}

// The limit amount of Memory, in MB, of the VDC that is instantiated from this template. Minimum is 1024MB. 0 means unlimited
func (o OrgVdcTemplateComputeConfigurationOutput) MemoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateComputeConfiguration) *int { return v.MemoryLimit }).(pulumi.IntPtrOutput)
}

type OrgVdcTemplateComputeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OrgVdcTemplateComputeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcTemplateComputeConfiguration)(nil)).Elem()
}

func (o OrgVdcTemplateComputeConfigurationPtrOutput) ToOrgVdcTemplateComputeConfigurationPtrOutput() OrgVdcTemplateComputeConfigurationPtrOutput {
	return o
}

func (o OrgVdcTemplateComputeConfigurationPtrOutput) ToOrgVdcTemplateComputeConfigurationPtrOutputWithContext(ctx context.Context) OrgVdcTemplateComputeConfigurationPtrOutput {
	return o
}

func (o OrgVdcTemplateComputeConfigurationPtrOutput) Elem() OrgVdcTemplateComputeConfigurationOutput {
	return o.ApplyT(func(v *OrgVdcTemplateComputeConfiguration) OrgVdcTemplateComputeConfiguration {
		if v != nil {
			return *v
		}
		var ret OrgVdcTemplateComputeConfiguration
		return ret
	}).(OrgVdcTemplateComputeConfigurationOutput)
}

// The maximum amount of CPU, in MHz, available to the VMs running within the VDC that is instantiated from this template. Minimum is 256MHz
func (o OrgVdcTemplateComputeConfigurationPtrOutput) CpuAllocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateComputeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.CpuAllocated
	}).(pulumi.IntPtrOutput)
}

// The percentage of the CPU guaranteed to be available to VMs running within the VDC instantiated from this template
func (o OrgVdcTemplateComputeConfigurationPtrOutput) CpuGuaranteed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateComputeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.CpuGuaranteed
	}).(pulumi.IntPtrOutput)
}

// The limit amount of CPU, in MHz, of the VDC that is instantiated from this template. Minimum is 256MHz. 0 means unlimited
func (o OrgVdcTemplateComputeConfigurationPtrOutput) CpuLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateComputeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.CpuLimit
	}).(pulumi.IntPtrOutput)
}

// Specifies the clock frequency, in MHz, for any virtual CPU that is allocated to a VM. Minimum is 256MHz
func (o OrgVdcTemplateComputeConfigurationPtrOutput) CpuSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateComputeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.CpuSpeed
	}).(pulumi.IntPtrOutput)
}

// True if compute capacity can grow or shrink based on demand
func (o OrgVdcTemplateComputeConfigurationPtrOutput) Elasticity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateComputeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Elasticity
	}).(pulumi.BoolPtrOutput)
}

// True if the instantiated VDC includes memory overhead into its accounting for admission control
func (o OrgVdcTemplateComputeConfigurationPtrOutput) IncludeVmMemoryOverhead() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateComputeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeVmMemoryOverhead
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of Memory, in MB, available to the VMs running within the VDC that is instantiated from this template
func (o OrgVdcTemplateComputeConfigurationPtrOutput) MemoryAllocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateComputeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MemoryAllocated
	}).(pulumi.IntPtrOutput)
}

// The percentage of the Memory guaranteed to be available to VMs running within the VDC instantiated from this template
func (o OrgVdcTemplateComputeConfigurationPtrOutput) MemoryGuaranteed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateComputeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MemoryGuaranteed
	}).(pulumi.IntPtrOutput)
}

// The limit amount of Memory, in MB, of the VDC that is instantiated from this template. Minimum is 1024MB. 0 means unlimited
func (o OrgVdcTemplateComputeConfigurationPtrOutput) MemoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateComputeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MemoryLimit
	}).(pulumi.IntPtrOutput)
}

type OrgVdcTemplateEdgeGateway struct {
	// Description of the Edge Gateway
	Description *string `pulumi:"description"`
	// Allocated IPs for the Edge Gateway. Defaults to 0
	IpAllocationCount *int `pulumi:"ipAllocationCount"`
	// Name of the Edge Gateway
	Name string `pulumi:"name"`
	// Description of the routed network to create with the Edge Gateway
	RoutedNetworkDescription *string `pulumi:"routedNetworkDescription"`
	// CIDR of the Edge Gateway for the created routed network
	RoutedNetworkGatewayCidr string `pulumi:"routedNetworkGatewayCidr"`
	// Name of the routed network to create with the Edge Gateway
	RoutedNetworkName string `pulumi:"routedNetworkName"`
	// **One block** with a single IP range (this is a constraint due to a bug in VCD 10.5+) that has two properties: `startAddress`, the start address of the IP range;
	// `endAddress`, the end address of the IP range
	StaticIpPool *OrgVdcTemplateEdgeGatewayStaticIpPool `pulumi:"staticIpPool"`
}

// OrgVdcTemplateEdgeGatewayInput is an input type that accepts OrgVdcTemplateEdgeGatewayArgs and OrgVdcTemplateEdgeGatewayOutput values.
// You can construct a concrete instance of `OrgVdcTemplateEdgeGatewayInput` via:
//
//	OrgVdcTemplateEdgeGatewayArgs{...}
type OrgVdcTemplateEdgeGatewayInput interface {
	pulumi.Input

	ToOrgVdcTemplateEdgeGatewayOutput() OrgVdcTemplateEdgeGatewayOutput
	ToOrgVdcTemplateEdgeGatewayOutputWithContext(context.Context) OrgVdcTemplateEdgeGatewayOutput
}

type OrgVdcTemplateEdgeGatewayArgs struct {
	// Description of the Edge Gateway
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Allocated IPs for the Edge Gateway. Defaults to 0
	IpAllocationCount pulumi.IntPtrInput `pulumi:"ipAllocationCount"`
	// Name of the Edge Gateway
	Name pulumi.StringInput `pulumi:"name"`
	// Description of the routed network to create with the Edge Gateway
	RoutedNetworkDescription pulumi.StringPtrInput `pulumi:"routedNetworkDescription"`
	// CIDR of the Edge Gateway for the created routed network
	RoutedNetworkGatewayCidr pulumi.StringInput `pulumi:"routedNetworkGatewayCidr"`
	// Name of the routed network to create with the Edge Gateway
	RoutedNetworkName pulumi.StringInput `pulumi:"routedNetworkName"`
	// **One block** with a single IP range (this is a constraint due to a bug in VCD 10.5+) that has two properties: `startAddress`, the start address of the IP range;
	// `endAddress`, the end address of the IP range
	StaticIpPool OrgVdcTemplateEdgeGatewayStaticIpPoolPtrInput `pulumi:"staticIpPool"`
}

func (OrgVdcTemplateEdgeGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcTemplateEdgeGateway)(nil)).Elem()
}

func (i OrgVdcTemplateEdgeGatewayArgs) ToOrgVdcTemplateEdgeGatewayOutput() OrgVdcTemplateEdgeGatewayOutput {
	return i.ToOrgVdcTemplateEdgeGatewayOutputWithContext(context.Background())
}

func (i OrgVdcTemplateEdgeGatewayArgs) ToOrgVdcTemplateEdgeGatewayOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateEdgeGatewayOutput)
}

func (i OrgVdcTemplateEdgeGatewayArgs) ToOrgVdcTemplateEdgeGatewayPtrOutput() OrgVdcTemplateEdgeGatewayPtrOutput {
	return i.ToOrgVdcTemplateEdgeGatewayPtrOutputWithContext(context.Background())
}

func (i OrgVdcTemplateEdgeGatewayArgs) ToOrgVdcTemplateEdgeGatewayPtrOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateEdgeGatewayOutput).ToOrgVdcTemplateEdgeGatewayPtrOutputWithContext(ctx)
}

// OrgVdcTemplateEdgeGatewayPtrInput is an input type that accepts OrgVdcTemplateEdgeGatewayArgs, OrgVdcTemplateEdgeGatewayPtr and OrgVdcTemplateEdgeGatewayPtrOutput values.
// You can construct a concrete instance of `OrgVdcTemplateEdgeGatewayPtrInput` via:
//
//	        OrgVdcTemplateEdgeGatewayArgs{...}
//
//	or:
//
//	        nil
type OrgVdcTemplateEdgeGatewayPtrInput interface {
	pulumi.Input

	ToOrgVdcTemplateEdgeGatewayPtrOutput() OrgVdcTemplateEdgeGatewayPtrOutput
	ToOrgVdcTemplateEdgeGatewayPtrOutputWithContext(context.Context) OrgVdcTemplateEdgeGatewayPtrOutput
}

type orgVdcTemplateEdgeGatewayPtrType OrgVdcTemplateEdgeGatewayArgs

func OrgVdcTemplateEdgeGatewayPtr(v *OrgVdcTemplateEdgeGatewayArgs) OrgVdcTemplateEdgeGatewayPtrInput {
	return (*orgVdcTemplateEdgeGatewayPtrType)(v)
}

func (*orgVdcTemplateEdgeGatewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcTemplateEdgeGateway)(nil)).Elem()
}

func (i *orgVdcTemplateEdgeGatewayPtrType) ToOrgVdcTemplateEdgeGatewayPtrOutput() OrgVdcTemplateEdgeGatewayPtrOutput {
	return i.ToOrgVdcTemplateEdgeGatewayPtrOutputWithContext(context.Background())
}

func (i *orgVdcTemplateEdgeGatewayPtrType) ToOrgVdcTemplateEdgeGatewayPtrOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateEdgeGatewayPtrOutput)
}

type OrgVdcTemplateEdgeGatewayOutput struct{ *pulumi.OutputState }

func (OrgVdcTemplateEdgeGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcTemplateEdgeGateway)(nil)).Elem()
}

func (o OrgVdcTemplateEdgeGatewayOutput) ToOrgVdcTemplateEdgeGatewayOutput() OrgVdcTemplateEdgeGatewayOutput {
	return o
}

func (o OrgVdcTemplateEdgeGatewayOutput) ToOrgVdcTemplateEdgeGatewayOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayOutput {
	return o
}

func (o OrgVdcTemplateEdgeGatewayOutput) ToOrgVdcTemplateEdgeGatewayPtrOutput() OrgVdcTemplateEdgeGatewayPtrOutput {
	return o.ToOrgVdcTemplateEdgeGatewayPtrOutputWithContext(context.Background())
}

func (o OrgVdcTemplateEdgeGatewayOutput) ToOrgVdcTemplateEdgeGatewayPtrOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgVdcTemplateEdgeGateway) *OrgVdcTemplateEdgeGateway {
		return &v
	}).(OrgVdcTemplateEdgeGatewayPtrOutput)
}

// Description of the Edge Gateway
func (o OrgVdcTemplateEdgeGatewayOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateEdgeGateway) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Allocated IPs for the Edge Gateway. Defaults to 0
func (o OrgVdcTemplateEdgeGatewayOutput) IpAllocationCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateEdgeGateway) *int { return v.IpAllocationCount }).(pulumi.IntPtrOutput)
}

// Name of the Edge Gateway
func (o OrgVdcTemplateEdgeGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrgVdcTemplateEdgeGateway) string { return v.Name }).(pulumi.StringOutput)
}

// Description of the routed network to create with the Edge Gateway
func (o OrgVdcTemplateEdgeGatewayOutput) RoutedNetworkDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateEdgeGateway) *string { return v.RoutedNetworkDescription }).(pulumi.StringPtrOutput)
}

// CIDR of the Edge Gateway for the created routed network
func (o OrgVdcTemplateEdgeGatewayOutput) RoutedNetworkGatewayCidr() pulumi.StringOutput {
	return o.ApplyT(func(v OrgVdcTemplateEdgeGateway) string { return v.RoutedNetworkGatewayCidr }).(pulumi.StringOutput)
}

// Name of the routed network to create with the Edge Gateway
func (o OrgVdcTemplateEdgeGatewayOutput) RoutedNetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v OrgVdcTemplateEdgeGateway) string { return v.RoutedNetworkName }).(pulumi.StringOutput)
}

// **One block** with a single IP range (this is a constraint due to a bug in VCD 10.5+) that has two properties: `startAddress`, the start address of the IP range;
// `endAddress`, the end address of the IP range
func (o OrgVdcTemplateEdgeGatewayOutput) StaticIpPool() OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateEdgeGateway) *OrgVdcTemplateEdgeGatewayStaticIpPool { return v.StaticIpPool }).(OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput)
}

type OrgVdcTemplateEdgeGatewayPtrOutput struct{ *pulumi.OutputState }

func (OrgVdcTemplateEdgeGatewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcTemplateEdgeGateway)(nil)).Elem()
}

func (o OrgVdcTemplateEdgeGatewayPtrOutput) ToOrgVdcTemplateEdgeGatewayPtrOutput() OrgVdcTemplateEdgeGatewayPtrOutput {
	return o
}

func (o OrgVdcTemplateEdgeGatewayPtrOutput) ToOrgVdcTemplateEdgeGatewayPtrOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayPtrOutput {
	return o
}

func (o OrgVdcTemplateEdgeGatewayPtrOutput) Elem() OrgVdcTemplateEdgeGatewayOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGateway) OrgVdcTemplateEdgeGateway {
		if v != nil {
			return *v
		}
		var ret OrgVdcTemplateEdgeGateway
		return ret
	}).(OrgVdcTemplateEdgeGatewayOutput)
}

// Description of the Edge Gateway
func (o OrgVdcTemplateEdgeGatewayPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGateway) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Allocated IPs for the Edge Gateway. Defaults to 0
func (o OrgVdcTemplateEdgeGatewayPtrOutput) IpAllocationCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGateway) *int {
		if v == nil {
			return nil
		}
		return v.IpAllocationCount
	}).(pulumi.IntPtrOutput)
}

// Name of the Edge Gateway
func (o OrgVdcTemplateEdgeGatewayPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGateway) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Description of the routed network to create with the Edge Gateway
func (o OrgVdcTemplateEdgeGatewayPtrOutput) RoutedNetworkDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGateway) *string {
		if v == nil {
			return nil
		}
		return v.RoutedNetworkDescription
	}).(pulumi.StringPtrOutput)
}

// CIDR of the Edge Gateway for the created routed network
func (o OrgVdcTemplateEdgeGatewayPtrOutput) RoutedNetworkGatewayCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGateway) *string {
		if v == nil {
			return nil
		}
		return &v.RoutedNetworkGatewayCidr
	}).(pulumi.StringPtrOutput)
}

// Name of the routed network to create with the Edge Gateway
func (o OrgVdcTemplateEdgeGatewayPtrOutput) RoutedNetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGateway) *string {
		if v == nil {
			return nil
		}
		return &v.RoutedNetworkName
	}).(pulumi.StringPtrOutput)
}

// **One block** with a single IP range (this is a constraint due to a bug in VCD 10.5+) that has two properties: `startAddress`, the start address of the IP range;
// `endAddress`, the end address of the IP range
func (o OrgVdcTemplateEdgeGatewayPtrOutput) StaticIpPool() OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGateway) *OrgVdcTemplateEdgeGatewayStaticIpPool {
		if v == nil {
			return nil
		}
		return v.StaticIpPool
	}).(OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput)
}

type OrgVdcTemplateEdgeGatewayStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// OrgVdcTemplateEdgeGatewayStaticIpPoolInput is an input type that accepts OrgVdcTemplateEdgeGatewayStaticIpPoolArgs and OrgVdcTemplateEdgeGatewayStaticIpPoolOutput values.
// You can construct a concrete instance of `OrgVdcTemplateEdgeGatewayStaticIpPoolInput` via:
//
//	OrgVdcTemplateEdgeGatewayStaticIpPoolArgs{...}
type OrgVdcTemplateEdgeGatewayStaticIpPoolInput interface {
	pulumi.Input

	ToOrgVdcTemplateEdgeGatewayStaticIpPoolOutput() OrgVdcTemplateEdgeGatewayStaticIpPoolOutput
	ToOrgVdcTemplateEdgeGatewayStaticIpPoolOutputWithContext(context.Context) OrgVdcTemplateEdgeGatewayStaticIpPoolOutput
}

type OrgVdcTemplateEdgeGatewayStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (OrgVdcTemplateEdgeGatewayStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcTemplateEdgeGatewayStaticIpPool)(nil)).Elem()
}

func (i OrgVdcTemplateEdgeGatewayStaticIpPoolArgs) ToOrgVdcTemplateEdgeGatewayStaticIpPoolOutput() OrgVdcTemplateEdgeGatewayStaticIpPoolOutput {
	return i.ToOrgVdcTemplateEdgeGatewayStaticIpPoolOutputWithContext(context.Background())
}

func (i OrgVdcTemplateEdgeGatewayStaticIpPoolArgs) ToOrgVdcTemplateEdgeGatewayStaticIpPoolOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateEdgeGatewayStaticIpPoolOutput)
}

func (i OrgVdcTemplateEdgeGatewayStaticIpPoolArgs) ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput() OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput {
	return i.ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutputWithContext(context.Background())
}

func (i OrgVdcTemplateEdgeGatewayStaticIpPoolArgs) ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateEdgeGatewayStaticIpPoolOutput).ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutputWithContext(ctx)
}

// OrgVdcTemplateEdgeGatewayStaticIpPoolPtrInput is an input type that accepts OrgVdcTemplateEdgeGatewayStaticIpPoolArgs, OrgVdcTemplateEdgeGatewayStaticIpPoolPtr and OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput values.
// You can construct a concrete instance of `OrgVdcTemplateEdgeGatewayStaticIpPoolPtrInput` via:
//
//	        OrgVdcTemplateEdgeGatewayStaticIpPoolArgs{...}
//
//	or:
//
//	        nil
type OrgVdcTemplateEdgeGatewayStaticIpPoolPtrInput interface {
	pulumi.Input

	ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput() OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput
	ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutputWithContext(context.Context) OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput
}

type orgVdcTemplateEdgeGatewayStaticIpPoolPtrType OrgVdcTemplateEdgeGatewayStaticIpPoolArgs

func OrgVdcTemplateEdgeGatewayStaticIpPoolPtr(v *OrgVdcTemplateEdgeGatewayStaticIpPoolArgs) OrgVdcTemplateEdgeGatewayStaticIpPoolPtrInput {
	return (*orgVdcTemplateEdgeGatewayStaticIpPoolPtrType)(v)
}

func (*orgVdcTemplateEdgeGatewayStaticIpPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcTemplateEdgeGatewayStaticIpPool)(nil)).Elem()
}

func (i *orgVdcTemplateEdgeGatewayStaticIpPoolPtrType) ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput() OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput {
	return i.ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutputWithContext(context.Background())
}

func (i *orgVdcTemplateEdgeGatewayStaticIpPoolPtrType) ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput)
}

type OrgVdcTemplateEdgeGatewayStaticIpPoolOutput struct{ *pulumi.OutputState }

func (OrgVdcTemplateEdgeGatewayStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcTemplateEdgeGatewayStaticIpPool)(nil)).Elem()
}

func (o OrgVdcTemplateEdgeGatewayStaticIpPoolOutput) ToOrgVdcTemplateEdgeGatewayStaticIpPoolOutput() OrgVdcTemplateEdgeGatewayStaticIpPoolOutput {
	return o
}

func (o OrgVdcTemplateEdgeGatewayStaticIpPoolOutput) ToOrgVdcTemplateEdgeGatewayStaticIpPoolOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayStaticIpPoolOutput {
	return o
}

func (o OrgVdcTemplateEdgeGatewayStaticIpPoolOutput) ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput() OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput {
	return o.ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutputWithContext(context.Background())
}

func (o OrgVdcTemplateEdgeGatewayStaticIpPoolOutput) ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrgVdcTemplateEdgeGatewayStaticIpPool) *OrgVdcTemplateEdgeGatewayStaticIpPool {
		return &v
	}).(OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput)
}

// End address of the IP range
func (o OrgVdcTemplateEdgeGatewayStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v OrgVdcTemplateEdgeGatewayStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o OrgVdcTemplateEdgeGatewayStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v OrgVdcTemplateEdgeGatewayStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput struct{ *pulumi.OutputState }

func (OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcTemplateEdgeGatewayStaticIpPool)(nil)).Elem()
}

func (o OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput) ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput() OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput {
	return o
}

func (o OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput) ToOrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutputWithContext(ctx context.Context) OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput {
	return o
}

func (o OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput) Elem() OrgVdcTemplateEdgeGatewayStaticIpPoolOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGatewayStaticIpPool) OrgVdcTemplateEdgeGatewayStaticIpPool {
		if v != nil {
			return *v
		}
		var ret OrgVdcTemplateEdgeGatewayStaticIpPool
		return ret
	}).(OrgVdcTemplateEdgeGatewayStaticIpPoolOutput)
}

// End address of the IP range
func (o OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGatewayStaticIpPool) *string {
		if v == nil {
			return nil
		}
		return &v.EndAddress
	}).(pulumi.StringPtrOutput)
}

// Start address of the IP range
func (o OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcTemplateEdgeGatewayStaticIpPool) *string {
		if v == nil {
			return nil
		}
		return &v.StartAddress
	}).(pulumi.StringPtrOutput)
}

type OrgVdcTemplateProviderVdc struct {
	// ID of the Provider Gateway to use, can be obtained with
	// [`ExternalNetworkV2` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/external_network_v2)
	ExternalNetworkId string `pulumi:"externalNetworkId"`
	// ID of the Edge Cluster that the VDCs instantiated from this template will use with the Edge Gateway.
	// Can be obtained with [`getNsxtEdgeCluster` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edge_cluster).
	// If set, a `edgeGateway` block **must** be present in the VDC Template configuration (see below).
	GatewayEdgeClusterId *string `pulumi:"gatewayEdgeClusterId"`
	// ID of the Provider VDC, can be obtained with
	// [`ProviderVdc` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc)
	Id string `pulumi:"id"`
	// ID of the Edge Cluster that the VDCs instantiated from this template will use for services.
	// Can be obtained with [`getNsxtEdgeCluster` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edge_cluster)
	ServicesEdgeClusterId *string `pulumi:"servicesEdgeClusterId"`
}

// OrgVdcTemplateProviderVdcInput is an input type that accepts OrgVdcTemplateProviderVdcArgs and OrgVdcTemplateProviderVdcOutput values.
// You can construct a concrete instance of `OrgVdcTemplateProviderVdcInput` via:
//
//	OrgVdcTemplateProviderVdcArgs{...}
type OrgVdcTemplateProviderVdcInput interface {
	pulumi.Input

	ToOrgVdcTemplateProviderVdcOutput() OrgVdcTemplateProviderVdcOutput
	ToOrgVdcTemplateProviderVdcOutputWithContext(context.Context) OrgVdcTemplateProviderVdcOutput
}

type OrgVdcTemplateProviderVdcArgs struct {
	// ID of the Provider Gateway to use, can be obtained with
	// [`ExternalNetworkV2` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/external_network_v2)
	ExternalNetworkId pulumi.StringInput `pulumi:"externalNetworkId"`
	// ID of the Edge Cluster that the VDCs instantiated from this template will use with the Edge Gateway.
	// Can be obtained with [`getNsxtEdgeCluster` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edge_cluster).
	// If set, a `edgeGateway` block **must** be present in the VDC Template configuration (see below).
	GatewayEdgeClusterId pulumi.StringPtrInput `pulumi:"gatewayEdgeClusterId"`
	// ID of the Provider VDC, can be obtained with
	// [`ProviderVdc` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc)
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the Edge Cluster that the VDCs instantiated from this template will use for services.
	// Can be obtained with [`getNsxtEdgeCluster` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edge_cluster)
	ServicesEdgeClusterId pulumi.StringPtrInput `pulumi:"servicesEdgeClusterId"`
}

func (OrgVdcTemplateProviderVdcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcTemplateProviderVdc)(nil)).Elem()
}

func (i OrgVdcTemplateProviderVdcArgs) ToOrgVdcTemplateProviderVdcOutput() OrgVdcTemplateProviderVdcOutput {
	return i.ToOrgVdcTemplateProviderVdcOutputWithContext(context.Background())
}

func (i OrgVdcTemplateProviderVdcArgs) ToOrgVdcTemplateProviderVdcOutputWithContext(ctx context.Context) OrgVdcTemplateProviderVdcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateProviderVdcOutput)
}

// OrgVdcTemplateProviderVdcArrayInput is an input type that accepts OrgVdcTemplateProviderVdcArray and OrgVdcTemplateProviderVdcArrayOutput values.
// You can construct a concrete instance of `OrgVdcTemplateProviderVdcArrayInput` via:
//
//	OrgVdcTemplateProviderVdcArray{ OrgVdcTemplateProviderVdcArgs{...} }
type OrgVdcTemplateProviderVdcArrayInput interface {
	pulumi.Input

	ToOrgVdcTemplateProviderVdcArrayOutput() OrgVdcTemplateProviderVdcArrayOutput
	ToOrgVdcTemplateProviderVdcArrayOutputWithContext(context.Context) OrgVdcTemplateProviderVdcArrayOutput
}

type OrgVdcTemplateProviderVdcArray []OrgVdcTemplateProviderVdcInput

func (OrgVdcTemplateProviderVdcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgVdcTemplateProviderVdc)(nil)).Elem()
}

func (i OrgVdcTemplateProviderVdcArray) ToOrgVdcTemplateProviderVdcArrayOutput() OrgVdcTemplateProviderVdcArrayOutput {
	return i.ToOrgVdcTemplateProviderVdcArrayOutputWithContext(context.Background())
}

func (i OrgVdcTemplateProviderVdcArray) ToOrgVdcTemplateProviderVdcArrayOutputWithContext(ctx context.Context) OrgVdcTemplateProviderVdcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateProviderVdcArrayOutput)
}

type OrgVdcTemplateProviderVdcOutput struct{ *pulumi.OutputState }

func (OrgVdcTemplateProviderVdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcTemplateProviderVdc)(nil)).Elem()
}

func (o OrgVdcTemplateProviderVdcOutput) ToOrgVdcTemplateProviderVdcOutput() OrgVdcTemplateProviderVdcOutput {
	return o
}

func (o OrgVdcTemplateProviderVdcOutput) ToOrgVdcTemplateProviderVdcOutputWithContext(ctx context.Context) OrgVdcTemplateProviderVdcOutput {
	return o
}

// ID of the Provider Gateway to use, can be obtained with
// [`ExternalNetworkV2` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/external_network_v2)
func (o OrgVdcTemplateProviderVdcOutput) ExternalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v OrgVdcTemplateProviderVdc) string { return v.ExternalNetworkId }).(pulumi.StringOutput)
}

// ID of the Edge Cluster that the VDCs instantiated from this template will use with the Edge Gateway.
// Can be obtained with [`getNsxtEdgeCluster` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edge_cluster).
// If set, a `edgeGateway` block **must** be present in the VDC Template configuration (see below).
func (o OrgVdcTemplateProviderVdcOutput) GatewayEdgeClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateProviderVdc) *string { return v.GatewayEdgeClusterId }).(pulumi.StringPtrOutput)
}

// ID of the Provider VDC, can be obtained with
// [`ProviderVdc` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc)
func (o OrgVdcTemplateProviderVdcOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OrgVdcTemplateProviderVdc) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the Edge Cluster that the VDCs instantiated from this template will use for services.
// Can be obtained with [`getNsxtEdgeCluster` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edge_cluster)
func (o OrgVdcTemplateProviderVdcOutput) ServicesEdgeClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgVdcTemplateProviderVdc) *string { return v.ServicesEdgeClusterId }).(pulumi.StringPtrOutput)
}

type OrgVdcTemplateProviderVdcArrayOutput struct{ *pulumi.OutputState }

func (OrgVdcTemplateProviderVdcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgVdcTemplateProviderVdc)(nil)).Elem()
}

func (o OrgVdcTemplateProviderVdcArrayOutput) ToOrgVdcTemplateProviderVdcArrayOutput() OrgVdcTemplateProviderVdcArrayOutput {
	return o
}

func (o OrgVdcTemplateProviderVdcArrayOutput) ToOrgVdcTemplateProviderVdcArrayOutputWithContext(ctx context.Context) OrgVdcTemplateProviderVdcArrayOutput {
	return o
}

func (o OrgVdcTemplateProviderVdcArrayOutput) Index(i pulumi.IntInput) OrgVdcTemplateProviderVdcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgVdcTemplateProviderVdc {
		return vs[0].([]OrgVdcTemplateProviderVdc)[vs[1].(int)]
	}).(OrgVdcTemplateProviderVdcOutput)
}

type OrgVdcTemplateStorageProfile struct {
	// True if this is default storage profile for the VDCs instantiated from this template. Only **one** block should have this set to `true`
	Default bool `pulumi:"default"`
	// Storage limit for the VDCs instantiated from this template, in MB. 0 means unlimited
	Limit int `pulumi:"limit"`
	// Name of Provider VDC storage profile to use for the VDCs instantiated from this template
	Name string `pulumi:"name"`
}

// OrgVdcTemplateStorageProfileInput is an input type that accepts OrgVdcTemplateStorageProfileArgs and OrgVdcTemplateStorageProfileOutput values.
// You can construct a concrete instance of `OrgVdcTemplateStorageProfileInput` via:
//
//	OrgVdcTemplateStorageProfileArgs{...}
type OrgVdcTemplateStorageProfileInput interface {
	pulumi.Input

	ToOrgVdcTemplateStorageProfileOutput() OrgVdcTemplateStorageProfileOutput
	ToOrgVdcTemplateStorageProfileOutputWithContext(context.Context) OrgVdcTemplateStorageProfileOutput
}

type OrgVdcTemplateStorageProfileArgs struct {
	// True if this is default storage profile for the VDCs instantiated from this template. Only **one** block should have this set to `true`
	Default pulumi.BoolInput `pulumi:"default"`
	// Storage limit for the VDCs instantiated from this template, in MB. 0 means unlimited
	Limit pulumi.IntInput `pulumi:"limit"`
	// Name of Provider VDC storage profile to use for the VDCs instantiated from this template
	Name pulumi.StringInput `pulumi:"name"`
}

func (OrgVdcTemplateStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcTemplateStorageProfile)(nil)).Elem()
}

func (i OrgVdcTemplateStorageProfileArgs) ToOrgVdcTemplateStorageProfileOutput() OrgVdcTemplateStorageProfileOutput {
	return i.ToOrgVdcTemplateStorageProfileOutputWithContext(context.Background())
}

func (i OrgVdcTemplateStorageProfileArgs) ToOrgVdcTemplateStorageProfileOutputWithContext(ctx context.Context) OrgVdcTemplateStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateStorageProfileOutput)
}

// OrgVdcTemplateStorageProfileArrayInput is an input type that accepts OrgVdcTemplateStorageProfileArray and OrgVdcTemplateStorageProfileArrayOutput values.
// You can construct a concrete instance of `OrgVdcTemplateStorageProfileArrayInput` via:
//
//	OrgVdcTemplateStorageProfileArray{ OrgVdcTemplateStorageProfileArgs{...} }
type OrgVdcTemplateStorageProfileArrayInput interface {
	pulumi.Input

	ToOrgVdcTemplateStorageProfileArrayOutput() OrgVdcTemplateStorageProfileArrayOutput
	ToOrgVdcTemplateStorageProfileArrayOutputWithContext(context.Context) OrgVdcTemplateStorageProfileArrayOutput
}

type OrgVdcTemplateStorageProfileArray []OrgVdcTemplateStorageProfileInput

func (OrgVdcTemplateStorageProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgVdcTemplateStorageProfile)(nil)).Elem()
}

func (i OrgVdcTemplateStorageProfileArray) ToOrgVdcTemplateStorageProfileArrayOutput() OrgVdcTemplateStorageProfileArrayOutput {
	return i.ToOrgVdcTemplateStorageProfileArrayOutputWithContext(context.Background())
}

func (i OrgVdcTemplateStorageProfileArray) ToOrgVdcTemplateStorageProfileArrayOutputWithContext(ctx context.Context) OrgVdcTemplateStorageProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcTemplateStorageProfileArrayOutput)
}

type OrgVdcTemplateStorageProfileOutput struct{ *pulumi.OutputState }

func (OrgVdcTemplateStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgVdcTemplateStorageProfile)(nil)).Elem()
}

func (o OrgVdcTemplateStorageProfileOutput) ToOrgVdcTemplateStorageProfileOutput() OrgVdcTemplateStorageProfileOutput {
	return o
}

func (o OrgVdcTemplateStorageProfileOutput) ToOrgVdcTemplateStorageProfileOutputWithContext(ctx context.Context) OrgVdcTemplateStorageProfileOutput {
	return o
}

// True if this is default storage profile for the VDCs instantiated from this template. Only **one** block should have this set to `true`
func (o OrgVdcTemplateStorageProfileOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v OrgVdcTemplateStorageProfile) bool { return v.Default }).(pulumi.BoolOutput)
}

// Storage limit for the VDCs instantiated from this template, in MB. 0 means unlimited
func (o OrgVdcTemplateStorageProfileOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v OrgVdcTemplateStorageProfile) int { return v.Limit }).(pulumi.IntOutput)
}

// Name of Provider VDC storage profile to use for the VDCs instantiated from this template
func (o OrgVdcTemplateStorageProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrgVdcTemplateStorageProfile) string { return v.Name }).(pulumi.StringOutput)
}

type OrgVdcTemplateStorageProfileArrayOutput struct{ *pulumi.OutputState }

func (OrgVdcTemplateStorageProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgVdcTemplateStorageProfile)(nil)).Elem()
}

func (o OrgVdcTemplateStorageProfileArrayOutput) ToOrgVdcTemplateStorageProfileArrayOutput() OrgVdcTemplateStorageProfileArrayOutput {
	return o
}

func (o OrgVdcTemplateStorageProfileArrayOutput) ToOrgVdcTemplateStorageProfileArrayOutputWithContext(ctx context.Context) OrgVdcTemplateStorageProfileArrayOutput {
	return o
}

func (o OrgVdcTemplateStorageProfileArrayOutput) Index(i pulumi.IntInput) OrgVdcTemplateStorageProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgVdcTemplateStorageProfile {
		return vs[0].([]OrgVdcTemplateStorageProfile)[vs[1].(int)]
	}).(OrgVdcTemplateStorageProfileOutput)
}

type ProviderIgnoreMetadataChange struct {
	ConflictAction *string `pulumi:"conflictAction"`
	// Regular expression of the metadata entry keys to ignore. Either `keyRegex` or `valueRegex` is required
	KeyRegex *string `pulumi:"keyRegex"`
	// Ignores metadata from the specific entity in VCD named like this argument
	ResourceName *string `pulumi:"resourceName"`
	// Ignores metadata from the specific resource type
	ResourceType *string `pulumi:"resourceType"`
	// Regular expression of the metadata entry values to ignore. Either `keyRegex` or `valueRegex` is required
	ValueRegex *string `pulumi:"valueRegex"`
}

// ProviderIgnoreMetadataChangeInput is an input type that accepts ProviderIgnoreMetadataChangeArgs and ProviderIgnoreMetadataChangeOutput values.
// You can construct a concrete instance of `ProviderIgnoreMetadataChangeInput` via:
//
//	ProviderIgnoreMetadataChangeArgs{...}
type ProviderIgnoreMetadataChangeInput interface {
	pulumi.Input

	ToProviderIgnoreMetadataChangeOutput() ProviderIgnoreMetadataChangeOutput
	ToProviderIgnoreMetadataChangeOutputWithContext(context.Context) ProviderIgnoreMetadataChangeOutput
}

type ProviderIgnoreMetadataChangeArgs struct {
	ConflictAction pulumi.StringPtrInput `pulumi:"conflictAction"`
	// Regular expression of the metadata entry keys to ignore. Either `keyRegex` or `valueRegex` is required
	KeyRegex pulumi.StringPtrInput `pulumi:"keyRegex"`
	// Ignores metadata from the specific entity in VCD named like this argument
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// Ignores metadata from the specific resource type
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Regular expression of the metadata entry values to ignore. Either `keyRegex` or `valueRegex` is required
	ValueRegex pulumi.StringPtrInput `pulumi:"valueRegex"`
}

func (ProviderIgnoreMetadataChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderIgnoreMetadataChange)(nil)).Elem()
}

func (i ProviderIgnoreMetadataChangeArgs) ToProviderIgnoreMetadataChangeOutput() ProviderIgnoreMetadataChangeOutput {
	return i.ToProviderIgnoreMetadataChangeOutputWithContext(context.Background())
}

func (i ProviderIgnoreMetadataChangeArgs) ToProviderIgnoreMetadataChangeOutputWithContext(ctx context.Context) ProviderIgnoreMetadataChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderIgnoreMetadataChangeOutput)
}

// ProviderIgnoreMetadataChangeArrayInput is an input type that accepts ProviderIgnoreMetadataChangeArray and ProviderIgnoreMetadataChangeArrayOutput values.
// You can construct a concrete instance of `ProviderIgnoreMetadataChangeArrayInput` via:
//
//	ProviderIgnoreMetadataChangeArray{ ProviderIgnoreMetadataChangeArgs{...} }
type ProviderIgnoreMetadataChangeArrayInput interface {
	pulumi.Input

	ToProviderIgnoreMetadataChangeArrayOutput() ProviderIgnoreMetadataChangeArrayOutput
	ToProviderIgnoreMetadataChangeArrayOutputWithContext(context.Context) ProviderIgnoreMetadataChangeArrayOutput
}

type ProviderIgnoreMetadataChangeArray []ProviderIgnoreMetadataChangeInput

func (ProviderIgnoreMetadataChangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderIgnoreMetadataChange)(nil)).Elem()
}

func (i ProviderIgnoreMetadataChangeArray) ToProviderIgnoreMetadataChangeArrayOutput() ProviderIgnoreMetadataChangeArrayOutput {
	return i.ToProviderIgnoreMetadataChangeArrayOutputWithContext(context.Background())
}

func (i ProviderIgnoreMetadataChangeArray) ToProviderIgnoreMetadataChangeArrayOutputWithContext(ctx context.Context) ProviderIgnoreMetadataChangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderIgnoreMetadataChangeArrayOutput)
}

type ProviderIgnoreMetadataChangeOutput struct{ *pulumi.OutputState }

func (ProviderIgnoreMetadataChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderIgnoreMetadataChange)(nil)).Elem()
}

func (o ProviderIgnoreMetadataChangeOutput) ToProviderIgnoreMetadataChangeOutput() ProviderIgnoreMetadataChangeOutput {
	return o
}

func (o ProviderIgnoreMetadataChangeOutput) ToProviderIgnoreMetadataChangeOutputWithContext(ctx context.Context) ProviderIgnoreMetadataChangeOutput {
	return o
}

func (o ProviderIgnoreMetadataChangeOutput) ConflictAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderIgnoreMetadataChange) *string { return v.ConflictAction }).(pulumi.StringPtrOutput)
}

// Regular expression of the metadata entry keys to ignore. Either `keyRegex` or `valueRegex` is required
func (o ProviderIgnoreMetadataChangeOutput) KeyRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderIgnoreMetadataChange) *string { return v.KeyRegex }).(pulumi.StringPtrOutput)
}

// Ignores metadata from the specific entity in VCD named like this argument
func (o ProviderIgnoreMetadataChangeOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderIgnoreMetadataChange) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// Ignores metadata from the specific resource type
func (o ProviderIgnoreMetadataChangeOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderIgnoreMetadataChange) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Regular expression of the metadata entry values to ignore. Either `keyRegex` or `valueRegex` is required
func (o ProviderIgnoreMetadataChangeOutput) ValueRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderIgnoreMetadataChange) *string { return v.ValueRegex }).(pulumi.StringPtrOutput)
}

type ProviderIgnoreMetadataChangeArrayOutput struct{ *pulumi.OutputState }

func (ProviderIgnoreMetadataChangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderIgnoreMetadataChange)(nil)).Elem()
}

func (o ProviderIgnoreMetadataChangeArrayOutput) ToProviderIgnoreMetadataChangeArrayOutput() ProviderIgnoreMetadataChangeArrayOutput {
	return o
}

func (o ProviderIgnoreMetadataChangeArrayOutput) ToProviderIgnoreMetadataChangeArrayOutputWithContext(ctx context.Context) ProviderIgnoreMetadataChangeArrayOutput {
	return o
}

func (o ProviderIgnoreMetadataChangeArrayOutput) Index(i pulumi.IntInput) ProviderIgnoreMetadataChangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderIgnoreMetadataChange {
		return vs[0].([]ProviderIgnoreMetadataChange)[vs[1].(int)]
	}).(ProviderIgnoreMetadataChangeOutput)
}

type ProviderVdcComputeCapacity struct {
	// Single-element list with an indicator of CPU capacity available in the Provider VDC
	Cpus []ProviderVdcComputeCapacityCpus `pulumi:"cpus"`
	// True if compute capacity can grow or shrink based on demand
	IsElastic *bool `pulumi:"isElastic"`
	// True if compute capacity is highly available
	IsHa *bool `pulumi:"isHa"`
	// Single-element list with an indicator of Memory capacity available in the Provider VDC
	Memories []ProviderVdcComputeCapacityMemory `pulumi:"memories"`
}

// ProviderVdcComputeCapacityInput is an input type that accepts ProviderVdcComputeCapacityArgs and ProviderVdcComputeCapacityOutput values.
// You can construct a concrete instance of `ProviderVdcComputeCapacityInput` via:
//
//	ProviderVdcComputeCapacityArgs{...}
type ProviderVdcComputeCapacityInput interface {
	pulumi.Input

	ToProviderVdcComputeCapacityOutput() ProviderVdcComputeCapacityOutput
	ToProviderVdcComputeCapacityOutputWithContext(context.Context) ProviderVdcComputeCapacityOutput
}

type ProviderVdcComputeCapacityArgs struct {
	// Single-element list with an indicator of CPU capacity available in the Provider VDC
	Cpus ProviderVdcComputeCapacityCpusArrayInput `pulumi:"cpus"`
	// True if compute capacity can grow or shrink based on demand
	IsElastic pulumi.BoolPtrInput `pulumi:"isElastic"`
	// True if compute capacity is highly available
	IsHa pulumi.BoolPtrInput `pulumi:"isHa"`
	// Single-element list with an indicator of Memory capacity available in the Provider VDC
	Memories ProviderVdcComputeCapacityMemoryArrayInput `pulumi:"memories"`
}

func (ProviderVdcComputeCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVdcComputeCapacity)(nil)).Elem()
}

func (i ProviderVdcComputeCapacityArgs) ToProviderVdcComputeCapacityOutput() ProviderVdcComputeCapacityOutput {
	return i.ToProviderVdcComputeCapacityOutputWithContext(context.Background())
}

func (i ProviderVdcComputeCapacityArgs) ToProviderVdcComputeCapacityOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVdcComputeCapacityOutput)
}

// ProviderVdcComputeCapacityArrayInput is an input type that accepts ProviderVdcComputeCapacityArray and ProviderVdcComputeCapacityArrayOutput values.
// You can construct a concrete instance of `ProviderVdcComputeCapacityArrayInput` via:
//
//	ProviderVdcComputeCapacityArray{ ProviderVdcComputeCapacityArgs{...} }
type ProviderVdcComputeCapacityArrayInput interface {
	pulumi.Input

	ToProviderVdcComputeCapacityArrayOutput() ProviderVdcComputeCapacityArrayOutput
	ToProviderVdcComputeCapacityArrayOutputWithContext(context.Context) ProviderVdcComputeCapacityArrayOutput
}

type ProviderVdcComputeCapacityArray []ProviderVdcComputeCapacityInput

func (ProviderVdcComputeCapacityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderVdcComputeCapacity)(nil)).Elem()
}

func (i ProviderVdcComputeCapacityArray) ToProviderVdcComputeCapacityArrayOutput() ProviderVdcComputeCapacityArrayOutput {
	return i.ToProviderVdcComputeCapacityArrayOutputWithContext(context.Background())
}

func (i ProviderVdcComputeCapacityArray) ToProviderVdcComputeCapacityArrayOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVdcComputeCapacityArrayOutput)
}

type ProviderVdcComputeCapacityOutput struct{ *pulumi.OutputState }

func (ProviderVdcComputeCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVdcComputeCapacity)(nil)).Elem()
}

func (o ProviderVdcComputeCapacityOutput) ToProviderVdcComputeCapacityOutput() ProviderVdcComputeCapacityOutput {
	return o
}

func (o ProviderVdcComputeCapacityOutput) ToProviderVdcComputeCapacityOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityOutput {
	return o
}

// Single-element list with an indicator of CPU capacity available in the Provider VDC
func (o ProviderVdcComputeCapacityOutput) Cpus() ProviderVdcComputeCapacityCpusArrayOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacity) []ProviderVdcComputeCapacityCpus { return v.Cpus }).(ProviderVdcComputeCapacityCpusArrayOutput)
}

// True if compute capacity can grow or shrink based on demand
func (o ProviderVdcComputeCapacityOutput) IsElastic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacity) *bool { return v.IsElastic }).(pulumi.BoolPtrOutput)
}

// True if compute capacity is highly available
func (o ProviderVdcComputeCapacityOutput) IsHa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacity) *bool { return v.IsHa }).(pulumi.BoolPtrOutput)
}

// Single-element list with an indicator of Memory capacity available in the Provider VDC
func (o ProviderVdcComputeCapacityOutput) Memories() ProviderVdcComputeCapacityMemoryArrayOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacity) []ProviderVdcComputeCapacityMemory { return v.Memories }).(ProviderVdcComputeCapacityMemoryArrayOutput)
}

type ProviderVdcComputeCapacityArrayOutput struct{ *pulumi.OutputState }

func (ProviderVdcComputeCapacityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderVdcComputeCapacity)(nil)).Elem()
}

func (o ProviderVdcComputeCapacityArrayOutput) ToProviderVdcComputeCapacityArrayOutput() ProviderVdcComputeCapacityArrayOutput {
	return o
}

func (o ProviderVdcComputeCapacityArrayOutput) ToProviderVdcComputeCapacityArrayOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityArrayOutput {
	return o
}

func (o ProviderVdcComputeCapacityArrayOutput) Index(i pulumi.IntInput) ProviderVdcComputeCapacityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderVdcComputeCapacity {
		return vs[0].([]ProviderVdcComputeCapacity)[vs[1].(int)]
	}).(ProviderVdcComputeCapacityOutput)
}

type ProviderVdcComputeCapacityCpus struct {
	// Allocated CPU for this Provider VDC
	Allocation *int `pulumi:"allocation"`
	// CPU overhead for this Provider VDC
	Overhead *int `pulumi:"overhead"`
	// Reserved CPU for this Provider VDC
	Reserved *int `pulumi:"reserved"`
	// Total CPU for this Provider VDC
	Total *int `pulumi:"total"`
	// Units for the CPU of this Provider VDC
	Units *string `pulumi:"units"`
	// Used CPU in this Provider VDC
	Used *int `pulumi:"used"`
}

// ProviderVdcComputeCapacityCpusInput is an input type that accepts ProviderVdcComputeCapacityCpusArgs and ProviderVdcComputeCapacityCpusOutput values.
// You can construct a concrete instance of `ProviderVdcComputeCapacityCpusInput` via:
//
//	ProviderVdcComputeCapacityCpusArgs{...}
type ProviderVdcComputeCapacityCpusInput interface {
	pulumi.Input

	ToProviderVdcComputeCapacityCpusOutput() ProviderVdcComputeCapacityCpusOutput
	ToProviderVdcComputeCapacityCpusOutputWithContext(context.Context) ProviderVdcComputeCapacityCpusOutput
}

type ProviderVdcComputeCapacityCpusArgs struct {
	// Allocated CPU for this Provider VDC
	Allocation pulumi.IntPtrInput `pulumi:"allocation"`
	// CPU overhead for this Provider VDC
	Overhead pulumi.IntPtrInput `pulumi:"overhead"`
	// Reserved CPU for this Provider VDC
	Reserved pulumi.IntPtrInput `pulumi:"reserved"`
	// Total CPU for this Provider VDC
	Total pulumi.IntPtrInput `pulumi:"total"`
	// Units for the CPU of this Provider VDC
	Units pulumi.StringPtrInput `pulumi:"units"`
	// Used CPU in this Provider VDC
	Used pulumi.IntPtrInput `pulumi:"used"`
}

func (ProviderVdcComputeCapacityCpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVdcComputeCapacityCpus)(nil)).Elem()
}

func (i ProviderVdcComputeCapacityCpusArgs) ToProviderVdcComputeCapacityCpusOutput() ProviderVdcComputeCapacityCpusOutput {
	return i.ToProviderVdcComputeCapacityCpusOutputWithContext(context.Background())
}

func (i ProviderVdcComputeCapacityCpusArgs) ToProviderVdcComputeCapacityCpusOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityCpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVdcComputeCapacityCpusOutput)
}

// ProviderVdcComputeCapacityCpusArrayInput is an input type that accepts ProviderVdcComputeCapacityCpusArray and ProviderVdcComputeCapacityCpusArrayOutput values.
// You can construct a concrete instance of `ProviderVdcComputeCapacityCpusArrayInput` via:
//
//	ProviderVdcComputeCapacityCpusArray{ ProviderVdcComputeCapacityCpusArgs{...} }
type ProviderVdcComputeCapacityCpusArrayInput interface {
	pulumi.Input

	ToProviderVdcComputeCapacityCpusArrayOutput() ProviderVdcComputeCapacityCpusArrayOutput
	ToProviderVdcComputeCapacityCpusArrayOutputWithContext(context.Context) ProviderVdcComputeCapacityCpusArrayOutput
}

type ProviderVdcComputeCapacityCpusArray []ProviderVdcComputeCapacityCpusInput

func (ProviderVdcComputeCapacityCpusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderVdcComputeCapacityCpus)(nil)).Elem()
}

func (i ProviderVdcComputeCapacityCpusArray) ToProviderVdcComputeCapacityCpusArrayOutput() ProviderVdcComputeCapacityCpusArrayOutput {
	return i.ToProviderVdcComputeCapacityCpusArrayOutputWithContext(context.Background())
}

func (i ProviderVdcComputeCapacityCpusArray) ToProviderVdcComputeCapacityCpusArrayOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityCpusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVdcComputeCapacityCpusArrayOutput)
}

type ProviderVdcComputeCapacityCpusOutput struct{ *pulumi.OutputState }

func (ProviderVdcComputeCapacityCpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVdcComputeCapacityCpus)(nil)).Elem()
}

func (o ProviderVdcComputeCapacityCpusOutput) ToProviderVdcComputeCapacityCpusOutput() ProviderVdcComputeCapacityCpusOutput {
	return o
}

func (o ProviderVdcComputeCapacityCpusOutput) ToProviderVdcComputeCapacityCpusOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityCpusOutput {
	return o
}

// Allocated CPU for this Provider VDC
func (o ProviderVdcComputeCapacityCpusOutput) Allocation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityCpus) *int { return v.Allocation }).(pulumi.IntPtrOutput)
}

// CPU overhead for this Provider VDC
func (o ProviderVdcComputeCapacityCpusOutput) Overhead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityCpus) *int { return v.Overhead }).(pulumi.IntPtrOutput)
}

// Reserved CPU for this Provider VDC
func (o ProviderVdcComputeCapacityCpusOutput) Reserved() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityCpus) *int { return v.Reserved }).(pulumi.IntPtrOutput)
}

// Total CPU for this Provider VDC
func (o ProviderVdcComputeCapacityCpusOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityCpus) *int { return v.Total }).(pulumi.IntPtrOutput)
}

// Units for the CPU of this Provider VDC
func (o ProviderVdcComputeCapacityCpusOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityCpus) *string { return v.Units }).(pulumi.StringPtrOutput)
}

// Used CPU in this Provider VDC
func (o ProviderVdcComputeCapacityCpusOutput) Used() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityCpus) *int { return v.Used }).(pulumi.IntPtrOutput)
}

type ProviderVdcComputeCapacityCpusArrayOutput struct{ *pulumi.OutputState }

func (ProviderVdcComputeCapacityCpusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderVdcComputeCapacityCpus)(nil)).Elem()
}

func (o ProviderVdcComputeCapacityCpusArrayOutput) ToProviderVdcComputeCapacityCpusArrayOutput() ProviderVdcComputeCapacityCpusArrayOutput {
	return o
}

func (o ProviderVdcComputeCapacityCpusArrayOutput) ToProviderVdcComputeCapacityCpusArrayOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityCpusArrayOutput {
	return o
}

func (o ProviderVdcComputeCapacityCpusArrayOutput) Index(i pulumi.IntInput) ProviderVdcComputeCapacityCpusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderVdcComputeCapacityCpus {
		return vs[0].([]ProviderVdcComputeCapacityCpus)[vs[1].(int)]
	}).(ProviderVdcComputeCapacityCpusOutput)
}

type ProviderVdcComputeCapacityMemory struct {
	// Allocated Memory for this Provider VDC
	Allocation *int `pulumi:"allocation"`
	// Memory overhead for this Provider VDC
	Overhead *int `pulumi:"overhead"`
	// Reserved Memory for this Provider VDC
	Reserved *int `pulumi:"reserved"`
	// Total Memory for this Provider VDC
	Total *int `pulumi:"total"`
	// Units for the Memory of this Provider VDC
	Units *string `pulumi:"units"`
	// Used Memory in this Provider VDC
	Used *int `pulumi:"used"`
}

// ProviderVdcComputeCapacityMemoryInput is an input type that accepts ProviderVdcComputeCapacityMemoryArgs and ProviderVdcComputeCapacityMemoryOutput values.
// You can construct a concrete instance of `ProviderVdcComputeCapacityMemoryInput` via:
//
//	ProviderVdcComputeCapacityMemoryArgs{...}
type ProviderVdcComputeCapacityMemoryInput interface {
	pulumi.Input

	ToProviderVdcComputeCapacityMemoryOutput() ProviderVdcComputeCapacityMemoryOutput
	ToProviderVdcComputeCapacityMemoryOutputWithContext(context.Context) ProviderVdcComputeCapacityMemoryOutput
}

type ProviderVdcComputeCapacityMemoryArgs struct {
	// Allocated Memory for this Provider VDC
	Allocation pulumi.IntPtrInput `pulumi:"allocation"`
	// Memory overhead for this Provider VDC
	Overhead pulumi.IntPtrInput `pulumi:"overhead"`
	// Reserved Memory for this Provider VDC
	Reserved pulumi.IntPtrInput `pulumi:"reserved"`
	// Total Memory for this Provider VDC
	Total pulumi.IntPtrInput `pulumi:"total"`
	// Units for the Memory of this Provider VDC
	Units pulumi.StringPtrInput `pulumi:"units"`
	// Used Memory in this Provider VDC
	Used pulumi.IntPtrInput `pulumi:"used"`
}

func (ProviderVdcComputeCapacityMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVdcComputeCapacityMemory)(nil)).Elem()
}

func (i ProviderVdcComputeCapacityMemoryArgs) ToProviderVdcComputeCapacityMemoryOutput() ProviderVdcComputeCapacityMemoryOutput {
	return i.ToProviderVdcComputeCapacityMemoryOutputWithContext(context.Background())
}

func (i ProviderVdcComputeCapacityMemoryArgs) ToProviderVdcComputeCapacityMemoryOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVdcComputeCapacityMemoryOutput)
}

// ProviderVdcComputeCapacityMemoryArrayInput is an input type that accepts ProviderVdcComputeCapacityMemoryArray and ProviderVdcComputeCapacityMemoryArrayOutput values.
// You can construct a concrete instance of `ProviderVdcComputeCapacityMemoryArrayInput` via:
//
//	ProviderVdcComputeCapacityMemoryArray{ ProviderVdcComputeCapacityMemoryArgs{...} }
type ProviderVdcComputeCapacityMemoryArrayInput interface {
	pulumi.Input

	ToProviderVdcComputeCapacityMemoryArrayOutput() ProviderVdcComputeCapacityMemoryArrayOutput
	ToProviderVdcComputeCapacityMemoryArrayOutputWithContext(context.Context) ProviderVdcComputeCapacityMemoryArrayOutput
}

type ProviderVdcComputeCapacityMemoryArray []ProviderVdcComputeCapacityMemoryInput

func (ProviderVdcComputeCapacityMemoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderVdcComputeCapacityMemory)(nil)).Elem()
}

func (i ProviderVdcComputeCapacityMemoryArray) ToProviderVdcComputeCapacityMemoryArrayOutput() ProviderVdcComputeCapacityMemoryArrayOutput {
	return i.ToProviderVdcComputeCapacityMemoryArrayOutputWithContext(context.Background())
}

func (i ProviderVdcComputeCapacityMemoryArray) ToProviderVdcComputeCapacityMemoryArrayOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityMemoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVdcComputeCapacityMemoryArrayOutput)
}

type ProviderVdcComputeCapacityMemoryOutput struct{ *pulumi.OutputState }

func (ProviderVdcComputeCapacityMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVdcComputeCapacityMemory)(nil)).Elem()
}

func (o ProviderVdcComputeCapacityMemoryOutput) ToProviderVdcComputeCapacityMemoryOutput() ProviderVdcComputeCapacityMemoryOutput {
	return o
}

func (o ProviderVdcComputeCapacityMemoryOutput) ToProviderVdcComputeCapacityMemoryOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityMemoryOutput {
	return o
}

// Allocated Memory for this Provider VDC
func (o ProviderVdcComputeCapacityMemoryOutput) Allocation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityMemory) *int { return v.Allocation }).(pulumi.IntPtrOutput)
}

// Memory overhead for this Provider VDC
func (o ProviderVdcComputeCapacityMemoryOutput) Overhead() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityMemory) *int { return v.Overhead }).(pulumi.IntPtrOutput)
}

// Reserved Memory for this Provider VDC
func (o ProviderVdcComputeCapacityMemoryOutput) Reserved() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityMemory) *int { return v.Reserved }).(pulumi.IntPtrOutput)
}

// Total Memory for this Provider VDC
func (o ProviderVdcComputeCapacityMemoryOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityMemory) *int { return v.Total }).(pulumi.IntPtrOutput)
}

// Units for the Memory of this Provider VDC
func (o ProviderVdcComputeCapacityMemoryOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityMemory) *string { return v.Units }).(pulumi.StringPtrOutput)
}

// Used Memory in this Provider VDC
func (o ProviderVdcComputeCapacityMemoryOutput) Used() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderVdcComputeCapacityMemory) *int { return v.Used }).(pulumi.IntPtrOutput)
}

type ProviderVdcComputeCapacityMemoryArrayOutput struct{ *pulumi.OutputState }

func (ProviderVdcComputeCapacityMemoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderVdcComputeCapacityMemory)(nil)).Elem()
}

func (o ProviderVdcComputeCapacityMemoryArrayOutput) ToProviderVdcComputeCapacityMemoryArrayOutput() ProviderVdcComputeCapacityMemoryArrayOutput {
	return o
}

func (o ProviderVdcComputeCapacityMemoryArrayOutput) ToProviderVdcComputeCapacityMemoryArrayOutputWithContext(ctx context.Context) ProviderVdcComputeCapacityMemoryArrayOutput {
	return o
}

func (o ProviderVdcComputeCapacityMemoryArrayOutput) Index(i pulumi.IntInput) ProviderVdcComputeCapacityMemoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderVdcComputeCapacityMemory {
		return vs[0].([]ProviderVdcComputeCapacityMemory)[vs[1].(int)]
	}).(ProviderVdcComputeCapacityMemoryOutput)
}

type ProviderVdcMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL. Defaults to false
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'. Defaults to 'MetadataStringValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'. Defaults to 'READWRITE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// ProviderVdcMetadataEntryInput is an input type that accepts ProviderVdcMetadataEntryArgs and ProviderVdcMetadataEntryOutput values.
// You can construct a concrete instance of `ProviderVdcMetadataEntryInput` via:
//
//	ProviderVdcMetadataEntryArgs{...}
type ProviderVdcMetadataEntryInput interface {
	pulumi.Input

	ToProviderVdcMetadataEntryOutput() ProviderVdcMetadataEntryOutput
	ToProviderVdcMetadataEntryOutputWithContext(context.Context) ProviderVdcMetadataEntryOutput
}

type ProviderVdcMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL. Defaults to false
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'. Defaults to 'MetadataStringValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'. Defaults to 'READWRITE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProviderVdcMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVdcMetadataEntry)(nil)).Elem()
}

func (i ProviderVdcMetadataEntryArgs) ToProviderVdcMetadataEntryOutput() ProviderVdcMetadataEntryOutput {
	return i.ToProviderVdcMetadataEntryOutputWithContext(context.Background())
}

func (i ProviderVdcMetadataEntryArgs) ToProviderVdcMetadataEntryOutputWithContext(ctx context.Context) ProviderVdcMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVdcMetadataEntryOutput)
}

// ProviderVdcMetadataEntryArrayInput is an input type that accepts ProviderVdcMetadataEntryArray and ProviderVdcMetadataEntryArrayOutput values.
// You can construct a concrete instance of `ProviderVdcMetadataEntryArrayInput` via:
//
//	ProviderVdcMetadataEntryArray{ ProviderVdcMetadataEntryArgs{...} }
type ProviderVdcMetadataEntryArrayInput interface {
	pulumi.Input

	ToProviderVdcMetadataEntryArrayOutput() ProviderVdcMetadataEntryArrayOutput
	ToProviderVdcMetadataEntryArrayOutputWithContext(context.Context) ProviderVdcMetadataEntryArrayOutput
}

type ProviderVdcMetadataEntryArray []ProviderVdcMetadataEntryInput

func (ProviderVdcMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderVdcMetadataEntry)(nil)).Elem()
}

func (i ProviderVdcMetadataEntryArray) ToProviderVdcMetadataEntryArrayOutput() ProviderVdcMetadataEntryArrayOutput {
	return i.ToProviderVdcMetadataEntryArrayOutputWithContext(context.Background())
}

func (i ProviderVdcMetadataEntryArray) ToProviderVdcMetadataEntryArrayOutputWithContext(ctx context.Context) ProviderVdcMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVdcMetadataEntryArrayOutput)
}

type ProviderVdcMetadataEntryOutput struct{ *pulumi.OutputState }

func (ProviderVdcMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVdcMetadataEntry)(nil)).Elem()
}

func (o ProviderVdcMetadataEntryOutput) ToProviderVdcMetadataEntryOutput() ProviderVdcMetadataEntryOutput {
	return o
}

func (o ProviderVdcMetadataEntryOutput) ToProviderVdcMetadataEntryOutputWithContext(ctx context.Context) ProviderVdcMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL. Defaults to false
func (o ProviderVdcMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderVdcMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry
func (o ProviderVdcMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderVdcMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'. Defaults to 'MetadataStringValue'
func (o ProviderVdcMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVdcMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'. Defaults to 'READWRITE'
func (o ProviderVdcMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVdcMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry
func (o ProviderVdcMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderVdcMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type ProviderVdcMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (ProviderVdcMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderVdcMetadataEntry)(nil)).Elem()
}

func (o ProviderVdcMetadataEntryArrayOutput) ToProviderVdcMetadataEntryArrayOutput() ProviderVdcMetadataEntryArrayOutput {
	return o
}

func (o ProviderVdcMetadataEntryArrayOutput) ToProviderVdcMetadataEntryArrayOutputWithContext(ctx context.Context) ProviderVdcMetadataEntryArrayOutput {
	return o
}

func (o ProviderVdcMetadataEntryArrayOutput) Index(i pulumi.IntInput) ProviderVdcMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderVdcMetadataEntry {
		return vs[0].([]ProviderVdcMetadataEntry)[vs[1].(int)]
	}).(ProviderVdcMetadataEntryOutput)
}

type RdeMetadataEntry struct {
	// Only meaningful for providers. Allows them to share entries with their tenants. Currently, accepted values are: `TENANT`, `PROVIDER`
	Domain *string `pulumi:"domain"`
	// ID of the metadata entry
	Id *string `pulumi:"id"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key string `pulumi:"key"`
	// Namespace of the metadata entry
	Namespace *string `pulumi:"namespace"`
	// Persistent metadata entries can be copied over on some entity operation
	Persistent *bool `pulumi:"persistent"`
	// True if the metadata entry is read only
	Readonly *bool `pulumi:"readonly"`
	// Type of this metadata entry. One of: 'StringEntry', 'NumberEntry', 'BoolEntry'
	Type *string `pulumi:"type"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value string `pulumi:"value"`
}

// RdeMetadataEntryInput is an input type that accepts RdeMetadataEntryArgs and RdeMetadataEntryOutput values.
// You can construct a concrete instance of `RdeMetadataEntryInput` via:
//
//	RdeMetadataEntryArgs{...}
type RdeMetadataEntryInput interface {
	pulumi.Input

	ToRdeMetadataEntryOutput() RdeMetadataEntryOutput
	ToRdeMetadataEntryOutputWithContext(context.Context) RdeMetadataEntryOutput
}

type RdeMetadataEntryArgs struct {
	// Only meaningful for providers. Allows them to share entries with their tenants. Currently, accepted values are: `TENANT`, `PROVIDER`
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// ID of the metadata entry
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringInput `pulumi:"key"`
	// Namespace of the metadata entry
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Persistent metadata entries can be copied over on some entity operation
	Persistent pulumi.BoolPtrInput `pulumi:"persistent"`
	// True if the metadata entry is read only
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
	// Type of this metadata entry. One of: 'StringEntry', 'NumberEntry', 'BoolEntry'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringInput `pulumi:"value"`
}

func (RdeMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdeMetadataEntry)(nil)).Elem()
}

func (i RdeMetadataEntryArgs) ToRdeMetadataEntryOutput() RdeMetadataEntryOutput {
	return i.ToRdeMetadataEntryOutputWithContext(context.Background())
}

func (i RdeMetadataEntryArgs) ToRdeMetadataEntryOutputWithContext(ctx context.Context) RdeMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdeMetadataEntryOutput)
}

// RdeMetadataEntryArrayInput is an input type that accepts RdeMetadataEntryArray and RdeMetadataEntryArrayOutput values.
// You can construct a concrete instance of `RdeMetadataEntryArrayInput` via:
//
//	RdeMetadataEntryArray{ RdeMetadataEntryArgs{...} }
type RdeMetadataEntryArrayInput interface {
	pulumi.Input

	ToRdeMetadataEntryArrayOutput() RdeMetadataEntryArrayOutput
	ToRdeMetadataEntryArrayOutputWithContext(context.Context) RdeMetadataEntryArrayOutput
}

type RdeMetadataEntryArray []RdeMetadataEntryInput

func (RdeMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdeMetadataEntry)(nil)).Elem()
}

func (i RdeMetadataEntryArray) ToRdeMetadataEntryArrayOutput() RdeMetadataEntryArrayOutput {
	return i.ToRdeMetadataEntryArrayOutputWithContext(context.Background())
}

func (i RdeMetadataEntryArray) ToRdeMetadataEntryArrayOutputWithContext(ctx context.Context) RdeMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdeMetadataEntryArrayOutput)
}

type RdeMetadataEntryOutput struct{ *pulumi.OutputState }

func (RdeMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdeMetadataEntry)(nil)).Elem()
}

func (o RdeMetadataEntryOutput) ToRdeMetadataEntryOutput() RdeMetadataEntryOutput {
	return o
}

func (o RdeMetadataEntryOutput) ToRdeMetadataEntryOutputWithContext(ctx context.Context) RdeMetadataEntryOutput {
	return o
}

// Only meaningful for providers. Allows them to share entries with their tenants. Currently, accepted values are: `TENANT`, `PROVIDER`
func (o RdeMetadataEntryOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdeMetadataEntry) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// ID of the metadata entry
func (o RdeMetadataEntryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdeMetadataEntry) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o RdeMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RdeMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Namespace of the metadata entry
func (o RdeMetadataEntryOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdeMetadataEntry) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Persistent metadata entries can be copied over on some entity operation
func (o RdeMetadataEntryOutput) Persistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdeMetadataEntry) *bool { return v.Persistent }).(pulumi.BoolPtrOutput)
}

// True if the metadata entry is read only
func (o RdeMetadataEntryOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RdeMetadataEntry) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

// Type of this metadata entry. One of: 'StringEntry', 'NumberEntry', 'BoolEntry'
func (o RdeMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdeMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o RdeMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RdeMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type RdeMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (RdeMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdeMetadataEntry)(nil)).Elem()
}

func (o RdeMetadataEntryArrayOutput) ToRdeMetadataEntryArrayOutput() RdeMetadataEntryArrayOutput {
	return o
}

func (o RdeMetadataEntryArrayOutput) ToRdeMetadataEntryArrayOutputWithContext(ctx context.Context) RdeMetadataEntryArrayOutput {
	return o
}

func (o RdeMetadataEntryArrayOutput) Index(i pulumi.IntInput) RdeMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdeMetadataEntry {
		return vs[0].([]RdeMetadataEntry)[vs[1].(int)]
	}).(RdeMetadataEntryOutput)
}

type RdeTypeHook struct {
	// Existing Behavior that will be automatically invoked when any RDE of this RDE Type triggers the event.
	BehaviorId string `pulumi:"behaviorId"`
	// Event that will invoke the Behavior, one of `PostCreate`, `PostUpdate`, `PreDelete`, `PostDelete`.
	Event string `pulumi:"event"`
}

// RdeTypeHookInput is an input type that accepts RdeTypeHookArgs and RdeTypeHookOutput values.
// You can construct a concrete instance of `RdeTypeHookInput` via:
//
//	RdeTypeHookArgs{...}
type RdeTypeHookInput interface {
	pulumi.Input

	ToRdeTypeHookOutput() RdeTypeHookOutput
	ToRdeTypeHookOutputWithContext(context.Context) RdeTypeHookOutput
}

type RdeTypeHookArgs struct {
	// Existing Behavior that will be automatically invoked when any RDE of this RDE Type triggers the event.
	BehaviorId pulumi.StringInput `pulumi:"behaviorId"`
	// Event that will invoke the Behavior, one of `PostCreate`, `PostUpdate`, `PreDelete`, `PostDelete`.
	Event pulumi.StringInput `pulumi:"event"`
}

func (RdeTypeHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdeTypeHook)(nil)).Elem()
}

func (i RdeTypeHookArgs) ToRdeTypeHookOutput() RdeTypeHookOutput {
	return i.ToRdeTypeHookOutputWithContext(context.Background())
}

func (i RdeTypeHookArgs) ToRdeTypeHookOutputWithContext(ctx context.Context) RdeTypeHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdeTypeHookOutput)
}

// RdeTypeHookArrayInput is an input type that accepts RdeTypeHookArray and RdeTypeHookArrayOutput values.
// You can construct a concrete instance of `RdeTypeHookArrayInput` via:
//
//	RdeTypeHookArray{ RdeTypeHookArgs{...} }
type RdeTypeHookArrayInput interface {
	pulumi.Input

	ToRdeTypeHookArrayOutput() RdeTypeHookArrayOutput
	ToRdeTypeHookArrayOutputWithContext(context.Context) RdeTypeHookArrayOutput
}

type RdeTypeHookArray []RdeTypeHookInput

func (RdeTypeHookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdeTypeHook)(nil)).Elem()
}

func (i RdeTypeHookArray) ToRdeTypeHookArrayOutput() RdeTypeHookArrayOutput {
	return i.ToRdeTypeHookArrayOutputWithContext(context.Background())
}

func (i RdeTypeHookArray) ToRdeTypeHookArrayOutputWithContext(ctx context.Context) RdeTypeHookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdeTypeHookArrayOutput)
}

type RdeTypeHookOutput struct{ *pulumi.OutputState }

func (RdeTypeHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdeTypeHook)(nil)).Elem()
}

func (o RdeTypeHookOutput) ToRdeTypeHookOutput() RdeTypeHookOutput {
	return o
}

func (o RdeTypeHookOutput) ToRdeTypeHookOutputWithContext(ctx context.Context) RdeTypeHookOutput {
	return o
}

// Existing Behavior that will be automatically invoked when any RDE of this RDE Type triggers the event.
func (o RdeTypeHookOutput) BehaviorId() pulumi.StringOutput {
	return o.ApplyT(func(v RdeTypeHook) string { return v.BehaviorId }).(pulumi.StringOutput)
}

// Event that will invoke the Behavior, one of `PostCreate`, `PostUpdate`, `PreDelete`, `PostDelete`.
func (o RdeTypeHookOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v RdeTypeHook) string { return v.Event }).(pulumi.StringOutput)
}

type RdeTypeHookArrayOutput struct{ *pulumi.OutputState }

func (RdeTypeHookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdeTypeHook)(nil)).Elem()
}

func (o RdeTypeHookArrayOutput) ToRdeTypeHookArrayOutput() RdeTypeHookArrayOutput {
	return o
}

func (o RdeTypeHookArrayOutput) ToRdeTypeHookArrayOutputWithContext(ctx context.Context) RdeTypeHookArrayOutput {
	return o
}

func (o RdeTypeHookArrayOutput) Index(i pulumi.IntInput) RdeTypeHookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdeTypeHook {
		return vs[0].([]RdeTypeHook)[vs[1].(int)]
	}).(RdeTypeHookOutput)
}

type SolutionLandingZoneCatalog struct {
	// Capability set for catalog
	Capabilities []string `pulumi:"capabilities"`
	// ID of catalog
	Id string `pulumi:"id"`
	// Catalog Name
	Name *string `pulumi:"name"`
}

// SolutionLandingZoneCatalogInput is an input type that accepts SolutionLandingZoneCatalogArgs and SolutionLandingZoneCatalogOutput values.
// You can construct a concrete instance of `SolutionLandingZoneCatalogInput` via:
//
//	SolutionLandingZoneCatalogArgs{...}
type SolutionLandingZoneCatalogInput interface {
	pulumi.Input

	ToSolutionLandingZoneCatalogOutput() SolutionLandingZoneCatalogOutput
	ToSolutionLandingZoneCatalogOutputWithContext(context.Context) SolutionLandingZoneCatalogOutput
}

type SolutionLandingZoneCatalogArgs struct {
	// Capability set for catalog
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// ID of catalog
	Id pulumi.StringInput `pulumi:"id"`
	// Catalog Name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SolutionLandingZoneCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionLandingZoneCatalog)(nil)).Elem()
}

func (i SolutionLandingZoneCatalogArgs) ToSolutionLandingZoneCatalogOutput() SolutionLandingZoneCatalogOutput {
	return i.ToSolutionLandingZoneCatalogOutputWithContext(context.Background())
}

func (i SolutionLandingZoneCatalogArgs) ToSolutionLandingZoneCatalogOutputWithContext(ctx context.Context) SolutionLandingZoneCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneCatalogOutput)
}

func (i SolutionLandingZoneCatalogArgs) ToSolutionLandingZoneCatalogPtrOutput() SolutionLandingZoneCatalogPtrOutput {
	return i.ToSolutionLandingZoneCatalogPtrOutputWithContext(context.Background())
}

func (i SolutionLandingZoneCatalogArgs) ToSolutionLandingZoneCatalogPtrOutputWithContext(ctx context.Context) SolutionLandingZoneCatalogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneCatalogOutput).ToSolutionLandingZoneCatalogPtrOutputWithContext(ctx)
}

// SolutionLandingZoneCatalogPtrInput is an input type that accepts SolutionLandingZoneCatalogArgs, SolutionLandingZoneCatalogPtr and SolutionLandingZoneCatalogPtrOutput values.
// You can construct a concrete instance of `SolutionLandingZoneCatalogPtrInput` via:
//
//	        SolutionLandingZoneCatalogArgs{...}
//
//	or:
//
//	        nil
type SolutionLandingZoneCatalogPtrInput interface {
	pulumi.Input

	ToSolutionLandingZoneCatalogPtrOutput() SolutionLandingZoneCatalogPtrOutput
	ToSolutionLandingZoneCatalogPtrOutputWithContext(context.Context) SolutionLandingZoneCatalogPtrOutput
}

type solutionLandingZoneCatalogPtrType SolutionLandingZoneCatalogArgs

func SolutionLandingZoneCatalogPtr(v *SolutionLandingZoneCatalogArgs) SolutionLandingZoneCatalogPtrInput {
	return (*solutionLandingZoneCatalogPtrType)(v)
}

func (*solutionLandingZoneCatalogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionLandingZoneCatalog)(nil)).Elem()
}

func (i *solutionLandingZoneCatalogPtrType) ToSolutionLandingZoneCatalogPtrOutput() SolutionLandingZoneCatalogPtrOutput {
	return i.ToSolutionLandingZoneCatalogPtrOutputWithContext(context.Background())
}

func (i *solutionLandingZoneCatalogPtrType) ToSolutionLandingZoneCatalogPtrOutputWithContext(ctx context.Context) SolutionLandingZoneCatalogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneCatalogPtrOutput)
}

type SolutionLandingZoneCatalogOutput struct{ *pulumi.OutputState }

func (SolutionLandingZoneCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionLandingZoneCatalog)(nil)).Elem()
}

func (o SolutionLandingZoneCatalogOutput) ToSolutionLandingZoneCatalogOutput() SolutionLandingZoneCatalogOutput {
	return o
}

func (o SolutionLandingZoneCatalogOutput) ToSolutionLandingZoneCatalogOutputWithContext(ctx context.Context) SolutionLandingZoneCatalogOutput {
	return o
}

func (o SolutionLandingZoneCatalogOutput) ToSolutionLandingZoneCatalogPtrOutput() SolutionLandingZoneCatalogPtrOutput {
	return o.ToSolutionLandingZoneCatalogPtrOutputWithContext(context.Background())
}

func (o SolutionLandingZoneCatalogOutput) ToSolutionLandingZoneCatalogPtrOutputWithContext(ctx context.Context) SolutionLandingZoneCatalogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SolutionLandingZoneCatalog) *SolutionLandingZoneCatalog {
		return &v
	}).(SolutionLandingZoneCatalogPtrOutput)
}

// Capability set for catalog
func (o SolutionLandingZoneCatalogOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SolutionLandingZoneCatalog) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// ID of catalog
func (o SolutionLandingZoneCatalogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionLandingZoneCatalog) string { return v.Id }).(pulumi.StringOutput)
}

// Catalog Name
func (o SolutionLandingZoneCatalogOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionLandingZoneCatalog) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SolutionLandingZoneCatalogPtrOutput struct{ *pulumi.OutputState }

func (SolutionLandingZoneCatalogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionLandingZoneCatalog)(nil)).Elem()
}

func (o SolutionLandingZoneCatalogPtrOutput) ToSolutionLandingZoneCatalogPtrOutput() SolutionLandingZoneCatalogPtrOutput {
	return o
}

func (o SolutionLandingZoneCatalogPtrOutput) ToSolutionLandingZoneCatalogPtrOutputWithContext(ctx context.Context) SolutionLandingZoneCatalogPtrOutput {
	return o
}

func (o SolutionLandingZoneCatalogPtrOutput) Elem() SolutionLandingZoneCatalogOutput {
	return o.ApplyT(func(v *SolutionLandingZoneCatalog) SolutionLandingZoneCatalog {
		if v != nil {
			return *v
		}
		var ret SolutionLandingZoneCatalog
		return ret
	}).(SolutionLandingZoneCatalogOutput)
}

// Capability set for catalog
func (o SolutionLandingZoneCatalogPtrOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SolutionLandingZoneCatalog) []string {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(pulumi.StringArrayOutput)
}

// ID of catalog
func (o SolutionLandingZoneCatalogPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolutionLandingZoneCatalog) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Catalog Name
func (o SolutionLandingZoneCatalogPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolutionLandingZoneCatalog) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type SolutionLandingZoneVdc struct {
	// Capability set for VDC
	Capabilities []string `pulumi:"capabilities"`
	// Structure for Compute Policy
	ComputePolicies []SolutionLandingZoneVdcComputePolicy `pulumi:"computePolicies"`
	// ID of VDC
	Id string `pulumi:"id"`
	// Defines if the entity should be considered as default
	IsDefault bool `pulumi:"isDefault"`
	// VDC Name
	Name *string `pulumi:"name"`
	// Structure for Org VDC Network
	OrgVdcNetworks []SolutionLandingZoneVdcOrgVdcNetwork `pulumi:"orgVdcNetworks"`
	// Structure for Storage Policy
	StoragePolicies []SolutionLandingZoneVdcStoragePolicy `pulumi:"storagePolicies"`
}

// SolutionLandingZoneVdcInput is an input type that accepts SolutionLandingZoneVdcArgs and SolutionLandingZoneVdcOutput values.
// You can construct a concrete instance of `SolutionLandingZoneVdcInput` via:
//
//	SolutionLandingZoneVdcArgs{...}
type SolutionLandingZoneVdcInput interface {
	pulumi.Input

	ToSolutionLandingZoneVdcOutput() SolutionLandingZoneVdcOutput
	ToSolutionLandingZoneVdcOutputWithContext(context.Context) SolutionLandingZoneVdcOutput
}

type SolutionLandingZoneVdcArgs struct {
	// Capability set for VDC
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// Structure for Compute Policy
	ComputePolicies SolutionLandingZoneVdcComputePolicyArrayInput `pulumi:"computePolicies"`
	// ID of VDC
	Id pulumi.StringInput `pulumi:"id"`
	// Defines if the entity should be considered as default
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// VDC Name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Structure for Org VDC Network
	OrgVdcNetworks SolutionLandingZoneVdcOrgVdcNetworkArrayInput `pulumi:"orgVdcNetworks"`
	// Structure for Storage Policy
	StoragePolicies SolutionLandingZoneVdcStoragePolicyArrayInput `pulumi:"storagePolicies"`
}

func (SolutionLandingZoneVdcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionLandingZoneVdc)(nil)).Elem()
}

func (i SolutionLandingZoneVdcArgs) ToSolutionLandingZoneVdcOutput() SolutionLandingZoneVdcOutput {
	return i.ToSolutionLandingZoneVdcOutputWithContext(context.Background())
}

func (i SolutionLandingZoneVdcArgs) ToSolutionLandingZoneVdcOutputWithContext(ctx context.Context) SolutionLandingZoneVdcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneVdcOutput)
}

// SolutionLandingZoneVdcArrayInput is an input type that accepts SolutionLandingZoneVdcArray and SolutionLandingZoneVdcArrayOutput values.
// You can construct a concrete instance of `SolutionLandingZoneVdcArrayInput` via:
//
//	SolutionLandingZoneVdcArray{ SolutionLandingZoneVdcArgs{...} }
type SolutionLandingZoneVdcArrayInput interface {
	pulumi.Input

	ToSolutionLandingZoneVdcArrayOutput() SolutionLandingZoneVdcArrayOutput
	ToSolutionLandingZoneVdcArrayOutputWithContext(context.Context) SolutionLandingZoneVdcArrayOutput
}

type SolutionLandingZoneVdcArray []SolutionLandingZoneVdcInput

func (SolutionLandingZoneVdcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionLandingZoneVdc)(nil)).Elem()
}

func (i SolutionLandingZoneVdcArray) ToSolutionLandingZoneVdcArrayOutput() SolutionLandingZoneVdcArrayOutput {
	return i.ToSolutionLandingZoneVdcArrayOutputWithContext(context.Background())
}

func (i SolutionLandingZoneVdcArray) ToSolutionLandingZoneVdcArrayOutputWithContext(ctx context.Context) SolutionLandingZoneVdcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneVdcArrayOutput)
}

type SolutionLandingZoneVdcOutput struct{ *pulumi.OutputState }

func (SolutionLandingZoneVdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionLandingZoneVdc)(nil)).Elem()
}

func (o SolutionLandingZoneVdcOutput) ToSolutionLandingZoneVdcOutput() SolutionLandingZoneVdcOutput {
	return o
}

func (o SolutionLandingZoneVdcOutput) ToSolutionLandingZoneVdcOutputWithContext(ctx context.Context) SolutionLandingZoneVdcOutput {
	return o
}

// Capability set for VDC
func (o SolutionLandingZoneVdcOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdc) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// Structure for Compute Policy
func (o SolutionLandingZoneVdcOutput) ComputePolicies() SolutionLandingZoneVdcComputePolicyArrayOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdc) []SolutionLandingZoneVdcComputePolicy { return v.ComputePolicies }).(SolutionLandingZoneVdcComputePolicyArrayOutput)
}

// ID of VDC
func (o SolutionLandingZoneVdcOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdc) string { return v.Id }).(pulumi.StringOutput)
}

// Defines if the entity should be considered as default
func (o SolutionLandingZoneVdcOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdc) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// VDC Name
func (o SolutionLandingZoneVdcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Structure for Org VDC Network
func (o SolutionLandingZoneVdcOutput) OrgVdcNetworks() SolutionLandingZoneVdcOrgVdcNetworkArrayOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdc) []SolutionLandingZoneVdcOrgVdcNetwork { return v.OrgVdcNetworks }).(SolutionLandingZoneVdcOrgVdcNetworkArrayOutput)
}

// Structure for Storage Policy
func (o SolutionLandingZoneVdcOutput) StoragePolicies() SolutionLandingZoneVdcStoragePolicyArrayOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdc) []SolutionLandingZoneVdcStoragePolicy { return v.StoragePolicies }).(SolutionLandingZoneVdcStoragePolicyArrayOutput)
}

type SolutionLandingZoneVdcArrayOutput struct{ *pulumi.OutputState }

func (SolutionLandingZoneVdcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionLandingZoneVdc)(nil)).Elem()
}

func (o SolutionLandingZoneVdcArrayOutput) ToSolutionLandingZoneVdcArrayOutput() SolutionLandingZoneVdcArrayOutput {
	return o
}

func (o SolutionLandingZoneVdcArrayOutput) ToSolutionLandingZoneVdcArrayOutputWithContext(ctx context.Context) SolutionLandingZoneVdcArrayOutput {
	return o
}

func (o SolutionLandingZoneVdcArrayOutput) Index(i pulumi.IntInput) SolutionLandingZoneVdcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SolutionLandingZoneVdc {
		return vs[0].([]SolutionLandingZoneVdc)[vs[1].(int)]
	}).(SolutionLandingZoneVdcOutput)
}

type SolutionLandingZoneVdcComputePolicy struct {
	// Set of capabilities for Compute Policy
	Capabilities []string `pulumi:"capabilities"`
	// ID of Compute Policy
	Id string `pulumi:"id"`
	// Boolean value that marks if this Compute Policy should be default
	IsDefault *bool `pulumi:"isDefault"`
	// Name of Compute Policy
	Name *string `pulumi:"name"`
}

// SolutionLandingZoneVdcComputePolicyInput is an input type that accepts SolutionLandingZoneVdcComputePolicyArgs and SolutionLandingZoneVdcComputePolicyOutput values.
// You can construct a concrete instance of `SolutionLandingZoneVdcComputePolicyInput` via:
//
//	SolutionLandingZoneVdcComputePolicyArgs{...}
type SolutionLandingZoneVdcComputePolicyInput interface {
	pulumi.Input

	ToSolutionLandingZoneVdcComputePolicyOutput() SolutionLandingZoneVdcComputePolicyOutput
	ToSolutionLandingZoneVdcComputePolicyOutputWithContext(context.Context) SolutionLandingZoneVdcComputePolicyOutput
}

type SolutionLandingZoneVdcComputePolicyArgs struct {
	// Set of capabilities for Compute Policy
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// ID of Compute Policy
	Id pulumi.StringInput `pulumi:"id"`
	// Boolean value that marks if this Compute Policy should be default
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// Name of Compute Policy
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SolutionLandingZoneVdcComputePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionLandingZoneVdcComputePolicy)(nil)).Elem()
}

func (i SolutionLandingZoneVdcComputePolicyArgs) ToSolutionLandingZoneVdcComputePolicyOutput() SolutionLandingZoneVdcComputePolicyOutput {
	return i.ToSolutionLandingZoneVdcComputePolicyOutputWithContext(context.Background())
}

func (i SolutionLandingZoneVdcComputePolicyArgs) ToSolutionLandingZoneVdcComputePolicyOutputWithContext(ctx context.Context) SolutionLandingZoneVdcComputePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneVdcComputePolicyOutput)
}

// SolutionLandingZoneVdcComputePolicyArrayInput is an input type that accepts SolutionLandingZoneVdcComputePolicyArray and SolutionLandingZoneVdcComputePolicyArrayOutput values.
// You can construct a concrete instance of `SolutionLandingZoneVdcComputePolicyArrayInput` via:
//
//	SolutionLandingZoneVdcComputePolicyArray{ SolutionLandingZoneVdcComputePolicyArgs{...} }
type SolutionLandingZoneVdcComputePolicyArrayInput interface {
	pulumi.Input

	ToSolutionLandingZoneVdcComputePolicyArrayOutput() SolutionLandingZoneVdcComputePolicyArrayOutput
	ToSolutionLandingZoneVdcComputePolicyArrayOutputWithContext(context.Context) SolutionLandingZoneVdcComputePolicyArrayOutput
}

type SolutionLandingZoneVdcComputePolicyArray []SolutionLandingZoneVdcComputePolicyInput

func (SolutionLandingZoneVdcComputePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionLandingZoneVdcComputePolicy)(nil)).Elem()
}

func (i SolutionLandingZoneVdcComputePolicyArray) ToSolutionLandingZoneVdcComputePolicyArrayOutput() SolutionLandingZoneVdcComputePolicyArrayOutput {
	return i.ToSolutionLandingZoneVdcComputePolicyArrayOutputWithContext(context.Background())
}

func (i SolutionLandingZoneVdcComputePolicyArray) ToSolutionLandingZoneVdcComputePolicyArrayOutputWithContext(ctx context.Context) SolutionLandingZoneVdcComputePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneVdcComputePolicyArrayOutput)
}

type SolutionLandingZoneVdcComputePolicyOutput struct{ *pulumi.OutputState }

func (SolutionLandingZoneVdcComputePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionLandingZoneVdcComputePolicy)(nil)).Elem()
}

func (o SolutionLandingZoneVdcComputePolicyOutput) ToSolutionLandingZoneVdcComputePolicyOutput() SolutionLandingZoneVdcComputePolicyOutput {
	return o
}

func (o SolutionLandingZoneVdcComputePolicyOutput) ToSolutionLandingZoneVdcComputePolicyOutputWithContext(ctx context.Context) SolutionLandingZoneVdcComputePolicyOutput {
	return o
}

// Set of capabilities for Compute Policy
func (o SolutionLandingZoneVdcComputePolicyOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcComputePolicy) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// ID of Compute Policy
func (o SolutionLandingZoneVdcComputePolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcComputePolicy) string { return v.Id }).(pulumi.StringOutput)
}

// Boolean value that marks if this Compute Policy should be default
func (o SolutionLandingZoneVdcComputePolicyOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcComputePolicy) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// Name of Compute Policy
func (o SolutionLandingZoneVdcComputePolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcComputePolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SolutionLandingZoneVdcComputePolicyArrayOutput struct{ *pulumi.OutputState }

func (SolutionLandingZoneVdcComputePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionLandingZoneVdcComputePolicy)(nil)).Elem()
}

func (o SolutionLandingZoneVdcComputePolicyArrayOutput) ToSolutionLandingZoneVdcComputePolicyArrayOutput() SolutionLandingZoneVdcComputePolicyArrayOutput {
	return o
}

func (o SolutionLandingZoneVdcComputePolicyArrayOutput) ToSolutionLandingZoneVdcComputePolicyArrayOutputWithContext(ctx context.Context) SolutionLandingZoneVdcComputePolicyArrayOutput {
	return o
}

func (o SolutionLandingZoneVdcComputePolicyArrayOutput) Index(i pulumi.IntInput) SolutionLandingZoneVdcComputePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SolutionLandingZoneVdcComputePolicy {
		return vs[0].([]SolutionLandingZoneVdcComputePolicy)[vs[1].(int)]
	}).(SolutionLandingZoneVdcComputePolicyOutput)
}

type SolutionLandingZoneVdcOrgVdcNetwork struct {
	// Set of capabilities for Org VDC Network
	Capabilities []string `pulumi:"capabilities"`
	// ID of Org VDC Network
	Id string `pulumi:"id"`
	// Boolean value that marks if this Org VDC Network should be default
	IsDefault *bool `pulumi:"isDefault"`
	// Name of Org VDC Network
	Name *string `pulumi:"name"`
}

// SolutionLandingZoneVdcOrgVdcNetworkInput is an input type that accepts SolutionLandingZoneVdcOrgVdcNetworkArgs and SolutionLandingZoneVdcOrgVdcNetworkOutput values.
// You can construct a concrete instance of `SolutionLandingZoneVdcOrgVdcNetworkInput` via:
//
//	SolutionLandingZoneVdcOrgVdcNetworkArgs{...}
type SolutionLandingZoneVdcOrgVdcNetworkInput interface {
	pulumi.Input

	ToSolutionLandingZoneVdcOrgVdcNetworkOutput() SolutionLandingZoneVdcOrgVdcNetworkOutput
	ToSolutionLandingZoneVdcOrgVdcNetworkOutputWithContext(context.Context) SolutionLandingZoneVdcOrgVdcNetworkOutput
}

type SolutionLandingZoneVdcOrgVdcNetworkArgs struct {
	// Set of capabilities for Org VDC Network
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// ID of Org VDC Network
	Id pulumi.StringInput `pulumi:"id"`
	// Boolean value that marks if this Org VDC Network should be default
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// Name of Org VDC Network
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SolutionLandingZoneVdcOrgVdcNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionLandingZoneVdcOrgVdcNetwork)(nil)).Elem()
}

func (i SolutionLandingZoneVdcOrgVdcNetworkArgs) ToSolutionLandingZoneVdcOrgVdcNetworkOutput() SolutionLandingZoneVdcOrgVdcNetworkOutput {
	return i.ToSolutionLandingZoneVdcOrgVdcNetworkOutputWithContext(context.Background())
}

func (i SolutionLandingZoneVdcOrgVdcNetworkArgs) ToSolutionLandingZoneVdcOrgVdcNetworkOutputWithContext(ctx context.Context) SolutionLandingZoneVdcOrgVdcNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneVdcOrgVdcNetworkOutput)
}

// SolutionLandingZoneVdcOrgVdcNetworkArrayInput is an input type that accepts SolutionLandingZoneVdcOrgVdcNetworkArray and SolutionLandingZoneVdcOrgVdcNetworkArrayOutput values.
// You can construct a concrete instance of `SolutionLandingZoneVdcOrgVdcNetworkArrayInput` via:
//
//	SolutionLandingZoneVdcOrgVdcNetworkArray{ SolutionLandingZoneVdcOrgVdcNetworkArgs{...} }
type SolutionLandingZoneVdcOrgVdcNetworkArrayInput interface {
	pulumi.Input

	ToSolutionLandingZoneVdcOrgVdcNetworkArrayOutput() SolutionLandingZoneVdcOrgVdcNetworkArrayOutput
	ToSolutionLandingZoneVdcOrgVdcNetworkArrayOutputWithContext(context.Context) SolutionLandingZoneVdcOrgVdcNetworkArrayOutput
}

type SolutionLandingZoneVdcOrgVdcNetworkArray []SolutionLandingZoneVdcOrgVdcNetworkInput

func (SolutionLandingZoneVdcOrgVdcNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionLandingZoneVdcOrgVdcNetwork)(nil)).Elem()
}

func (i SolutionLandingZoneVdcOrgVdcNetworkArray) ToSolutionLandingZoneVdcOrgVdcNetworkArrayOutput() SolutionLandingZoneVdcOrgVdcNetworkArrayOutput {
	return i.ToSolutionLandingZoneVdcOrgVdcNetworkArrayOutputWithContext(context.Background())
}

func (i SolutionLandingZoneVdcOrgVdcNetworkArray) ToSolutionLandingZoneVdcOrgVdcNetworkArrayOutputWithContext(ctx context.Context) SolutionLandingZoneVdcOrgVdcNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneVdcOrgVdcNetworkArrayOutput)
}

type SolutionLandingZoneVdcOrgVdcNetworkOutput struct{ *pulumi.OutputState }

func (SolutionLandingZoneVdcOrgVdcNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionLandingZoneVdcOrgVdcNetwork)(nil)).Elem()
}

func (o SolutionLandingZoneVdcOrgVdcNetworkOutput) ToSolutionLandingZoneVdcOrgVdcNetworkOutput() SolutionLandingZoneVdcOrgVdcNetworkOutput {
	return o
}

func (o SolutionLandingZoneVdcOrgVdcNetworkOutput) ToSolutionLandingZoneVdcOrgVdcNetworkOutputWithContext(ctx context.Context) SolutionLandingZoneVdcOrgVdcNetworkOutput {
	return o
}

// Set of capabilities for Org VDC Network
func (o SolutionLandingZoneVdcOrgVdcNetworkOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcOrgVdcNetwork) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// ID of Org VDC Network
func (o SolutionLandingZoneVdcOrgVdcNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcOrgVdcNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Boolean value that marks if this Org VDC Network should be default
func (o SolutionLandingZoneVdcOrgVdcNetworkOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcOrgVdcNetwork) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// Name of Org VDC Network
func (o SolutionLandingZoneVdcOrgVdcNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcOrgVdcNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SolutionLandingZoneVdcOrgVdcNetworkArrayOutput struct{ *pulumi.OutputState }

func (SolutionLandingZoneVdcOrgVdcNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionLandingZoneVdcOrgVdcNetwork)(nil)).Elem()
}

func (o SolutionLandingZoneVdcOrgVdcNetworkArrayOutput) ToSolutionLandingZoneVdcOrgVdcNetworkArrayOutput() SolutionLandingZoneVdcOrgVdcNetworkArrayOutput {
	return o
}

func (o SolutionLandingZoneVdcOrgVdcNetworkArrayOutput) ToSolutionLandingZoneVdcOrgVdcNetworkArrayOutputWithContext(ctx context.Context) SolutionLandingZoneVdcOrgVdcNetworkArrayOutput {
	return o
}

func (o SolutionLandingZoneVdcOrgVdcNetworkArrayOutput) Index(i pulumi.IntInput) SolutionLandingZoneVdcOrgVdcNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SolutionLandingZoneVdcOrgVdcNetwork {
		return vs[0].([]SolutionLandingZoneVdcOrgVdcNetwork)[vs[1].(int)]
	}).(SolutionLandingZoneVdcOrgVdcNetworkOutput)
}

type SolutionLandingZoneVdcStoragePolicy struct {
	// Set of capabilities for Storage Policy
	Capabilities []string `pulumi:"capabilities"`
	// ID of Storage Policy
	Id string `pulumi:"id"`
	// Boolean value that marks if this Storage Policy should be default
	IsDefault *bool `pulumi:"isDefault"`
	// Name of Storage Policy
	Name *string `pulumi:"name"`
}

// SolutionLandingZoneVdcStoragePolicyInput is an input type that accepts SolutionLandingZoneVdcStoragePolicyArgs and SolutionLandingZoneVdcStoragePolicyOutput values.
// You can construct a concrete instance of `SolutionLandingZoneVdcStoragePolicyInput` via:
//
//	SolutionLandingZoneVdcStoragePolicyArgs{...}
type SolutionLandingZoneVdcStoragePolicyInput interface {
	pulumi.Input

	ToSolutionLandingZoneVdcStoragePolicyOutput() SolutionLandingZoneVdcStoragePolicyOutput
	ToSolutionLandingZoneVdcStoragePolicyOutputWithContext(context.Context) SolutionLandingZoneVdcStoragePolicyOutput
}

type SolutionLandingZoneVdcStoragePolicyArgs struct {
	// Set of capabilities for Storage Policy
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// ID of Storage Policy
	Id pulumi.StringInput `pulumi:"id"`
	// Boolean value that marks if this Storage Policy should be default
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// Name of Storage Policy
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SolutionLandingZoneVdcStoragePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionLandingZoneVdcStoragePolicy)(nil)).Elem()
}

func (i SolutionLandingZoneVdcStoragePolicyArgs) ToSolutionLandingZoneVdcStoragePolicyOutput() SolutionLandingZoneVdcStoragePolicyOutput {
	return i.ToSolutionLandingZoneVdcStoragePolicyOutputWithContext(context.Background())
}

func (i SolutionLandingZoneVdcStoragePolicyArgs) ToSolutionLandingZoneVdcStoragePolicyOutputWithContext(ctx context.Context) SolutionLandingZoneVdcStoragePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneVdcStoragePolicyOutput)
}

// SolutionLandingZoneVdcStoragePolicyArrayInput is an input type that accepts SolutionLandingZoneVdcStoragePolicyArray and SolutionLandingZoneVdcStoragePolicyArrayOutput values.
// You can construct a concrete instance of `SolutionLandingZoneVdcStoragePolicyArrayInput` via:
//
//	SolutionLandingZoneVdcStoragePolicyArray{ SolutionLandingZoneVdcStoragePolicyArgs{...} }
type SolutionLandingZoneVdcStoragePolicyArrayInput interface {
	pulumi.Input

	ToSolutionLandingZoneVdcStoragePolicyArrayOutput() SolutionLandingZoneVdcStoragePolicyArrayOutput
	ToSolutionLandingZoneVdcStoragePolicyArrayOutputWithContext(context.Context) SolutionLandingZoneVdcStoragePolicyArrayOutput
}

type SolutionLandingZoneVdcStoragePolicyArray []SolutionLandingZoneVdcStoragePolicyInput

func (SolutionLandingZoneVdcStoragePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionLandingZoneVdcStoragePolicy)(nil)).Elem()
}

func (i SolutionLandingZoneVdcStoragePolicyArray) ToSolutionLandingZoneVdcStoragePolicyArrayOutput() SolutionLandingZoneVdcStoragePolicyArrayOutput {
	return i.ToSolutionLandingZoneVdcStoragePolicyArrayOutputWithContext(context.Background())
}

func (i SolutionLandingZoneVdcStoragePolicyArray) ToSolutionLandingZoneVdcStoragePolicyArrayOutputWithContext(ctx context.Context) SolutionLandingZoneVdcStoragePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionLandingZoneVdcStoragePolicyArrayOutput)
}

type SolutionLandingZoneVdcStoragePolicyOutput struct{ *pulumi.OutputState }

func (SolutionLandingZoneVdcStoragePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionLandingZoneVdcStoragePolicy)(nil)).Elem()
}

func (o SolutionLandingZoneVdcStoragePolicyOutput) ToSolutionLandingZoneVdcStoragePolicyOutput() SolutionLandingZoneVdcStoragePolicyOutput {
	return o
}

func (o SolutionLandingZoneVdcStoragePolicyOutput) ToSolutionLandingZoneVdcStoragePolicyOutputWithContext(ctx context.Context) SolutionLandingZoneVdcStoragePolicyOutput {
	return o
}

// Set of capabilities for Storage Policy
func (o SolutionLandingZoneVdcStoragePolicyOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcStoragePolicy) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// ID of Storage Policy
func (o SolutionLandingZoneVdcStoragePolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcStoragePolicy) string { return v.Id }).(pulumi.StringOutput)
}

// Boolean value that marks if this Storage Policy should be default
func (o SolutionLandingZoneVdcStoragePolicyOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcStoragePolicy) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// Name of Storage Policy
func (o SolutionLandingZoneVdcStoragePolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionLandingZoneVdcStoragePolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SolutionLandingZoneVdcStoragePolicyArrayOutput struct{ *pulumi.OutputState }

func (SolutionLandingZoneVdcStoragePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionLandingZoneVdcStoragePolicy)(nil)).Elem()
}

func (o SolutionLandingZoneVdcStoragePolicyArrayOutput) ToSolutionLandingZoneVdcStoragePolicyArrayOutput() SolutionLandingZoneVdcStoragePolicyArrayOutput {
	return o
}

func (o SolutionLandingZoneVdcStoragePolicyArrayOutput) ToSolutionLandingZoneVdcStoragePolicyArrayOutputWithContext(ctx context.Context) SolutionLandingZoneVdcStoragePolicyArrayOutput {
	return o
}

func (o SolutionLandingZoneVdcStoragePolicyArrayOutput) Index(i pulumi.IntInput) SolutionLandingZoneVdcStoragePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SolutionLandingZoneVdcStoragePolicy {
		return vs[0].([]SolutionLandingZoneVdcStoragePolicy)[vs[1].(int)]
	}).(SolutionLandingZoneVdcStoragePolicyOutput)
}

type VappAccessControlSharedWith struct {
	// The access level for the user or group to which we are sharing. (One of `ReadOnly`, `Change`, `FullControl`)
	AccessLevel string `pulumi:"accessLevel"`
	// The ID of a group with which we are sharing. Required if `userId` is not set.
	GroupId *string `pulumi:"groupId"`
	// the name of the subject (group or user) with which we are sharing.
	SubjectName *string `pulumi:"subjectName"`
	// The ID of a user with which we are sharing. Required if `groupId` is not set.
	UserId *string `pulumi:"userId"`
}

// VappAccessControlSharedWithInput is an input type that accepts VappAccessControlSharedWithArgs and VappAccessControlSharedWithOutput values.
// You can construct a concrete instance of `VappAccessControlSharedWithInput` via:
//
//	VappAccessControlSharedWithArgs{...}
type VappAccessControlSharedWithInput interface {
	pulumi.Input

	ToVappAccessControlSharedWithOutput() VappAccessControlSharedWithOutput
	ToVappAccessControlSharedWithOutputWithContext(context.Context) VappAccessControlSharedWithOutput
}

type VappAccessControlSharedWithArgs struct {
	// The access level for the user or group to which we are sharing. (One of `ReadOnly`, `Change`, `FullControl`)
	AccessLevel pulumi.StringInput `pulumi:"accessLevel"`
	// The ID of a group with which we are sharing. Required if `userId` is not set.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// the name of the subject (group or user) with which we are sharing.
	SubjectName pulumi.StringPtrInput `pulumi:"subjectName"`
	// The ID of a user with which we are sharing. Required if `groupId` is not set.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (VappAccessControlSharedWithArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappAccessControlSharedWith)(nil)).Elem()
}

func (i VappAccessControlSharedWithArgs) ToVappAccessControlSharedWithOutput() VappAccessControlSharedWithOutput {
	return i.ToVappAccessControlSharedWithOutputWithContext(context.Background())
}

func (i VappAccessControlSharedWithArgs) ToVappAccessControlSharedWithOutputWithContext(ctx context.Context) VappAccessControlSharedWithOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappAccessControlSharedWithOutput)
}

// VappAccessControlSharedWithArrayInput is an input type that accepts VappAccessControlSharedWithArray and VappAccessControlSharedWithArrayOutput values.
// You can construct a concrete instance of `VappAccessControlSharedWithArrayInput` via:
//
//	VappAccessControlSharedWithArray{ VappAccessControlSharedWithArgs{...} }
type VappAccessControlSharedWithArrayInput interface {
	pulumi.Input

	ToVappAccessControlSharedWithArrayOutput() VappAccessControlSharedWithArrayOutput
	ToVappAccessControlSharedWithArrayOutputWithContext(context.Context) VappAccessControlSharedWithArrayOutput
}

type VappAccessControlSharedWithArray []VappAccessControlSharedWithInput

func (VappAccessControlSharedWithArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappAccessControlSharedWith)(nil)).Elem()
}

func (i VappAccessControlSharedWithArray) ToVappAccessControlSharedWithArrayOutput() VappAccessControlSharedWithArrayOutput {
	return i.ToVappAccessControlSharedWithArrayOutputWithContext(context.Background())
}

func (i VappAccessControlSharedWithArray) ToVappAccessControlSharedWithArrayOutputWithContext(ctx context.Context) VappAccessControlSharedWithArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappAccessControlSharedWithArrayOutput)
}

type VappAccessControlSharedWithOutput struct{ *pulumi.OutputState }

func (VappAccessControlSharedWithOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappAccessControlSharedWith)(nil)).Elem()
}

func (o VappAccessControlSharedWithOutput) ToVappAccessControlSharedWithOutput() VappAccessControlSharedWithOutput {
	return o
}

func (o VappAccessControlSharedWithOutput) ToVappAccessControlSharedWithOutputWithContext(ctx context.Context) VappAccessControlSharedWithOutput {
	return o
}

// The access level for the user or group to which we are sharing. (One of `ReadOnly`, `Change`, `FullControl`)
func (o VappAccessControlSharedWithOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v VappAccessControlSharedWith) string { return v.AccessLevel }).(pulumi.StringOutput)
}

// The ID of a group with which we are sharing. Required if `userId` is not set.
func (o VappAccessControlSharedWithOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappAccessControlSharedWith) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// the name of the subject (group or user) with which we are sharing.
func (o VappAccessControlSharedWithOutput) SubjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappAccessControlSharedWith) *string { return v.SubjectName }).(pulumi.StringPtrOutput)
}

// The ID of a user with which we are sharing. Required if `groupId` is not set.
func (o VappAccessControlSharedWithOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappAccessControlSharedWith) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type VappAccessControlSharedWithArrayOutput struct{ *pulumi.OutputState }

func (VappAccessControlSharedWithArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappAccessControlSharedWith)(nil)).Elem()
}

func (o VappAccessControlSharedWithArrayOutput) ToVappAccessControlSharedWithArrayOutput() VappAccessControlSharedWithArrayOutput {
	return o
}

func (o VappAccessControlSharedWithArrayOutput) ToVappAccessControlSharedWithArrayOutputWithContext(ctx context.Context) VappAccessControlSharedWithArrayOutput {
	return o
}

func (o VappAccessControlSharedWithArrayOutput) Index(i pulumi.IntInput) VappAccessControlSharedWithOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappAccessControlSharedWith {
		return vs[0].([]VappAccessControlSharedWith)[vs[1].(int)]
	}).(VappAccessControlSharedWithOutput)
}

type VappFirewallRulesRule struct {
	// Destination IP address to which the rule applies. A value of `Any` matches any IP address.
	DestinationIp *string `pulumi:"destinationIp"`
	// Destination port to which this rule applies.
	DestinationPort *string `pulumi:"destinationPort"`
	// Destination VM identifier
	DestinationVmId *string `pulumi:"destinationVmId"`
	// The value can be one of: `assigned` - assigned internal IP will be automatically chosen. `NAT`: NATed external IP will be automatically chosen.
	DestinationVmIpType *string `pulumi:"destinationVmIpType"`
	// Destination VM NIC ID to which this rule applies.
	DestinationVmNicId *int `pulumi:"destinationVmNicId"`
	// 'true' value will enable rule logging. Default is false
	EnableLogging *bool `pulumi:"enableLogging"`
	// Enable or disable firewall. Default is `true`.
	Enabled *bool `pulumi:"enabled"`
	// Rule name
	Name *string `pulumi:"name"`
	// One of: `drop` (drop packets that match the rule), `allow` (allow packets that match the rule to pass through the firewall)
	Policy *string `pulumi:"policy"`
	// Specify the protocols to which the rule should be applied. One of: `any`, `icmp`, `tcp`, `udp`, `tcp&udp`
	Protocol *string `pulumi:"protocol"`
	// Source IP address to which the rule applies. A value of `Any` matches any IP address.
	SourceIp *string `pulumi:"sourceIp"`
	// Source port to which this rule applies.
	SourcePort *string `pulumi:"sourcePort"`
	// Source VM identifier
	SourceVmId *string `pulumi:"sourceVmId"`
	// The value can be one of: `assigned` - assigned internal IP will be automatically chosen. `NAT`: NATed external IP will be automatically chosen.
	SourceVmIpType *string `pulumi:"sourceVmIpType"`
	// Source VM NIC ID to which this rule applies.
	SourceVmNicId *int `pulumi:"sourceVmNicId"`
}

// VappFirewallRulesRuleInput is an input type that accepts VappFirewallRulesRuleArgs and VappFirewallRulesRuleOutput values.
// You can construct a concrete instance of `VappFirewallRulesRuleInput` via:
//
//	VappFirewallRulesRuleArgs{...}
type VappFirewallRulesRuleInput interface {
	pulumi.Input

	ToVappFirewallRulesRuleOutput() VappFirewallRulesRuleOutput
	ToVappFirewallRulesRuleOutputWithContext(context.Context) VappFirewallRulesRuleOutput
}

type VappFirewallRulesRuleArgs struct {
	// Destination IP address to which the rule applies. A value of `Any` matches any IP address.
	DestinationIp pulumi.StringPtrInput `pulumi:"destinationIp"`
	// Destination port to which this rule applies.
	DestinationPort pulumi.StringPtrInput `pulumi:"destinationPort"`
	// Destination VM identifier
	DestinationVmId pulumi.StringPtrInput `pulumi:"destinationVmId"`
	// The value can be one of: `assigned` - assigned internal IP will be automatically chosen. `NAT`: NATed external IP will be automatically chosen.
	DestinationVmIpType pulumi.StringPtrInput `pulumi:"destinationVmIpType"`
	// Destination VM NIC ID to which this rule applies.
	DestinationVmNicId pulumi.IntPtrInput `pulumi:"destinationVmNicId"`
	// 'true' value will enable rule logging. Default is false
	EnableLogging pulumi.BoolPtrInput `pulumi:"enableLogging"`
	// Enable or disable firewall. Default is `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Rule name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// One of: `drop` (drop packets that match the rule), `allow` (allow packets that match the rule to pass through the firewall)
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// Specify the protocols to which the rule should be applied. One of: `any`, `icmp`, `tcp`, `udp`, `tcp&udp`
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Source IP address to which the rule applies. A value of `Any` matches any IP address.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
	// Source port to which this rule applies.
	SourcePort pulumi.StringPtrInput `pulumi:"sourcePort"`
	// Source VM identifier
	SourceVmId pulumi.StringPtrInput `pulumi:"sourceVmId"`
	// The value can be one of: `assigned` - assigned internal IP will be automatically chosen. `NAT`: NATed external IP will be automatically chosen.
	SourceVmIpType pulumi.StringPtrInput `pulumi:"sourceVmIpType"`
	// Source VM NIC ID to which this rule applies.
	SourceVmNicId pulumi.IntPtrInput `pulumi:"sourceVmNicId"`
}

func (VappFirewallRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappFirewallRulesRule)(nil)).Elem()
}

func (i VappFirewallRulesRuleArgs) ToVappFirewallRulesRuleOutput() VappFirewallRulesRuleOutput {
	return i.ToVappFirewallRulesRuleOutputWithContext(context.Background())
}

func (i VappFirewallRulesRuleArgs) ToVappFirewallRulesRuleOutputWithContext(ctx context.Context) VappFirewallRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappFirewallRulesRuleOutput)
}

// VappFirewallRulesRuleArrayInput is an input type that accepts VappFirewallRulesRuleArray and VappFirewallRulesRuleArrayOutput values.
// You can construct a concrete instance of `VappFirewallRulesRuleArrayInput` via:
//
//	VappFirewallRulesRuleArray{ VappFirewallRulesRuleArgs{...} }
type VappFirewallRulesRuleArrayInput interface {
	pulumi.Input

	ToVappFirewallRulesRuleArrayOutput() VappFirewallRulesRuleArrayOutput
	ToVappFirewallRulesRuleArrayOutputWithContext(context.Context) VappFirewallRulesRuleArrayOutput
}

type VappFirewallRulesRuleArray []VappFirewallRulesRuleInput

func (VappFirewallRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappFirewallRulesRule)(nil)).Elem()
}

func (i VappFirewallRulesRuleArray) ToVappFirewallRulesRuleArrayOutput() VappFirewallRulesRuleArrayOutput {
	return i.ToVappFirewallRulesRuleArrayOutputWithContext(context.Background())
}

func (i VappFirewallRulesRuleArray) ToVappFirewallRulesRuleArrayOutputWithContext(ctx context.Context) VappFirewallRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappFirewallRulesRuleArrayOutput)
}

type VappFirewallRulesRuleOutput struct{ *pulumi.OutputState }

func (VappFirewallRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappFirewallRulesRule)(nil)).Elem()
}

func (o VappFirewallRulesRuleOutput) ToVappFirewallRulesRuleOutput() VappFirewallRulesRuleOutput {
	return o
}

func (o VappFirewallRulesRuleOutput) ToVappFirewallRulesRuleOutputWithContext(ctx context.Context) VappFirewallRulesRuleOutput {
	return o
}

// Destination IP address to which the rule applies. A value of `Any` matches any IP address.
func (o VappFirewallRulesRuleOutput) DestinationIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.DestinationIp }).(pulumi.StringPtrOutput)
}

// Destination port to which this rule applies.
func (o VappFirewallRulesRuleOutput) DestinationPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.DestinationPort }).(pulumi.StringPtrOutput)
}

// Destination VM identifier
func (o VappFirewallRulesRuleOutput) DestinationVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.DestinationVmId }).(pulumi.StringPtrOutput)
}

// The value can be one of: `assigned` - assigned internal IP will be automatically chosen. `NAT`: NATed external IP will be automatically chosen.
func (o VappFirewallRulesRuleOutput) DestinationVmIpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.DestinationVmIpType }).(pulumi.StringPtrOutput)
}

// Destination VM NIC ID to which this rule applies.
func (o VappFirewallRulesRuleOutput) DestinationVmNicId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *int { return v.DestinationVmNicId }).(pulumi.IntPtrOutput)
}

// 'true' value will enable rule logging. Default is false
func (o VappFirewallRulesRuleOutput) EnableLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *bool { return v.EnableLogging }).(pulumi.BoolPtrOutput)
}

// Enable or disable firewall. Default is `true`.
func (o VappFirewallRulesRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Rule name
func (o VappFirewallRulesRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// One of: `drop` (drop packets that match the rule), `allow` (allow packets that match the rule to pass through the firewall)
func (o VappFirewallRulesRuleOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// Specify the protocols to which the rule should be applied. One of: `any`, `icmp`, `tcp`, `udp`, `tcp&udp`
func (o VappFirewallRulesRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Source IP address to which the rule applies. A value of `Any` matches any IP address.
func (o VappFirewallRulesRuleOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

// Source port to which this rule applies.
func (o VappFirewallRulesRuleOutput) SourcePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.SourcePort }).(pulumi.StringPtrOutput)
}

// Source VM identifier
func (o VappFirewallRulesRuleOutput) SourceVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.SourceVmId }).(pulumi.StringPtrOutput)
}

// The value can be one of: `assigned` - assigned internal IP will be automatically chosen. `NAT`: NATed external IP will be automatically chosen.
func (o VappFirewallRulesRuleOutput) SourceVmIpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *string { return v.SourceVmIpType }).(pulumi.StringPtrOutput)
}

// Source VM NIC ID to which this rule applies.
func (o VappFirewallRulesRuleOutput) SourceVmNicId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappFirewallRulesRule) *int { return v.SourceVmNicId }).(pulumi.IntPtrOutput)
}

type VappFirewallRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (VappFirewallRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappFirewallRulesRule)(nil)).Elem()
}

func (o VappFirewallRulesRuleArrayOutput) ToVappFirewallRulesRuleArrayOutput() VappFirewallRulesRuleArrayOutput {
	return o
}

func (o VappFirewallRulesRuleArrayOutput) ToVappFirewallRulesRuleArrayOutputWithContext(ctx context.Context) VappFirewallRulesRuleArrayOutput {
	return o
}

func (o VappFirewallRulesRuleArrayOutput) Index(i pulumi.IntInput) VappFirewallRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappFirewallRulesRule {
		return vs[0].([]VappFirewallRulesRule)[vs[1].(int)]
	}).(VappFirewallRulesRuleOutput)
}

type VappLease struct {
	// How long any of the VMs in the vApp can run before the vApp is automatically powered off or suspended. 0 means never expires (or maximum allowed by Org). Regular values accepted from 3600+.
	RuntimeLeaseInSec int `pulumi:"runtimeLeaseInSec"`
	// How long the vApp is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by Org). Regular values accepted from 3600+.
	StorageLeaseInSec int `pulumi:"storageLeaseInSec"`
}

// VappLeaseInput is an input type that accepts VappLeaseArgs and VappLeaseOutput values.
// You can construct a concrete instance of `VappLeaseInput` via:
//
//	VappLeaseArgs{...}
type VappLeaseInput interface {
	pulumi.Input

	ToVappLeaseOutput() VappLeaseOutput
	ToVappLeaseOutputWithContext(context.Context) VappLeaseOutput
}

type VappLeaseArgs struct {
	// How long any of the VMs in the vApp can run before the vApp is automatically powered off or suspended. 0 means never expires (or maximum allowed by Org). Regular values accepted from 3600+.
	RuntimeLeaseInSec pulumi.IntInput `pulumi:"runtimeLeaseInSec"`
	// How long the vApp is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by Org). Regular values accepted from 3600+.
	StorageLeaseInSec pulumi.IntInput `pulumi:"storageLeaseInSec"`
}

func (VappLeaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappLease)(nil)).Elem()
}

func (i VappLeaseArgs) ToVappLeaseOutput() VappLeaseOutput {
	return i.ToVappLeaseOutputWithContext(context.Background())
}

func (i VappLeaseArgs) ToVappLeaseOutputWithContext(ctx context.Context) VappLeaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappLeaseOutput)
}

func (i VappLeaseArgs) ToVappLeasePtrOutput() VappLeasePtrOutput {
	return i.ToVappLeasePtrOutputWithContext(context.Background())
}

func (i VappLeaseArgs) ToVappLeasePtrOutputWithContext(ctx context.Context) VappLeasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappLeaseOutput).ToVappLeasePtrOutputWithContext(ctx)
}

// VappLeasePtrInput is an input type that accepts VappLeaseArgs, VappLeasePtr and VappLeasePtrOutput values.
// You can construct a concrete instance of `VappLeasePtrInput` via:
//
//	        VappLeaseArgs{...}
//
//	or:
//
//	        nil
type VappLeasePtrInput interface {
	pulumi.Input

	ToVappLeasePtrOutput() VappLeasePtrOutput
	ToVappLeasePtrOutputWithContext(context.Context) VappLeasePtrOutput
}

type vappLeasePtrType VappLeaseArgs

func VappLeasePtr(v *VappLeaseArgs) VappLeasePtrInput {
	return (*vappLeasePtrType)(v)
}

func (*vappLeasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VappLease)(nil)).Elem()
}

func (i *vappLeasePtrType) ToVappLeasePtrOutput() VappLeasePtrOutput {
	return i.ToVappLeasePtrOutputWithContext(context.Background())
}

func (i *vappLeasePtrType) ToVappLeasePtrOutputWithContext(ctx context.Context) VappLeasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappLeasePtrOutput)
}

type VappLeaseOutput struct{ *pulumi.OutputState }

func (VappLeaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappLease)(nil)).Elem()
}

func (o VappLeaseOutput) ToVappLeaseOutput() VappLeaseOutput {
	return o
}

func (o VappLeaseOutput) ToVappLeaseOutputWithContext(ctx context.Context) VappLeaseOutput {
	return o
}

func (o VappLeaseOutput) ToVappLeasePtrOutput() VappLeasePtrOutput {
	return o.ToVappLeasePtrOutputWithContext(context.Background())
}

func (o VappLeaseOutput) ToVappLeasePtrOutputWithContext(ctx context.Context) VappLeasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VappLease) *VappLease {
		return &v
	}).(VappLeasePtrOutput)
}

// How long any of the VMs in the vApp can run before the vApp is automatically powered off or suspended. 0 means never expires (or maximum allowed by Org). Regular values accepted from 3600+.
func (o VappLeaseOutput) RuntimeLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v VappLease) int { return v.RuntimeLeaseInSec }).(pulumi.IntOutput)
}

// How long the vApp is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by Org). Regular values accepted from 3600+.
func (o VappLeaseOutput) StorageLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v VappLease) int { return v.StorageLeaseInSec }).(pulumi.IntOutput)
}

type VappLeasePtrOutput struct{ *pulumi.OutputState }

func (VappLeasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VappLease)(nil)).Elem()
}

func (o VappLeasePtrOutput) ToVappLeasePtrOutput() VappLeasePtrOutput {
	return o
}

func (o VappLeasePtrOutput) ToVappLeasePtrOutputWithContext(ctx context.Context) VappLeasePtrOutput {
	return o
}

func (o VappLeasePtrOutput) Elem() VappLeaseOutput {
	return o.ApplyT(func(v *VappLease) VappLease {
		if v != nil {
			return *v
		}
		var ret VappLease
		return ret
	}).(VappLeaseOutput)
}

// How long any of the VMs in the vApp can run before the vApp is automatically powered off or suspended. 0 means never expires (or maximum allowed by Org). Regular values accepted from 3600+.
func (o VappLeasePtrOutput) RuntimeLeaseInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VappLease) *int {
		if v == nil {
			return nil
		}
		return &v.RuntimeLeaseInSec
	}).(pulumi.IntPtrOutput)
}

// How long the vApp is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by Org). Regular values accepted from 3600+.
func (o VappLeasePtrOutput) StorageLeaseInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VappLease) *int {
		if v == nil {
			return nil
		}
		return &v.StorageLeaseInSec
	}).(pulumi.IntPtrOutput)
}

type VappMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// VappMetadataEntryInput is an input type that accepts VappMetadataEntryArgs and VappMetadataEntryOutput values.
// You can construct a concrete instance of `VappMetadataEntryInput` via:
//
//	VappMetadataEntryArgs{...}
type VappMetadataEntryInput interface {
	pulumi.Input

	ToVappMetadataEntryOutput() VappMetadataEntryOutput
	ToVappMetadataEntryOutputWithContext(context.Context) VappMetadataEntryOutput
}

type VappMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VappMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappMetadataEntry)(nil)).Elem()
}

func (i VappMetadataEntryArgs) ToVappMetadataEntryOutput() VappMetadataEntryOutput {
	return i.ToVappMetadataEntryOutputWithContext(context.Background())
}

func (i VappMetadataEntryArgs) ToVappMetadataEntryOutputWithContext(ctx context.Context) VappMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappMetadataEntryOutput)
}

// VappMetadataEntryArrayInput is an input type that accepts VappMetadataEntryArray and VappMetadataEntryArrayOutput values.
// You can construct a concrete instance of `VappMetadataEntryArrayInput` via:
//
//	VappMetadataEntryArray{ VappMetadataEntryArgs{...} }
type VappMetadataEntryArrayInput interface {
	pulumi.Input

	ToVappMetadataEntryArrayOutput() VappMetadataEntryArrayOutput
	ToVappMetadataEntryArrayOutputWithContext(context.Context) VappMetadataEntryArrayOutput
}

type VappMetadataEntryArray []VappMetadataEntryInput

func (VappMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappMetadataEntry)(nil)).Elem()
}

func (i VappMetadataEntryArray) ToVappMetadataEntryArrayOutput() VappMetadataEntryArrayOutput {
	return i.ToVappMetadataEntryArrayOutputWithContext(context.Background())
}

func (i VappMetadataEntryArray) ToVappMetadataEntryArrayOutputWithContext(ctx context.Context) VappMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappMetadataEntryArrayOutput)
}

type VappMetadataEntryOutput struct{ *pulumi.OutputState }

func (VappMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappMetadataEntry)(nil)).Elem()
}

func (o VappMetadataEntryOutput) ToVappMetadataEntryOutput() VappMetadataEntryOutput {
	return o
}

func (o VappMetadataEntryOutput) ToVappMetadataEntryOutputWithContext(ctx context.Context) VappMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o VappMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o VappMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o VappMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o VappMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o VappMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VappMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (VappMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappMetadataEntry)(nil)).Elem()
}

func (o VappMetadataEntryArrayOutput) ToVappMetadataEntryArrayOutput() VappMetadataEntryArrayOutput {
	return o
}

func (o VappMetadataEntryArrayOutput) ToVappMetadataEntryArrayOutputWithContext(ctx context.Context) VappMetadataEntryArrayOutput {
	return o
}

func (o VappMetadataEntryArrayOutput) Index(i pulumi.IntInput) VappMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappMetadataEntry {
		return vs[0].([]VappMetadataEntry)[vs[1].(int)]
	}).(VappMetadataEntryOutput)
}

type VappNatRulesRule struct {
	// External IP address to forward to or External IP address to map to VM
	ExternalIp *string `pulumi:"externalIp"`
	// External port to forward.
	ExternalPort *int `pulumi:"externalPort"`
	// Internal port to forward.
	ForwardToPort *int `pulumi:"forwardToPort"`
	// ID of the rule. Can be used to track syslog messages.
	Id *string `pulumi:"id"`
	// Mapping mode. One of: `automatic`, `manual`
	MappingMode *string `pulumi:"mappingMode"`
	// Protocol to forward. One of: `TCP` (forward TCP packets), `UDP` (forward UDP packets), `TCP_UDP` (forward TCP and UDP packets).
	Protocol *string `pulumi:"protocol"`
	// VM to which this rule applies.
	VmId string `pulumi:"vmId"`
	// VM NIC ID to which this rule applies.
	VmNicId int `pulumi:"vmNicId"`
}

// VappNatRulesRuleInput is an input type that accepts VappNatRulesRuleArgs and VappNatRulesRuleOutput values.
// You can construct a concrete instance of `VappNatRulesRuleInput` via:
//
//	VappNatRulesRuleArgs{...}
type VappNatRulesRuleInput interface {
	pulumi.Input

	ToVappNatRulesRuleOutput() VappNatRulesRuleOutput
	ToVappNatRulesRuleOutputWithContext(context.Context) VappNatRulesRuleOutput
}

type VappNatRulesRuleArgs struct {
	// External IP address to forward to or External IP address to map to VM
	ExternalIp pulumi.StringPtrInput `pulumi:"externalIp"`
	// External port to forward.
	ExternalPort pulumi.IntPtrInput `pulumi:"externalPort"`
	// Internal port to forward.
	ForwardToPort pulumi.IntPtrInput `pulumi:"forwardToPort"`
	// ID of the rule. Can be used to track syslog messages.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Mapping mode. One of: `automatic`, `manual`
	MappingMode pulumi.StringPtrInput `pulumi:"mappingMode"`
	// Protocol to forward. One of: `TCP` (forward TCP packets), `UDP` (forward UDP packets), `TCP_UDP` (forward TCP and UDP packets).
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// VM to which this rule applies.
	VmId pulumi.StringInput `pulumi:"vmId"`
	// VM NIC ID to which this rule applies.
	VmNicId pulumi.IntInput `pulumi:"vmNicId"`
}

func (VappNatRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappNatRulesRule)(nil)).Elem()
}

func (i VappNatRulesRuleArgs) ToVappNatRulesRuleOutput() VappNatRulesRuleOutput {
	return i.ToVappNatRulesRuleOutputWithContext(context.Background())
}

func (i VappNatRulesRuleArgs) ToVappNatRulesRuleOutputWithContext(ctx context.Context) VappNatRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappNatRulesRuleOutput)
}

// VappNatRulesRuleArrayInput is an input type that accepts VappNatRulesRuleArray and VappNatRulesRuleArrayOutput values.
// You can construct a concrete instance of `VappNatRulesRuleArrayInput` via:
//
//	VappNatRulesRuleArray{ VappNatRulesRuleArgs{...} }
type VappNatRulesRuleArrayInput interface {
	pulumi.Input

	ToVappNatRulesRuleArrayOutput() VappNatRulesRuleArrayOutput
	ToVappNatRulesRuleArrayOutputWithContext(context.Context) VappNatRulesRuleArrayOutput
}

type VappNatRulesRuleArray []VappNatRulesRuleInput

func (VappNatRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappNatRulesRule)(nil)).Elem()
}

func (i VappNatRulesRuleArray) ToVappNatRulesRuleArrayOutput() VappNatRulesRuleArrayOutput {
	return i.ToVappNatRulesRuleArrayOutputWithContext(context.Background())
}

func (i VappNatRulesRuleArray) ToVappNatRulesRuleArrayOutputWithContext(ctx context.Context) VappNatRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappNatRulesRuleArrayOutput)
}

type VappNatRulesRuleOutput struct{ *pulumi.OutputState }

func (VappNatRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappNatRulesRule)(nil)).Elem()
}

func (o VappNatRulesRuleOutput) ToVappNatRulesRuleOutput() VappNatRulesRuleOutput {
	return o
}

func (o VappNatRulesRuleOutput) ToVappNatRulesRuleOutputWithContext(ctx context.Context) VappNatRulesRuleOutput {
	return o
}

// External IP address to forward to or External IP address to map to VM
func (o VappNatRulesRuleOutput) ExternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappNatRulesRule) *string { return v.ExternalIp }).(pulumi.StringPtrOutput)
}

// External port to forward.
func (o VappNatRulesRuleOutput) ExternalPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappNatRulesRule) *int { return v.ExternalPort }).(pulumi.IntPtrOutput)
}

// Internal port to forward.
func (o VappNatRulesRuleOutput) ForwardToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappNatRulesRule) *int { return v.ForwardToPort }).(pulumi.IntPtrOutput)
}

// ID of the rule. Can be used to track syslog messages.
func (o VappNatRulesRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappNatRulesRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Mapping mode. One of: `automatic`, `manual`
func (o VappNatRulesRuleOutput) MappingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappNatRulesRule) *string { return v.MappingMode }).(pulumi.StringPtrOutput)
}

// Protocol to forward. One of: `TCP` (forward TCP packets), `UDP` (forward UDP packets), `TCP_UDP` (forward TCP and UDP packets).
func (o VappNatRulesRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappNatRulesRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// VM to which this rule applies.
func (o VappNatRulesRuleOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v VappNatRulesRule) string { return v.VmId }).(pulumi.StringOutput)
}

// VM NIC ID to which this rule applies.
func (o VappNatRulesRuleOutput) VmNicId() pulumi.IntOutput {
	return o.ApplyT(func(v VappNatRulesRule) int { return v.VmNicId }).(pulumi.IntOutput)
}

type VappNatRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (VappNatRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappNatRulesRule)(nil)).Elem()
}

func (o VappNatRulesRuleArrayOutput) ToVappNatRulesRuleArrayOutput() VappNatRulesRuleArrayOutput {
	return o
}

func (o VappNatRulesRuleArrayOutput) ToVappNatRulesRuleArrayOutputWithContext(ctx context.Context) VappNatRulesRuleArrayOutput {
	return o
}

func (o VappNatRulesRuleArrayOutput) Index(i pulumi.IntInput) VappNatRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappNatRulesRule {
		return vs[0].([]VappNatRulesRule)[vs[1].(int)]
	}).(VappNatRulesRuleOutput)
}

type VappNetworkDhcpPool struct {
	DefaultLeaseTime *int    `pulumi:"defaultLeaseTime"`
	Enabled          *bool   `pulumi:"enabled"`
	EndAddress       *string `pulumi:"endAddress"`
	MaxLeaseTime     *int    `pulumi:"maxLeaseTime"`
	StartAddress     string  `pulumi:"startAddress"`
}

// VappNetworkDhcpPoolInput is an input type that accepts VappNetworkDhcpPoolArgs and VappNetworkDhcpPoolOutput values.
// You can construct a concrete instance of `VappNetworkDhcpPoolInput` via:
//
//	VappNetworkDhcpPoolArgs{...}
type VappNetworkDhcpPoolInput interface {
	pulumi.Input

	ToVappNetworkDhcpPoolOutput() VappNetworkDhcpPoolOutput
	ToVappNetworkDhcpPoolOutputWithContext(context.Context) VappNetworkDhcpPoolOutput
}

type VappNetworkDhcpPoolArgs struct {
	DefaultLeaseTime pulumi.IntPtrInput    `pulumi:"defaultLeaseTime"`
	Enabled          pulumi.BoolPtrInput   `pulumi:"enabled"`
	EndAddress       pulumi.StringPtrInput `pulumi:"endAddress"`
	MaxLeaseTime     pulumi.IntPtrInput    `pulumi:"maxLeaseTime"`
	StartAddress     pulumi.StringInput    `pulumi:"startAddress"`
}

func (VappNetworkDhcpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappNetworkDhcpPool)(nil)).Elem()
}

func (i VappNetworkDhcpPoolArgs) ToVappNetworkDhcpPoolOutput() VappNetworkDhcpPoolOutput {
	return i.ToVappNetworkDhcpPoolOutputWithContext(context.Background())
}

func (i VappNetworkDhcpPoolArgs) ToVappNetworkDhcpPoolOutputWithContext(ctx context.Context) VappNetworkDhcpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappNetworkDhcpPoolOutput)
}

// VappNetworkDhcpPoolArrayInput is an input type that accepts VappNetworkDhcpPoolArray and VappNetworkDhcpPoolArrayOutput values.
// You can construct a concrete instance of `VappNetworkDhcpPoolArrayInput` via:
//
//	VappNetworkDhcpPoolArray{ VappNetworkDhcpPoolArgs{...} }
type VappNetworkDhcpPoolArrayInput interface {
	pulumi.Input

	ToVappNetworkDhcpPoolArrayOutput() VappNetworkDhcpPoolArrayOutput
	ToVappNetworkDhcpPoolArrayOutputWithContext(context.Context) VappNetworkDhcpPoolArrayOutput
}

type VappNetworkDhcpPoolArray []VappNetworkDhcpPoolInput

func (VappNetworkDhcpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappNetworkDhcpPool)(nil)).Elem()
}

func (i VappNetworkDhcpPoolArray) ToVappNetworkDhcpPoolArrayOutput() VappNetworkDhcpPoolArrayOutput {
	return i.ToVappNetworkDhcpPoolArrayOutputWithContext(context.Background())
}

func (i VappNetworkDhcpPoolArray) ToVappNetworkDhcpPoolArrayOutputWithContext(ctx context.Context) VappNetworkDhcpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappNetworkDhcpPoolArrayOutput)
}

type VappNetworkDhcpPoolOutput struct{ *pulumi.OutputState }

func (VappNetworkDhcpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappNetworkDhcpPool)(nil)).Elem()
}

func (o VappNetworkDhcpPoolOutput) ToVappNetworkDhcpPoolOutput() VappNetworkDhcpPoolOutput {
	return o
}

func (o VappNetworkDhcpPoolOutput) ToVappNetworkDhcpPoolOutputWithContext(ctx context.Context) VappNetworkDhcpPoolOutput {
	return o
}

func (o VappNetworkDhcpPoolOutput) DefaultLeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappNetworkDhcpPool) *int { return v.DefaultLeaseTime }).(pulumi.IntPtrOutput)
}

func (o VappNetworkDhcpPoolOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappNetworkDhcpPool) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o VappNetworkDhcpPoolOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappNetworkDhcpPool) *string { return v.EndAddress }).(pulumi.StringPtrOutput)
}

func (o VappNetworkDhcpPoolOutput) MaxLeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappNetworkDhcpPool) *int { return v.MaxLeaseTime }).(pulumi.IntPtrOutput)
}

func (o VappNetworkDhcpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VappNetworkDhcpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type VappNetworkDhcpPoolArrayOutput struct{ *pulumi.OutputState }

func (VappNetworkDhcpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappNetworkDhcpPool)(nil)).Elem()
}

func (o VappNetworkDhcpPoolArrayOutput) ToVappNetworkDhcpPoolArrayOutput() VappNetworkDhcpPoolArrayOutput {
	return o
}

func (o VappNetworkDhcpPoolArrayOutput) ToVappNetworkDhcpPoolArrayOutputWithContext(ctx context.Context) VappNetworkDhcpPoolArrayOutput {
	return o
}

func (o VappNetworkDhcpPoolArrayOutput) Index(i pulumi.IntInput) VappNetworkDhcpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappNetworkDhcpPool {
		return vs[0].([]VappNetworkDhcpPool)[vs[1].(int)]
	}).(VappNetworkDhcpPoolOutput)
}

type VappNetworkStaticIpPool struct {
	EndAddress   string `pulumi:"endAddress"`
	StartAddress string `pulumi:"startAddress"`
}

// VappNetworkStaticIpPoolInput is an input type that accepts VappNetworkStaticIpPoolArgs and VappNetworkStaticIpPoolOutput values.
// You can construct a concrete instance of `VappNetworkStaticIpPoolInput` via:
//
//	VappNetworkStaticIpPoolArgs{...}
type VappNetworkStaticIpPoolInput interface {
	pulumi.Input

	ToVappNetworkStaticIpPoolOutput() VappNetworkStaticIpPoolOutput
	ToVappNetworkStaticIpPoolOutputWithContext(context.Context) VappNetworkStaticIpPoolOutput
}

type VappNetworkStaticIpPoolArgs struct {
	EndAddress   pulumi.StringInput `pulumi:"endAddress"`
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (VappNetworkStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappNetworkStaticIpPool)(nil)).Elem()
}

func (i VappNetworkStaticIpPoolArgs) ToVappNetworkStaticIpPoolOutput() VappNetworkStaticIpPoolOutput {
	return i.ToVappNetworkStaticIpPoolOutputWithContext(context.Background())
}

func (i VappNetworkStaticIpPoolArgs) ToVappNetworkStaticIpPoolOutputWithContext(ctx context.Context) VappNetworkStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappNetworkStaticIpPoolOutput)
}

// VappNetworkStaticIpPoolArrayInput is an input type that accepts VappNetworkStaticIpPoolArray and VappNetworkStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `VappNetworkStaticIpPoolArrayInput` via:
//
//	VappNetworkStaticIpPoolArray{ VappNetworkStaticIpPoolArgs{...} }
type VappNetworkStaticIpPoolArrayInput interface {
	pulumi.Input

	ToVappNetworkStaticIpPoolArrayOutput() VappNetworkStaticIpPoolArrayOutput
	ToVappNetworkStaticIpPoolArrayOutputWithContext(context.Context) VappNetworkStaticIpPoolArrayOutput
}

type VappNetworkStaticIpPoolArray []VappNetworkStaticIpPoolInput

func (VappNetworkStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappNetworkStaticIpPool)(nil)).Elem()
}

func (i VappNetworkStaticIpPoolArray) ToVappNetworkStaticIpPoolArrayOutput() VappNetworkStaticIpPoolArrayOutput {
	return i.ToVappNetworkStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i VappNetworkStaticIpPoolArray) ToVappNetworkStaticIpPoolArrayOutputWithContext(ctx context.Context) VappNetworkStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappNetworkStaticIpPoolArrayOutput)
}

type VappNetworkStaticIpPoolOutput struct{ *pulumi.OutputState }

func (VappNetworkStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappNetworkStaticIpPool)(nil)).Elem()
}

func (o VappNetworkStaticIpPoolOutput) ToVappNetworkStaticIpPoolOutput() VappNetworkStaticIpPoolOutput {
	return o
}

func (o VappNetworkStaticIpPoolOutput) ToVappNetworkStaticIpPoolOutputWithContext(ctx context.Context) VappNetworkStaticIpPoolOutput {
	return o
}

func (o VappNetworkStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VappNetworkStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

func (o VappNetworkStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VappNetworkStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type VappNetworkStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (VappNetworkStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappNetworkStaticIpPool)(nil)).Elem()
}

func (o VappNetworkStaticIpPoolArrayOutput) ToVappNetworkStaticIpPoolArrayOutput() VappNetworkStaticIpPoolArrayOutput {
	return o
}

func (o VappNetworkStaticIpPoolArrayOutput) ToVappNetworkStaticIpPoolArrayOutputWithContext(ctx context.Context) VappNetworkStaticIpPoolArrayOutput {
	return o
}

func (o VappNetworkStaticIpPoolArrayOutput) Index(i pulumi.IntInput) VappNetworkStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappNetworkStaticIpPool {
		return vs[0].([]VappNetworkStaticIpPool)[vs[1].(int)]
	}).(VappNetworkStaticIpPoolOutput)
}

type VappStaticRoutingRule struct {
	// Name for the static route.
	Name string `pulumi:"name"`
	// network specification in CIDR.
	NetworkCidr string `pulumi:"networkCidr"`
	// IP Address of Next Hop router/gateway.
	NextHopIp string `pulumi:"nextHopIp"`
}

// VappStaticRoutingRuleInput is an input type that accepts VappStaticRoutingRuleArgs and VappStaticRoutingRuleOutput values.
// You can construct a concrete instance of `VappStaticRoutingRuleInput` via:
//
//	VappStaticRoutingRuleArgs{...}
type VappStaticRoutingRuleInput interface {
	pulumi.Input

	ToVappStaticRoutingRuleOutput() VappStaticRoutingRuleOutput
	ToVappStaticRoutingRuleOutputWithContext(context.Context) VappStaticRoutingRuleOutput
}

type VappStaticRoutingRuleArgs struct {
	// Name for the static route.
	Name pulumi.StringInput `pulumi:"name"`
	// network specification in CIDR.
	NetworkCidr pulumi.StringInput `pulumi:"networkCidr"`
	// IP Address of Next Hop router/gateway.
	NextHopIp pulumi.StringInput `pulumi:"nextHopIp"`
}

func (VappStaticRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappStaticRoutingRule)(nil)).Elem()
}

func (i VappStaticRoutingRuleArgs) ToVappStaticRoutingRuleOutput() VappStaticRoutingRuleOutput {
	return i.ToVappStaticRoutingRuleOutputWithContext(context.Background())
}

func (i VappStaticRoutingRuleArgs) ToVappStaticRoutingRuleOutputWithContext(ctx context.Context) VappStaticRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappStaticRoutingRuleOutput)
}

// VappStaticRoutingRuleArrayInput is an input type that accepts VappStaticRoutingRuleArray and VappStaticRoutingRuleArrayOutput values.
// You can construct a concrete instance of `VappStaticRoutingRuleArrayInput` via:
//
//	VappStaticRoutingRuleArray{ VappStaticRoutingRuleArgs{...} }
type VappStaticRoutingRuleArrayInput interface {
	pulumi.Input

	ToVappStaticRoutingRuleArrayOutput() VappStaticRoutingRuleArrayOutput
	ToVappStaticRoutingRuleArrayOutputWithContext(context.Context) VappStaticRoutingRuleArrayOutput
}

type VappStaticRoutingRuleArray []VappStaticRoutingRuleInput

func (VappStaticRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappStaticRoutingRule)(nil)).Elem()
}

func (i VappStaticRoutingRuleArray) ToVappStaticRoutingRuleArrayOutput() VappStaticRoutingRuleArrayOutput {
	return i.ToVappStaticRoutingRuleArrayOutputWithContext(context.Background())
}

func (i VappStaticRoutingRuleArray) ToVappStaticRoutingRuleArrayOutputWithContext(ctx context.Context) VappStaticRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappStaticRoutingRuleArrayOutput)
}

type VappStaticRoutingRuleOutput struct{ *pulumi.OutputState }

func (VappStaticRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappStaticRoutingRule)(nil)).Elem()
}

func (o VappStaticRoutingRuleOutput) ToVappStaticRoutingRuleOutput() VappStaticRoutingRuleOutput {
	return o
}

func (o VappStaticRoutingRuleOutput) ToVappStaticRoutingRuleOutputWithContext(ctx context.Context) VappStaticRoutingRuleOutput {
	return o
}

// Name for the static route.
func (o VappStaticRoutingRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VappStaticRoutingRule) string { return v.Name }).(pulumi.StringOutput)
}

// network specification in CIDR.
func (o VappStaticRoutingRuleOutput) NetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v VappStaticRoutingRule) string { return v.NetworkCidr }).(pulumi.StringOutput)
}

// IP Address of Next Hop router/gateway.
func (o VappStaticRoutingRuleOutput) NextHopIp() pulumi.StringOutput {
	return o.ApplyT(func(v VappStaticRoutingRule) string { return v.NextHopIp }).(pulumi.StringOutput)
}

type VappStaticRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (VappStaticRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappStaticRoutingRule)(nil)).Elem()
}

func (o VappStaticRoutingRuleArrayOutput) ToVappStaticRoutingRuleArrayOutput() VappStaticRoutingRuleArrayOutput {
	return o
}

func (o VappStaticRoutingRuleArrayOutput) ToVappStaticRoutingRuleArrayOutputWithContext(ctx context.Context) VappStaticRoutingRuleArrayOutput {
	return o
}

func (o VappStaticRoutingRuleArrayOutput) Index(i pulumi.IntInput) VappStaticRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappStaticRoutingRule {
		return vs[0].([]VappStaticRoutingRule)[vs[1].(int)]
	}).(VappStaticRoutingRuleOutput)
}

type VappVmBootOptions struct {
	// Number of milliseconds to wait between powering-on and booting the VM
	BootDelay *int `pulumi:"bootDelay"`
	// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
	BootRetryDelay *int `pulumi:"bootRetryDelay"`
	// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
	BootRetryEnabled *bool `pulumi:"bootRetryEnabled"`
	// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
	EfiSecureBoot            *bool `pulumi:"efiSecureBoot"`
	EnterBiosSetupOnNextBoot *bool `pulumi:"enterBiosSetupOnNextBoot"`
}

// VappVmBootOptionsInput is an input type that accepts VappVmBootOptionsArgs and VappVmBootOptionsOutput values.
// You can construct a concrete instance of `VappVmBootOptionsInput` via:
//
//	VappVmBootOptionsArgs{...}
type VappVmBootOptionsInput interface {
	pulumi.Input

	ToVappVmBootOptionsOutput() VappVmBootOptionsOutput
	ToVappVmBootOptionsOutputWithContext(context.Context) VappVmBootOptionsOutput
}

type VappVmBootOptionsArgs struct {
	// Number of milliseconds to wait between powering-on and booting the VM
	BootDelay pulumi.IntPtrInput `pulumi:"bootDelay"`
	// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
	BootRetryDelay pulumi.IntPtrInput `pulumi:"bootRetryDelay"`
	// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
	BootRetryEnabled pulumi.BoolPtrInput `pulumi:"bootRetryEnabled"`
	// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
	EfiSecureBoot            pulumi.BoolPtrInput `pulumi:"efiSecureBoot"`
	EnterBiosSetupOnNextBoot pulumi.BoolPtrInput `pulumi:"enterBiosSetupOnNextBoot"`
}

func (VappVmBootOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmBootOptions)(nil)).Elem()
}

func (i VappVmBootOptionsArgs) ToVappVmBootOptionsOutput() VappVmBootOptionsOutput {
	return i.ToVappVmBootOptionsOutputWithContext(context.Background())
}

func (i VappVmBootOptionsArgs) ToVappVmBootOptionsOutputWithContext(ctx context.Context) VappVmBootOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmBootOptionsOutput)
}

func (i VappVmBootOptionsArgs) ToVappVmBootOptionsPtrOutput() VappVmBootOptionsPtrOutput {
	return i.ToVappVmBootOptionsPtrOutputWithContext(context.Background())
}

func (i VappVmBootOptionsArgs) ToVappVmBootOptionsPtrOutputWithContext(ctx context.Context) VappVmBootOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmBootOptionsOutput).ToVappVmBootOptionsPtrOutputWithContext(ctx)
}

// VappVmBootOptionsPtrInput is an input type that accepts VappVmBootOptionsArgs, VappVmBootOptionsPtr and VappVmBootOptionsPtrOutput values.
// You can construct a concrete instance of `VappVmBootOptionsPtrInput` via:
//
//	        VappVmBootOptionsArgs{...}
//
//	or:
//
//	        nil
type VappVmBootOptionsPtrInput interface {
	pulumi.Input

	ToVappVmBootOptionsPtrOutput() VappVmBootOptionsPtrOutput
	ToVappVmBootOptionsPtrOutputWithContext(context.Context) VappVmBootOptionsPtrOutput
}

type vappVmBootOptionsPtrType VappVmBootOptionsArgs

func VappVmBootOptionsPtr(v *VappVmBootOptionsArgs) VappVmBootOptionsPtrInput {
	return (*vappVmBootOptionsPtrType)(v)
}

func (*vappVmBootOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VappVmBootOptions)(nil)).Elem()
}

func (i *vappVmBootOptionsPtrType) ToVappVmBootOptionsPtrOutput() VappVmBootOptionsPtrOutput {
	return i.ToVappVmBootOptionsPtrOutputWithContext(context.Background())
}

func (i *vappVmBootOptionsPtrType) ToVappVmBootOptionsPtrOutputWithContext(ctx context.Context) VappVmBootOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmBootOptionsPtrOutput)
}

type VappVmBootOptionsOutput struct{ *pulumi.OutputState }

func (VappVmBootOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmBootOptions)(nil)).Elem()
}

func (o VappVmBootOptionsOutput) ToVappVmBootOptionsOutput() VappVmBootOptionsOutput {
	return o
}

func (o VappVmBootOptionsOutput) ToVappVmBootOptionsOutputWithContext(ctx context.Context) VappVmBootOptionsOutput {
	return o
}

func (o VappVmBootOptionsOutput) ToVappVmBootOptionsPtrOutput() VappVmBootOptionsPtrOutput {
	return o.ToVappVmBootOptionsPtrOutputWithContext(context.Background())
}

func (o VappVmBootOptionsOutput) ToVappVmBootOptionsPtrOutputWithContext(ctx context.Context) VappVmBootOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VappVmBootOptions) *VappVmBootOptions {
		return &v
	}).(VappVmBootOptionsPtrOutput)
}

// Number of milliseconds to wait between powering-on and booting the VM
func (o VappVmBootOptionsOutput) BootDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappVmBootOptions) *int { return v.BootDelay }).(pulumi.IntPtrOutput)
}

// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
func (o VappVmBootOptionsOutput) BootRetryDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappVmBootOptions) *int { return v.BootRetryDelay }).(pulumi.IntPtrOutput)
}

// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
func (o VappVmBootOptionsOutput) BootRetryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmBootOptions) *bool { return v.BootRetryEnabled }).(pulumi.BoolPtrOutput)
}

// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
func (o VappVmBootOptionsOutput) EfiSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmBootOptions) *bool { return v.EfiSecureBoot }).(pulumi.BoolPtrOutput)
}

func (o VappVmBootOptionsOutput) EnterBiosSetupOnNextBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmBootOptions) *bool { return v.EnterBiosSetupOnNextBoot }).(pulumi.BoolPtrOutput)
}

type VappVmBootOptionsPtrOutput struct{ *pulumi.OutputState }

func (VappVmBootOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VappVmBootOptions)(nil)).Elem()
}

func (o VappVmBootOptionsPtrOutput) ToVappVmBootOptionsPtrOutput() VappVmBootOptionsPtrOutput {
	return o
}

func (o VappVmBootOptionsPtrOutput) ToVappVmBootOptionsPtrOutputWithContext(ctx context.Context) VappVmBootOptionsPtrOutput {
	return o
}

func (o VappVmBootOptionsPtrOutput) Elem() VappVmBootOptionsOutput {
	return o.ApplyT(func(v *VappVmBootOptions) VappVmBootOptions {
		if v != nil {
			return *v
		}
		var ret VappVmBootOptions
		return ret
	}).(VappVmBootOptionsOutput)
}

// Number of milliseconds to wait between powering-on and booting the VM
func (o VappVmBootOptionsPtrOutput) BootDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VappVmBootOptions) *int {
		if v == nil {
			return nil
		}
		return v.BootDelay
	}).(pulumi.IntPtrOutput)
}

// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
func (o VappVmBootOptionsPtrOutput) BootRetryDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VappVmBootOptions) *int {
		if v == nil {
			return nil
		}
		return v.BootRetryDelay
	}).(pulumi.IntPtrOutput)
}

// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
func (o VappVmBootOptionsPtrOutput) BootRetryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmBootOptions) *bool {
		if v == nil {
			return nil
		}
		return v.BootRetryEnabled
	}).(pulumi.BoolPtrOutput)
}

// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
func (o VappVmBootOptionsPtrOutput) EfiSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmBootOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EfiSecureBoot
	}).(pulumi.BoolPtrOutput)
}

func (o VappVmBootOptionsPtrOutput) EnterBiosSetupOnNextBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmBootOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnterBiosSetupOnNextBoot
	}).(pulumi.BoolPtrOutput)
}

type VappVmCustomization struct {
	// Manually specify admin password
	AdminPassword *string `pulumi:"adminPassword"`
	// Allow local administrator password
	AllowLocalAdminPassword *bool `pulumi:"allowLocalAdminPassword"`
	// Auto generate password
	AutoGeneratePassword *bool `pulumi:"autoGeneratePassword"`
	// 'true' value will change SID. Applicable only for Windows VMs
	ChangeSid *bool `pulumi:"changeSid"`
	// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
	Enabled *bool `pulumi:"enabled"`
	// 'true' value will cause the VM to reboot on every 'apply' operation
	Force *bool `pulumi:"force"`
	// Script to run on initial boot or with customization.force=true set
	Initscript *string `pulumi:"initscript"`
	// Enable this VM to join a domain
	JoinDomain *bool `pulumi:"joinDomain"`
	// Account organizational unit for domain name join
	JoinDomainAccountOu *string `pulumi:"joinDomainAccountOu"`
	// Custom domain name for join
	JoinDomainName *string `pulumi:"joinDomainName"`
	// Password for custom domain name join
	JoinDomainPassword *string `pulumi:"joinDomainPassword"`
	// Username for custom domain name join
	JoinDomainUser *string `pulumi:"joinDomainUser"`
	// Use organization's domain for joining
	JoinOrgDomain *bool `pulumi:"joinOrgDomain"`
	// Require Administrator to change password on first login
	MustChangePasswordOnFirstLogin *bool `pulumi:"mustChangePasswordOnFirstLogin"`
	// Number of times to log on automatically. '0' - disabled.
	NumberOfAutoLogons *int `pulumi:"numberOfAutoLogons"`
}

// VappVmCustomizationInput is an input type that accepts VappVmCustomizationArgs and VappVmCustomizationOutput values.
// You can construct a concrete instance of `VappVmCustomizationInput` via:
//
//	VappVmCustomizationArgs{...}
type VappVmCustomizationInput interface {
	pulumi.Input

	ToVappVmCustomizationOutput() VappVmCustomizationOutput
	ToVappVmCustomizationOutputWithContext(context.Context) VappVmCustomizationOutput
}

type VappVmCustomizationArgs struct {
	// Manually specify admin password
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Allow local administrator password
	AllowLocalAdminPassword pulumi.BoolPtrInput `pulumi:"allowLocalAdminPassword"`
	// Auto generate password
	AutoGeneratePassword pulumi.BoolPtrInput `pulumi:"autoGeneratePassword"`
	// 'true' value will change SID. Applicable only for Windows VMs
	ChangeSid pulumi.BoolPtrInput `pulumi:"changeSid"`
	// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// 'true' value will cause the VM to reboot on every 'apply' operation
	Force pulumi.BoolPtrInput `pulumi:"force"`
	// Script to run on initial boot or with customization.force=true set
	Initscript pulumi.StringPtrInput `pulumi:"initscript"`
	// Enable this VM to join a domain
	JoinDomain pulumi.BoolPtrInput `pulumi:"joinDomain"`
	// Account organizational unit for domain name join
	JoinDomainAccountOu pulumi.StringPtrInput `pulumi:"joinDomainAccountOu"`
	// Custom domain name for join
	JoinDomainName pulumi.StringPtrInput `pulumi:"joinDomainName"`
	// Password for custom domain name join
	JoinDomainPassword pulumi.StringPtrInput `pulumi:"joinDomainPassword"`
	// Username for custom domain name join
	JoinDomainUser pulumi.StringPtrInput `pulumi:"joinDomainUser"`
	// Use organization's domain for joining
	JoinOrgDomain pulumi.BoolPtrInput `pulumi:"joinOrgDomain"`
	// Require Administrator to change password on first login
	MustChangePasswordOnFirstLogin pulumi.BoolPtrInput `pulumi:"mustChangePasswordOnFirstLogin"`
	// Number of times to log on automatically. '0' - disabled.
	NumberOfAutoLogons pulumi.IntPtrInput `pulumi:"numberOfAutoLogons"`
}

func (VappVmCustomizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmCustomization)(nil)).Elem()
}

func (i VappVmCustomizationArgs) ToVappVmCustomizationOutput() VappVmCustomizationOutput {
	return i.ToVappVmCustomizationOutputWithContext(context.Background())
}

func (i VappVmCustomizationArgs) ToVappVmCustomizationOutputWithContext(ctx context.Context) VappVmCustomizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmCustomizationOutput)
}

func (i VappVmCustomizationArgs) ToVappVmCustomizationPtrOutput() VappVmCustomizationPtrOutput {
	return i.ToVappVmCustomizationPtrOutputWithContext(context.Background())
}

func (i VappVmCustomizationArgs) ToVappVmCustomizationPtrOutputWithContext(ctx context.Context) VappVmCustomizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmCustomizationOutput).ToVappVmCustomizationPtrOutputWithContext(ctx)
}

// VappVmCustomizationPtrInput is an input type that accepts VappVmCustomizationArgs, VappVmCustomizationPtr and VappVmCustomizationPtrOutput values.
// You can construct a concrete instance of `VappVmCustomizationPtrInput` via:
//
//	        VappVmCustomizationArgs{...}
//
//	or:
//
//	        nil
type VappVmCustomizationPtrInput interface {
	pulumi.Input

	ToVappVmCustomizationPtrOutput() VappVmCustomizationPtrOutput
	ToVappVmCustomizationPtrOutputWithContext(context.Context) VappVmCustomizationPtrOutput
}

type vappVmCustomizationPtrType VappVmCustomizationArgs

func VappVmCustomizationPtr(v *VappVmCustomizationArgs) VappVmCustomizationPtrInput {
	return (*vappVmCustomizationPtrType)(v)
}

func (*vappVmCustomizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VappVmCustomization)(nil)).Elem()
}

func (i *vappVmCustomizationPtrType) ToVappVmCustomizationPtrOutput() VappVmCustomizationPtrOutput {
	return i.ToVappVmCustomizationPtrOutputWithContext(context.Background())
}

func (i *vappVmCustomizationPtrType) ToVappVmCustomizationPtrOutputWithContext(ctx context.Context) VappVmCustomizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmCustomizationPtrOutput)
}

type VappVmCustomizationOutput struct{ *pulumi.OutputState }

func (VappVmCustomizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmCustomization)(nil)).Elem()
}

func (o VappVmCustomizationOutput) ToVappVmCustomizationOutput() VappVmCustomizationOutput {
	return o
}

func (o VappVmCustomizationOutput) ToVappVmCustomizationOutputWithContext(ctx context.Context) VappVmCustomizationOutput {
	return o
}

func (o VappVmCustomizationOutput) ToVappVmCustomizationPtrOutput() VappVmCustomizationPtrOutput {
	return o.ToVappVmCustomizationPtrOutputWithContext(context.Background())
}

func (o VappVmCustomizationOutput) ToVappVmCustomizationPtrOutputWithContext(ctx context.Context) VappVmCustomizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VappVmCustomization) *VappVmCustomization {
		return &v
	}).(VappVmCustomizationPtrOutput)
}

// Manually specify admin password
func (o VappVmCustomizationOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Allow local administrator password
func (o VappVmCustomizationOutput) AllowLocalAdminPassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *bool { return v.AllowLocalAdminPassword }).(pulumi.BoolPtrOutput)
}

// Auto generate password
func (o VappVmCustomizationOutput) AutoGeneratePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *bool { return v.AutoGeneratePassword }).(pulumi.BoolPtrOutput)
}

// 'true' value will change SID. Applicable only for Windows VMs
func (o VappVmCustomizationOutput) ChangeSid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *bool { return v.ChangeSid }).(pulumi.BoolPtrOutput)
}

// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
func (o VappVmCustomizationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// 'true' value will cause the VM to reboot on every 'apply' operation
func (o VappVmCustomizationOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

// Script to run on initial boot or with customization.force=true set
func (o VappVmCustomizationOutput) Initscript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *string { return v.Initscript }).(pulumi.StringPtrOutput)
}

// Enable this VM to join a domain
func (o VappVmCustomizationOutput) JoinDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *bool { return v.JoinDomain }).(pulumi.BoolPtrOutput)
}

// Account organizational unit for domain name join
func (o VappVmCustomizationOutput) JoinDomainAccountOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *string { return v.JoinDomainAccountOu }).(pulumi.StringPtrOutput)
}

// Custom domain name for join
func (o VappVmCustomizationOutput) JoinDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *string { return v.JoinDomainName }).(pulumi.StringPtrOutput)
}

// Password for custom domain name join
func (o VappVmCustomizationOutput) JoinDomainPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *string { return v.JoinDomainPassword }).(pulumi.StringPtrOutput)
}

// Username for custom domain name join
func (o VappVmCustomizationOutput) JoinDomainUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *string { return v.JoinDomainUser }).(pulumi.StringPtrOutput)
}

// Use organization's domain for joining
func (o VappVmCustomizationOutput) JoinOrgDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *bool { return v.JoinOrgDomain }).(pulumi.BoolPtrOutput)
}

// Require Administrator to change password on first login
func (o VappVmCustomizationOutput) MustChangePasswordOnFirstLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *bool { return v.MustChangePasswordOnFirstLogin }).(pulumi.BoolPtrOutput)
}

// Number of times to log on automatically. '0' - disabled.
func (o VappVmCustomizationOutput) NumberOfAutoLogons() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappVmCustomization) *int { return v.NumberOfAutoLogons }).(pulumi.IntPtrOutput)
}

type VappVmCustomizationPtrOutput struct{ *pulumi.OutputState }

func (VappVmCustomizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VappVmCustomization)(nil)).Elem()
}

func (o VappVmCustomizationPtrOutput) ToVappVmCustomizationPtrOutput() VappVmCustomizationPtrOutput {
	return o
}

func (o VappVmCustomizationPtrOutput) ToVappVmCustomizationPtrOutputWithContext(ctx context.Context) VappVmCustomizationPtrOutput {
	return o
}

func (o VappVmCustomizationPtrOutput) Elem() VappVmCustomizationOutput {
	return o.ApplyT(func(v *VappVmCustomization) VappVmCustomization {
		if v != nil {
			return *v
		}
		var ret VappVmCustomization
		return ret
	}).(VappVmCustomizationOutput)
}

// Manually specify admin password
func (o VappVmCustomizationPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Allow local administrator password
func (o VappVmCustomizationPtrOutput) AllowLocalAdminPassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.AllowLocalAdminPassword
	}).(pulumi.BoolPtrOutput)
}

// Auto generate password
func (o VappVmCustomizationPtrOutput) AutoGeneratePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.AutoGeneratePassword
	}).(pulumi.BoolPtrOutput)
}

// 'true' value will change SID. Applicable only for Windows VMs
func (o VappVmCustomizationPtrOutput) ChangeSid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.ChangeSid
	}).(pulumi.BoolPtrOutput)
}

// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
func (o VappVmCustomizationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// 'true' value will cause the VM to reboot on every 'apply' operation
func (o VappVmCustomizationPtrOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.Force
	}).(pulumi.BoolPtrOutput)
}

// Script to run on initial boot or with customization.force=true set
func (o VappVmCustomizationPtrOutput) Initscript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.Initscript
	}).(pulumi.StringPtrOutput)
}

// Enable this VM to join a domain
func (o VappVmCustomizationPtrOutput) JoinDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.JoinDomain
	}).(pulumi.BoolPtrOutput)
}

// Account organizational unit for domain name join
func (o VappVmCustomizationPtrOutput) JoinDomainAccountOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.JoinDomainAccountOu
	}).(pulumi.StringPtrOutput)
}

// Custom domain name for join
func (o VappVmCustomizationPtrOutput) JoinDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.JoinDomainName
	}).(pulumi.StringPtrOutput)
}

// Password for custom domain name join
func (o VappVmCustomizationPtrOutput) JoinDomainPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.JoinDomainPassword
	}).(pulumi.StringPtrOutput)
}

// Username for custom domain name join
func (o VappVmCustomizationPtrOutput) JoinDomainUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.JoinDomainUser
	}).(pulumi.StringPtrOutput)
}

// Use organization's domain for joining
func (o VappVmCustomizationPtrOutput) JoinOrgDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.JoinOrgDomain
	}).(pulumi.BoolPtrOutput)
}

// Require Administrator to change password on first login
func (o VappVmCustomizationPtrOutput) MustChangePasswordOnFirstLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.MustChangePasswordOnFirstLogin
	}).(pulumi.BoolPtrOutput)
}

// Number of times to log on automatically. '0' - disabled.
func (o VappVmCustomizationPtrOutput) NumberOfAutoLogons() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VappVmCustomization) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfAutoLogons
	}).(pulumi.IntPtrOutput)
}

type VappVmDisk struct {
	// Bus number on which to place the disk controller
	BusNumber string `pulumi:"busNumber"`
	// A name for the VM, unique within the vApp
	Name string `pulumi:"name"`
	// (*v2.7+*) Independent disk size in MB.
	SizeInMb *int `pulumi:"sizeInMb"`
	// Unit number (slot) on the bus specified by BusNumber
	UnitNumber string `pulumi:"unitNumber"`
}

// VappVmDiskInput is an input type that accepts VappVmDiskArgs and VappVmDiskOutput values.
// You can construct a concrete instance of `VappVmDiskInput` via:
//
//	VappVmDiskArgs{...}
type VappVmDiskInput interface {
	pulumi.Input

	ToVappVmDiskOutput() VappVmDiskOutput
	ToVappVmDiskOutputWithContext(context.Context) VappVmDiskOutput
}

type VappVmDiskArgs struct {
	// Bus number on which to place the disk controller
	BusNumber pulumi.StringInput `pulumi:"busNumber"`
	// A name for the VM, unique within the vApp
	Name pulumi.StringInput `pulumi:"name"`
	// (*v2.7+*) Independent disk size in MB.
	SizeInMb pulumi.IntPtrInput `pulumi:"sizeInMb"`
	// Unit number (slot) on the bus specified by BusNumber
	UnitNumber pulumi.StringInput `pulumi:"unitNumber"`
}

func (VappVmDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmDisk)(nil)).Elem()
}

func (i VappVmDiskArgs) ToVappVmDiskOutput() VappVmDiskOutput {
	return i.ToVappVmDiskOutputWithContext(context.Background())
}

func (i VappVmDiskArgs) ToVappVmDiskOutputWithContext(ctx context.Context) VappVmDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmDiskOutput)
}

// VappVmDiskArrayInput is an input type that accepts VappVmDiskArray and VappVmDiskArrayOutput values.
// You can construct a concrete instance of `VappVmDiskArrayInput` via:
//
//	VappVmDiskArray{ VappVmDiskArgs{...} }
type VappVmDiskArrayInput interface {
	pulumi.Input

	ToVappVmDiskArrayOutput() VappVmDiskArrayOutput
	ToVappVmDiskArrayOutputWithContext(context.Context) VappVmDiskArrayOutput
}

type VappVmDiskArray []VappVmDiskInput

func (VappVmDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmDisk)(nil)).Elem()
}

func (i VappVmDiskArray) ToVappVmDiskArrayOutput() VappVmDiskArrayOutput {
	return i.ToVappVmDiskArrayOutputWithContext(context.Background())
}

func (i VappVmDiskArray) ToVappVmDiskArrayOutputWithContext(ctx context.Context) VappVmDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmDiskArrayOutput)
}

type VappVmDiskOutput struct{ *pulumi.OutputState }

func (VappVmDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmDisk)(nil)).Elem()
}

func (o VappVmDiskOutput) ToVappVmDiskOutput() VappVmDiskOutput {
	return o
}

func (o VappVmDiskOutput) ToVappVmDiskOutputWithContext(ctx context.Context) VappVmDiskOutput {
	return o
}

// Bus number on which to place the disk controller
func (o VappVmDiskOutput) BusNumber() pulumi.StringOutput {
	return o.ApplyT(func(v VappVmDisk) string { return v.BusNumber }).(pulumi.StringOutput)
}

// A name for the VM, unique within the vApp
func (o VappVmDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VappVmDisk) string { return v.Name }).(pulumi.StringOutput)
}

// (*v2.7+*) Independent disk size in MB.
func (o VappVmDiskOutput) SizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappVmDisk) *int { return v.SizeInMb }).(pulumi.IntPtrOutput)
}

// Unit number (slot) on the bus specified by BusNumber
func (o VappVmDiskOutput) UnitNumber() pulumi.StringOutput {
	return o.ApplyT(func(v VappVmDisk) string { return v.UnitNumber }).(pulumi.StringOutput)
}

type VappVmDiskArrayOutput struct{ *pulumi.OutputState }

func (VappVmDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmDisk)(nil)).Elem()
}

func (o VappVmDiskArrayOutput) ToVappVmDiskArrayOutput() VappVmDiskArrayOutput {
	return o
}

func (o VappVmDiskArrayOutput) ToVappVmDiskArrayOutputWithContext(ctx context.Context) VappVmDiskArrayOutput {
	return o
}

func (o VappVmDiskArrayOutput) Index(i pulumi.IntInput) VappVmDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappVmDisk {
		return vs[0].([]VappVmDisk)[vs[1].(int)]
	}).(VappVmDiskOutput)
}

type VappVmExtraConfig struct {
	// The key of the extra configuration item
	Key *string `pulumi:"key"`
	// Whether the extra configuration item is required
	Required *bool `pulumi:"required"`
	// The value of the extra configuration item
	Value *string `pulumi:"value"`
}

// VappVmExtraConfigInput is an input type that accepts VappVmExtraConfigArgs and VappVmExtraConfigOutput values.
// You can construct a concrete instance of `VappVmExtraConfigInput` via:
//
//	VappVmExtraConfigArgs{...}
type VappVmExtraConfigInput interface {
	pulumi.Input

	ToVappVmExtraConfigOutput() VappVmExtraConfigOutput
	ToVappVmExtraConfigOutputWithContext(context.Context) VappVmExtraConfigOutput
}

type VappVmExtraConfigArgs struct {
	// The key of the extra configuration item
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Whether the extra configuration item is required
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// The value of the extra configuration item
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VappVmExtraConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmExtraConfig)(nil)).Elem()
}

func (i VappVmExtraConfigArgs) ToVappVmExtraConfigOutput() VappVmExtraConfigOutput {
	return i.ToVappVmExtraConfigOutputWithContext(context.Background())
}

func (i VappVmExtraConfigArgs) ToVappVmExtraConfigOutputWithContext(ctx context.Context) VappVmExtraConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmExtraConfigOutput)
}

// VappVmExtraConfigArrayInput is an input type that accepts VappVmExtraConfigArray and VappVmExtraConfigArrayOutput values.
// You can construct a concrete instance of `VappVmExtraConfigArrayInput` via:
//
//	VappVmExtraConfigArray{ VappVmExtraConfigArgs{...} }
type VappVmExtraConfigArrayInput interface {
	pulumi.Input

	ToVappVmExtraConfigArrayOutput() VappVmExtraConfigArrayOutput
	ToVappVmExtraConfigArrayOutputWithContext(context.Context) VappVmExtraConfigArrayOutput
}

type VappVmExtraConfigArray []VappVmExtraConfigInput

func (VappVmExtraConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmExtraConfig)(nil)).Elem()
}

func (i VappVmExtraConfigArray) ToVappVmExtraConfigArrayOutput() VappVmExtraConfigArrayOutput {
	return i.ToVappVmExtraConfigArrayOutputWithContext(context.Background())
}

func (i VappVmExtraConfigArray) ToVappVmExtraConfigArrayOutputWithContext(ctx context.Context) VappVmExtraConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmExtraConfigArrayOutput)
}

type VappVmExtraConfigOutput struct{ *pulumi.OutputState }

func (VappVmExtraConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmExtraConfig)(nil)).Elem()
}

func (o VappVmExtraConfigOutput) ToVappVmExtraConfigOutput() VappVmExtraConfigOutput {
	return o
}

func (o VappVmExtraConfigOutput) ToVappVmExtraConfigOutputWithContext(ctx context.Context) VappVmExtraConfigOutput {
	return o
}

// The key of the extra configuration item
func (o VappVmExtraConfigOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmExtraConfig) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Whether the extra configuration item is required
func (o VappVmExtraConfigOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmExtraConfig) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// The value of the extra configuration item
func (o VappVmExtraConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmExtraConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VappVmExtraConfigArrayOutput struct{ *pulumi.OutputState }

func (VappVmExtraConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmExtraConfig)(nil)).Elem()
}

func (o VappVmExtraConfigArrayOutput) ToVappVmExtraConfigArrayOutput() VappVmExtraConfigArrayOutput {
	return o
}

func (o VappVmExtraConfigArrayOutput) ToVappVmExtraConfigArrayOutputWithContext(ctx context.Context) VappVmExtraConfigArrayOutput {
	return o
}

func (o VappVmExtraConfigArrayOutput) Index(i pulumi.IntInput) VappVmExtraConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappVmExtraConfig {
		return vs[0].([]VappVmExtraConfig)[vs[1].(int)]
	}).(VappVmExtraConfigOutput)
}

type VappVmInternalDisk struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber *int `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType *string `pulumi:"busType"`
	// The disk ID.
	DiskId *string `pulumi:"diskId"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops *int `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb *int `pulumi:"sizeInMb"`
	// Storage profile to override the default one
	StorageProfile *string `pulumi:"storageProfile"`
	// Specifies whether the disk storage is pre-allocated or allocated on demand.
	ThinProvisioned *bool `pulumi:"thinProvisioned"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber *int `pulumi:"unitNumber"`
}

// VappVmInternalDiskInput is an input type that accepts VappVmInternalDiskArgs and VappVmInternalDiskOutput values.
// You can construct a concrete instance of `VappVmInternalDiskInput` via:
//
//	VappVmInternalDiskArgs{...}
type VappVmInternalDiskInput interface {
	pulumi.Input

	ToVappVmInternalDiskOutput() VappVmInternalDiskOutput
	ToVappVmInternalDiskOutputWithContext(context.Context) VappVmInternalDiskOutput
}

type VappVmInternalDiskArgs struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber pulumi.IntPtrInput `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType pulumi.StringPtrInput `pulumi:"busType"`
	// The disk ID.
	DiskId pulumi.StringPtrInput `pulumi:"diskId"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb pulumi.IntPtrInput `pulumi:"sizeInMb"`
	// Storage profile to override the default one
	StorageProfile pulumi.StringPtrInput `pulumi:"storageProfile"`
	// Specifies whether the disk storage is pre-allocated or allocated on demand.
	ThinProvisioned pulumi.BoolPtrInput `pulumi:"thinProvisioned"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber pulumi.IntPtrInput `pulumi:"unitNumber"`
}

func (VappVmInternalDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmInternalDisk)(nil)).Elem()
}

func (i VappVmInternalDiskArgs) ToVappVmInternalDiskOutput() VappVmInternalDiskOutput {
	return i.ToVappVmInternalDiskOutputWithContext(context.Background())
}

func (i VappVmInternalDiskArgs) ToVappVmInternalDiskOutputWithContext(ctx context.Context) VappVmInternalDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmInternalDiskOutput)
}

// VappVmInternalDiskArrayInput is an input type that accepts VappVmInternalDiskArray and VappVmInternalDiskArrayOutput values.
// You can construct a concrete instance of `VappVmInternalDiskArrayInput` via:
//
//	VappVmInternalDiskArray{ VappVmInternalDiskArgs{...} }
type VappVmInternalDiskArrayInput interface {
	pulumi.Input

	ToVappVmInternalDiskArrayOutput() VappVmInternalDiskArrayOutput
	ToVappVmInternalDiskArrayOutputWithContext(context.Context) VappVmInternalDiskArrayOutput
}

type VappVmInternalDiskArray []VappVmInternalDiskInput

func (VappVmInternalDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmInternalDisk)(nil)).Elem()
}

func (i VappVmInternalDiskArray) ToVappVmInternalDiskArrayOutput() VappVmInternalDiskArrayOutput {
	return i.ToVappVmInternalDiskArrayOutputWithContext(context.Background())
}

func (i VappVmInternalDiskArray) ToVappVmInternalDiskArrayOutputWithContext(ctx context.Context) VappVmInternalDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmInternalDiskArrayOutput)
}

type VappVmInternalDiskOutput struct{ *pulumi.OutputState }

func (VappVmInternalDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmInternalDisk)(nil)).Elem()
}

func (o VappVmInternalDiskOutput) ToVappVmInternalDiskOutput() VappVmInternalDiskOutput {
	return o
}

func (o VappVmInternalDiskOutput) ToVappVmInternalDiskOutputWithContext(ctx context.Context) VappVmInternalDiskOutput {
	return o
}

// The number of the SCSI or IDE controller itself.
func (o VappVmInternalDiskOutput) BusNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappVmInternalDisk) *int { return v.BusNumber }).(pulumi.IntPtrOutput)
}

// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
func (o VappVmInternalDiskOutput) BusType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmInternalDisk) *string { return v.BusType }).(pulumi.StringPtrOutput)
}

// The disk ID.
func (o VappVmInternalDiskOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmInternalDisk) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// Specifies the IOPS for the disk. Default is 0.
func (o VappVmInternalDiskOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappVmInternalDisk) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The size of the disk in MB.
func (o VappVmInternalDiskOutput) SizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappVmInternalDisk) *int { return v.SizeInMb }).(pulumi.IntPtrOutput)
}

// Storage profile to override the default one
func (o VappVmInternalDiskOutput) StorageProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmInternalDisk) *string { return v.StorageProfile }).(pulumi.StringPtrOutput)
}

// Specifies whether the disk storage is pre-allocated or allocated on demand.
func (o VappVmInternalDiskOutput) ThinProvisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmInternalDisk) *bool { return v.ThinProvisioned }).(pulumi.BoolPtrOutput)
}

// The device number on the SCSI or IDE controller of the disk.
func (o VappVmInternalDiskOutput) UnitNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappVmInternalDisk) *int { return v.UnitNumber }).(pulumi.IntPtrOutput)
}

type VappVmInternalDiskArrayOutput struct{ *pulumi.OutputState }

func (VappVmInternalDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmInternalDisk)(nil)).Elem()
}

func (o VappVmInternalDiskArrayOutput) ToVappVmInternalDiskArrayOutput() VappVmInternalDiskArrayOutput {
	return o
}

func (o VappVmInternalDiskArrayOutput) ToVappVmInternalDiskArrayOutputWithContext(ctx context.Context) VappVmInternalDiskArrayOutput {
	return o
}

func (o VappVmInternalDiskArrayOutput) Index(i pulumi.IntInput) VappVmInternalDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappVmInternalDisk {
		return vs[0].([]VappVmInternalDisk)[vs[1].(int)]
	}).(VappVmInternalDiskOutput)
}

type VappVmMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// VappVmMetadataEntryInput is an input type that accepts VappVmMetadataEntryArgs and VappVmMetadataEntryOutput values.
// You can construct a concrete instance of `VappVmMetadataEntryInput` via:
//
//	VappVmMetadataEntryArgs{...}
type VappVmMetadataEntryInput interface {
	pulumi.Input

	ToVappVmMetadataEntryOutput() VappVmMetadataEntryOutput
	ToVappVmMetadataEntryOutputWithContext(context.Context) VappVmMetadataEntryOutput
}

type VappVmMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VappVmMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmMetadataEntry)(nil)).Elem()
}

func (i VappVmMetadataEntryArgs) ToVappVmMetadataEntryOutput() VappVmMetadataEntryOutput {
	return i.ToVappVmMetadataEntryOutputWithContext(context.Background())
}

func (i VappVmMetadataEntryArgs) ToVappVmMetadataEntryOutputWithContext(ctx context.Context) VappVmMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmMetadataEntryOutput)
}

// VappVmMetadataEntryArrayInput is an input type that accepts VappVmMetadataEntryArray and VappVmMetadataEntryArrayOutput values.
// You can construct a concrete instance of `VappVmMetadataEntryArrayInput` via:
//
//	VappVmMetadataEntryArray{ VappVmMetadataEntryArgs{...} }
type VappVmMetadataEntryArrayInput interface {
	pulumi.Input

	ToVappVmMetadataEntryArrayOutput() VappVmMetadataEntryArrayOutput
	ToVappVmMetadataEntryArrayOutputWithContext(context.Context) VappVmMetadataEntryArrayOutput
}

type VappVmMetadataEntryArray []VappVmMetadataEntryInput

func (VappVmMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmMetadataEntry)(nil)).Elem()
}

func (i VappVmMetadataEntryArray) ToVappVmMetadataEntryArrayOutput() VappVmMetadataEntryArrayOutput {
	return i.ToVappVmMetadataEntryArrayOutputWithContext(context.Background())
}

func (i VappVmMetadataEntryArray) ToVappVmMetadataEntryArrayOutputWithContext(ctx context.Context) VappVmMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmMetadataEntryArrayOutput)
}

type VappVmMetadataEntryOutput struct{ *pulumi.OutputState }

func (VappVmMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmMetadataEntry)(nil)).Elem()
}

func (o VappVmMetadataEntryOutput) ToVappVmMetadataEntryOutput() VappVmMetadataEntryOutput {
	return o
}

func (o VappVmMetadataEntryOutput) ToVappVmMetadataEntryOutputWithContext(ctx context.Context) VappVmMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o VappVmMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o VappVmMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o VappVmMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o VappVmMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o VappVmMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VappVmMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (VappVmMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmMetadataEntry)(nil)).Elem()
}

func (o VappVmMetadataEntryArrayOutput) ToVappVmMetadataEntryArrayOutput() VappVmMetadataEntryArrayOutput {
	return o
}

func (o VappVmMetadataEntryArrayOutput) ToVappVmMetadataEntryArrayOutputWithContext(ctx context.Context) VappVmMetadataEntryArrayOutput {
	return o
}

func (o VappVmMetadataEntryArrayOutput) Index(i pulumi.IntInput) VappVmMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappVmMetadataEntry {
		return vs[0].([]VappVmMetadataEntry)[vs[1].(int)]
	}).(VappVmMetadataEntryOutput)
}

type VappVmNetwork struct {
	// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
	AdapterType *string `pulumi:"adapterType"`
	// It defines if NIC is connected or not.
	Connected *bool `pulumi:"connected"`
	// IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	Ip *string `pulumi:"ip"`
	// IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	IpAllocationMode string `pulumi:"ipAllocationMode"`
	// Set to true if network interface should be primary. First network card in the list will be primary by default
	IsPrimary *bool `pulumi:"isPrimary"`
	// Mac address of network interface
	Mac *string `pulumi:"mac"`
	// A name for the VM, unique within the vApp
	Name *string `pulumi:"name"`
	// Secondary (IPv6) IP of the VM. Settings depend on `secondaryIpAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	SecondaryIp *string `pulumi:"secondaryIp"`
	// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	SecondaryIpAllocationMode *string `pulumi:"secondaryIpAllocationMode"`
	// Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC.
	Type string `pulumi:"type"`
}

// VappVmNetworkInput is an input type that accepts VappVmNetworkArgs and VappVmNetworkOutput values.
// You can construct a concrete instance of `VappVmNetworkInput` via:
//
//	VappVmNetworkArgs{...}
type VappVmNetworkInput interface {
	pulumi.Input

	ToVappVmNetworkOutput() VappVmNetworkOutput
	ToVappVmNetworkOutputWithContext(context.Context) VappVmNetworkOutput
}

type VappVmNetworkArgs struct {
	// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
	AdapterType pulumi.StringPtrInput `pulumi:"adapterType"`
	// It defines if NIC is connected or not.
	Connected pulumi.BoolPtrInput `pulumi:"connected"`
	// IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	IpAllocationMode pulumi.StringInput `pulumi:"ipAllocationMode"`
	// Set to true if network interface should be primary. First network card in the list will be primary by default
	IsPrimary pulumi.BoolPtrInput `pulumi:"isPrimary"`
	// Mac address of network interface
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// A name for the VM, unique within the vApp
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Secondary (IPv6) IP of the VM. Settings depend on `secondaryIpAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	SecondaryIp pulumi.StringPtrInput `pulumi:"secondaryIp"`
	// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	SecondaryIpAllocationMode pulumi.StringPtrInput `pulumi:"secondaryIpAllocationMode"`
	// Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VappVmNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmNetwork)(nil)).Elem()
}

func (i VappVmNetworkArgs) ToVappVmNetworkOutput() VappVmNetworkOutput {
	return i.ToVappVmNetworkOutputWithContext(context.Background())
}

func (i VappVmNetworkArgs) ToVappVmNetworkOutputWithContext(ctx context.Context) VappVmNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmNetworkOutput)
}

// VappVmNetworkArrayInput is an input type that accepts VappVmNetworkArray and VappVmNetworkArrayOutput values.
// You can construct a concrete instance of `VappVmNetworkArrayInput` via:
//
//	VappVmNetworkArray{ VappVmNetworkArgs{...} }
type VappVmNetworkArrayInput interface {
	pulumi.Input

	ToVappVmNetworkArrayOutput() VappVmNetworkArrayOutput
	ToVappVmNetworkArrayOutputWithContext(context.Context) VappVmNetworkArrayOutput
}

type VappVmNetworkArray []VappVmNetworkInput

func (VappVmNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmNetwork)(nil)).Elem()
}

func (i VappVmNetworkArray) ToVappVmNetworkArrayOutput() VappVmNetworkArrayOutput {
	return i.ToVappVmNetworkArrayOutputWithContext(context.Background())
}

func (i VappVmNetworkArray) ToVappVmNetworkArrayOutputWithContext(ctx context.Context) VappVmNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmNetworkArrayOutput)
}

type VappVmNetworkOutput struct{ *pulumi.OutputState }

func (VappVmNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmNetwork)(nil)).Elem()
}

func (o VappVmNetworkOutput) ToVappVmNetworkOutput() VappVmNetworkOutput {
	return o
}

func (o VappVmNetworkOutput) ToVappVmNetworkOutputWithContext(ctx context.Context) VappVmNetworkOutput {
	return o
}

// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
func (o VappVmNetworkOutput) AdapterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmNetwork) *string { return v.AdapterType }).(pulumi.StringPtrOutput)
}

// It defines if NIC is connected or not.
func (o VappVmNetworkOutput) Connected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmNetwork) *bool { return v.Connected }).(pulumi.BoolPtrOutput)
}

// IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
func (o VappVmNetworkOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmNetwork) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
func (o VappVmNetworkOutput) IpAllocationMode() pulumi.StringOutput {
	return o.ApplyT(func(v VappVmNetwork) string { return v.IpAllocationMode }).(pulumi.StringOutput)
}

// Set to true if network interface should be primary. First network card in the list will be primary by default
func (o VappVmNetworkOutput) IsPrimary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VappVmNetwork) *bool { return v.IsPrimary }).(pulumi.BoolPtrOutput)
}

// Mac address of network interface
func (o VappVmNetworkOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmNetwork) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// A name for the VM, unique within the vApp
func (o VappVmNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Secondary (IPv6) IP of the VM. Settings depend on `secondaryIpAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
func (o VappVmNetworkOutput) SecondaryIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmNetwork) *string { return v.SecondaryIp }).(pulumi.StringPtrOutput)
}

// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
func (o VappVmNetworkOutput) SecondaryIpAllocationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmNetwork) *string { return v.SecondaryIpAllocationMode }).(pulumi.StringPtrOutput)
}

// Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC.
func (o VappVmNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VappVmNetwork) string { return v.Type }).(pulumi.StringOutput)
}

type VappVmNetworkArrayOutput struct{ *pulumi.OutputState }

func (VappVmNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmNetwork)(nil)).Elem()
}

func (o VappVmNetworkArrayOutput) ToVappVmNetworkArrayOutput() VappVmNetworkArrayOutput {
	return o
}

func (o VappVmNetworkArrayOutput) ToVappVmNetworkArrayOutputWithContext(ctx context.Context) VappVmNetworkArrayOutput {
	return o
}

func (o VappVmNetworkArrayOutput) Index(i pulumi.IntInput) VappVmNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappVmNetwork {
		return vs[0].([]VappVmNetwork)[vs[1].(int)]
	}).(VappVmNetworkOutput)
}

type VappVmOverrideTemplateDisk struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber int `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType string `pulumi:"busType"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops *int `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb int `pulumi:"sizeInMb"`
	// Storage profile to override the default one
	StorageProfile *string `pulumi:"storageProfile"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber int `pulumi:"unitNumber"`
}

// VappVmOverrideTemplateDiskInput is an input type that accepts VappVmOverrideTemplateDiskArgs and VappVmOverrideTemplateDiskOutput values.
// You can construct a concrete instance of `VappVmOverrideTemplateDiskInput` via:
//
//	VappVmOverrideTemplateDiskArgs{...}
type VappVmOverrideTemplateDiskInput interface {
	pulumi.Input

	ToVappVmOverrideTemplateDiskOutput() VappVmOverrideTemplateDiskOutput
	ToVappVmOverrideTemplateDiskOutputWithContext(context.Context) VappVmOverrideTemplateDiskOutput
}

type VappVmOverrideTemplateDiskArgs struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber pulumi.IntInput `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType pulumi.StringInput `pulumi:"busType"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb pulumi.IntInput `pulumi:"sizeInMb"`
	// Storage profile to override the default one
	StorageProfile pulumi.StringPtrInput `pulumi:"storageProfile"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber pulumi.IntInput `pulumi:"unitNumber"`
}

func (VappVmOverrideTemplateDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmOverrideTemplateDisk)(nil)).Elem()
}

func (i VappVmOverrideTemplateDiskArgs) ToVappVmOverrideTemplateDiskOutput() VappVmOverrideTemplateDiskOutput {
	return i.ToVappVmOverrideTemplateDiskOutputWithContext(context.Background())
}

func (i VappVmOverrideTemplateDiskArgs) ToVappVmOverrideTemplateDiskOutputWithContext(ctx context.Context) VappVmOverrideTemplateDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmOverrideTemplateDiskOutput)
}

// VappVmOverrideTemplateDiskArrayInput is an input type that accepts VappVmOverrideTemplateDiskArray and VappVmOverrideTemplateDiskArrayOutput values.
// You can construct a concrete instance of `VappVmOverrideTemplateDiskArrayInput` via:
//
//	VappVmOverrideTemplateDiskArray{ VappVmOverrideTemplateDiskArgs{...} }
type VappVmOverrideTemplateDiskArrayInput interface {
	pulumi.Input

	ToVappVmOverrideTemplateDiskArrayOutput() VappVmOverrideTemplateDiskArrayOutput
	ToVappVmOverrideTemplateDiskArrayOutputWithContext(context.Context) VappVmOverrideTemplateDiskArrayOutput
}

type VappVmOverrideTemplateDiskArray []VappVmOverrideTemplateDiskInput

func (VappVmOverrideTemplateDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmOverrideTemplateDisk)(nil)).Elem()
}

func (i VappVmOverrideTemplateDiskArray) ToVappVmOverrideTemplateDiskArrayOutput() VappVmOverrideTemplateDiskArrayOutput {
	return i.ToVappVmOverrideTemplateDiskArrayOutputWithContext(context.Background())
}

func (i VappVmOverrideTemplateDiskArray) ToVappVmOverrideTemplateDiskArrayOutputWithContext(ctx context.Context) VappVmOverrideTemplateDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmOverrideTemplateDiskArrayOutput)
}

type VappVmOverrideTemplateDiskOutput struct{ *pulumi.OutputState }

func (VappVmOverrideTemplateDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmOverrideTemplateDisk)(nil)).Elem()
}

func (o VappVmOverrideTemplateDiskOutput) ToVappVmOverrideTemplateDiskOutput() VappVmOverrideTemplateDiskOutput {
	return o
}

func (o VappVmOverrideTemplateDiskOutput) ToVappVmOverrideTemplateDiskOutputWithContext(ctx context.Context) VappVmOverrideTemplateDiskOutput {
	return o
}

// The number of the SCSI or IDE controller itself.
func (o VappVmOverrideTemplateDiskOutput) BusNumber() pulumi.IntOutput {
	return o.ApplyT(func(v VappVmOverrideTemplateDisk) int { return v.BusNumber }).(pulumi.IntOutput)
}

// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
func (o VappVmOverrideTemplateDiskOutput) BusType() pulumi.StringOutput {
	return o.ApplyT(func(v VappVmOverrideTemplateDisk) string { return v.BusType }).(pulumi.StringOutput)
}

// Specifies the IOPS for the disk. Default is 0.
func (o VappVmOverrideTemplateDiskOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VappVmOverrideTemplateDisk) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The size of the disk in MB.
func (o VappVmOverrideTemplateDiskOutput) SizeInMb() pulumi.IntOutput {
	return o.ApplyT(func(v VappVmOverrideTemplateDisk) int { return v.SizeInMb }).(pulumi.IntOutput)
}

// Storage profile to override the default one
func (o VappVmOverrideTemplateDiskOutput) StorageProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VappVmOverrideTemplateDisk) *string { return v.StorageProfile }).(pulumi.StringPtrOutput)
}

// The device number on the SCSI or IDE controller of the disk.
func (o VappVmOverrideTemplateDiskOutput) UnitNumber() pulumi.IntOutput {
	return o.ApplyT(func(v VappVmOverrideTemplateDisk) int { return v.UnitNumber }).(pulumi.IntOutput)
}

type VappVmOverrideTemplateDiskArrayOutput struct{ *pulumi.OutputState }

func (VappVmOverrideTemplateDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmOverrideTemplateDisk)(nil)).Elem()
}

func (o VappVmOverrideTemplateDiskArrayOutput) ToVappVmOverrideTemplateDiskArrayOutput() VappVmOverrideTemplateDiskArrayOutput {
	return o
}

func (o VappVmOverrideTemplateDiskArrayOutput) ToVappVmOverrideTemplateDiskArrayOutputWithContext(ctx context.Context) VappVmOverrideTemplateDiskArrayOutput {
	return o
}

func (o VappVmOverrideTemplateDiskArrayOutput) Index(i pulumi.IntInput) VappVmOverrideTemplateDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappVmOverrideTemplateDisk {
		return vs[0].([]VappVmOverrideTemplateDisk)[vs[1].(int)]
	}).(VappVmOverrideTemplateDiskOutput)
}

type VappVmSetExtraConfig struct {
	// The key of the extra configuration item
	Key string `pulumi:"key"`
	// The value of the extra configuration item. Leaving the `value` field empty will result in the item deletion
	Value string `pulumi:"value"`
}

// VappVmSetExtraConfigInput is an input type that accepts VappVmSetExtraConfigArgs and VappVmSetExtraConfigOutput values.
// You can construct a concrete instance of `VappVmSetExtraConfigInput` via:
//
//	VappVmSetExtraConfigArgs{...}
type VappVmSetExtraConfigInput interface {
	pulumi.Input

	ToVappVmSetExtraConfigOutput() VappVmSetExtraConfigOutput
	ToVappVmSetExtraConfigOutputWithContext(context.Context) VappVmSetExtraConfigOutput
}

type VappVmSetExtraConfigArgs struct {
	// The key of the extra configuration item
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the extra configuration item. Leaving the `value` field empty will result in the item deletion
	Value pulumi.StringInput `pulumi:"value"`
}

func (VappVmSetExtraConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmSetExtraConfig)(nil)).Elem()
}

func (i VappVmSetExtraConfigArgs) ToVappVmSetExtraConfigOutput() VappVmSetExtraConfigOutput {
	return i.ToVappVmSetExtraConfigOutputWithContext(context.Background())
}

func (i VappVmSetExtraConfigArgs) ToVappVmSetExtraConfigOutputWithContext(ctx context.Context) VappVmSetExtraConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmSetExtraConfigOutput)
}

// VappVmSetExtraConfigArrayInput is an input type that accepts VappVmSetExtraConfigArray and VappVmSetExtraConfigArrayOutput values.
// You can construct a concrete instance of `VappVmSetExtraConfigArrayInput` via:
//
//	VappVmSetExtraConfigArray{ VappVmSetExtraConfigArgs{...} }
type VappVmSetExtraConfigArrayInput interface {
	pulumi.Input

	ToVappVmSetExtraConfigArrayOutput() VappVmSetExtraConfigArrayOutput
	ToVappVmSetExtraConfigArrayOutputWithContext(context.Context) VappVmSetExtraConfigArrayOutput
}

type VappVmSetExtraConfigArray []VappVmSetExtraConfigInput

func (VappVmSetExtraConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmSetExtraConfig)(nil)).Elem()
}

func (i VappVmSetExtraConfigArray) ToVappVmSetExtraConfigArrayOutput() VappVmSetExtraConfigArrayOutput {
	return i.ToVappVmSetExtraConfigArrayOutputWithContext(context.Background())
}

func (i VappVmSetExtraConfigArray) ToVappVmSetExtraConfigArrayOutputWithContext(ctx context.Context) VappVmSetExtraConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VappVmSetExtraConfigArrayOutput)
}

type VappVmSetExtraConfigOutput struct{ *pulumi.OutputState }

func (VappVmSetExtraConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VappVmSetExtraConfig)(nil)).Elem()
}

func (o VappVmSetExtraConfigOutput) ToVappVmSetExtraConfigOutput() VappVmSetExtraConfigOutput {
	return o
}

func (o VappVmSetExtraConfigOutput) ToVappVmSetExtraConfigOutputWithContext(ctx context.Context) VappVmSetExtraConfigOutput {
	return o
}

// The key of the extra configuration item
func (o VappVmSetExtraConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VappVmSetExtraConfig) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the extra configuration item. Leaving the `value` field empty will result in the item deletion
func (o VappVmSetExtraConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VappVmSetExtraConfig) string { return v.Value }).(pulumi.StringOutput)
}

type VappVmSetExtraConfigArrayOutput struct{ *pulumi.OutputState }

func (VappVmSetExtraConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VappVmSetExtraConfig)(nil)).Elem()
}

func (o VappVmSetExtraConfigArrayOutput) ToVappVmSetExtraConfigArrayOutput() VappVmSetExtraConfigArrayOutput {
	return o
}

func (o VappVmSetExtraConfigArrayOutput) ToVappVmSetExtraConfigArrayOutputWithContext(ctx context.Context) VappVmSetExtraConfigArrayOutput {
	return o
}

func (o VappVmSetExtraConfigArrayOutput) Index(i pulumi.IntInput) VappVmSetExtraConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VappVmSetExtraConfig {
		return vs[0].([]VappVmSetExtraConfig)[vs[1].(int)]
	}).(VappVmSetExtraConfigOutput)
}

type VdcGroupParticipatingOrgVdc struct {
	// Represents the fault domain of a given organization VDC
	FaultDomainTag *string `pulumi:"faultDomainTag"`
	// Specifies whether the VDC is local to this VCD site
	IsRemoteOrg *bool `pulumi:"isRemoteOrg"`
	// Specifies the network provider scope of the VDC
	NetworkProviderScope *string `pulumi:"networkProviderScope"`
	// Organization VDC belongs
	OrgId *string `pulumi:"orgId"`
	// Organization VDC belongs
	OrgName *string `pulumi:"orgName"`
	// Site VDC belongs
	SiteId *string `pulumi:"siteId"`
	// Site VDC belongs
	SiteName *string `pulumi:"siteName"`
	// The status that the group can be in (e.g. 'SAVING', 'SAVED', 'CONFIGURING', 'REALIZED', 'REALIZATION_FAILED', 'DELETING', 'DELETE_FAILED', 'OBJECT_NOT_FOUND', 'UNCONFIGURED').
	Status *string `pulumi:"status"`
	// VDC ID
	VdcId *string `pulumi:"vdcId"`
	// VDC name
	VdcName *string `pulumi:"vdcName"`
}

// VdcGroupParticipatingOrgVdcInput is an input type that accepts VdcGroupParticipatingOrgVdcArgs and VdcGroupParticipatingOrgVdcOutput values.
// You can construct a concrete instance of `VdcGroupParticipatingOrgVdcInput` via:
//
//	VdcGroupParticipatingOrgVdcArgs{...}
type VdcGroupParticipatingOrgVdcInput interface {
	pulumi.Input

	ToVdcGroupParticipatingOrgVdcOutput() VdcGroupParticipatingOrgVdcOutput
	ToVdcGroupParticipatingOrgVdcOutputWithContext(context.Context) VdcGroupParticipatingOrgVdcOutput
}

type VdcGroupParticipatingOrgVdcArgs struct {
	// Represents the fault domain of a given organization VDC
	FaultDomainTag pulumi.StringPtrInput `pulumi:"faultDomainTag"`
	// Specifies whether the VDC is local to this VCD site
	IsRemoteOrg pulumi.BoolPtrInput `pulumi:"isRemoteOrg"`
	// Specifies the network provider scope of the VDC
	NetworkProviderScope pulumi.StringPtrInput `pulumi:"networkProviderScope"`
	// Organization VDC belongs
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Organization VDC belongs
	OrgName pulumi.StringPtrInput `pulumi:"orgName"`
	// Site VDC belongs
	SiteId pulumi.StringPtrInput `pulumi:"siteId"`
	// Site VDC belongs
	SiteName pulumi.StringPtrInput `pulumi:"siteName"`
	// The status that the group can be in (e.g. 'SAVING', 'SAVED', 'CONFIGURING', 'REALIZED', 'REALIZATION_FAILED', 'DELETING', 'DELETE_FAILED', 'OBJECT_NOT_FOUND', 'UNCONFIGURED').
	Status pulumi.StringPtrInput `pulumi:"status"`
	// VDC ID
	VdcId pulumi.StringPtrInput `pulumi:"vdcId"`
	// VDC name
	VdcName pulumi.StringPtrInput `pulumi:"vdcName"`
}

func (VdcGroupParticipatingOrgVdcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VdcGroupParticipatingOrgVdc)(nil)).Elem()
}

func (i VdcGroupParticipatingOrgVdcArgs) ToVdcGroupParticipatingOrgVdcOutput() VdcGroupParticipatingOrgVdcOutput {
	return i.ToVdcGroupParticipatingOrgVdcOutputWithContext(context.Background())
}

func (i VdcGroupParticipatingOrgVdcArgs) ToVdcGroupParticipatingOrgVdcOutputWithContext(ctx context.Context) VdcGroupParticipatingOrgVdcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdcGroupParticipatingOrgVdcOutput)
}

// VdcGroupParticipatingOrgVdcArrayInput is an input type that accepts VdcGroupParticipatingOrgVdcArray and VdcGroupParticipatingOrgVdcArrayOutput values.
// You can construct a concrete instance of `VdcGroupParticipatingOrgVdcArrayInput` via:
//
//	VdcGroupParticipatingOrgVdcArray{ VdcGroupParticipatingOrgVdcArgs{...} }
type VdcGroupParticipatingOrgVdcArrayInput interface {
	pulumi.Input

	ToVdcGroupParticipatingOrgVdcArrayOutput() VdcGroupParticipatingOrgVdcArrayOutput
	ToVdcGroupParticipatingOrgVdcArrayOutputWithContext(context.Context) VdcGroupParticipatingOrgVdcArrayOutput
}

type VdcGroupParticipatingOrgVdcArray []VdcGroupParticipatingOrgVdcInput

func (VdcGroupParticipatingOrgVdcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VdcGroupParticipatingOrgVdc)(nil)).Elem()
}

func (i VdcGroupParticipatingOrgVdcArray) ToVdcGroupParticipatingOrgVdcArrayOutput() VdcGroupParticipatingOrgVdcArrayOutput {
	return i.ToVdcGroupParticipatingOrgVdcArrayOutputWithContext(context.Background())
}

func (i VdcGroupParticipatingOrgVdcArray) ToVdcGroupParticipatingOrgVdcArrayOutputWithContext(ctx context.Context) VdcGroupParticipatingOrgVdcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdcGroupParticipatingOrgVdcArrayOutput)
}

type VdcGroupParticipatingOrgVdcOutput struct{ *pulumi.OutputState }

func (VdcGroupParticipatingOrgVdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VdcGroupParticipatingOrgVdc)(nil)).Elem()
}

func (o VdcGroupParticipatingOrgVdcOutput) ToVdcGroupParticipatingOrgVdcOutput() VdcGroupParticipatingOrgVdcOutput {
	return o
}

func (o VdcGroupParticipatingOrgVdcOutput) ToVdcGroupParticipatingOrgVdcOutputWithContext(ctx context.Context) VdcGroupParticipatingOrgVdcOutput {
	return o
}

// Represents the fault domain of a given organization VDC
func (o VdcGroupParticipatingOrgVdcOutput) FaultDomainTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdcGroupParticipatingOrgVdc) *string { return v.FaultDomainTag }).(pulumi.StringPtrOutput)
}

// Specifies whether the VDC is local to this VCD site
func (o VdcGroupParticipatingOrgVdcOutput) IsRemoteOrg() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VdcGroupParticipatingOrgVdc) *bool { return v.IsRemoteOrg }).(pulumi.BoolPtrOutput)
}

// Specifies the network provider scope of the VDC
func (o VdcGroupParticipatingOrgVdcOutput) NetworkProviderScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdcGroupParticipatingOrgVdc) *string { return v.NetworkProviderScope }).(pulumi.StringPtrOutput)
}

// Organization VDC belongs
func (o VdcGroupParticipatingOrgVdcOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdcGroupParticipatingOrgVdc) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Organization VDC belongs
func (o VdcGroupParticipatingOrgVdcOutput) OrgName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdcGroupParticipatingOrgVdc) *string { return v.OrgName }).(pulumi.StringPtrOutput)
}

// Site VDC belongs
func (o VdcGroupParticipatingOrgVdcOutput) SiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdcGroupParticipatingOrgVdc) *string { return v.SiteId }).(pulumi.StringPtrOutput)
}

// Site VDC belongs
func (o VdcGroupParticipatingOrgVdcOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdcGroupParticipatingOrgVdc) *string { return v.SiteName }).(pulumi.StringPtrOutput)
}

// The status that the group can be in (e.g. 'SAVING', 'SAVED', 'CONFIGURING', 'REALIZED', 'REALIZATION_FAILED', 'DELETING', 'DELETE_FAILED', 'OBJECT_NOT_FOUND', 'UNCONFIGURED').
func (o VdcGroupParticipatingOrgVdcOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdcGroupParticipatingOrgVdc) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// VDC ID
func (o VdcGroupParticipatingOrgVdcOutput) VdcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdcGroupParticipatingOrgVdc) *string { return v.VdcId }).(pulumi.StringPtrOutput)
}

// VDC name
func (o VdcGroupParticipatingOrgVdcOutput) VdcName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdcGroupParticipatingOrgVdc) *string { return v.VdcName }).(pulumi.StringPtrOutput)
}

type VdcGroupParticipatingOrgVdcArrayOutput struct{ *pulumi.OutputState }

func (VdcGroupParticipatingOrgVdcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VdcGroupParticipatingOrgVdc)(nil)).Elem()
}

func (o VdcGroupParticipatingOrgVdcArrayOutput) ToVdcGroupParticipatingOrgVdcArrayOutput() VdcGroupParticipatingOrgVdcArrayOutput {
	return o
}

func (o VdcGroupParticipatingOrgVdcArrayOutput) ToVdcGroupParticipatingOrgVdcArrayOutputWithContext(ctx context.Context) VdcGroupParticipatingOrgVdcArrayOutput {
	return o
}

func (o VdcGroupParticipatingOrgVdcArrayOutput) Index(i pulumi.IntInput) VdcGroupParticipatingOrgVdcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VdcGroupParticipatingOrgVdc {
		return vs[0].([]VdcGroupParticipatingOrgVdc)[vs[1].(int)]
	}).(VdcGroupParticipatingOrgVdcOutput)
}

type VmBootOptions struct {
	// Number of milliseconds to wait between powering-on and booting the VM
	BootDelay *int `pulumi:"bootDelay"`
	// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
	BootRetryDelay *int `pulumi:"bootRetryDelay"`
	// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
	BootRetryEnabled *bool `pulumi:"bootRetryEnabled"`
	// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
	EfiSecureBoot            *bool `pulumi:"efiSecureBoot"`
	EnterBiosSetupOnNextBoot *bool `pulumi:"enterBiosSetupOnNextBoot"`
}

// VmBootOptionsInput is an input type that accepts VmBootOptionsArgs and VmBootOptionsOutput values.
// You can construct a concrete instance of `VmBootOptionsInput` via:
//
//	VmBootOptionsArgs{...}
type VmBootOptionsInput interface {
	pulumi.Input

	ToVmBootOptionsOutput() VmBootOptionsOutput
	ToVmBootOptionsOutputWithContext(context.Context) VmBootOptionsOutput
}

type VmBootOptionsArgs struct {
	// Number of milliseconds to wait between powering-on and booting the VM
	BootDelay pulumi.IntPtrInput `pulumi:"bootDelay"`
	// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
	BootRetryDelay pulumi.IntPtrInput `pulumi:"bootRetryDelay"`
	// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
	BootRetryEnabled pulumi.BoolPtrInput `pulumi:"bootRetryEnabled"`
	// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
	EfiSecureBoot            pulumi.BoolPtrInput `pulumi:"efiSecureBoot"`
	EnterBiosSetupOnNextBoot pulumi.BoolPtrInput `pulumi:"enterBiosSetupOnNextBoot"`
}

func (VmBootOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBootOptions)(nil)).Elem()
}

func (i VmBootOptionsArgs) ToVmBootOptionsOutput() VmBootOptionsOutput {
	return i.ToVmBootOptionsOutputWithContext(context.Background())
}

func (i VmBootOptionsArgs) ToVmBootOptionsOutputWithContext(ctx context.Context) VmBootOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBootOptionsOutput)
}

func (i VmBootOptionsArgs) ToVmBootOptionsPtrOutput() VmBootOptionsPtrOutput {
	return i.ToVmBootOptionsPtrOutputWithContext(context.Background())
}

func (i VmBootOptionsArgs) ToVmBootOptionsPtrOutputWithContext(ctx context.Context) VmBootOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBootOptionsOutput).ToVmBootOptionsPtrOutputWithContext(ctx)
}

// VmBootOptionsPtrInput is an input type that accepts VmBootOptionsArgs, VmBootOptionsPtr and VmBootOptionsPtrOutput values.
// You can construct a concrete instance of `VmBootOptionsPtrInput` via:
//
//	        VmBootOptionsArgs{...}
//
//	or:
//
//	        nil
type VmBootOptionsPtrInput interface {
	pulumi.Input

	ToVmBootOptionsPtrOutput() VmBootOptionsPtrOutput
	ToVmBootOptionsPtrOutputWithContext(context.Context) VmBootOptionsPtrOutput
}

type vmBootOptionsPtrType VmBootOptionsArgs

func VmBootOptionsPtr(v *VmBootOptionsArgs) VmBootOptionsPtrInput {
	return (*vmBootOptionsPtrType)(v)
}

func (*vmBootOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmBootOptions)(nil)).Elem()
}

func (i *vmBootOptionsPtrType) ToVmBootOptionsPtrOutput() VmBootOptionsPtrOutput {
	return i.ToVmBootOptionsPtrOutputWithContext(context.Background())
}

func (i *vmBootOptionsPtrType) ToVmBootOptionsPtrOutputWithContext(ctx context.Context) VmBootOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmBootOptionsPtrOutput)
}

type VmBootOptionsOutput struct{ *pulumi.OutputState }

func (VmBootOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmBootOptions)(nil)).Elem()
}

func (o VmBootOptionsOutput) ToVmBootOptionsOutput() VmBootOptionsOutput {
	return o
}

func (o VmBootOptionsOutput) ToVmBootOptionsOutputWithContext(ctx context.Context) VmBootOptionsOutput {
	return o
}

func (o VmBootOptionsOutput) ToVmBootOptionsPtrOutput() VmBootOptionsPtrOutput {
	return o.ToVmBootOptionsPtrOutputWithContext(context.Background())
}

func (o VmBootOptionsOutput) ToVmBootOptionsPtrOutputWithContext(ctx context.Context) VmBootOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmBootOptions) *VmBootOptions {
		return &v
	}).(VmBootOptionsPtrOutput)
}

// Number of milliseconds to wait between powering-on and booting the VM
func (o VmBootOptionsOutput) BootDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmBootOptions) *int { return v.BootDelay }).(pulumi.IntPtrOutput)
}

// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
func (o VmBootOptionsOutput) BootRetryDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmBootOptions) *int { return v.BootRetryDelay }).(pulumi.IntPtrOutput)
}

// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
func (o VmBootOptionsOutput) BootRetryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmBootOptions) *bool { return v.BootRetryEnabled }).(pulumi.BoolPtrOutput)
}

// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
func (o VmBootOptionsOutput) EfiSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmBootOptions) *bool { return v.EfiSecureBoot }).(pulumi.BoolPtrOutput)
}

func (o VmBootOptionsOutput) EnterBiosSetupOnNextBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmBootOptions) *bool { return v.EnterBiosSetupOnNextBoot }).(pulumi.BoolPtrOutput)
}

type VmBootOptionsPtrOutput struct{ *pulumi.OutputState }

func (VmBootOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmBootOptions)(nil)).Elem()
}

func (o VmBootOptionsPtrOutput) ToVmBootOptionsPtrOutput() VmBootOptionsPtrOutput {
	return o
}

func (o VmBootOptionsPtrOutput) ToVmBootOptionsPtrOutputWithContext(ctx context.Context) VmBootOptionsPtrOutput {
	return o
}

func (o VmBootOptionsPtrOutput) Elem() VmBootOptionsOutput {
	return o.ApplyT(func(v *VmBootOptions) VmBootOptions {
		if v != nil {
			return *v
		}
		var ret VmBootOptions
		return ret
	}).(VmBootOptionsOutput)
}

// Number of milliseconds to wait between powering-on and booting the VM
func (o VmBootOptionsPtrOutput) BootDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmBootOptions) *int {
		if v == nil {
			return nil
		}
		return v.BootDelay
	}).(pulumi.IntPtrOutput)
}

// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
func (o VmBootOptionsPtrOutput) BootRetryDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmBootOptions) *int {
		if v == nil {
			return nil
		}
		return v.BootRetryDelay
	}).(pulumi.IntPtrOutput)
}

// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
func (o VmBootOptionsPtrOutput) BootRetryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmBootOptions) *bool {
		if v == nil {
			return nil
		}
		return v.BootRetryEnabled
	}).(pulumi.BoolPtrOutput)
}

// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
func (o VmBootOptionsPtrOutput) EfiSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmBootOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EfiSecureBoot
	}).(pulumi.BoolPtrOutput)
}

func (o VmBootOptionsPtrOutput) EnterBiosSetupOnNextBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmBootOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnterBiosSetupOnNextBoot
	}).(pulumi.BoolPtrOutput)
}

type VmCustomization struct {
	// Manually specify admin password
	AdminPassword *string `pulumi:"adminPassword"`
	// Allow local administrator password
	AllowLocalAdminPassword *bool `pulumi:"allowLocalAdminPassword"`
	// Auto generate password
	AutoGeneratePassword *bool `pulumi:"autoGeneratePassword"`
	// 'true' value will change SID. Applicable only for Windows VMs
	ChangeSid *bool `pulumi:"changeSid"`
	// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
	Enabled *bool `pulumi:"enabled"`
	// 'true' value will cause the VM to reboot on every 'apply' operation
	Force *bool `pulumi:"force"`
	// Script to run on initial boot or with customization.force=true set
	Initscript *string `pulumi:"initscript"`
	// Enable this VM to join a domain
	JoinDomain *bool `pulumi:"joinDomain"`
	// Account organizational unit for domain name join
	JoinDomainAccountOu *string `pulumi:"joinDomainAccountOu"`
	// Custom domain name for join
	JoinDomainName *string `pulumi:"joinDomainName"`
	// Password for custom domain name join
	JoinDomainPassword *string `pulumi:"joinDomainPassword"`
	// Username for custom domain name join
	JoinDomainUser *string `pulumi:"joinDomainUser"`
	// Use organization's domain for joining
	JoinOrgDomain *bool `pulumi:"joinOrgDomain"`
	// Require Administrator to change password on first login
	MustChangePasswordOnFirstLogin *bool `pulumi:"mustChangePasswordOnFirstLogin"`
	// Number of times to log on automatically. '0' - disabled.
	NumberOfAutoLogons *int `pulumi:"numberOfAutoLogons"`
}

// VmCustomizationInput is an input type that accepts VmCustomizationArgs and VmCustomizationOutput values.
// You can construct a concrete instance of `VmCustomizationInput` via:
//
//	VmCustomizationArgs{...}
type VmCustomizationInput interface {
	pulumi.Input

	ToVmCustomizationOutput() VmCustomizationOutput
	ToVmCustomizationOutputWithContext(context.Context) VmCustomizationOutput
}

type VmCustomizationArgs struct {
	// Manually specify admin password
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Allow local administrator password
	AllowLocalAdminPassword pulumi.BoolPtrInput `pulumi:"allowLocalAdminPassword"`
	// Auto generate password
	AutoGeneratePassword pulumi.BoolPtrInput `pulumi:"autoGeneratePassword"`
	// 'true' value will change SID. Applicable only for Windows VMs
	ChangeSid pulumi.BoolPtrInput `pulumi:"changeSid"`
	// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// 'true' value will cause the VM to reboot on every 'apply' operation
	Force pulumi.BoolPtrInput `pulumi:"force"`
	// Script to run on initial boot or with customization.force=true set
	Initscript pulumi.StringPtrInput `pulumi:"initscript"`
	// Enable this VM to join a domain
	JoinDomain pulumi.BoolPtrInput `pulumi:"joinDomain"`
	// Account organizational unit for domain name join
	JoinDomainAccountOu pulumi.StringPtrInput `pulumi:"joinDomainAccountOu"`
	// Custom domain name for join
	JoinDomainName pulumi.StringPtrInput `pulumi:"joinDomainName"`
	// Password for custom domain name join
	JoinDomainPassword pulumi.StringPtrInput `pulumi:"joinDomainPassword"`
	// Username for custom domain name join
	JoinDomainUser pulumi.StringPtrInput `pulumi:"joinDomainUser"`
	// Use organization's domain for joining
	JoinOrgDomain pulumi.BoolPtrInput `pulumi:"joinOrgDomain"`
	// Require Administrator to change password on first login
	MustChangePasswordOnFirstLogin pulumi.BoolPtrInput `pulumi:"mustChangePasswordOnFirstLogin"`
	// Number of times to log on automatically. '0' - disabled.
	NumberOfAutoLogons pulumi.IntPtrInput `pulumi:"numberOfAutoLogons"`
}

func (VmCustomizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmCustomization)(nil)).Elem()
}

func (i VmCustomizationArgs) ToVmCustomizationOutput() VmCustomizationOutput {
	return i.ToVmCustomizationOutputWithContext(context.Background())
}

func (i VmCustomizationArgs) ToVmCustomizationOutputWithContext(ctx context.Context) VmCustomizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmCustomizationOutput)
}

func (i VmCustomizationArgs) ToVmCustomizationPtrOutput() VmCustomizationPtrOutput {
	return i.ToVmCustomizationPtrOutputWithContext(context.Background())
}

func (i VmCustomizationArgs) ToVmCustomizationPtrOutputWithContext(ctx context.Context) VmCustomizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmCustomizationOutput).ToVmCustomizationPtrOutputWithContext(ctx)
}

// VmCustomizationPtrInput is an input type that accepts VmCustomizationArgs, VmCustomizationPtr and VmCustomizationPtrOutput values.
// You can construct a concrete instance of `VmCustomizationPtrInput` via:
//
//	        VmCustomizationArgs{...}
//
//	or:
//
//	        nil
type VmCustomizationPtrInput interface {
	pulumi.Input

	ToVmCustomizationPtrOutput() VmCustomizationPtrOutput
	ToVmCustomizationPtrOutputWithContext(context.Context) VmCustomizationPtrOutput
}

type vmCustomizationPtrType VmCustomizationArgs

func VmCustomizationPtr(v *VmCustomizationArgs) VmCustomizationPtrInput {
	return (*vmCustomizationPtrType)(v)
}

func (*vmCustomizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmCustomization)(nil)).Elem()
}

func (i *vmCustomizationPtrType) ToVmCustomizationPtrOutput() VmCustomizationPtrOutput {
	return i.ToVmCustomizationPtrOutputWithContext(context.Background())
}

func (i *vmCustomizationPtrType) ToVmCustomizationPtrOutputWithContext(ctx context.Context) VmCustomizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmCustomizationPtrOutput)
}

type VmCustomizationOutput struct{ *pulumi.OutputState }

func (VmCustomizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmCustomization)(nil)).Elem()
}

func (o VmCustomizationOutput) ToVmCustomizationOutput() VmCustomizationOutput {
	return o
}

func (o VmCustomizationOutput) ToVmCustomizationOutputWithContext(ctx context.Context) VmCustomizationOutput {
	return o
}

func (o VmCustomizationOutput) ToVmCustomizationPtrOutput() VmCustomizationPtrOutput {
	return o.ToVmCustomizationPtrOutputWithContext(context.Background())
}

func (o VmCustomizationOutput) ToVmCustomizationPtrOutputWithContext(ctx context.Context) VmCustomizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmCustomization) *VmCustomization {
		return &v
	}).(VmCustomizationPtrOutput)
}

// Manually specify admin password
func (o VmCustomizationOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmCustomization) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Allow local administrator password
func (o VmCustomizationOutput) AllowLocalAdminPassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmCustomization) *bool { return v.AllowLocalAdminPassword }).(pulumi.BoolPtrOutput)
}

// Auto generate password
func (o VmCustomizationOutput) AutoGeneratePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmCustomization) *bool { return v.AutoGeneratePassword }).(pulumi.BoolPtrOutput)
}

// 'true' value will change SID. Applicable only for Windows VMs
func (o VmCustomizationOutput) ChangeSid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmCustomization) *bool { return v.ChangeSid }).(pulumi.BoolPtrOutput)
}

// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
func (o VmCustomizationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmCustomization) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// 'true' value will cause the VM to reboot on every 'apply' operation
func (o VmCustomizationOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmCustomization) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

// Script to run on initial boot or with customization.force=true set
func (o VmCustomizationOutput) Initscript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmCustomization) *string { return v.Initscript }).(pulumi.StringPtrOutput)
}

// Enable this VM to join a domain
func (o VmCustomizationOutput) JoinDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmCustomization) *bool { return v.JoinDomain }).(pulumi.BoolPtrOutput)
}

// Account organizational unit for domain name join
func (o VmCustomizationOutput) JoinDomainAccountOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmCustomization) *string { return v.JoinDomainAccountOu }).(pulumi.StringPtrOutput)
}

// Custom domain name for join
func (o VmCustomizationOutput) JoinDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmCustomization) *string { return v.JoinDomainName }).(pulumi.StringPtrOutput)
}

// Password for custom domain name join
func (o VmCustomizationOutput) JoinDomainPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmCustomization) *string { return v.JoinDomainPassword }).(pulumi.StringPtrOutput)
}

// Username for custom domain name join
func (o VmCustomizationOutput) JoinDomainUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmCustomization) *string { return v.JoinDomainUser }).(pulumi.StringPtrOutput)
}

// Use organization's domain for joining
func (o VmCustomizationOutput) JoinOrgDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmCustomization) *bool { return v.JoinOrgDomain }).(pulumi.BoolPtrOutput)
}

// Require Administrator to change password on first login
func (o VmCustomizationOutput) MustChangePasswordOnFirstLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmCustomization) *bool { return v.MustChangePasswordOnFirstLogin }).(pulumi.BoolPtrOutput)
}

// Number of times to log on automatically. '0' - disabled.
func (o VmCustomizationOutput) NumberOfAutoLogons() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmCustomization) *int { return v.NumberOfAutoLogons }).(pulumi.IntPtrOutput)
}

type VmCustomizationPtrOutput struct{ *pulumi.OutputState }

func (VmCustomizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmCustomization)(nil)).Elem()
}

func (o VmCustomizationPtrOutput) ToVmCustomizationPtrOutput() VmCustomizationPtrOutput {
	return o
}

func (o VmCustomizationPtrOutput) ToVmCustomizationPtrOutputWithContext(ctx context.Context) VmCustomizationPtrOutput {
	return o
}

func (o VmCustomizationPtrOutput) Elem() VmCustomizationOutput {
	return o.ApplyT(func(v *VmCustomization) VmCustomization {
		if v != nil {
			return *v
		}
		var ret VmCustomization
		return ret
	}).(VmCustomizationOutput)
}

// Manually specify admin password
func (o VmCustomizationPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Allow local administrator password
func (o VmCustomizationPtrOutput) AllowLocalAdminPassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.AllowLocalAdminPassword
	}).(pulumi.BoolPtrOutput)
}

// Auto generate password
func (o VmCustomizationPtrOutput) AutoGeneratePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.AutoGeneratePassword
	}).(pulumi.BoolPtrOutput)
}

// 'true' value will change SID. Applicable only for Windows VMs
func (o VmCustomizationPtrOutput) ChangeSid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.ChangeSid
	}).(pulumi.BoolPtrOutput)
}

// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
func (o VmCustomizationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// 'true' value will cause the VM to reboot on every 'apply' operation
func (o VmCustomizationPtrOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.Force
	}).(pulumi.BoolPtrOutput)
}

// Script to run on initial boot or with customization.force=true set
func (o VmCustomizationPtrOutput) Initscript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.Initscript
	}).(pulumi.StringPtrOutput)
}

// Enable this VM to join a domain
func (o VmCustomizationPtrOutput) JoinDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.JoinDomain
	}).(pulumi.BoolPtrOutput)
}

// Account organizational unit for domain name join
func (o VmCustomizationPtrOutput) JoinDomainAccountOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.JoinDomainAccountOu
	}).(pulumi.StringPtrOutput)
}

// Custom domain name for join
func (o VmCustomizationPtrOutput) JoinDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.JoinDomainName
	}).(pulumi.StringPtrOutput)
}

// Password for custom domain name join
func (o VmCustomizationPtrOutput) JoinDomainPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.JoinDomainPassword
	}).(pulumi.StringPtrOutput)
}

// Username for custom domain name join
func (o VmCustomizationPtrOutput) JoinDomainUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *string {
		if v == nil {
			return nil
		}
		return v.JoinDomainUser
	}).(pulumi.StringPtrOutput)
}

// Use organization's domain for joining
func (o VmCustomizationPtrOutput) JoinOrgDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.JoinOrgDomain
	}).(pulumi.BoolPtrOutput)
}

// Require Administrator to change password on first login
func (o VmCustomizationPtrOutput) MustChangePasswordOnFirstLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *bool {
		if v == nil {
			return nil
		}
		return v.MustChangePasswordOnFirstLogin
	}).(pulumi.BoolPtrOutput)
}

// Number of times to log on automatically. '0' - disabled.
func (o VmCustomizationPtrOutput) NumberOfAutoLogons() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmCustomization) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfAutoLogons
	}).(pulumi.IntPtrOutput)
}

type VmDisk struct {
	// Bus number on which to place the disk controller
	BusNumber string `pulumi:"busNumber"`
	// Independent disk name
	Name string `pulumi:"name"`
	// The size of the disk in MB.
	SizeInMb *int `pulumi:"sizeInMb"`
	// Unit number (slot) on the bus specified by BusNumber
	UnitNumber string `pulumi:"unitNumber"`
}

// VmDiskInput is an input type that accepts VmDiskArgs and VmDiskOutput values.
// You can construct a concrete instance of `VmDiskInput` via:
//
//	VmDiskArgs{...}
type VmDiskInput interface {
	pulumi.Input

	ToVmDiskOutput() VmDiskOutput
	ToVmDiskOutputWithContext(context.Context) VmDiskOutput
}

type VmDiskArgs struct {
	// Bus number on which to place the disk controller
	BusNumber pulumi.StringInput `pulumi:"busNumber"`
	// Independent disk name
	Name pulumi.StringInput `pulumi:"name"`
	// The size of the disk in MB.
	SizeInMb pulumi.IntPtrInput `pulumi:"sizeInMb"`
	// Unit number (slot) on the bus specified by BusNumber
	UnitNumber pulumi.StringInput `pulumi:"unitNumber"`
}

func (VmDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmDisk)(nil)).Elem()
}

func (i VmDiskArgs) ToVmDiskOutput() VmDiskOutput {
	return i.ToVmDiskOutputWithContext(context.Background())
}

func (i VmDiskArgs) ToVmDiskOutputWithContext(ctx context.Context) VmDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmDiskOutput)
}

// VmDiskArrayInput is an input type that accepts VmDiskArray and VmDiskArrayOutput values.
// You can construct a concrete instance of `VmDiskArrayInput` via:
//
//	VmDiskArray{ VmDiskArgs{...} }
type VmDiskArrayInput interface {
	pulumi.Input

	ToVmDiskArrayOutput() VmDiskArrayOutput
	ToVmDiskArrayOutputWithContext(context.Context) VmDiskArrayOutput
}

type VmDiskArray []VmDiskInput

func (VmDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmDisk)(nil)).Elem()
}

func (i VmDiskArray) ToVmDiskArrayOutput() VmDiskArrayOutput {
	return i.ToVmDiskArrayOutputWithContext(context.Background())
}

func (i VmDiskArray) ToVmDiskArrayOutputWithContext(ctx context.Context) VmDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmDiskArrayOutput)
}

type VmDiskOutput struct{ *pulumi.OutputState }

func (VmDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmDisk)(nil)).Elem()
}

func (o VmDiskOutput) ToVmDiskOutput() VmDiskOutput {
	return o
}

func (o VmDiskOutput) ToVmDiskOutputWithContext(ctx context.Context) VmDiskOutput {
	return o
}

// Bus number on which to place the disk controller
func (o VmDiskOutput) BusNumber() pulumi.StringOutput {
	return o.ApplyT(func(v VmDisk) string { return v.BusNumber }).(pulumi.StringOutput)
}

// Independent disk name
func (o VmDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VmDisk) string { return v.Name }).(pulumi.StringOutput)
}

// The size of the disk in MB.
func (o VmDiskOutput) SizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmDisk) *int { return v.SizeInMb }).(pulumi.IntPtrOutput)
}

// Unit number (slot) on the bus specified by BusNumber
func (o VmDiskOutput) UnitNumber() pulumi.StringOutput {
	return o.ApplyT(func(v VmDisk) string { return v.UnitNumber }).(pulumi.StringOutput)
}

type VmDiskArrayOutput struct{ *pulumi.OutputState }

func (VmDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmDisk)(nil)).Elem()
}

func (o VmDiskArrayOutput) ToVmDiskArrayOutput() VmDiskArrayOutput {
	return o
}

func (o VmDiskArrayOutput) ToVmDiskArrayOutputWithContext(ctx context.Context) VmDiskArrayOutput {
	return o
}

func (o VmDiskArrayOutput) Index(i pulumi.IntInput) VmDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmDisk {
		return vs[0].([]VmDisk)[vs[1].(int)]
	}).(VmDiskOutput)
}

type VmExtraConfig struct {
	// The key of the extra configuration item
	Key *string `pulumi:"key"`
	// Whether the extra configuration item is required
	Required *bool `pulumi:"required"`
	// The value of the extra configuration item
	Value *string `pulumi:"value"`
}

// VmExtraConfigInput is an input type that accepts VmExtraConfigArgs and VmExtraConfigOutput values.
// You can construct a concrete instance of `VmExtraConfigInput` via:
//
//	VmExtraConfigArgs{...}
type VmExtraConfigInput interface {
	pulumi.Input

	ToVmExtraConfigOutput() VmExtraConfigOutput
	ToVmExtraConfigOutputWithContext(context.Context) VmExtraConfigOutput
}

type VmExtraConfigArgs struct {
	// The key of the extra configuration item
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Whether the extra configuration item is required
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// The value of the extra configuration item
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VmExtraConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmExtraConfig)(nil)).Elem()
}

func (i VmExtraConfigArgs) ToVmExtraConfigOutput() VmExtraConfigOutput {
	return i.ToVmExtraConfigOutputWithContext(context.Background())
}

func (i VmExtraConfigArgs) ToVmExtraConfigOutputWithContext(ctx context.Context) VmExtraConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmExtraConfigOutput)
}

// VmExtraConfigArrayInput is an input type that accepts VmExtraConfigArray and VmExtraConfigArrayOutput values.
// You can construct a concrete instance of `VmExtraConfigArrayInput` via:
//
//	VmExtraConfigArray{ VmExtraConfigArgs{...} }
type VmExtraConfigArrayInput interface {
	pulumi.Input

	ToVmExtraConfigArrayOutput() VmExtraConfigArrayOutput
	ToVmExtraConfigArrayOutputWithContext(context.Context) VmExtraConfigArrayOutput
}

type VmExtraConfigArray []VmExtraConfigInput

func (VmExtraConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmExtraConfig)(nil)).Elem()
}

func (i VmExtraConfigArray) ToVmExtraConfigArrayOutput() VmExtraConfigArrayOutput {
	return i.ToVmExtraConfigArrayOutputWithContext(context.Background())
}

func (i VmExtraConfigArray) ToVmExtraConfigArrayOutputWithContext(ctx context.Context) VmExtraConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmExtraConfigArrayOutput)
}

type VmExtraConfigOutput struct{ *pulumi.OutputState }

func (VmExtraConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmExtraConfig)(nil)).Elem()
}

func (o VmExtraConfigOutput) ToVmExtraConfigOutput() VmExtraConfigOutput {
	return o
}

func (o VmExtraConfigOutput) ToVmExtraConfigOutputWithContext(ctx context.Context) VmExtraConfigOutput {
	return o
}

// The key of the extra configuration item
func (o VmExtraConfigOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmExtraConfig) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Whether the extra configuration item is required
func (o VmExtraConfigOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmExtraConfig) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// The value of the extra configuration item
func (o VmExtraConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmExtraConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VmExtraConfigArrayOutput struct{ *pulumi.OutputState }

func (VmExtraConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmExtraConfig)(nil)).Elem()
}

func (o VmExtraConfigArrayOutput) ToVmExtraConfigArrayOutput() VmExtraConfigArrayOutput {
	return o
}

func (o VmExtraConfigArrayOutput) ToVmExtraConfigArrayOutputWithContext(ctx context.Context) VmExtraConfigArrayOutput {
	return o
}

func (o VmExtraConfigArrayOutput) Index(i pulumi.IntInput) VmExtraConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmExtraConfig {
		return vs[0].([]VmExtraConfig)[vs[1].(int)]
	}).(VmExtraConfigOutput)
}

type VmInternalDiskType struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber *int `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType *string `pulumi:"busType"`
	// The disk ID.
	DiskId *string `pulumi:"diskId"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops *int `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb *int `pulumi:"sizeInMb"`
	// Storage profile to override the VM default one
	StorageProfile *string `pulumi:"storageProfile"`
	// Specifies whether the disk storage is pre-allocated or allocated on demand.
	ThinProvisioned *bool `pulumi:"thinProvisioned"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber *int `pulumi:"unitNumber"`
}

// VmInternalDiskTypeInput is an input type that accepts VmInternalDiskTypeArgs and VmInternalDiskTypeOutput values.
// You can construct a concrete instance of `VmInternalDiskTypeInput` via:
//
//	VmInternalDiskTypeArgs{...}
type VmInternalDiskTypeInput interface {
	pulumi.Input

	ToVmInternalDiskTypeOutput() VmInternalDiskTypeOutput
	ToVmInternalDiskTypeOutputWithContext(context.Context) VmInternalDiskTypeOutput
}

type VmInternalDiskTypeArgs struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber pulumi.IntPtrInput `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType pulumi.StringPtrInput `pulumi:"busType"`
	// The disk ID.
	DiskId pulumi.StringPtrInput `pulumi:"diskId"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb pulumi.IntPtrInput `pulumi:"sizeInMb"`
	// Storage profile to override the VM default one
	StorageProfile pulumi.StringPtrInput `pulumi:"storageProfile"`
	// Specifies whether the disk storage is pre-allocated or allocated on demand.
	ThinProvisioned pulumi.BoolPtrInput `pulumi:"thinProvisioned"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber pulumi.IntPtrInput `pulumi:"unitNumber"`
}

func (VmInternalDiskTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmInternalDiskType)(nil)).Elem()
}

func (i VmInternalDiskTypeArgs) ToVmInternalDiskTypeOutput() VmInternalDiskTypeOutput {
	return i.ToVmInternalDiskTypeOutputWithContext(context.Background())
}

func (i VmInternalDiskTypeArgs) ToVmInternalDiskTypeOutputWithContext(ctx context.Context) VmInternalDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmInternalDiskTypeOutput)
}

// VmInternalDiskTypeArrayInput is an input type that accepts VmInternalDiskTypeArray and VmInternalDiskTypeArrayOutput values.
// You can construct a concrete instance of `VmInternalDiskTypeArrayInput` via:
//
//	VmInternalDiskTypeArray{ VmInternalDiskTypeArgs{...} }
type VmInternalDiskTypeArrayInput interface {
	pulumi.Input

	ToVmInternalDiskTypeArrayOutput() VmInternalDiskTypeArrayOutput
	ToVmInternalDiskTypeArrayOutputWithContext(context.Context) VmInternalDiskTypeArrayOutput
}

type VmInternalDiskTypeArray []VmInternalDiskTypeInput

func (VmInternalDiskTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmInternalDiskType)(nil)).Elem()
}

func (i VmInternalDiskTypeArray) ToVmInternalDiskTypeArrayOutput() VmInternalDiskTypeArrayOutput {
	return i.ToVmInternalDiskTypeArrayOutputWithContext(context.Background())
}

func (i VmInternalDiskTypeArray) ToVmInternalDiskTypeArrayOutputWithContext(ctx context.Context) VmInternalDiskTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmInternalDiskTypeArrayOutput)
}

type VmInternalDiskTypeOutput struct{ *pulumi.OutputState }

func (VmInternalDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmInternalDiskType)(nil)).Elem()
}

func (o VmInternalDiskTypeOutput) ToVmInternalDiskTypeOutput() VmInternalDiskTypeOutput {
	return o
}

func (o VmInternalDiskTypeOutput) ToVmInternalDiskTypeOutputWithContext(ctx context.Context) VmInternalDiskTypeOutput {
	return o
}

// The number of the SCSI or IDE controller itself.
func (o VmInternalDiskTypeOutput) BusNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmInternalDiskType) *int { return v.BusNumber }).(pulumi.IntPtrOutput)
}

// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
func (o VmInternalDiskTypeOutput) BusType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmInternalDiskType) *string { return v.BusType }).(pulumi.StringPtrOutput)
}

// The disk ID.
func (o VmInternalDiskTypeOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmInternalDiskType) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// Specifies the IOPS for the disk. Default is 0.
func (o VmInternalDiskTypeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmInternalDiskType) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The size of the disk in MB.
func (o VmInternalDiskTypeOutput) SizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmInternalDiskType) *int { return v.SizeInMb }).(pulumi.IntPtrOutput)
}

// Storage profile to override the VM default one
func (o VmInternalDiskTypeOutput) StorageProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmInternalDiskType) *string { return v.StorageProfile }).(pulumi.StringPtrOutput)
}

// Specifies whether the disk storage is pre-allocated or allocated on demand.
func (o VmInternalDiskTypeOutput) ThinProvisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmInternalDiskType) *bool { return v.ThinProvisioned }).(pulumi.BoolPtrOutput)
}

// The device number on the SCSI or IDE controller of the disk.
func (o VmInternalDiskTypeOutput) UnitNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmInternalDiskType) *int { return v.UnitNumber }).(pulumi.IntPtrOutput)
}

type VmInternalDiskTypeArrayOutput struct{ *pulumi.OutputState }

func (VmInternalDiskTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmInternalDiskType)(nil)).Elem()
}

func (o VmInternalDiskTypeArrayOutput) ToVmInternalDiskTypeArrayOutput() VmInternalDiskTypeArrayOutput {
	return o
}

func (o VmInternalDiskTypeArrayOutput) ToVmInternalDiskTypeArrayOutputWithContext(ctx context.Context) VmInternalDiskTypeArrayOutput {
	return o
}

func (o VmInternalDiskTypeArrayOutput) Index(i pulumi.IntInput) VmInternalDiskTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmInternalDiskType {
		return vs[0].([]VmInternalDiskType)[vs[1].(int)]
	}).(VmInternalDiskTypeOutput)
}

type VmMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem *bool `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key *string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type *string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess *string `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value *string `pulumi:"value"`
}

// VmMetadataEntryInput is an input type that accepts VmMetadataEntryArgs and VmMetadataEntryOutput values.
// You can construct a concrete instance of `VmMetadataEntryInput` via:
//
//	VmMetadataEntryArgs{...}
type VmMetadataEntryInput interface {
	pulumi.Input

	ToVmMetadataEntryOutput() VmMetadataEntryOutput
	ToVmMetadataEntryOutputWithContext(context.Context) VmMetadataEntryOutput
}

type VmMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Key of this metadata entry. Required if the metadata entry is not empty
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringPtrInput `pulumi:"userAccess"`
	// Value of this metadata entry. Required if the metadata entry is not empty
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VmMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmMetadataEntry)(nil)).Elem()
}

func (i VmMetadataEntryArgs) ToVmMetadataEntryOutput() VmMetadataEntryOutput {
	return i.ToVmMetadataEntryOutputWithContext(context.Background())
}

func (i VmMetadataEntryArgs) ToVmMetadataEntryOutputWithContext(ctx context.Context) VmMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmMetadataEntryOutput)
}

// VmMetadataEntryArrayInput is an input type that accepts VmMetadataEntryArray and VmMetadataEntryArrayOutput values.
// You can construct a concrete instance of `VmMetadataEntryArrayInput` via:
//
//	VmMetadataEntryArray{ VmMetadataEntryArgs{...} }
type VmMetadataEntryArrayInput interface {
	pulumi.Input

	ToVmMetadataEntryArrayOutput() VmMetadataEntryArrayOutput
	ToVmMetadataEntryArrayOutputWithContext(context.Context) VmMetadataEntryArrayOutput
}

type VmMetadataEntryArray []VmMetadataEntryInput

func (VmMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmMetadataEntry)(nil)).Elem()
}

func (i VmMetadataEntryArray) ToVmMetadataEntryArrayOutput() VmMetadataEntryArrayOutput {
	return i.ToVmMetadataEntryArrayOutputWithContext(context.Background())
}

func (i VmMetadataEntryArray) ToVmMetadataEntryArrayOutputWithContext(ctx context.Context) VmMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmMetadataEntryArrayOutput)
}

type VmMetadataEntryOutput struct{ *pulumi.OutputState }

func (VmMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmMetadataEntry)(nil)).Elem()
}

func (o VmMetadataEntryOutput) ToVmMetadataEntryOutput() VmMetadataEntryOutput {
	return o
}

func (o VmMetadataEntryOutput) ToVmMetadataEntryOutputWithContext(ctx context.Context) VmMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o VmMetadataEntryOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmMetadataEntry) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Key of this metadata entry. Required if the metadata entry is not empty
func (o VmMetadataEntryOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmMetadataEntry) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o VmMetadataEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmMetadataEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o VmMetadataEntryOutput) UserAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmMetadataEntry) *string { return v.UserAccess }).(pulumi.StringPtrOutput)
}

// Value of this metadata entry. Required if the metadata entry is not empty
func (o VmMetadataEntryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmMetadataEntry) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VmMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (VmMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmMetadataEntry)(nil)).Elem()
}

func (o VmMetadataEntryArrayOutput) ToVmMetadataEntryArrayOutput() VmMetadataEntryArrayOutput {
	return o
}

func (o VmMetadataEntryArrayOutput) ToVmMetadataEntryArrayOutputWithContext(ctx context.Context) VmMetadataEntryArrayOutput {
	return o
}

func (o VmMetadataEntryArrayOutput) Index(i pulumi.IntInput) VmMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmMetadataEntry {
		return vs[0].([]VmMetadataEntry)[vs[1].(int)]
	}).(VmMetadataEntryOutput)
}

type VmNetwork struct {
	// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
	AdapterType *string `pulumi:"adapterType"`
	// It defines if NIC is connected or not.
	Connected *bool `pulumi:"connected"`
	// IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	Ip *string `pulumi:"ip"`
	// IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	IpAllocationMode string `pulumi:"ipAllocationMode"`
	// Set to true if network interface should be primary. First network card in the list will be primary by default
	IsPrimary *bool `pulumi:"isPrimary"`
	// Mac address of network interface
	Mac *string `pulumi:"mac"`
	// Name of the network this VM should connect to. Always required except for `type` `NONE`
	Name *string `pulumi:"name"`
	// Secondary (IPv6) IP of the VM. Settings depend on `secondaryIpAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	SecondaryIp *string `pulumi:"secondaryIp"`
	// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	SecondaryIpAllocationMode *string `pulumi:"secondaryIpAllocationMode"`
	// Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC.
	Type string `pulumi:"type"`
}

// VmNetworkInput is an input type that accepts VmNetworkArgs and VmNetworkOutput values.
// You can construct a concrete instance of `VmNetworkInput` via:
//
//	VmNetworkArgs{...}
type VmNetworkInput interface {
	pulumi.Input

	ToVmNetworkOutput() VmNetworkOutput
	ToVmNetworkOutputWithContext(context.Context) VmNetworkOutput
}

type VmNetworkArgs struct {
	// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
	AdapterType pulumi.StringPtrInput `pulumi:"adapterType"`
	// It defines if NIC is connected or not.
	Connected pulumi.BoolPtrInput `pulumi:"connected"`
	// IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	IpAllocationMode pulumi.StringInput `pulumi:"ipAllocationMode"`
	// Set to true if network interface should be primary. First network card in the list will be primary by default
	IsPrimary pulumi.BoolPtrInput `pulumi:"isPrimary"`
	// Mac address of network interface
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Name of the network this VM should connect to. Always required except for `type` `NONE`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Secondary (IPv6) IP of the VM. Settings depend on `secondaryIpAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	SecondaryIp pulumi.StringPtrInput `pulumi:"secondaryIp"`
	// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	SecondaryIpAllocationMode pulumi.StringPtrInput `pulumi:"secondaryIpAllocationMode"`
	// Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VmNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNetwork)(nil)).Elem()
}

func (i VmNetworkArgs) ToVmNetworkOutput() VmNetworkOutput {
	return i.ToVmNetworkOutputWithContext(context.Background())
}

func (i VmNetworkArgs) ToVmNetworkOutputWithContext(ctx context.Context) VmNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNetworkOutput)
}

// VmNetworkArrayInput is an input type that accepts VmNetworkArray and VmNetworkArrayOutput values.
// You can construct a concrete instance of `VmNetworkArrayInput` via:
//
//	VmNetworkArray{ VmNetworkArgs{...} }
type VmNetworkArrayInput interface {
	pulumi.Input

	ToVmNetworkArrayOutput() VmNetworkArrayOutput
	ToVmNetworkArrayOutputWithContext(context.Context) VmNetworkArrayOutput
}

type VmNetworkArray []VmNetworkInput

func (VmNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNetwork)(nil)).Elem()
}

func (i VmNetworkArray) ToVmNetworkArrayOutput() VmNetworkArrayOutput {
	return i.ToVmNetworkArrayOutputWithContext(context.Background())
}

func (i VmNetworkArray) ToVmNetworkArrayOutputWithContext(ctx context.Context) VmNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmNetworkArrayOutput)
}

type VmNetworkOutput struct{ *pulumi.OutputState }

func (VmNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmNetwork)(nil)).Elem()
}

func (o VmNetworkOutput) ToVmNetworkOutput() VmNetworkOutput {
	return o
}

func (o VmNetworkOutput) ToVmNetworkOutputWithContext(ctx context.Context) VmNetworkOutput {
	return o
}

// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
func (o VmNetworkOutput) AdapterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNetwork) *string { return v.AdapterType }).(pulumi.StringPtrOutput)
}

// It defines if NIC is connected or not.
func (o VmNetworkOutput) Connected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmNetwork) *bool { return v.Connected }).(pulumi.BoolPtrOutput)
}

// IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
func (o VmNetworkOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNetwork) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
func (o VmNetworkOutput) IpAllocationMode() pulumi.StringOutput {
	return o.ApplyT(func(v VmNetwork) string { return v.IpAllocationMode }).(pulumi.StringOutput)
}

// Set to true if network interface should be primary. First network card in the list will be primary by default
func (o VmNetworkOutput) IsPrimary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmNetwork) *bool { return v.IsPrimary }).(pulumi.BoolPtrOutput)
}

// Mac address of network interface
func (o VmNetworkOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNetwork) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Name of the network this VM should connect to. Always required except for `type` `NONE`
func (o VmNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Secondary (IPv6) IP of the VM. Settings depend on `secondaryIpAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
func (o VmNetworkOutput) SecondaryIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNetwork) *string { return v.SecondaryIp }).(pulumi.StringPtrOutput)
}

// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
func (o VmNetworkOutput) SecondaryIpAllocationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmNetwork) *string { return v.SecondaryIpAllocationMode }).(pulumi.StringPtrOutput)
}

// Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC.
func (o VmNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VmNetwork) string { return v.Type }).(pulumi.StringOutput)
}

type VmNetworkArrayOutput struct{ *pulumi.OutputState }

func (VmNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmNetwork)(nil)).Elem()
}

func (o VmNetworkArrayOutput) ToVmNetworkArrayOutput() VmNetworkArrayOutput {
	return o
}

func (o VmNetworkArrayOutput) ToVmNetworkArrayOutputWithContext(ctx context.Context) VmNetworkArrayOutput {
	return o
}

func (o VmNetworkArrayOutput) Index(i pulumi.IntInput) VmNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmNetwork {
		return vs[0].([]VmNetwork)[vs[1].(int)]
	}).(VmNetworkOutput)
}

type VmOverrideTemplateDisk struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber int `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType string `pulumi:"busType"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops *int `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb int `pulumi:"sizeInMb"`
	// Storage profile to override the VM default one
	StorageProfile *string `pulumi:"storageProfile"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber int `pulumi:"unitNumber"`
}

// VmOverrideTemplateDiskInput is an input type that accepts VmOverrideTemplateDiskArgs and VmOverrideTemplateDiskOutput values.
// You can construct a concrete instance of `VmOverrideTemplateDiskInput` via:
//
//	VmOverrideTemplateDiskArgs{...}
type VmOverrideTemplateDiskInput interface {
	pulumi.Input

	ToVmOverrideTemplateDiskOutput() VmOverrideTemplateDiskOutput
	ToVmOverrideTemplateDiskOutputWithContext(context.Context) VmOverrideTemplateDiskOutput
}

type VmOverrideTemplateDiskArgs struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber pulumi.IntInput `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType pulumi.StringInput `pulumi:"busType"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb pulumi.IntInput `pulumi:"sizeInMb"`
	// Storage profile to override the VM default one
	StorageProfile pulumi.StringPtrInput `pulumi:"storageProfile"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber pulumi.IntInput `pulumi:"unitNumber"`
}

func (VmOverrideTemplateDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmOverrideTemplateDisk)(nil)).Elem()
}

func (i VmOverrideTemplateDiskArgs) ToVmOverrideTemplateDiskOutput() VmOverrideTemplateDiskOutput {
	return i.ToVmOverrideTemplateDiskOutputWithContext(context.Background())
}

func (i VmOverrideTemplateDiskArgs) ToVmOverrideTemplateDiskOutputWithContext(ctx context.Context) VmOverrideTemplateDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmOverrideTemplateDiskOutput)
}

// VmOverrideTemplateDiskArrayInput is an input type that accepts VmOverrideTemplateDiskArray and VmOverrideTemplateDiskArrayOutput values.
// You can construct a concrete instance of `VmOverrideTemplateDiskArrayInput` via:
//
//	VmOverrideTemplateDiskArray{ VmOverrideTemplateDiskArgs{...} }
type VmOverrideTemplateDiskArrayInput interface {
	pulumi.Input

	ToVmOverrideTemplateDiskArrayOutput() VmOverrideTemplateDiskArrayOutput
	ToVmOverrideTemplateDiskArrayOutputWithContext(context.Context) VmOverrideTemplateDiskArrayOutput
}

type VmOverrideTemplateDiskArray []VmOverrideTemplateDiskInput

func (VmOverrideTemplateDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmOverrideTemplateDisk)(nil)).Elem()
}

func (i VmOverrideTemplateDiskArray) ToVmOverrideTemplateDiskArrayOutput() VmOverrideTemplateDiskArrayOutput {
	return i.ToVmOverrideTemplateDiskArrayOutputWithContext(context.Background())
}

func (i VmOverrideTemplateDiskArray) ToVmOverrideTemplateDiskArrayOutputWithContext(ctx context.Context) VmOverrideTemplateDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmOverrideTemplateDiskArrayOutput)
}

type VmOverrideTemplateDiskOutput struct{ *pulumi.OutputState }

func (VmOverrideTemplateDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmOverrideTemplateDisk)(nil)).Elem()
}

func (o VmOverrideTemplateDiskOutput) ToVmOverrideTemplateDiskOutput() VmOverrideTemplateDiskOutput {
	return o
}

func (o VmOverrideTemplateDiskOutput) ToVmOverrideTemplateDiskOutputWithContext(ctx context.Context) VmOverrideTemplateDiskOutput {
	return o
}

// The number of the SCSI or IDE controller itself.
func (o VmOverrideTemplateDiskOutput) BusNumber() pulumi.IntOutput {
	return o.ApplyT(func(v VmOverrideTemplateDisk) int { return v.BusNumber }).(pulumi.IntOutput)
}

// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
func (o VmOverrideTemplateDiskOutput) BusType() pulumi.StringOutput {
	return o.ApplyT(func(v VmOverrideTemplateDisk) string { return v.BusType }).(pulumi.StringOutput)
}

// Specifies the IOPS for the disk. Default is 0.
func (o VmOverrideTemplateDiskOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmOverrideTemplateDisk) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The size of the disk in MB.
func (o VmOverrideTemplateDiskOutput) SizeInMb() pulumi.IntOutput {
	return o.ApplyT(func(v VmOverrideTemplateDisk) int { return v.SizeInMb }).(pulumi.IntOutput)
}

// Storage profile to override the VM default one
func (o VmOverrideTemplateDiskOutput) StorageProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmOverrideTemplateDisk) *string { return v.StorageProfile }).(pulumi.StringPtrOutput)
}

// The device number on the SCSI or IDE controller of the disk.
func (o VmOverrideTemplateDiskOutput) UnitNumber() pulumi.IntOutput {
	return o.ApplyT(func(v VmOverrideTemplateDisk) int { return v.UnitNumber }).(pulumi.IntOutput)
}

type VmOverrideTemplateDiskArrayOutput struct{ *pulumi.OutputState }

func (VmOverrideTemplateDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmOverrideTemplateDisk)(nil)).Elem()
}

func (o VmOverrideTemplateDiskArrayOutput) ToVmOverrideTemplateDiskArrayOutput() VmOverrideTemplateDiskArrayOutput {
	return o
}

func (o VmOverrideTemplateDiskArrayOutput) ToVmOverrideTemplateDiskArrayOutputWithContext(ctx context.Context) VmOverrideTemplateDiskArrayOutput {
	return o
}

func (o VmOverrideTemplateDiskArrayOutput) Index(i pulumi.IntInput) VmOverrideTemplateDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmOverrideTemplateDisk {
		return vs[0].([]VmOverrideTemplateDisk)[vs[1].(int)]
	}).(VmOverrideTemplateDiskOutput)
}

type VmSetExtraConfig struct {
	// The key of the extra configuration item
	Key string `pulumi:"key"`
	// The value of the extra configuration item. Leaving the `value` field empty will result in the item deletion
	Value string `pulumi:"value"`
}

// VmSetExtraConfigInput is an input type that accepts VmSetExtraConfigArgs and VmSetExtraConfigOutput values.
// You can construct a concrete instance of `VmSetExtraConfigInput` via:
//
//	VmSetExtraConfigArgs{...}
type VmSetExtraConfigInput interface {
	pulumi.Input

	ToVmSetExtraConfigOutput() VmSetExtraConfigOutput
	ToVmSetExtraConfigOutputWithContext(context.Context) VmSetExtraConfigOutput
}

type VmSetExtraConfigArgs struct {
	// The key of the extra configuration item
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the extra configuration item. Leaving the `value` field empty will result in the item deletion
	Value pulumi.StringInput `pulumi:"value"`
}

func (VmSetExtraConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSetExtraConfig)(nil)).Elem()
}

func (i VmSetExtraConfigArgs) ToVmSetExtraConfigOutput() VmSetExtraConfigOutput {
	return i.ToVmSetExtraConfigOutputWithContext(context.Background())
}

func (i VmSetExtraConfigArgs) ToVmSetExtraConfigOutputWithContext(ctx context.Context) VmSetExtraConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSetExtraConfigOutput)
}

// VmSetExtraConfigArrayInput is an input type that accepts VmSetExtraConfigArray and VmSetExtraConfigArrayOutput values.
// You can construct a concrete instance of `VmSetExtraConfigArrayInput` via:
//
//	VmSetExtraConfigArray{ VmSetExtraConfigArgs{...} }
type VmSetExtraConfigArrayInput interface {
	pulumi.Input

	ToVmSetExtraConfigArrayOutput() VmSetExtraConfigArrayOutput
	ToVmSetExtraConfigArrayOutputWithContext(context.Context) VmSetExtraConfigArrayOutput
}

type VmSetExtraConfigArray []VmSetExtraConfigInput

func (VmSetExtraConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmSetExtraConfig)(nil)).Elem()
}

func (i VmSetExtraConfigArray) ToVmSetExtraConfigArrayOutput() VmSetExtraConfigArrayOutput {
	return i.ToVmSetExtraConfigArrayOutputWithContext(context.Background())
}

func (i VmSetExtraConfigArray) ToVmSetExtraConfigArrayOutputWithContext(ctx context.Context) VmSetExtraConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSetExtraConfigArrayOutput)
}

type VmSetExtraConfigOutput struct{ *pulumi.OutputState }

func (VmSetExtraConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSetExtraConfig)(nil)).Elem()
}

func (o VmSetExtraConfigOutput) ToVmSetExtraConfigOutput() VmSetExtraConfigOutput {
	return o
}

func (o VmSetExtraConfigOutput) ToVmSetExtraConfigOutputWithContext(ctx context.Context) VmSetExtraConfigOutput {
	return o
}

// The key of the extra configuration item
func (o VmSetExtraConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VmSetExtraConfig) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the extra configuration item. Leaving the `value` field empty will result in the item deletion
func (o VmSetExtraConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VmSetExtraConfig) string { return v.Value }).(pulumi.StringOutput)
}

type VmSetExtraConfigArrayOutput struct{ *pulumi.OutputState }

func (VmSetExtraConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmSetExtraConfig)(nil)).Elem()
}

func (o VmSetExtraConfigArrayOutput) ToVmSetExtraConfigArrayOutput() VmSetExtraConfigArrayOutput {
	return o
}

func (o VmSetExtraConfigArrayOutput) ToVmSetExtraConfigArrayOutputWithContext(ctx context.Context) VmSetExtraConfigArrayOutput {
	return o
}

func (o VmSetExtraConfigArrayOutput) Index(i pulumi.IntInput) VmSetExtraConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmSetExtraConfig {
		return vs[0].([]VmSetExtraConfig)[vs[1].(int)]
	}).(VmSetExtraConfigOutput)
}

type VmSizingPolicyCpu struct {
	// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
	CoresPerSocket *string `pulumi:"coresPerSocket"`
	// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
	Count *string `pulumi:"count"`
	// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs. -1 means unlimited
	LimitInMhz *string `pulumi:"limitInMhz"`
	// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
	ReservationGuarantee *string `pulumi:"reservationGuarantee"`
	// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares *string `pulumi:"shares"`
	// Defines the vCPU speed of a core in MHz.
	SpeedInMhz *string `pulumi:"speedInMhz"`
}

// VmSizingPolicyCpuInput is an input type that accepts VmSizingPolicyCpuArgs and VmSizingPolicyCpuOutput values.
// You can construct a concrete instance of `VmSizingPolicyCpuInput` via:
//
//	VmSizingPolicyCpuArgs{...}
type VmSizingPolicyCpuInput interface {
	pulumi.Input

	ToVmSizingPolicyCpuOutput() VmSizingPolicyCpuOutput
	ToVmSizingPolicyCpuOutputWithContext(context.Context) VmSizingPolicyCpuOutput
}

type VmSizingPolicyCpuArgs struct {
	// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
	CoresPerSocket pulumi.StringPtrInput `pulumi:"coresPerSocket"`
	// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
	Count pulumi.StringPtrInput `pulumi:"count"`
	// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs. -1 means unlimited
	LimitInMhz pulumi.StringPtrInput `pulumi:"limitInMhz"`
	// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
	ReservationGuarantee pulumi.StringPtrInput `pulumi:"reservationGuarantee"`
	// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares pulumi.StringPtrInput `pulumi:"shares"`
	// Defines the vCPU speed of a core in MHz.
	SpeedInMhz pulumi.StringPtrInput `pulumi:"speedInMhz"`
}

func (VmSizingPolicyCpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSizingPolicyCpu)(nil)).Elem()
}

func (i VmSizingPolicyCpuArgs) ToVmSizingPolicyCpuOutput() VmSizingPolicyCpuOutput {
	return i.ToVmSizingPolicyCpuOutputWithContext(context.Background())
}

func (i VmSizingPolicyCpuArgs) ToVmSizingPolicyCpuOutputWithContext(ctx context.Context) VmSizingPolicyCpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSizingPolicyCpuOutput)
}

func (i VmSizingPolicyCpuArgs) ToVmSizingPolicyCpuPtrOutput() VmSizingPolicyCpuPtrOutput {
	return i.ToVmSizingPolicyCpuPtrOutputWithContext(context.Background())
}

func (i VmSizingPolicyCpuArgs) ToVmSizingPolicyCpuPtrOutputWithContext(ctx context.Context) VmSizingPolicyCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSizingPolicyCpuOutput).ToVmSizingPolicyCpuPtrOutputWithContext(ctx)
}

// VmSizingPolicyCpuPtrInput is an input type that accepts VmSizingPolicyCpuArgs, VmSizingPolicyCpuPtr and VmSizingPolicyCpuPtrOutput values.
// You can construct a concrete instance of `VmSizingPolicyCpuPtrInput` via:
//
//	        VmSizingPolicyCpuArgs{...}
//
//	or:
//
//	        nil
type VmSizingPolicyCpuPtrInput interface {
	pulumi.Input

	ToVmSizingPolicyCpuPtrOutput() VmSizingPolicyCpuPtrOutput
	ToVmSizingPolicyCpuPtrOutputWithContext(context.Context) VmSizingPolicyCpuPtrOutput
}

type vmSizingPolicyCpuPtrType VmSizingPolicyCpuArgs

func VmSizingPolicyCpuPtr(v *VmSizingPolicyCpuArgs) VmSizingPolicyCpuPtrInput {
	return (*vmSizingPolicyCpuPtrType)(v)
}

func (*vmSizingPolicyCpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmSizingPolicyCpu)(nil)).Elem()
}

func (i *vmSizingPolicyCpuPtrType) ToVmSizingPolicyCpuPtrOutput() VmSizingPolicyCpuPtrOutput {
	return i.ToVmSizingPolicyCpuPtrOutputWithContext(context.Background())
}

func (i *vmSizingPolicyCpuPtrType) ToVmSizingPolicyCpuPtrOutputWithContext(ctx context.Context) VmSizingPolicyCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSizingPolicyCpuPtrOutput)
}

type VmSizingPolicyCpuOutput struct{ *pulumi.OutputState }

func (VmSizingPolicyCpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSizingPolicyCpu)(nil)).Elem()
}

func (o VmSizingPolicyCpuOutput) ToVmSizingPolicyCpuOutput() VmSizingPolicyCpuOutput {
	return o
}

func (o VmSizingPolicyCpuOutput) ToVmSizingPolicyCpuOutputWithContext(ctx context.Context) VmSizingPolicyCpuOutput {
	return o
}

func (o VmSizingPolicyCpuOutput) ToVmSizingPolicyCpuPtrOutput() VmSizingPolicyCpuPtrOutput {
	return o.ToVmSizingPolicyCpuPtrOutputWithContext(context.Background())
}

func (o VmSizingPolicyCpuOutput) ToVmSizingPolicyCpuPtrOutputWithContext(ctx context.Context) VmSizingPolicyCpuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmSizingPolicyCpu) *VmSizingPolicyCpu {
		return &v
	}).(VmSizingPolicyCpuPtrOutput)
}

// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
func (o VmSizingPolicyCpuOutput) CoresPerSocket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSizingPolicyCpu) *string { return v.CoresPerSocket }).(pulumi.StringPtrOutput)
}

// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
func (o VmSizingPolicyCpuOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSizingPolicyCpu) *string { return v.Count }).(pulumi.StringPtrOutput)
}

// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs. -1 means unlimited
func (o VmSizingPolicyCpuOutput) LimitInMhz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSizingPolicyCpu) *string { return v.LimitInMhz }).(pulumi.StringPtrOutput)
}

// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
func (o VmSizingPolicyCpuOutput) ReservationGuarantee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSizingPolicyCpu) *string { return v.ReservationGuarantee }).(pulumi.StringPtrOutput)
}

// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o VmSizingPolicyCpuOutput) Shares() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSizingPolicyCpu) *string { return v.Shares }).(pulumi.StringPtrOutput)
}

// Defines the vCPU speed of a core in MHz.
func (o VmSizingPolicyCpuOutput) SpeedInMhz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSizingPolicyCpu) *string { return v.SpeedInMhz }).(pulumi.StringPtrOutput)
}

type VmSizingPolicyCpuPtrOutput struct{ *pulumi.OutputState }

func (VmSizingPolicyCpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmSizingPolicyCpu)(nil)).Elem()
}

func (o VmSizingPolicyCpuPtrOutput) ToVmSizingPolicyCpuPtrOutput() VmSizingPolicyCpuPtrOutput {
	return o
}

func (o VmSizingPolicyCpuPtrOutput) ToVmSizingPolicyCpuPtrOutputWithContext(ctx context.Context) VmSizingPolicyCpuPtrOutput {
	return o
}

func (o VmSizingPolicyCpuPtrOutput) Elem() VmSizingPolicyCpuOutput {
	return o.ApplyT(func(v *VmSizingPolicyCpu) VmSizingPolicyCpu {
		if v != nil {
			return *v
		}
		var ret VmSizingPolicyCpu
		return ret
	}).(VmSizingPolicyCpuOutput)
}

// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
func (o VmSizingPolicyCpuPtrOutput) CoresPerSocket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmSizingPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.CoresPerSocket
	}).(pulumi.StringPtrOutput)
}

// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
func (o VmSizingPolicyCpuPtrOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmSizingPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.StringPtrOutput)
}

// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs. -1 means unlimited
func (o VmSizingPolicyCpuPtrOutput) LimitInMhz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmSizingPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.LimitInMhz
	}).(pulumi.StringPtrOutput)
}

// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
func (o VmSizingPolicyCpuPtrOutput) ReservationGuarantee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmSizingPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.ReservationGuarantee
	}).(pulumi.StringPtrOutput)
}

// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o VmSizingPolicyCpuPtrOutput) Shares() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmSizingPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.Shares
	}).(pulumi.StringPtrOutput)
}

// Defines the vCPU speed of a core in MHz.
func (o VmSizingPolicyCpuPtrOutput) SpeedInMhz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmSizingPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.SpeedInMhz
	}).(pulumi.StringPtrOutput)
}

type VmSizingPolicyMemory struct {
	// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
	LimitInMb *string `pulumi:"limitInMb"`
	// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
	ReservationGuarantee *string `pulumi:"reservationGuarantee"`
	// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares *string `pulumi:"shares"`
	// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
	SizeInMb *string `pulumi:"sizeInMb"`
}

// VmSizingPolicyMemoryInput is an input type that accepts VmSizingPolicyMemoryArgs and VmSizingPolicyMemoryOutput values.
// You can construct a concrete instance of `VmSizingPolicyMemoryInput` via:
//
//	VmSizingPolicyMemoryArgs{...}
type VmSizingPolicyMemoryInput interface {
	pulumi.Input

	ToVmSizingPolicyMemoryOutput() VmSizingPolicyMemoryOutput
	ToVmSizingPolicyMemoryOutputWithContext(context.Context) VmSizingPolicyMemoryOutput
}

type VmSizingPolicyMemoryArgs struct {
	// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
	LimitInMb pulumi.StringPtrInput `pulumi:"limitInMb"`
	// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
	ReservationGuarantee pulumi.StringPtrInput `pulumi:"reservationGuarantee"`
	// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares pulumi.StringPtrInput `pulumi:"shares"`
	// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
	SizeInMb pulumi.StringPtrInput `pulumi:"sizeInMb"`
}

func (VmSizingPolicyMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSizingPolicyMemory)(nil)).Elem()
}

func (i VmSizingPolicyMemoryArgs) ToVmSizingPolicyMemoryOutput() VmSizingPolicyMemoryOutput {
	return i.ToVmSizingPolicyMemoryOutputWithContext(context.Background())
}

func (i VmSizingPolicyMemoryArgs) ToVmSizingPolicyMemoryOutputWithContext(ctx context.Context) VmSizingPolicyMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSizingPolicyMemoryOutput)
}

func (i VmSizingPolicyMemoryArgs) ToVmSizingPolicyMemoryPtrOutput() VmSizingPolicyMemoryPtrOutput {
	return i.ToVmSizingPolicyMemoryPtrOutputWithContext(context.Background())
}

func (i VmSizingPolicyMemoryArgs) ToVmSizingPolicyMemoryPtrOutputWithContext(ctx context.Context) VmSizingPolicyMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSizingPolicyMemoryOutput).ToVmSizingPolicyMemoryPtrOutputWithContext(ctx)
}

// VmSizingPolicyMemoryPtrInput is an input type that accepts VmSizingPolicyMemoryArgs, VmSizingPolicyMemoryPtr and VmSizingPolicyMemoryPtrOutput values.
// You can construct a concrete instance of `VmSizingPolicyMemoryPtrInput` via:
//
//	        VmSizingPolicyMemoryArgs{...}
//
//	or:
//
//	        nil
type VmSizingPolicyMemoryPtrInput interface {
	pulumi.Input

	ToVmSizingPolicyMemoryPtrOutput() VmSizingPolicyMemoryPtrOutput
	ToVmSizingPolicyMemoryPtrOutputWithContext(context.Context) VmSizingPolicyMemoryPtrOutput
}

type vmSizingPolicyMemoryPtrType VmSizingPolicyMemoryArgs

func VmSizingPolicyMemoryPtr(v *VmSizingPolicyMemoryArgs) VmSizingPolicyMemoryPtrInput {
	return (*vmSizingPolicyMemoryPtrType)(v)
}

func (*vmSizingPolicyMemoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmSizingPolicyMemory)(nil)).Elem()
}

func (i *vmSizingPolicyMemoryPtrType) ToVmSizingPolicyMemoryPtrOutput() VmSizingPolicyMemoryPtrOutput {
	return i.ToVmSizingPolicyMemoryPtrOutputWithContext(context.Background())
}

func (i *vmSizingPolicyMemoryPtrType) ToVmSizingPolicyMemoryPtrOutputWithContext(ctx context.Context) VmSizingPolicyMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSizingPolicyMemoryPtrOutput)
}

type VmSizingPolicyMemoryOutput struct{ *pulumi.OutputState }

func (VmSizingPolicyMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSizingPolicyMemory)(nil)).Elem()
}

func (o VmSizingPolicyMemoryOutput) ToVmSizingPolicyMemoryOutput() VmSizingPolicyMemoryOutput {
	return o
}

func (o VmSizingPolicyMemoryOutput) ToVmSizingPolicyMemoryOutputWithContext(ctx context.Context) VmSizingPolicyMemoryOutput {
	return o
}

func (o VmSizingPolicyMemoryOutput) ToVmSizingPolicyMemoryPtrOutput() VmSizingPolicyMemoryPtrOutput {
	return o.ToVmSizingPolicyMemoryPtrOutputWithContext(context.Background())
}

func (o VmSizingPolicyMemoryOutput) ToVmSizingPolicyMemoryPtrOutputWithContext(ctx context.Context) VmSizingPolicyMemoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmSizingPolicyMemory) *VmSizingPolicyMemory {
		return &v
	}).(VmSizingPolicyMemoryPtrOutput)
}

// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
func (o VmSizingPolicyMemoryOutput) LimitInMb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSizingPolicyMemory) *string { return v.LimitInMb }).(pulumi.StringPtrOutput)
}

// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
func (o VmSizingPolicyMemoryOutput) ReservationGuarantee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSizingPolicyMemory) *string { return v.ReservationGuarantee }).(pulumi.StringPtrOutput)
}

// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o VmSizingPolicyMemoryOutput) Shares() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSizingPolicyMemory) *string { return v.Shares }).(pulumi.StringPtrOutput)
}

// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
func (o VmSizingPolicyMemoryOutput) SizeInMb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmSizingPolicyMemory) *string { return v.SizeInMb }).(pulumi.StringPtrOutput)
}

type VmSizingPolicyMemoryPtrOutput struct{ *pulumi.OutputState }

func (VmSizingPolicyMemoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmSizingPolicyMemory)(nil)).Elem()
}

func (o VmSizingPolicyMemoryPtrOutput) ToVmSizingPolicyMemoryPtrOutput() VmSizingPolicyMemoryPtrOutput {
	return o
}

func (o VmSizingPolicyMemoryPtrOutput) ToVmSizingPolicyMemoryPtrOutputWithContext(ctx context.Context) VmSizingPolicyMemoryPtrOutput {
	return o
}

func (o VmSizingPolicyMemoryPtrOutput) Elem() VmSizingPolicyMemoryOutput {
	return o.ApplyT(func(v *VmSizingPolicyMemory) VmSizingPolicyMemory {
		if v != nil {
			return *v
		}
		var ret VmSizingPolicyMemory
		return ret
	}).(VmSizingPolicyMemoryOutput)
}

// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
func (o VmSizingPolicyMemoryPtrOutput) LimitInMb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmSizingPolicyMemory) *string {
		if v == nil {
			return nil
		}
		return v.LimitInMb
	}).(pulumi.StringPtrOutput)
}

// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
func (o VmSizingPolicyMemoryPtrOutput) ReservationGuarantee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmSizingPolicyMemory) *string {
		if v == nil {
			return nil
		}
		return v.ReservationGuarantee
	}).(pulumi.StringPtrOutput)
}

// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o VmSizingPolicyMemoryPtrOutput) Shares() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmSizingPolicyMemory) *string {
		if v == nil {
			return nil
		}
		return v.Shares
	}).(pulumi.StringPtrOutput)
}

// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
func (o VmSizingPolicyMemoryPtrOutput) SizeInMb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmSizingPolicyMemory) *string {
		if v == nil {
			return nil
		}
		return v.SizeInMb
	}).(pulumi.StringPtrOutput)
}

type VmVgpuPolicyCpu struct {
	// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
	CoresPerSocket *string `pulumi:"coresPerSocket"`
	// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
	Count *string `pulumi:"count"`
	// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs. -1 means unlimited
	LimitInMhz *string `pulumi:"limitInMhz"`
	// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
	ReservationGuarantee *string `pulumi:"reservationGuarantee"`
	// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares *string `pulumi:"shares"`
	// Defines the vCPU speed of a core in MHz.
	SpeedInMhz *string `pulumi:"speedInMhz"`
}

// VmVgpuPolicyCpuInput is an input type that accepts VmVgpuPolicyCpuArgs and VmVgpuPolicyCpuOutput values.
// You can construct a concrete instance of `VmVgpuPolicyCpuInput` via:
//
//	VmVgpuPolicyCpuArgs{...}
type VmVgpuPolicyCpuInput interface {
	pulumi.Input

	ToVmVgpuPolicyCpuOutput() VmVgpuPolicyCpuOutput
	ToVmVgpuPolicyCpuOutputWithContext(context.Context) VmVgpuPolicyCpuOutput
}

type VmVgpuPolicyCpuArgs struct {
	// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
	CoresPerSocket pulumi.StringPtrInput `pulumi:"coresPerSocket"`
	// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
	Count pulumi.StringPtrInput `pulumi:"count"`
	// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs. -1 means unlimited
	LimitInMhz pulumi.StringPtrInput `pulumi:"limitInMhz"`
	// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
	ReservationGuarantee pulumi.StringPtrInput `pulumi:"reservationGuarantee"`
	// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares pulumi.StringPtrInput `pulumi:"shares"`
	// Defines the vCPU speed of a core in MHz.
	SpeedInMhz pulumi.StringPtrInput `pulumi:"speedInMhz"`
}

func (VmVgpuPolicyCpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVgpuPolicyCpu)(nil)).Elem()
}

func (i VmVgpuPolicyCpuArgs) ToVmVgpuPolicyCpuOutput() VmVgpuPolicyCpuOutput {
	return i.ToVmVgpuPolicyCpuOutputWithContext(context.Background())
}

func (i VmVgpuPolicyCpuArgs) ToVmVgpuPolicyCpuOutputWithContext(ctx context.Context) VmVgpuPolicyCpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyCpuOutput)
}

func (i VmVgpuPolicyCpuArgs) ToVmVgpuPolicyCpuPtrOutput() VmVgpuPolicyCpuPtrOutput {
	return i.ToVmVgpuPolicyCpuPtrOutputWithContext(context.Background())
}

func (i VmVgpuPolicyCpuArgs) ToVmVgpuPolicyCpuPtrOutputWithContext(ctx context.Context) VmVgpuPolicyCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyCpuOutput).ToVmVgpuPolicyCpuPtrOutputWithContext(ctx)
}

// VmVgpuPolicyCpuPtrInput is an input type that accepts VmVgpuPolicyCpuArgs, VmVgpuPolicyCpuPtr and VmVgpuPolicyCpuPtrOutput values.
// You can construct a concrete instance of `VmVgpuPolicyCpuPtrInput` via:
//
//	        VmVgpuPolicyCpuArgs{...}
//
//	or:
//
//	        nil
type VmVgpuPolicyCpuPtrInput interface {
	pulumi.Input

	ToVmVgpuPolicyCpuPtrOutput() VmVgpuPolicyCpuPtrOutput
	ToVmVgpuPolicyCpuPtrOutputWithContext(context.Context) VmVgpuPolicyCpuPtrOutput
}

type vmVgpuPolicyCpuPtrType VmVgpuPolicyCpuArgs

func VmVgpuPolicyCpuPtr(v *VmVgpuPolicyCpuArgs) VmVgpuPolicyCpuPtrInput {
	return (*vmVgpuPolicyCpuPtrType)(v)
}

func (*vmVgpuPolicyCpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmVgpuPolicyCpu)(nil)).Elem()
}

func (i *vmVgpuPolicyCpuPtrType) ToVmVgpuPolicyCpuPtrOutput() VmVgpuPolicyCpuPtrOutput {
	return i.ToVmVgpuPolicyCpuPtrOutputWithContext(context.Background())
}

func (i *vmVgpuPolicyCpuPtrType) ToVmVgpuPolicyCpuPtrOutputWithContext(ctx context.Context) VmVgpuPolicyCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyCpuPtrOutput)
}

type VmVgpuPolicyCpuOutput struct{ *pulumi.OutputState }

func (VmVgpuPolicyCpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVgpuPolicyCpu)(nil)).Elem()
}

func (o VmVgpuPolicyCpuOutput) ToVmVgpuPolicyCpuOutput() VmVgpuPolicyCpuOutput {
	return o
}

func (o VmVgpuPolicyCpuOutput) ToVmVgpuPolicyCpuOutputWithContext(ctx context.Context) VmVgpuPolicyCpuOutput {
	return o
}

func (o VmVgpuPolicyCpuOutput) ToVmVgpuPolicyCpuPtrOutput() VmVgpuPolicyCpuPtrOutput {
	return o.ToVmVgpuPolicyCpuPtrOutputWithContext(context.Background())
}

func (o VmVgpuPolicyCpuOutput) ToVmVgpuPolicyCpuPtrOutputWithContext(ctx context.Context) VmVgpuPolicyCpuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmVgpuPolicyCpu) *VmVgpuPolicyCpu {
		return &v
	}).(VmVgpuPolicyCpuPtrOutput)
}

// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
func (o VmVgpuPolicyCpuOutput) CoresPerSocket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyCpu) *string { return v.CoresPerSocket }).(pulumi.StringPtrOutput)
}

// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
func (o VmVgpuPolicyCpuOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyCpu) *string { return v.Count }).(pulumi.StringPtrOutput)
}

// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs. -1 means unlimited
func (o VmVgpuPolicyCpuOutput) LimitInMhz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyCpu) *string { return v.LimitInMhz }).(pulumi.StringPtrOutput)
}

// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
func (o VmVgpuPolicyCpuOutput) ReservationGuarantee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyCpu) *string { return v.ReservationGuarantee }).(pulumi.StringPtrOutput)
}

// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o VmVgpuPolicyCpuOutput) Shares() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyCpu) *string { return v.Shares }).(pulumi.StringPtrOutput)
}

// Defines the vCPU speed of a core in MHz.
func (o VmVgpuPolicyCpuOutput) SpeedInMhz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyCpu) *string { return v.SpeedInMhz }).(pulumi.StringPtrOutput)
}

type VmVgpuPolicyCpuPtrOutput struct{ *pulumi.OutputState }

func (VmVgpuPolicyCpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmVgpuPolicyCpu)(nil)).Elem()
}

func (o VmVgpuPolicyCpuPtrOutput) ToVmVgpuPolicyCpuPtrOutput() VmVgpuPolicyCpuPtrOutput {
	return o
}

func (o VmVgpuPolicyCpuPtrOutput) ToVmVgpuPolicyCpuPtrOutputWithContext(ctx context.Context) VmVgpuPolicyCpuPtrOutput {
	return o
}

func (o VmVgpuPolicyCpuPtrOutput) Elem() VmVgpuPolicyCpuOutput {
	return o.ApplyT(func(v *VmVgpuPolicyCpu) VmVgpuPolicyCpu {
		if v != nil {
			return *v
		}
		var ret VmVgpuPolicyCpu
		return ret
	}).(VmVgpuPolicyCpuOutput)
}

// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
func (o VmVgpuPolicyCpuPtrOutput) CoresPerSocket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.CoresPerSocket
	}).(pulumi.StringPtrOutput)
}

// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
func (o VmVgpuPolicyCpuPtrOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.StringPtrOutput)
}

// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs. -1 means unlimited
func (o VmVgpuPolicyCpuPtrOutput) LimitInMhz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.LimitInMhz
	}).(pulumi.StringPtrOutput)
}

// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
func (o VmVgpuPolicyCpuPtrOutput) ReservationGuarantee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.ReservationGuarantee
	}).(pulumi.StringPtrOutput)
}

// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o VmVgpuPolicyCpuPtrOutput) Shares() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.Shares
	}).(pulumi.StringPtrOutput)
}

// Defines the vCPU speed of a core in MHz.
func (o VmVgpuPolicyCpuPtrOutput) SpeedInMhz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.SpeedInMhz
	}).(pulumi.StringPtrOutput)
}

type VmVgpuPolicyMemory struct {
	// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
	LimitInMb *string `pulumi:"limitInMb"`
	// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
	ReservationGuarantee *string `pulumi:"reservationGuarantee"`
	// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares *string `pulumi:"shares"`
	// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
	SizeInMb *string `pulumi:"sizeInMb"`
}

// VmVgpuPolicyMemoryInput is an input type that accepts VmVgpuPolicyMemoryArgs and VmVgpuPolicyMemoryOutput values.
// You can construct a concrete instance of `VmVgpuPolicyMemoryInput` via:
//
//	VmVgpuPolicyMemoryArgs{...}
type VmVgpuPolicyMemoryInput interface {
	pulumi.Input

	ToVmVgpuPolicyMemoryOutput() VmVgpuPolicyMemoryOutput
	ToVmVgpuPolicyMemoryOutputWithContext(context.Context) VmVgpuPolicyMemoryOutput
}

type VmVgpuPolicyMemoryArgs struct {
	// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
	LimitInMb pulumi.StringPtrInput `pulumi:"limitInMb"`
	// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
	ReservationGuarantee pulumi.StringPtrInput `pulumi:"reservationGuarantee"`
	// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares pulumi.StringPtrInput `pulumi:"shares"`
	// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
	SizeInMb pulumi.StringPtrInput `pulumi:"sizeInMb"`
}

func (VmVgpuPolicyMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVgpuPolicyMemory)(nil)).Elem()
}

func (i VmVgpuPolicyMemoryArgs) ToVmVgpuPolicyMemoryOutput() VmVgpuPolicyMemoryOutput {
	return i.ToVmVgpuPolicyMemoryOutputWithContext(context.Background())
}

func (i VmVgpuPolicyMemoryArgs) ToVmVgpuPolicyMemoryOutputWithContext(ctx context.Context) VmVgpuPolicyMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyMemoryOutput)
}

func (i VmVgpuPolicyMemoryArgs) ToVmVgpuPolicyMemoryPtrOutput() VmVgpuPolicyMemoryPtrOutput {
	return i.ToVmVgpuPolicyMemoryPtrOutputWithContext(context.Background())
}

func (i VmVgpuPolicyMemoryArgs) ToVmVgpuPolicyMemoryPtrOutputWithContext(ctx context.Context) VmVgpuPolicyMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyMemoryOutput).ToVmVgpuPolicyMemoryPtrOutputWithContext(ctx)
}

// VmVgpuPolicyMemoryPtrInput is an input type that accepts VmVgpuPolicyMemoryArgs, VmVgpuPolicyMemoryPtr and VmVgpuPolicyMemoryPtrOutput values.
// You can construct a concrete instance of `VmVgpuPolicyMemoryPtrInput` via:
//
//	        VmVgpuPolicyMemoryArgs{...}
//
//	or:
//
//	        nil
type VmVgpuPolicyMemoryPtrInput interface {
	pulumi.Input

	ToVmVgpuPolicyMemoryPtrOutput() VmVgpuPolicyMemoryPtrOutput
	ToVmVgpuPolicyMemoryPtrOutputWithContext(context.Context) VmVgpuPolicyMemoryPtrOutput
}

type vmVgpuPolicyMemoryPtrType VmVgpuPolicyMemoryArgs

func VmVgpuPolicyMemoryPtr(v *VmVgpuPolicyMemoryArgs) VmVgpuPolicyMemoryPtrInput {
	return (*vmVgpuPolicyMemoryPtrType)(v)
}

func (*vmVgpuPolicyMemoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmVgpuPolicyMemory)(nil)).Elem()
}

func (i *vmVgpuPolicyMemoryPtrType) ToVmVgpuPolicyMemoryPtrOutput() VmVgpuPolicyMemoryPtrOutput {
	return i.ToVmVgpuPolicyMemoryPtrOutputWithContext(context.Background())
}

func (i *vmVgpuPolicyMemoryPtrType) ToVmVgpuPolicyMemoryPtrOutputWithContext(ctx context.Context) VmVgpuPolicyMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyMemoryPtrOutput)
}

type VmVgpuPolicyMemoryOutput struct{ *pulumi.OutputState }

func (VmVgpuPolicyMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVgpuPolicyMemory)(nil)).Elem()
}

func (o VmVgpuPolicyMemoryOutput) ToVmVgpuPolicyMemoryOutput() VmVgpuPolicyMemoryOutput {
	return o
}

func (o VmVgpuPolicyMemoryOutput) ToVmVgpuPolicyMemoryOutputWithContext(ctx context.Context) VmVgpuPolicyMemoryOutput {
	return o
}

func (o VmVgpuPolicyMemoryOutput) ToVmVgpuPolicyMemoryPtrOutput() VmVgpuPolicyMemoryPtrOutput {
	return o.ToVmVgpuPolicyMemoryPtrOutputWithContext(context.Background())
}

func (o VmVgpuPolicyMemoryOutput) ToVmVgpuPolicyMemoryPtrOutputWithContext(ctx context.Context) VmVgpuPolicyMemoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmVgpuPolicyMemory) *VmVgpuPolicyMemory {
		return &v
	}).(VmVgpuPolicyMemoryPtrOutput)
}

// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
func (o VmVgpuPolicyMemoryOutput) LimitInMb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyMemory) *string { return v.LimitInMb }).(pulumi.StringPtrOutput)
}

// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
func (o VmVgpuPolicyMemoryOutput) ReservationGuarantee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyMemory) *string { return v.ReservationGuarantee }).(pulumi.StringPtrOutput)
}

// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o VmVgpuPolicyMemoryOutput) Shares() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyMemory) *string { return v.Shares }).(pulumi.StringPtrOutput)
}

// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
func (o VmVgpuPolicyMemoryOutput) SizeInMb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyMemory) *string { return v.SizeInMb }).(pulumi.StringPtrOutput)
}

type VmVgpuPolicyMemoryPtrOutput struct{ *pulumi.OutputState }

func (VmVgpuPolicyMemoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmVgpuPolicyMemory)(nil)).Elem()
}

func (o VmVgpuPolicyMemoryPtrOutput) ToVmVgpuPolicyMemoryPtrOutput() VmVgpuPolicyMemoryPtrOutput {
	return o
}

func (o VmVgpuPolicyMemoryPtrOutput) ToVmVgpuPolicyMemoryPtrOutputWithContext(ctx context.Context) VmVgpuPolicyMemoryPtrOutput {
	return o
}

func (o VmVgpuPolicyMemoryPtrOutput) Elem() VmVgpuPolicyMemoryOutput {
	return o.ApplyT(func(v *VmVgpuPolicyMemory) VmVgpuPolicyMemory {
		if v != nil {
			return *v
		}
		var ret VmVgpuPolicyMemory
		return ret
	}).(VmVgpuPolicyMemoryOutput)
}

// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
func (o VmVgpuPolicyMemoryPtrOutput) LimitInMb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyMemory) *string {
		if v == nil {
			return nil
		}
		return v.LimitInMb
	}).(pulumi.StringPtrOutput)
}

// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
func (o VmVgpuPolicyMemoryPtrOutput) ReservationGuarantee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyMemory) *string {
		if v == nil {
			return nil
		}
		return v.ReservationGuarantee
	}).(pulumi.StringPtrOutput)
}

// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o VmVgpuPolicyMemoryPtrOutput) Shares() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyMemory) *string {
		if v == nil {
			return nil
		}
		return v.Shares
	}).(pulumi.StringPtrOutput)
}

// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
func (o VmVgpuPolicyMemoryPtrOutput) SizeInMb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyMemory) *string {
		if v == nil {
			return nil
		}
		return v.SizeInMb
	}).(pulumi.StringPtrOutput)
}

type VmVgpuPolicyProviderVdcScope struct {
	// A set of vCenter cluster names on which the provider VDC is hosted.
	// If none are provided, the provider attempts to find one automatically. Can be fetched using `data.vcd_resource_pool.cluster_moref` attribute.
	ClusterNames []string `pulumi:"clusterNames"`
	// The ID of the provider VDC that should be in the scope.
	ProviderVdcId string `pulumi:"providerVdcId"`
	// Optional identifier for a VM group within the provider VDC scope.
	VmGroupId *string `pulumi:"vmGroupId"`
}

// VmVgpuPolicyProviderVdcScopeInput is an input type that accepts VmVgpuPolicyProviderVdcScopeArgs and VmVgpuPolicyProviderVdcScopeOutput values.
// You can construct a concrete instance of `VmVgpuPolicyProviderVdcScopeInput` via:
//
//	VmVgpuPolicyProviderVdcScopeArgs{...}
type VmVgpuPolicyProviderVdcScopeInput interface {
	pulumi.Input

	ToVmVgpuPolicyProviderVdcScopeOutput() VmVgpuPolicyProviderVdcScopeOutput
	ToVmVgpuPolicyProviderVdcScopeOutputWithContext(context.Context) VmVgpuPolicyProviderVdcScopeOutput
}

type VmVgpuPolicyProviderVdcScopeArgs struct {
	// A set of vCenter cluster names on which the provider VDC is hosted.
	// If none are provided, the provider attempts to find one automatically. Can be fetched using `data.vcd_resource_pool.cluster_moref` attribute.
	ClusterNames pulumi.StringArrayInput `pulumi:"clusterNames"`
	// The ID of the provider VDC that should be in the scope.
	ProviderVdcId pulumi.StringInput `pulumi:"providerVdcId"`
	// Optional identifier for a VM group within the provider VDC scope.
	VmGroupId pulumi.StringPtrInput `pulumi:"vmGroupId"`
}

func (VmVgpuPolicyProviderVdcScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVgpuPolicyProviderVdcScope)(nil)).Elem()
}

func (i VmVgpuPolicyProviderVdcScopeArgs) ToVmVgpuPolicyProviderVdcScopeOutput() VmVgpuPolicyProviderVdcScopeOutput {
	return i.ToVmVgpuPolicyProviderVdcScopeOutputWithContext(context.Background())
}

func (i VmVgpuPolicyProviderVdcScopeArgs) ToVmVgpuPolicyProviderVdcScopeOutputWithContext(ctx context.Context) VmVgpuPolicyProviderVdcScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyProviderVdcScopeOutput)
}

// VmVgpuPolicyProviderVdcScopeArrayInput is an input type that accepts VmVgpuPolicyProviderVdcScopeArray and VmVgpuPolicyProviderVdcScopeArrayOutput values.
// You can construct a concrete instance of `VmVgpuPolicyProviderVdcScopeArrayInput` via:
//
//	VmVgpuPolicyProviderVdcScopeArray{ VmVgpuPolicyProviderVdcScopeArgs{...} }
type VmVgpuPolicyProviderVdcScopeArrayInput interface {
	pulumi.Input

	ToVmVgpuPolicyProviderVdcScopeArrayOutput() VmVgpuPolicyProviderVdcScopeArrayOutput
	ToVmVgpuPolicyProviderVdcScopeArrayOutputWithContext(context.Context) VmVgpuPolicyProviderVdcScopeArrayOutput
}

type VmVgpuPolicyProviderVdcScopeArray []VmVgpuPolicyProviderVdcScopeInput

func (VmVgpuPolicyProviderVdcScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmVgpuPolicyProviderVdcScope)(nil)).Elem()
}

func (i VmVgpuPolicyProviderVdcScopeArray) ToVmVgpuPolicyProviderVdcScopeArrayOutput() VmVgpuPolicyProviderVdcScopeArrayOutput {
	return i.ToVmVgpuPolicyProviderVdcScopeArrayOutputWithContext(context.Background())
}

func (i VmVgpuPolicyProviderVdcScopeArray) ToVmVgpuPolicyProviderVdcScopeArrayOutputWithContext(ctx context.Context) VmVgpuPolicyProviderVdcScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyProviderVdcScopeArrayOutput)
}

type VmVgpuPolicyProviderVdcScopeOutput struct{ *pulumi.OutputState }

func (VmVgpuPolicyProviderVdcScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVgpuPolicyProviderVdcScope)(nil)).Elem()
}

func (o VmVgpuPolicyProviderVdcScopeOutput) ToVmVgpuPolicyProviderVdcScopeOutput() VmVgpuPolicyProviderVdcScopeOutput {
	return o
}

func (o VmVgpuPolicyProviderVdcScopeOutput) ToVmVgpuPolicyProviderVdcScopeOutputWithContext(ctx context.Context) VmVgpuPolicyProviderVdcScopeOutput {
	return o
}

// A set of vCenter cluster names on which the provider VDC is hosted.
// If none are provided, the provider attempts to find one automatically. Can be fetched using `data.vcd_resource_pool.cluster_moref` attribute.
func (o VmVgpuPolicyProviderVdcScopeOutput) ClusterNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VmVgpuPolicyProviderVdcScope) []string { return v.ClusterNames }).(pulumi.StringArrayOutput)
}

// The ID of the provider VDC that should be in the scope.
func (o VmVgpuPolicyProviderVdcScopeOutput) ProviderVdcId() pulumi.StringOutput {
	return o.ApplyT(func(v VmVgpuPolicyProviderVdcScope) string { return v.ProviderVdcId }).(pulumi.StringOutput)
}

// Optional identifier for a VM group within the provider VDC scope.
func (o VmVgpuPolicyProviderVdcScopeOutput) VmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVgpuPolicyProviderVdcScope) *string { return v.VmGroupId }).(pulumi.StringPtrOutput)
}

type VmVgpuPolicyProviderVdcScopeArrayOutput struct{ *pulumi.OutputState }

func (VmVgpuPolicyProviderVdcScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmVgpuPolicyProviderVdcScope)(nil)).Elem()
}

func (o VmVgpuPolicyProviderVdcScopeArrayOutput) ToVmVgpuPolicyProviderVdcScopeArrayOutput() VmVgpuPolicyProviderVdcScopeArrayOutput {
	return o
}

func (o VmVgpuPolicyProviderVdcScopeArrayOutput) ToVmVgpuPolicyProviderVdcScopeArrayOutputWithContext(ctx context.Context) VmVgpuPolicyProviderVdcScopeArrayOutput {
	return o
}

func (o VmVgpuPolicyProviderVdcScopeArrayOutput) Index(i pulumi.IntInput) VmVgpuPolicyProviderVdcScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmVgpuPolicyProviderVdcScope {
		return vs[0].([]VmVgpuPolicyProviderVdcScope)[vs[1].(int)]
	}).(VmVgpuPolicyProviderVdcScopeOutput)
}

type VmVgpuPolicyVgpuProfile struct {
	// Specifies the number of vGPU profiles. Must be at least 1.
	Count int `pulumi:"count"`
	// The identifier of the vGPU profile.
	Id string `pulumi:"id"`
}

// VmVgpuPolicyVgpuProfileInput is an input type that accepts VmVgpuPolicyVgpuProfileArgs and VmVgpuPolicyVgpuProfileOutput values.
// You can construct a concrete instance of `VmVgpuPolicyVgpuProfileInput` via:
//
//	VmVgpuPolicyVgpuProfileArgs{...}
type VmVgpuPolicyVgpuProfileInput interface {
	pulumi.Input

	ToVmVgpuPolicyVgpuProfileOutput() VmVgpuPolicyVgpuProfileOutput
	ToVmVgpuPolicyVgpuProfileOutputWithContext(context.Context) VmVgpuPolicyVgpuProfileOutput
}

type VmVgpuPolicyVgpuProfileArgs struct {
	// Specifies the number of vGPU profiles. Must be at least 1.
	Count pulumi.IntInput `pulumi:"count"`
	// The identifier of the vGPU profile.
	Id pulumi.StringInput `pulumi:"id"`
}

func (VmVgpuPolicyVgpuProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVgpuPolicyVgpuProfile)(nil)).Elem()
}

func (i VmVgpuPolicyVgpuProfileArgs) ToVmVgpuPolicyVgpuProfileOutput() VmVgpuPolicyVgpuProfileOutput {
	return i.ToVmVgpuPolicyVgpuProfileOutputWithContext(context.Background())
}

func (i VmVgpuPolicyVgpuProfileArgs) ToVmVgpuPolicyVgpuProfileOutputWithContext(ctx context.Context) VmVgpuPolicyVgpuProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyVgpuProfileOutput)
}

func (i VmVgpuPolicyVgpuProfileArgs) ToVmVgpuPolicyVgpuProfilePtrOutput() VmVgpuPolicyVgpuProfilePtrOutput {
	return i.ToVmVgpuPolicyVgpuProfilePtrOutputWithContext(context.Background())
}

func (i VmVgpuPolicyVgpuProfileArgs) ToVmVgpuPolicyVgpuProfilePtrOutputWithContext(ctx context.Context) VmVgpuPolicyVgpuProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyVgpuProfileOutput).ToVmVgpuPolicyVgpuProfilePtrOutputWithContext(ctx)
}

// VmVgpuPolicyVgpuProfilePtrInput is an input type that accepts VmVgpuPolicyVgpuProfileArgs, VmVgpuPolicyVgpuProfilePtr and VmVgpuPolicyVgpuProfilePtrOutput values.
// You can construct a concrete instance of `VmVgpuPolicyVgpuProfilePtrInput` via:
//
//	        VmVgpuPolicyVgpuProfileArgs{...}
//
//	or:
//
//	        nil
type VmVgpuPolicyVgpuProfilePtrInput interface {
	pulumi.Input

	ToVmVgpuPolicyVgpuProfilePtrOutput() VmVgpuPolicyVgpuProfilePtrOutput
	ToVmVgpuPolicyVgpuProfilePtrOutputWithContext(context.Context) VmVgpuPolicyVgpuProfilePtrOutput
}

type vmVgpuPolicyVgpuProfilePtrType VmVgpuPolicyVgpuProfileArgs

func VmVgpuPolicyVgpuProfilePtr(v *VmVgpuPolicyVgpuProfileArgs) VmVgpuPolicyVgpuProfilePtrInput {
	return (*vmVgpuPolicyVgpuProfilePtrType)(v)
}

func (*vmVgpuPolicyVgpuProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmVgpuPolicyVgpuProfile)(nil)).Elem()
}

func (i *vmVgpuPolicyVgpuProfilePtrType) ToVmVgpuPolicyVgpuProfilePtrOutput() VmVgpuPolicyVgpuProfilePtrOutput {
	return i.ToVmVgpuPolicyVgpuProfilePtrOutputWithContext(context.Background())
}

func (i *vmVgpuPolicyVgpuProfilePtrType) ToVmVgpuPolicyVgpuProfilePtrOutputWithContext(ctx context.Context) VmVgpuPolicyVgpuProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVgpuPolicyVgpuProfilePtrOutput)
}

type VmVgpuPolicyVgpuProfileOutput struct{ *pulumi.OutputState }

func (VmVgpuPolicyVgpuProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVgpuPolicyVgpuProfile)(nil)).Elem()
}

func (o VmVgpuPolicyVgpuProfileOutput) ToVmVgpuPolicyVgpuProfileOutput() VmVgpuPolicyVgpuProfileOutput {
	return o
}

func (o VmVgpuPolicyVgpuProfileOutput) ToVmVgpuPolicyVgpuProfileOutputWithContext(ctx context.Context) VmVgpuPolicyVgpuProfileOutput {
	return o
}

func (o VmVgpuPolicyVgpuProfileOutput) ToVmVgpuPolicyVgpuProfilePtrOutput() VmVgpuPolicyVgpuProfilePtrOutput {
	return o.ToVmVgpuPolicyVgpuProfilePtrOutputWithContext(context.Background())
}

func (o VmVgpuPolicyVgpuProfileOutput) ToVmVgpuPolicyVgpuProfilePtrOutputWithContext(ctx context.Context) VmVgpuPolicyVgpuProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmVgpuPolicyVgpuProfile) *VmVgpuPolicyVgpuProfile {
		return &v
	}).(VmVgpuPolicyVgpuProfilePtrOutput)
}

// Specifies the number of vGPU profiles. Must be at least 1.
func (o VmVgpuPolicyVgpuProfileOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v VmVgpuPolicyVgpuProfile) int { return v.Count }).(pulumi.IntOutput)
}

// The identifier of the vGPU profile.
func (o VmVgpuPolicyVgpuProfileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VmVgpuPolicyVgpuProfile) string { return v.Id }).(pulumi.StringOutput)
}

type VmVgpuPolicyVgpuProfilePtrOutput struct{ *pulumi.OutputState }

func (VmVgpuPolicyVgpuProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmVgpuPolicyVgpuProfile)(nil)).Elem()
}

func (o VmVgpuPolicyVgpuProfilePtrOutput) ToVmVgpuPolicyVgpuProfilePtrOutput() VmVgpuPolicyVgpuProfilePtrOutput {
	return o
}

func (o VmVgpuPolicyVgpuProfilePtrOutput) ToVmVgpuPolicyVgpuProfilePtrOutputWithContext(ctx context.Context) VmVgpuPolicyVgpuProfilePtrOutput {
	return o
}

func (o VmVgpuPolicyVgpuProfilePtrOutput) Elem() VmVgpuPolicyVgpuProfileOutput {
	return o.ApplyT(func(v *VmVgpuPolicyVgpuProfile) VmVgpuPolicyVgpuProfile {
		if v != nil {
			return *v
		}
		var ret VmVgpuPolicyVgpuProfile
		return ret
	}).(VmVgpuPolicyVgpuProfileOutput)
}

// Specifies the number of vGPU profiles. Must be at least 1.
func (o VmVgpuPolicyVgpuProfilePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyVgpuProfile) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// The identifier of the vGPU profile.
func (o VmVgpuPolicyVgpuProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVgpuPolicyVgpuProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetCatalogAccessControlSharedWith struct {
	// The access level for the org, user, or group to which we are sharing. One of [ReadOnly, Change, FullControl] for users and groups, but just ReadOnly for Organizations
	AccessLevel string `pulumi:"accessLevel"`
	// ID of the group to which we are sharing
	GroupId string `pulumi:"groupId"`
	// ID of the Org to which we are sharing
	OrgId string `pulumi:"orgId"`
	// Name of the subject (org, group, or user) with which we are sharing
	SubjectName string `pulumi:"subjectName"`
	// ID of the user to which we are sharing
	UserId string `pulumi:"userId"`
}

// GetCatalogAccessControlSharedWithInput is an input type that accepts GetCatalogAccessControlSharedWithArgs and GetCatalogAccessControlSharedWithOutput values.
// You can construct a concrete instance of `GetCatalogAccessControlSharedWithInput` via:
//
//	GetCatalogAccessControlSharedWithArgs{...}
type GetCatalogAccessControlSharedWithInput interface {
	pulumi.Input

	ToGetCatalogAccessControlSharedWithOutput() GetCatalogAccessControlSharedWithOutput
	ToGetCatalogAccessControlSharedWithOutputWithContext(context.Context) GetCatalogAccessControlSharedWithOutput
}

type GetCatalogAccessControlSharedWithArgs struct {
	// The access level for the org, user, or group to which we are sharing. One of [ReadOnly, Change, FullControl] for users and groups, but just ReadOnly for Organizations
	AccessLevel pulumi.StringInput `pulumi:"accessLevel"`
	// ID of the group to which we are sharing
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// ID of the Org to which we are sharing
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Name of the subject (org, group, or user) with which we are sharing
	SubjectName pulumi.StringInput `pulumi:"subjectName"`
	// ID of the user to which we are sharing
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetCatalogAccessControlSharedWithArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogAccessControlSharedWith)(nil)).Elem()
}

func (i GetCatalogAccessControlSharedWithArgs) ToGetCatalogAccessControlSharedWithOutput() GetCatalogAccessControlSharedWithOutput {
	return i.ToGetCatalogAccessControlSharedWithOutputWithContext(context.Background())
}

func (i GetCatalogAccessControlSharedWithArgs) ToGetCatalogAccessControlSharedWithOutputWithContext(ctx context.Context) GetCatalogAccessControlSharedWithOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogAccessControlSharedWithOutput)
}

// GetCatalogAccessControlSharedWithArrayInput is an input type that accepts GetCatalogAccessControlSharedWithArray and GetCatalogAccessControlSharedWithArrayOutput values.
// You can construct a concrete instance of `GetCatalogAccessControlSharedWithArrayInput` via:
//
//	GetCatalogAccessControlSharedWithArray{ GetCatalogAccessControlSharedWithArgs{...} }
type GetCatalogAccessControlSharedWithArrayInput interface {
	pulumi.Input

	ToGetCatalogAccessControlSharedWithArrayOutput() GetCatalogAccessControlSharedWithArrayOutput
	ToGetCatalogAccessControlSharedWithArrayOutputWithContext(context.Context) GetCatalogAccessControlSharedWithArrayOutput
}

type GetCatalogAccessControlSharedWithArray []GetCatalogAccessControlSharedWithInput

func (GetCatalogAccessControlSharedWithArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogAccessControlSharedWith)(nil)).Elem()
}

func (i GetCatalogAccessControlSharedWithArray) ToGetCatalogAccessControlSharedWithArrayOutput() GetCatalogAccessControlSharedWithArrayOutput {
	return i.ToGetCatalogAccessControlSharedWithArrayOutputWithContext(context.Background())
}

func (i GetCatalogAccessControlSharedWithArray) ToGetCatalogAccessControlSharedWithArrayOutputWithContext(ctx context.Context) GetCatalogAccessControlSharedWithArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogAccessControlSharedWithArrayOutput)
}

type GetCatalogAccessControlSharedWithOutput struct{ *pulumi.OutputState }

func (GetCatalogAccessControlSharedWithOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogAccessControlSharedWith)(nil)).Elem()
}

func (o GetCatalogAccessControlSharedWithOutput) ToGetCatalogAccessControlSharedWithOutput() GetCatalogAccessControlSharedWithOutput {
	return o
}

func (o GetCatalogAccessControlSharedWithOutput) ToGetCatalogAccessControlSharedWithOutputWithContext(ctx context.Context) GetCatalogAccessControlSharedWithOutput {
	return o
}

// The access level for the org, user, or group to which we are sharing. One of [ReadOnly, Change, FullControl] for users and groups, but just ReadOnly for Organizations
func (o GetCatalogAccessControlSharedWithOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogAccessControlSharedWith) string { return v.AccessLevel }).(pulumi.StringOutput)
}

// ID of the group to which we are sharing
func (o GetCatalogAccessControlSharedWithOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogAccessControlSharedWith) string { return v.GroupId }).(pulumi.StringOutput)
}

// ID of the Org to which we are sharing
func (o GetCatalogAccessControlSharedWithOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogAccessControlSharedWith) string { return v.OrgId }).(pulumi.StringOutput)
}

// Name of the subject (org, group, or user) with which we are sharing
func (o GetCatalogAccessControlSharedWithOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogAccessControlSharedWith) string { return v.SubjectName }).(pulumi.StringOutput)
}

// ID of the user to which we are sharing
func (o GetCatalogAccessControlSharedWithOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogAccessControlSharedWith) string { return v.UserId }).(pulumi.StringOutput)
}

type GetCatalogAccessControlSharedWithArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogAccessControlSharedWithArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogAccessControlSharedWith)(nil)).Elem()
}

func (o GetCatalogAccessControlSharedWithArrayOutput) ToGetCatalogAccessControlSharedWithArrayOutput() GetCatalogAccessControlSharedWithArrayOutput {
	return o
}

func (o GetCatalogAccessControlSharedWithArrayOutput) ToGetCatalogAccessControlSharedWithArrayOutputWithContext(ctx context.Context) GetCatalogAccessControlSharedWithArrayOutput {
	return o
}

func (o GetCatalogAccessControlSharedWithArrayOutput) Index(i pulumi.IntInput) GetCatalogAccessControlSharedWithOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogAccessControlSharedWith {
		return vs[0].([]GetCatalogAccessControlSharedWith)[vs[1].(int)]
	}).(GetCatalogAccessControlSharedWithOutput)
}

type GetCatalogFilter struct {
	// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
	Date *string `pulumi:"date"`
	// Retrieves the oldest item
	Earliest *bool `pulumi:"earliest"`
	// Retrieves the newest item
	Latest *bool `pulumi:"latest"`
	// (Deprecated; *v3.6+*) Use `metadataEntry` instead. Key value map of metadata.
	Metadatas []GetCatalogFilterMetadata `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetCatalogFilterInput is an input type that accepts GetCatalogFilterArgs and GetCatalogFilterOutput values.
// You can construct a concrete instance of `GetCatalogFilterInput` via:
//
//	GetCatalogFilterArgs{...}
type GetCatalogFilterInput interface {
	pulumi.Input

	ToGetCatalogFilterOutput() GetCatalogFilterOutput
	ToGetCatalogFilterOutputWithContext(context.Context) GetCatalogFilterOutput
}

type GetCatalogFilterArgs struct {
	// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Retrieves the oldest item
	Earliest pulumi.BoolPtrInput `pulumi:"earliest"`
	// Retrieves the newest item
	Latest pulumi.BoolPtrInput `pulumi:"latest"`
	// (Deprecated; *v3.6+*) Use `metadataEntry` instead. Key value map of metadata.
	Metadatas GetCatalogFilterMetadataArrayInput `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetCatalogFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogFilter)(nil)).Elem()
}

func (i GetCatalogFilterArgs) ToGetCatalogFilterOutput() GetCatalogFilterOutput {
	return i.ToGetCatalogFilterOutputWithContext(context.Background())
}

func (i GetCatalogFilterArgs) ToGetCatalogFilterOutputWithContext(ctx context.Context) GetCatalogFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogFilterOutput)
}

func (i GetCatalogFilterArgs) ToGetCatalogFilterPtrOutput() GetCatalogFilterPtrOutput {
	return i.ToGetCatalogFilterPtrOutputWithContext(context.Background())
}

func (i GetCatalogFilterArgs) ToGetCatalogFilterPtrOutputWithContext(ctx context.Context) GetCatalogFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogFilterOutput).ToGetCatalogFilterPtrOutputWithContext(ctx)
}

// GetCatalogFilterPtrInput is an input type that accepts GetCatalogFilterArgs, GetCatalogFilterPtr and GetCatalogFilterPtrOutput values.
// You can construct a concrete instance of `GetCatalogFilterPtrInput` via:
//
//	        GetCatalogFilterArgs{...}
//
//	or:
//
//	        nil
type GetCatalogFilterPtrInput interface {
	pulumi.Input

	ToGetCatalogFilterPtrOutput() GetCatalogFilterPtrOutput
	ToGetCatalogFilterPtrOutputWithContext(context.Context) GetCatalogFilterPtrOutput
}

type getCatalogFilterPtrType GetCatalogFilterArgs

func GetCatalogFilterPtr(v *GetCatalogFilterArgs) GetCatalogFilterPtrInput {
	return (*getCatalogFilterPtrType)(v)
}

func (*getCatalogFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCatalogFilter)(nil)).Elem()
}

func (i *getCatalogFilterPtrType) ToGetCatalogFilterPtrOutput() GetCatalogFilterPtrOutput {
	return i.ToGetCatalogFilterPtrOutputWithContext(context.Background())
}

func (i *getCatalogFilterPtrType) ToGetCatalogFilterPtrOutputWithContext(ctx context.Context) GetCatalogFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogFilterPtrOutput)
}

type GetCatalogFilterOutput struct{ *pulumi.OutputState }

func (GetCatalogFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogFilter)(nil)).Elem()
}

func (o GetCatalogFilterOutput) ToGetCatalogFilterOutput() GetCatalogFilterOutput {
	return o
}

func (o GetCatalogFilterOutput) ToGetCatalogFilterOutputWithContext(ctx context.Context) GetCatalogFilterOutput {
	return o
}

func (o GetCatalogFilterOutput) ToGetCatalogFilterPtrOutput() GetCatalogFilterPtrOutput {
	return o.ToGetCatalogFilterPtrOutputWithContext(context.Background())
}

func (o GetCatalogFilterOutput) ToGetCatalogFilterPtrOutputWithContext(ctx context.Context) GetCatalogFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetCatalogFilter) *GetCatalogFilter {
		return &v
	}).(GetCatalogFilterPtrOutput)
}

// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
func (o GetCatalogFilterOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogFilter) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Retrieves the oldest item
func (o GetCatalogFilterOutput) Earliest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogFilter) *bool { return v.Earliest }).(pulumi.BoolPtrOutput)
}

// Retrieves the newest item
func (o GetCatalogFilterOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogFilter) *bool { return v.Latest }).(pulumi.BoolPtrOutput)
}

// (Deprecated; *v3.6+*) Use `metadataEntry` instead. Key value map of metadata.
func (o GetCatalogFilterOutput) Metadatas() GetCatalogFilterMetadataArrayOutput {
	return o.ApplyT(func(v GetCatalogFilter) []GetCatalogFilterMetadata { return v.Metadatas }).(GetCatalogFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetCatalogFilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogFilter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetCatalogFilterPtrOutput struct{ *pulumi.OutputState }

func (GetCatalogFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCatalogFilter)(nil)).Elem()
}

func (o GetCatalogFilterPtrOutput) ToGetCatalogFilterPtrOutput() GetCatalogFilterPtrOutput {
	return o
}

func (o GetCatalogFilterPtrOutput) ToGetCatalogFilterPtrOutputWithContext(ctx context.Context) GetCatalogFilterPtrOutput {
	return o
}

func (o GetCatalogFilterPtrOutput) Elem() GetCatalogFilterOutput {
	return o.ApplyT(func(v *GetCatalogFilter) GetCatalogFilter {
		if v != nil {
			return *v
		}
		var ret GetCatalogFilter
		return ret
	}).(GetCatalogFilterOutput)
}

// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
func (o GetCatalogFilterPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCatalogFilter) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// Retrieves the oldest item
func (o GetCatalogFilterPtrOutput) Earliest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetCatalogFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Earliest
	}).(pulumi.BoolPtrOutput)
}

// Retrieves the newest item
func (o GetCatalogFilterPtrOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetCatalogFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Latest
	}).(pulumi.BoolPtrOutput)
}

// (Deprecated; *v3.6+*) Use `metadataEntry` instead. Key value map of metadata.
func (o GetCatalogFilterPtrOutput) Metadatas() GetCatalogFilterMetadataArrayOutput {
	return o.ApplyT(func(v *GetCatalogFilter) []GetCatalogFilterMetadata {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(GetCatalogFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetCatalogFilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCatalogFilter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetCatalogFilterMetadata struct {
	// True if is a metadata@SYSTEM key
	IsSystem *bool `pulumi:"isSystem"`
	// Metadata key (field name)
	Key string `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type *string `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch *bool `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value string `pulumi:"value"`
}

// GetCatalogFilterMetadataInput is an input type that accepts GetCatalogFilterMetadataArgs and GetCatalogFilterMetadataOutput values.
// You can construct a concrete instance of `GetCatalogFilterMetadataInput` via:
//
//	GetCatalogFilterMetadataArgs{...}
type GetCatalogFilterMetadataInput interface {
	pulumi.Input

	ToGetCatalogFilterMetadataOutput() GetCatalogFilterMetadataOutput
	ToGetCatalogFilterMetadataOutputWithContext(context.Context) GetCatalogFilterMetadataOutput
}

type GetCatalogFilterMetadataArgs struct {
	// True if is a metadata@SYSTEM key
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Metadata key (field name)
	Key pulumi.StringInput `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch pulumi.BoolPtrInput `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCatalogFilterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogFilterMetadata)(nil)).Elem()
}

func (i GetCatalogFilterMetadataArgs) ToGetCatalogFilterMetadataOutput() GetCatalogFilterMetadataOutput {
	return i.ToGetCatalogFilterMetadataOutputWithContext(context.Background())
}

func (i GetCatalogFilterMetadataArgs) ToGetCatalogFilterMetadataOutputWithContext(ctx context.Context) GetCatalogFilterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogFilterMetadataOutput)
}

// GetCatalogFilterMetadataArrayInput is an input type that accepts GetCatalogFilterMetadataArray and GetCatalogFilterMetadataArrayOutput values.
// You can construct a concrete instance of `GetCatalogFilterMetadataArrayInput` via:
//
//	GetCatalogFilterMetadataArray{ GetCatalogFilterMetadataArgs{...} }
type GetCatalogFilterMetadataArrayInput interface {
	pulumi.Input

	ToGetCatalogFilterMetadataArrayOutput() GetCatalogFilterMetadataArrayOutput
	ToGetCatalogFilterMetadataArrayOutputWithContext(context.Context) GetCatalogFilterMetadataArrayOutput
}

type GetCatalogFilterMetadataArray []GetCatalogFilterMetadataInput

func (GetCatalogFilterMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogFilterMetadata)(nil)).Elem()
}

func (i GetCatalogFilterMetadataArray) ToGetCatalogFilterMetadataArrayOutput() GetCatalogFilterMetadataArrayOutput {
	return i.ToGetCatalogFilterMetadataArrayOutputWithContext(context.Background())
}

func (i GetCatalogFilterMetadataArray) ToGetCatalogFilterMetadataArrayOutputWithContext(ctx context.Context) GetCatalogFilterMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogFilterMetadataArrayOutput)
}

type GetCatalogFilterMetadataOutput struct{ *pulumi.OutputState }

func (GetCatalogFilterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogFilterMetadata)(nil)).Elem()
}

func (o GetCatalogFilterMetadataOutput) ToGetCatalogFilterMetadataOutput() GetCatalogFilterMetadataOutput {
	return o
}

func (o GetCatalogFilterMetadataOutput) ToGetCatalogFilterMetadataOutputWithContext(ctx context.Context) GetCatalogFilterMetadataOutput {
	return o
}

// True if is a metadata@SYSTEM key
func (o GetCatalogFilterMetadataOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogFilterMetadata) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Metadata key (field name)
func (o GetCatalogFilterMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogFilterMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// Type of metadata value (needed only if "useApiSearch" is true)
func (o GetCatalogFilterMetadataOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogFilterMetadata) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If true, will search the vCD using native metadata query (without regular expressions)
func (o GetCatalogFilterMetadataOutput) UseApiSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogFilterMetadata) *bool { return v.UseApiSearch }).(pulumi.BoolPtrOutput)
}

// Metadata value (can be a regular expression if "useApiSearch" is false)
func (o GetCatalogFilterMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogFilterMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type GetCatalogFilterMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogFilterMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogFilterMetadata)(nil)).Elem()
}

func (o GetCatalogFilterMetadataArrayOutput) ToGetCatalogFilterMetadataArrayOutput() GetCatalogFilterMetadataArrayOutput {
	return o
}

func (o GetCatalogFilterMetadataArrayOutput) ToGetCatalogFilterMetadataArrayOutputWithContext(ctx context.Context) GetCatalogFilterMetadataArrayOutput {
	return o
}

func (o GetCatalogFilterMetadataArrayOutput) Index(i pulumi.IntInput) GetCatalogFilterMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogFilterMetadata {
		return vs[0].([]GetCatalogFilterMetadata)[vs[1].(int)]
	}).(GetCatalogFilterMetadataOutput)
}

type GetCatalogItemFilter struct {
	// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
	Date *string `pulumi:"date"`
	// Retrieves the oldest item
	Earliest *bool `pulumi:"earliest"`
	// Retrieves the newest item
	Latest *bool `pulumi:"latest"`
	// Key value map of metadata assigned to the associated vApp template.
	Metadatas []GetCatalogItemFilterMetadata `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetCatalogItemFilterInput is an input type that accepts GetCatalogItemFilterArgs and GetCatalogItemFilterOutput values.
// You can construct a concrete instance of `GetCatalogItemFilterInput` via:
//
//	GetCatalogItemFilterArgs{...}
type GetCatalogItemFilterInput interface {
	pulumi.Input

	ToGetCatalogItemFilterOutput() GetCatalogItemFilterOutput
	ToGetCatalogItemFilterOutputWithContext(context.Context) GetCatalogItemFilterOutput
}

type GetCatalogItemFilterArgs struct {
	// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Retrieves the oldest item
	Earliest pulumi.BoolPtrInput `pulumi:"earliest"`
	// Retrieves the newest item
	Latest pulumi.BoolPtrInput `pulumi:"latest"`
	// Key value map of metadata assigned to the associated vApp template.
	Metadatas GetCatalogItemFilterMetadataArrayInput `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetCatalogItemFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogItemFilter)(nil)).Elem()
}

func (i GetCatalogItemFilterArgs) ToGetCatalogItemFilterOutput() GetCatalogItemFilterOutput {
	return i.ToGetCatalogItemFilterOutputWithContext(context.Background())
}

func (i GetCatalogItemFilterArgs) ToGetCatalogItemFilterOutputWithContext(ctx context.Context) GetCatalogItemFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogItemFilterOutput)
}

func (i GetCatalogItemFilterArgs) ToGetCatalogItemFilterPtrOutput() GetCatalogItemFilterPtrOutput {
	return i.ToGetCatalogItemFilterPtrOutputWithContext(context.Background())
}

func (i GetCatalogItemFilterArgs) ToGetCatalogItemFilterPtrOutputWithContext(ctx context.Context) GetCatalogItemFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogItemFilterOutput).ToGetCatalogItemFilterPtrOutputWithContext(ctx)
}

// GetCatalogItemFilterPtrInput is an input type that accepts GetCatalogItemFilterArgs, GetCatalogItemFilterPtr and GetCatalogItemFilterPtrOutput values.
// You can construct a concrete instance of `GetCatalogItemFilterPtrInput` via:
//
//	        GetCatalogItemFilterArgs{...}
//
//	or:
//
//	        nil
type GetCatalogItemFilterPtrInput interface {
	pulumi.Input

	ToGetCatalogItemFilterPtrOutput() GetCatalogItemFilterPtrOutput
	ToGetCatalogItemFilterPtrOutputWithContext(context.Context) GetCatalogItemFilterPtrOutput
}

type getCatalogItemFilterPtrType GetCatalogItemFilterArgs

func GetCatalogItemFilterPtr(v *GetCatalogItemFilterArgs) GetCatalogItemFilterPtrInput {
	return (*getCatalogItemFilterPtrType)(v)
}

func (*getCatalogItemFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCatalogItemFilter)(nil)).Elem()
}

func (i *getCatalogItemFilterPtrType) ToGetCatalogItemFilterPtrOutput() GetCatalogItemFilterPtrOutput {
	return i.ToGetCatalogItemFilterPtrOutputWithContext(context.Background())
}

func (i *getCatalogItemFilterPtrType) ToGetCatalogItemFilterPtrOutputWithContext(ctx context.Context) GetCatalogItemFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogItemFilterPtrOutput)
}

type GetCatalogItemFilterOutput struct{ *pulumi.OutputState }

func (GetCatalogItemFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogItemFilter)(nil)).Elem()
}

func (o GetCatalogItemFilterOutput) ToGetCatalogItemFilterOutput() GetCatalogItemFilterOutput {
	return o
}

func (o GetCatalogItemFilterOutput) ToGetCatalogItemFilterOutputWithContext(ctx context.Context) GetCatalogItemFilterOutput {
	return o
}

func (o GetCatalogItemFilterOutput) ToGetCatalogItemFilterPtrOutput() GetCatalogItemFilterPtrOutput {
	return o.ToGetCatalogItemFilterPtrOutputWithContext(context.Background())
}

func (o GetCatalogItemFilterOutput) ToGetCatalogItemFilterPtrOutputWithContext(ctx context.Context) GetCatalogItemFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetCatalogItemFilter) *GetCatalogItemFilter {
		return &v
	}).(GetCatalogItemFilterPtrOutput)
}

// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
func (o GetCatalogItemFilterOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogItemFilter) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Retrieves the oldest item
func (o GetCatalogItemFilterOutput) Earliest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogItemFilter) *bool { return v.Earliest }).(pulumi.BoolPtrOutput)
}

// Retrieves the newest item
func (o GetCatalogItemFilterOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogItemFilter) *bool { return v.Latest }).(pulumi.BoolPtrOutput)
}

// Key value map of metadata assigned to the associated vApp template.
func (o GetCatalogItemFilterOutput) Metadatas() GetCatalogItemFilterMetadataArrayOutput {
	return o.ApplyT(func(v GetCatalogItemFilter) []GetCatalogItemFilterMetadata { return v.Metadatas }).(GetCatalogItemFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetCatalogItemFilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogItemFilter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetCatalogItemFilterPtrOutput struct{ *pulumi.OutputState }

func (GetCatalogItemFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCatalogItemFilter)(nil)).Elem()
}

func (o GetCatalogItemFilterPtrOutput) ToGetCatalogItemFilterPtrOutput() GetCatalogItemFilterPtrOutput {
	return o
}

func (o GetCatalogItemFilterPtrOutput) ToGetCatalogItemFilterPtrOutputWithContext(ctx context.Context) GetCatalogItemFilterPtrOutput {
	return o
}

func (o GetCatalogItemFilterPtrOutput) Elem() GetCatalogItemFilterOutput {
	return o.ApplyT(func(v *GetCatalogItemFilter) GetCatalogItemFilter {
		if v != nil {
			return *v
		}
		var ret GetCatalogItemFilter
		return ret
	}).(GetCatalogItemFilterOutput)
}

// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
func (o GetCatalogItemFilterPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCatalogItemFilter) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// Retrieves the oldest item
func (o GetCatalogItemFilterPtrOutput) Earliest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetCatalogItemFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Earliest
	}).(pulumi.BoolPtrOutput)
}

// Retrieves the newest item
func (o GetCatalogItemFilterPtrOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetCatalogItemFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Latest
	}).(pulumi.BoolPtrOutput)
}

// Key value map of metadata assigned to the associated vApp template.
func (o GetCatalogItemFilterPtrOutput) Metadatas() GetCatalogItemFilterMetadataArrayOutput {
	return o.ApplyT(func(v *GetCatalogItemFilter) []GetCatalogItemFilterMetadata {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(GetCatalogItemFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetCatalogItemFilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCatalogItemFilter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetCatalogItemFilterMetadata struct {
	// True if is a metadata@SYSTEM key
	IsSystem *bool `pulumi:"isSystem"`
	// Metadata key (field name)
	Key string `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type *string `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch *bool `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value string `pulumi:"value"`
}

// GetCatalogItemFilterMetadataInput is an input type that accepts GetCatalogItemFilterMetadataArgs and GetCatalogItemFilterMetadataOutput values.
// You can construct a concrete instance of `GetCatalogItemFilterMetadataInput` via:
//
//	GetCatalogItemFilterMetadataArgs{...}
type GetCatalogItemFilterMetadataInput interface {
	pulumi.Input

	ToGetCatalogItemFilterMetadataOutput() GetCatalogItemFilterMetadataOutput
	ToGetCatalogItemFilterMetadataOutputWithContext(context.Context) GetCatalogItemFilterMetadataOutput
}

type GetCatalogItemFilterMetadataArgs struct {
	// True if is a metadata@SYSTEM key
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Metadata key (field name)
	Key pulumi.StringInput `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch pulumi.BoolPtrInput `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCatalogItemFilterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogItemFilterMetadata)(nil)).Elem()
}

func (i GetCatalogItemFilterMetadataArgs) ToGetCatalogItemFilterMetadataOutput() GetCatalogItemFilterMetadataOutput {
	return i.ToGetCatalogItemFilterMetadataOutputWithContext(context.Background())
}

func (i GetCatalogItemFilterMetadataArgs) ToGetCatalogItemFilterMetadataOutputWithContext(ctx context.Context) GetCatalogItemFilterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogItemFilterMetadataOutput)
}

// GetCatalogItemFilterMetadataArrayInput is an input type that accepts GetCatalogItemFilterMetadataArray and GetCatalogItemFilterMetadataArrayOutput values.
// You can construct a concrete instance of `GetCatalogItemFilterMetadataArrayInput` via:
//
//	GetCatalogItemFilterMetadataArray{ GetCatalogItemFilterMetadataArgs{...} }
type GetCatalogItemFilterMetadataArrayInput interface {
	pulumi.Input

	ToGetCatalogItemFilterMetadataArrayOutput() GetCatalogItemFilterMetadataArrayOutput
	ToGetCatalogItemFilterMetadataArrayOutputWithContext(context.Context) GetCatalogItemFilterMetadataArrayOutput
}

type GetCatalogItemFilterMetadataArray []GetCatalogItemFilterMetadataInput

func (GetCatalogItemFilterMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogItemFilterMetadata)(nil)).Elem()
}

func (i GetCatalogItemFilterMetadataArray) ToGetCatalogItemFilterMetadataArrayOutput() GetCatalogItemFilterMetadataArrayOutput {
	return i.ToGetCatalogItemFilterMetadataArrayOutputWithContext(context.Background())
}

func (i GetCatalogItemFilterMetadataArray) ToGetCatalogItemFilterMetadataArrayOutputWithContext(ctx context.Context) GetCatalogItemFilterMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogItemFilterMetadataArrayOutput)
}

type GetCatalogItemFilterMetadataOutput struct{ *pulumi.OutputState }

func (GetCatalogItemFilterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogItemFilterMetadata)(nil)).Elem()
}

func (o GetCatalogItemFilterMetadataOutput) ToGetCatalogItemFilterMetadataOutput() GetCatalogItemFilterMetadataOutput {
	return o
}

func (o GetCatalogItemFilterMetadataOutput) ToGetCatalogItemFilterMetadataOutputWithContext(ctx context.Context) GetCatalogItemFilterMetadataOutput {
	return o
}

// True if is a metadata@SYSTEM key
func (o GetCatalogItemFilterMetadataOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogItemFilterMetadata) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Metadata key (field name)
func (o GetCatalogItemFilterMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemFilterMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// Type of metadata value (needed only if "useApiSearch" is true)
func (o GetCatalogItemFilterMetadataOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogItemFilterMetadata) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If true, will search the vCD using native metadata query (without regular expressions)
func (o GetCatalogItemFilterMetadataOutput) UseApiSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogItemFilterMetadata) *bool { return v.UseApiSearch }).(pulumi.BoolPtrOutput)
}

// Metadata value (can be a regular expression if "useApiSearch" is false)
func (o GetCatalogItemFilterMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemFilterMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type GetCatalogItemFilterMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogItemFilterMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogItemFilterMetadata)(nil)).Elem()
}

func (o GetCatalogItemFilterMetadataArrayOutput) ToGetCatalogItemFilterMetadataArrayOutput() GetCatalogItemFilterMetadataArrayOutput {
	return o
}

func (o GetCatalogItemFilterMetadataArrayOutput) ToGetCatalogItemFilterMetadataArrayOutputWithContext(ctx context.Context) GetCatalogItemFilterMetadataArrayOutput {
	return o
}

func (o GetCatalogItemFilterMetadataArrayOutput) Index(i pulumi.IntInput) GetCatalogItemFilterMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogItemFilterMetadata {
		return vs[0].([]GetCatalogItemFilterMetadata)[vs[1].(int)]
	}).(GetCatalogItemFilterMetadataOutput)
}

type GetCatalogItemMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetCatalogItemMetadataEntryInput is an input type that accepts GetCatalogItemMetadataEntryArgs and GetCatalogItemMetadataEntryOutput values.
// You can construct a concrete instance of `GetCatalogItemMetadataEntryInput` via:
//
//	GetCatalogItemMetadataEntryArgs{...}
type GetCatalogItemMetadataEntryInput interface {
	pulumi.Input

	ToGetCatalogItemMetadataEntryOutput() GetCatalogItemMetadataEntryOutput
	ToGetCatalogItemMetadataEntryOutputWithContext(context.Context) GetCatalogItemMetadataEntryOutput
}

type GetCatalogItemMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCatalogItemMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogItemMetadataEntry)(nil)).Elem()
}

func (i GetCatalogItemMetadataEntryArgs) ToGetCatalogItemMetadataEntryOutput() GetCatalogItemMetadataEntryOutput {
	return i.ToGetCatalogItemMetadataEntryOutputWithContext(context.Background())
}

func (i GetCatalogItemMetadataEntryArgs) ToGetCatalogItemMetadataEntryOutputWithContext(ctx context.Context) GetCatalogItemMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogItemMetadataEntryOutput)
}

// GetCatalogItemMetadataEntryArrayInput is an input type that accepts GetCatalogItemMetadataEntryArray and GetCatalogItemMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetCatalogItemMetadataEntryArrayInput` via:
//
//	GetCatalogItemMetadataEntryArray{ GetCatalogItemMetadataEntryArgs{...} }
type GetCatalogItemMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetCatalogItemMetadataEntryArrayOutput() GetCatalogItemMetadataEntryArrayOutput
	ToGetCatalogItemMetadataEntryArrayOutputWithContext(context.Context) GetCatalogItemMetadataEntryArrayOutput
}

type GetCatalogItemMetadataEntryArray []GetCatalogItemMetadataEntryInput

func (GetCatalogItemMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogItemMetadataEntry)(nil)).Elem()
}

func (i GetCatalogItemMetadataEntryArray) ToGetCatalogItemMetadataEntryArrayOutput() GetCatalogItemMetadataEntryArrayOutput {
	return i.ToGetCatalogItemMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetCatalogItemMetadataEntryArray) ToGetCatalogItemMetadataEntryArrayOutputWithContext(ctx context.Context) GetCatalogItemMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogItemMetadataEntryArrayOutput)
}

type GetCatalogItemMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetCatalogItemMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogItemMetadataEntry)(nil)).Elem()
}

func (o GetCatalogItemMetadataEntryOutput) ToGetCatalogItemMetadataEntryOutput() GetCatalogItemMetadataEntryOutput {
	return o
}

func (o GetCatalogItemMetadataEntryOutput) ToGetCatalogItemMetadataEntryOutputWithContext(ctx context.Context) GetCatalogItemMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetCatalogItemMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCatalogItemMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetCatalogItemMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetCatalogItemMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetCatalogItemMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetCatalogItemMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetCatalogItemMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogItemMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogItemMetadataEntry)(nil)).Elem()
}

func (o GetCatalogItemMetadataEntryArrayOutput) ToGetCatalogItemMetadataEntryArrayOutput() GetCatalogItemMetadataEntryArrayOutput {
	return o
}

func (o GetCatalogItemMetadataEntryArrayOutput) ToGetCatalogItemMetadataEntryArrayOutputWithContext(ctx context.Context) GetCatalogItemMetadataEntryArrayOutput {
	return o
}

func (o GetCatalogItemMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetCatalogItemMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogItemMetadataEntry {
		return vs[0].([]GetCatalogItemMetadataEntry)[vs[1].(int)]
	}).(GetCatalogItemMetadataEntryOutput)
}

type GetCatalogMediaFilter struct {
	// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
	Date *string `pulumi:"date"`
	// Retrieves the oldest item
	Earliest *bool `pulumi:"earliest"`
	// Retrieves the newest item
	Latest *bool `pulumi:"latest"`
	// metadata filter
	Metadatas []GetCatalogMediaFilterMetadata `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetCatalogMediaFilterInput is an input type that accepts GetCatalogMediaFilterArgs and GetCatalogMediaFilterOutput values.
// You can construct a concrete instance of `GetCatalogMediaFilterInput` via:
//
//	GetCatalogMediaFilterArgs{...}
type GetCatalogMediaFilterInput interface {
	pulumi.Input

	ToGetCatalogMediaFilterOutput() GetCatalogMediaFilterOutput
	ToGetCatalogMediaFilterOutputWithContext(context.Context) GetCatalogMediaFilterOutput
}

type GetCatalogMediaFilterArgs struct {
	// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Retrieves the oldest item
	Earliest pulumi.BoolPtrInput `pulumi:"earliest"`
	// Retrieves the newest item
	Latest pulumi.BoolPtrInput `pulumi:"latest"`
	// metadata filter
	Metadatas GetCatalogMediaFilterMetadataArrayInput `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetCatalogMediaFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogMediaFilter)(nil)).Elem()
}

func (i GetCatalogMediaFilterArgs) ToGetCatalogMediaFilterOutput() GetCatalogMediaFilterOutput {
	return i.ToGetCatalogMediaFilterOutputWithContext(context.Background())
}

func (i GetCatalogMediaFilterArgs) ToGetCatalogMediaFilterOutputWithContext(ctx context.Context) GetCatalogMediaFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogMediaFilterOutput)
}

func (i GetCatalogMediaFilterArgs) ToGetCatalogMediaFilterPtrOutput() GetCatalogMediaFilterPtrOutput {
	return i.ToGetCatalogMediaFilterPtrOutputWithContext(context.Background())
}

func (i GetCatalogMediaFilterArgs) ToGetCatalogMediaFilterPtrOutputWithContext(ctx context.Context) GetCatalogMediaFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogMediaFilterOutput).ToGetCatalogMediaFilterPtrOutputWithContext(ctx)
}

// GetCatalogMediaFilterPtrInput is an input type that accepts GetCatalogMediaFilterArgs, GetCatalogMediaFilterPtr and GetCatalogMediaFilterPtrOutput values.
// You can construct a concrete instance of `GetCatalogMediaFilterPtrInput` via:
//
//	        GetCatalogMediaFilterArgs{...}
//
//	or:
//
//	        nil
type GetCatalogMediaFilterPtrInput interface {
	pulumi.Input

	ToGetCatalogMediaFilterPtrOutput() GetCatalogMediaFilterPtrOutput
	ToGetCatalogMediaFilterPtrOutputWithContext(context.Context) GetCatalogMediaFilterPtrOutput
}

type getCatalogMediaFilterPtrType GetCatalogMediaFilterArgs

func GetCatalogMediaFilterPtr(v *GetCatalogMediaFilterArgs) GetCatalogMediaFilterPtrInput {
	return (*getCatalogMediaFilterPtrType)(v)
}

func (*getCatalogMediaFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCatalogMediaFilter)(nil)).Elem()
}

func (i *getCatalogMediaFilterPtrType) ToGetCatalogMediaFilterPtrOutput() GetCatalogMediaFilterPtrOutput {
	return i.ToGetCatalogMediaFilterPtrOutputWithContext(context.Background())
}

func (i *getCatalogMediaFilterPtrType) ToGetCatalogMediaFilterPtrOutputWithContext(ctx context.Context) GetCatalogMediaFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogMediaFilterPtrOutput)
}

type GetCatalogMediaFilterOutput struct{ *pulumi.OutputState }

func (GetCatalogMediaFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogMediaFilter)(nil)).Elem()
}

func (o GetCatalogMediaFilterOutput) ToGetCatalogMediaFilterOutput() GetCatalogMediaFilterOutput {
	return o
}

func (o GetCatalogMediaFilterOutput) ToGetCatalogMediaFilterOutputWithContext(ctx context.Context) GetCatalogMediaFilterOutput {
	return o
}

func (o GetCatalogMediaFilterOutput) ToGetCatalogMediaFilterPtrOutput() GetCatalogMediaFilterPtrOutput {
	return o.ToGetCatalogMediaFilterPtrOutputWithContext(context.Background())
}

func (o GetCatalogMediaFilterOutput) ToGetCatalogMediaFilterPtrOutputWithContext(ctx context.Context) GetCatalogMediaFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetCatalogMediaFilter) *GetCatalogMediaFilter {
		return &v
	}).(GetCatalogMediaFilterPtrOutput)
}

// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
func (o GetCatalogMediaFilterOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogMediaFilter) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Retrieves the oldest item
func (o GetCatalogMediaFilterOutput) Earliest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogMediaFilter) *bool { return v.Earliest }).(pulumi.BoolPtrOutput)
}

// Retrieves the newest item
func (o GetCatalogMediaFilterOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogMediaFilter) *bool { return v.Latest }).(pulumi.BoolPtrOutput)
}

// metadata filter
func (o GetCatalogMediaFilterOutput) Metadatas() GetCatalogMediaFilterMetadataArrayOutput {
	return o.ApplyT(func(v GetCatalogMediaFilter) []GetCatalogMediaFilterMetadata { return v.Metadatas }).(GetCatalogMediaFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetCatalogMediaFilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogMediaFilter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetCatalogMediaFilterPtrOutput struct{ *pulumi.OutputState }

func (GetCatalogMediaFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCatalogMediaFilter)(nil)).Elem()
}

func (o GetCatalogMediaFilterPtrOutput) ToGetCatalogMediaFilterPtrOutput() GetCatalogMediaFilterPtrOutput {
	return o
}

func (o GetCatalogMediaFilterPtrOutput) ToGetCatalogMediaFilterPtrOutputWithContext(ctx context.Context) GetCatalogMediaFilterPtrOutput {
	return o
}

func (o GetCatalogMediaFilterPtrOutput) Elem() GetCatalogMediaFilterOutput {
	return o.ApplyT(func(v *GetCatalogMediaFilter) GetCatalogMediaFilter {
		if v != nil {
			return *v
		}
		var ret GetCatalogMediaFilter
		return ret
	}).(GetCatalogMediaFilterOutput)
}

// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
func (o GetCatalogMediaFilterPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCatalogMediaFilter) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// Retrieves the oldest item
func (o GetCatalogMediaFilterPtrOutput) Earliest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetCatalogMediaFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Earliest
	}).(pulumi.BoolPtrOutput)
}

// Retrieves the newest item
func (o GetCatalogMediaFilterPtrOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetCatalogMediaFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Latest
	}).(pulumi.BoolPtrOutput)
}

// metadata filter
func (o GetCatalogMediaFilterPtrOutput) Metadatas() GetCatalogMediaFilterMetadataArrayOutput {
	return o.ApplyT(func(v *GetCatalogMediaFilter) []GetCatalogMediaFilterMetadata {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(GetCatalogMediaFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetCatalogMediaFilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCatalogMediaFilter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetCatalogMediaFilterMetadata struct {
	// True if is a metadata@SYSTEM key
	IsSystem *bool `pulumi:"isSystem"`
	// Metadata key (field name)
	Key string `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type *string `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch *bool `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value string `pulumi:"value"`
}

// GetCatalogMediaFilterMetadataInput is an input type that accepts GetCatalogMediaFilterMetadataArgs and GetCatalogMediaFilterMetadataOutput values.
// You can construct a concrete instance of `GetCatalogMediaFilterMetadataInput` via:
//
//	GetCatalogMediaFilterMetadataArgs{...}
type GetCatalogMediaFilterMetadataInput interface {
	pulumi.Input

	ToGetCatalogMediaFilterMetadataOutput() GetCatalogMediaFilterMetadataOutput
	ToGetCatalogMediaFilterMetadataOutputWithContext(context.Context) GetCatalogMediaFilterMetadataOutput
}

type GetCatalogMediaFilterMetadataArgs struct {
	// True if is a metadata@SYSTEM key
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Metadata key (field name)
	Key pulumi.StringInput `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch pulumi.BoolPtrInput `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCatalogMediaFilterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogMediaFilterMetadata)(nil)).Elem()
}

func (i GetCatalogMediaFilterMetadataArgs) ToGetCatalogMediaFilterMetadataOutput() GetCatalogMediaFilterMetadataOutput {
	return i.ToGetCatalogMediaFilterMetadataOutputWithContext(context.Background())
}

func (i GetCatalogMediaFilterMetadataArgs) ToGetCatalogMediaFilterMetadataOutputWithContext(ctx context.Context) GetCatalogMediaFilterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogMediaFilterMetadataOutput)
}

// GetCatalogMediaFilterMetadataArrayInput is an input type that accepts GetCatalogMediaFilterMetadataArray and GetCatalogMediaFilterMetadataArrayOutput values.
// You can construct a concrete instance of `GetCatalogMediaFilterMetadataArrayInput` via:
//
//	GetCatalogMediaFilterMetadataArray{ GetCatalogMediaFilterMetadataArgs{...} }
type GetCatalogMediaFilterMetadataArrayInput interface {
	pulumi.Input

	ToGetCatalogMediaFilterMetadataArrayOutput() GetCatalogMediaFilterMetadataArrayOutput
	ToGetCatalogMediaFilterMetadataArrayOutputWithContext(context.Context) GetCatalogMediaFilterMetadataArrayOutput
}

type GetCatalogMediaFilterMetadataArray []GetCatalogMediaFilterMetadataInput

func (GetCatalogMediaFilterMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogMediaFilterMetadata)(nil)).Elem()
}

func (i GetCatalogMediaFilterMetadataArray) ToGetCatalogMediaFilterMetadataArrayOutput() GetCatalogMediaFilterMetadataArrayOutput {
	return i.ToGetCatalogMediaFilterMetadataArrayOutputWithContext(context.Background())
}

func (i GetCatalogMediaFilterMetadataArray) ToGetCatalogMediaFilterMetadataArrayOutputWithContext(ctx context.Context) GetCatalogMediaFilterMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogMediaFilterMetadataArrayOutput)
}

type GetCatalogMediaFilterMetadataOutput struct{ *pulumi.OutputState }

func (GetCatalogMediaFilterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogMediaFilterMetadata)(nil)).Elem()
}

func (o GetCatalogMediaFilterMetadataOutput) ToGetCatalogMediaFilterMetadataOutput() GetCatalogMediaFilterMetadataOutput {
	return o
}

func (o GetCatalogMediaFilterMetadataOutput) ToGetCatalogMediaFilterMetadataOutputWithContext(ctx context.Context) GetCatalogMediaFilterMetadataOutput {
	return o
}

// True if is a metadata@SYSTEM key
func (o GetCatalogMediaFilterMetadataOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogMediaFilterMetadata) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Metadata key (field name)
func (o GetCatalogMediaFilterMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogMediaFilterMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// Type of metadata value (needed only if "useApiSearch" is true)
func (o GetCatalogMediaFilterMetadataOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogMediaFilterMetadata) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If true, will search the vCD using native metadata query (without regular expressions)
func (o GetCatalogMediaFilterMetadataOutput) UseApiSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogMediaFilterMetadata) *bool { return v.UseApiSearch }).(pulumi.BoolPtrOutput)
}

// Metadata value (can be a regular expression if "useApiSearch" is false)
func (o GetCatalogMediaFilterMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogMediaFilterMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type GetCatalogMediaFilterMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogMediaFilterMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogMediaFilterMetadata)(nil)).Elem()
}

func (o GetCatalogMediaFilterMetadataArrayOutput) ToGetCatalogMediaFilterMetadataArrayOutput() GetCatalogMediaFilterMetadataArrayOutput {
	return o
}

func (o GetCatalogMediaFilterMetadataArrayOutput) ToGetCatalogMediaFilterMetadataArrayOutputWithContext(ctx context.Context) GetCatalogMediaFilterMetadataArrayOutput {
	return o
}

func (o GetCatalogMediaFilterMetadataArrayOutput) Index(i pulumi.IntInput) GetCatalogMediaFilterMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogMediaFilterMetadata {
		return vs[0].([]GetCatalogMediaFilterMetadata)[vs[1].(int)]
	}).(GetCatalogMediaFilterMetadataOutput)
}

type GetCatalogMediaMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetCatalogMediaMetadataEntryInput is an input type that accepts GetCatalogMediaMetadataEntryArgs and GetCatalogMediaMetadataEntryOutput values.
// You can construct a concrete instance of `GetCatalogMediaMetadataEntryInput` via:
//
//	GetCatalogMediaMetadataEntryArgs{...}
type GetCatalogMediaMetadataEntryInput interface {
	pulumi.Input

	ToGetCatalogMediaMetadataEntryOutput() GetCatalogMediaMetadataEntryOutput
	ToGetCatalogMediaMetadataEntryOutputWithContext(context.Context) GetCatalogMediaMetadataEntryOutput
}

type GetCatalogMediaMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCatalogMediaMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogMediaMetadataEntry)(nil)).Elem()
}

func (i GetCatalogMediaMetadataEntryArgs) ToGetCatalogMediaMetadataEntryOutput() GetCatalogMediaMetadataEntryOutput {
	return i.ToGetCatalogMediaMetadataEntryOutputWithContext(context.Background())
}

func (i GetCatalogMediaMetadataEntryArgs) ToGetCatalogMediaMetadataEntryOutputWithContext(ctx context.Context) GetCatalogMediaMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogMediaMetadataEntryOutput)
}

// GetCatalogMediaMetadataEntryArrayInput is an input type that accepts GetCatalogMediaMetadataEntryArray and GetCatalogMediaMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetCatalogMediaMetadataEntryArrayInput` via:
//
//	GetCatalogMediaMetadataEntryArray{ GetCatalogMediaMetadataEntryArgs{...} }
type GetCatalogMediaMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetCatalogMediaMetadataEntryArrayOutput() GetCatalogMediaMetadataEntryArrayOutput
	ToGetCatalogMediaMetadataEntryArrayOutputWithContext(context.Context) GetCatalogMediaMetadataEntryArrayOutput
}

type GetCatalogMediaMetadataEntryArray []GetCatalogMediaMetadataEntryInput

func (GetCatalogMediaMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogMediaMetadataEntry)(nil)).Elem()
}

func (i GetCatalogMediaMetadataEntryArray) ToGetCatalogMediaMetadataEntryArrayOutput() GetCatalogMediaMetadataEntryArrayOutput {
	return i.ToGetCatalogMediaMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetCatalogMediaMetadataEntryArray) ToGetCatalogMediaMetadataEntryArrayOutputWithContext(ctx context.Context) GetCatalogMediaMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogMediaMetadataEntryArrayOutput)
}

type GetCatalogMediaMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetCatalogMediaMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogMediaMetadataEntry)(nil)).Elem()
}

func (o GetCatalogMediaMetadataEntryOutput) ToGetCatalogMediaMetadataEntryOutput() GetCatalogMediaMetadataEntryOutput {
	return o
}

func (o GetCatalogMediaMetadataEntryOutput) ToGetCatalogMediaMetadataEntryOutputWithContext(ctx context.Context) GetCatalogMediaMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetCatalogMediaMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCatalogMediaMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetCatalogMediaMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogMediaMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetCatalogMediaMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogMediaMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetCatalogMediaMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogMediaMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetCatalogMediaMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogMediaMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetCatalogMediaMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogMediaMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogMediaMetadataEntry)(nil)).Elem()
}

func (o GetCatalogMediaMetadataEntryArrayOutput) ToGetCatalogMediaMetadataEntryArrayOutput() GetCatalogMediaMetadataEntryArrayOutput {
	return o
}

func (o GetCatalogMediaMetadataEntryArrayOutput) ToGetCatalogMediaMetadataEntryArrayOutputWithContext(ctx context.Context) GetCatalogMediaMetadataEntryArrayOutput {
	return o
}

func (o GetCatalogMediaMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetCatalogMediaMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogMediaMetadataEntry {
		return vs[0].([]GetCatalogMediaMetadataEntry)[vs[1].(int)]
	}).(GetCatalogMediaMetadataEntryOutput)
}

type GetCatalogMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetCatalogMetadataEntryInput is an input type that accepts GetCatalogMetadataEntryArgs and GetCatalogMetadataEntryOutput values.
// You can construct a concrete instance of `GetCatalogMetadataEntryInput` via:
//
//	GetCatalogMetadataEntryArgs{...}
type GetCatalogMetadataEntryInput interface {
	pulumi.Input

	ToGetCatalogMetadataEntryOutput() GetCatalogMetadataEntryOutput
	ToGetCatalogMetadataEntryOutputWithContext(context.Context) GetCatalogMetadataEntryOutput
}

type GetCatalogMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCatalogMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogMetadataEntry)(nil)).Elem()
}

func (i GetCatalogMetadataEntryArgs) ToGetCatalogMetadataEntryOutput() GetCatalogMetadataEntryOutput {
	return i.ToGetCatalogMetadataEntryOutputWithContext(context.Background())
}

func (i GetCatalogMetadataEntryArgs) ToGetCatalogMetadataEntryOutputWithContext(ctx context.Context) GetCatalogMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogMetadataEntryOutput)
}

// GetCatalogMetadataEntryArrayInput is an input type that accepts GetCatalogMetadataEntryArray and GetCatalogMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetCatalogMetadataEntryArrayInput` via:
//
//	GetCatalogMetadataEntryArray{ GetCatalogMetadataEntryArgs{...} }
type GetCatalogMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetCatalogMetadataEntryArrayOutput() GetCatalogMetadataEntryArrayOutput
	ToGetCatalogMetadataEntryArrayOutputWithContext(context.Context) GetCatalogMetadataEntryArrayOutput
}

type GetCatalogMetadataEntryArray []GetCatalogMetadataEntryInput

func (GetCatalogMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogMetadataEntry)(nil)).Elem()
}

func (i GetCatalogMetadataEntryArray) ToGetCatalogMetadataEntryArrayOutput() GetCatalogMetadataEntryArrayOutput {
	return i.ToGetCatalogMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetCatalogMetadataEntryArray) ToGetCatalogMetadataEntryArrayOutputWithContext(ctx context.Context) GetCatalogMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogMetadataEntryArrayOutput)
}

type GetCatalogMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetCatalogMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogMetadataEntry)(nil)).Elem()
}

func (o GetCatalogMetadataEntryOutput) ToGetCatalogMetadataEntryOutput() GetCatalogMetadataEntryOutput {
	return o
}

func (o GetCatalogMetadataEntryOutput) ToGetCatalogMetadataEntryOutputWithContext(ctx context.Context) GetCatalogMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetCatalogMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCatalogMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetCatalogMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetCatalogMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetCatalogMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetCatalogMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetCatalogMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogMetadataEntry)(nil)).Elem()
}

func (o GetCatalogMetadataEntryArrayOutput) ToGetCatalogMetadataEntryArrayOutput() GetCatalogMetadataEntryArrayOutput {
	return o
}

func (o GetCatalogMetadataEntryArrayOutput) ToGetCatalogMetadataEntryArrayOutputWithContext(ctx context.Context) GetCatalogMetadataEntryArrayOutput {
	return o
}

func (o GetCatalogMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetCatalogMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogMetadataEntry {
		return vs[0].([]GetCatalogMetadataEntry)[vs[1].(int)]
	}).(GetCatalogMetadataEntryOutput)
}

type GetCatalogVappTemplateFilter struct {
	// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
	Date *string `pulumi:"date"`
	// Retrieves the oldest item
	Earliest *bool `pulumi:"earliest"`
	// Retrieves the newest item
	Latest *bool `pulumi:"latest"`
	// (Deprecated) Use `metadataEntry` instead. Key/value map of metadata for the associated vApp template.
	Metadatas []GetCatalogVappTemplateFilterMetadata `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetCatalogVappTemplateFilterInput is an input type that accepts GetCatalogVappTemplateFilterArgs and GetCatalogVappTemplateFilterOutput values.
// You can construct a concrete instance of `GetCatalogVappTemplateFilterInput` via:
//
//	GetCatalogVappTemplateFilterArgs{...}
type GetCatalogVappTemplateFilterInput interface {
	pulumi.Input

	ToGetCatalogVappTemplateFilterOutput() GetCatalogVappTemplateFilterOutput
	ToGetCatalogVappTemplateFilterOutputWithContext(context.Context) GetCatalogVappTemplateFilterOutput
}

type GetCatalogVappTemplateFilterArgs struct {
	// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Retrieves the oldest item
	Earliest pulumi.BoolPtrInput `pulumi:"earliest"`
	// Retrieves the newest item
	Latest pulumi.BoolPtrInput `pulumi:"latest"`
	// (Deprecated) Use `metadataEntry` instead. Key/value map of metadata for the associated vApp template.
	Metadatas GetCatalogVappTemplateFilterMetadataArrayInput `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetCatalogVappTemplateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogVappTemplateFilter)(nil)).Elem()
}

func (i GetCatalogVappTemplateFilterArgs) ToGetCatalogVappTemplateFilterOutput() GetCatalogVappTemplateFilterOutput {
	return i.ToGetCatalogVappTemplateFilterOutputWithContext(context.Background())
}

func (i GetCatalogVappTemplateFilterArgs) ToGetCatalogVappTemplateFilterOutputWithContext(ctx context.Context) GetCatalogVappTemplateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogVappTemplateFilterOutput)
}

func (i GetCatalogVappTemplateFilterArgs) ToGetCatalogVappTemplateFilterPtrOutput() GetCatalogVappTemplateFilterPtrOutput {
	return i.ToGetCatalogVappTemplateFilterPtrOutputWithContext(context.Background())
}

func (i GetCatalogVappTemplateFilterArgs) ToGetCatalogVappTemplateFilterPtrOutputWithContext(ctx context.Context) GetCatalogVappTemplateFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogVappTemplateFilterOutput).ToGetCatalogVappTemplateFilterPtrOutputWithContext(ctx)
}

// GetCatalogVappTemplateFilterPtrInput is an input type that accepts GetCatalogVappTemplateFilterArgs, GetCatalogVappTemplateFilterPtr and GetCatalogVappTemplateFilterPtrOutput values.
// You can construct a concrete instance of `GetCatalogVappTemplateFilterPtrInput` via:
//
//	        GetCatalogVappTemplateFilterArgs{...}
//
//	or:
//
//	        nil
type GetCatalogVappTemplateFilterPtrInput interface {
	pulumi.Input

	ToGetCatalogVappTemplateFilterPtrOutput() GetCatalogVappTemplateFilterPtrOutput
	ToGetCatalogVappTemplateFilterPtrOutputWithContext(context.Context) GetCatalogVappTemplateFilterPtrOutput
}

type getCatalogVappTemplateFilterPtrType GetCatalogVappTemplateFilterArgs

func GetCatalogVappTemplateFilterPtr(v *GetCatalogVappTemplateFilterArgs) GetCatalogVappTemplateFilterPtrInput {
	return (*getCatalogVappTemplateFilterPtrType)(v)
}

func (*getCatalogVappTemplateFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCatalogVappTemplateFilter)(nil)).Elem()
}

func (i *getCatalogVappTemplateFilterPtrType) ToGetCatalogVappTemplateFilterPtrOutput() GetCatalogVappTemplateFilterPtrOutput {
	return i.ToGetCatalogVappTemplateFilterPtrOutputWithContext(context.Background())
}

func (i *getCatalogVappTemplateFilterPtrType) ToGetCatalogVappTemplateFilterPtrOutputWithContext(ctx context.Context) GetCatalogVappTemplateFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogVappTemplateFilterPtrOutput)
}

type GetCatalogVappTemplateFilterOutput struct{ *pulumi.OutputState }

func (GetCatalogVappTemplateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogVappTemplateFilter)(nil)).Elem()
}

func (o GetCatalogVappTemplateFilterOutput) ToGetCatalogVappTemplateFilterOutput() GetCatalogVappTemplateFilterOutput {
	return o
}

func (o GetCatalogVappTemplateFilterOutput) ToGetCatalogVappTemplateFilterOutputWithContext(ctx context.Context) GetCatalogVappTemplateFilterOutput {
	return o
}

func (o GetCatalogVappTemplateFilterOutput) ToGetCatalogVappTemplateFilterPtrOutput() GetCatalogVappTemplateFilterPtrOutput {
	return o.ToGetCatalogVappTemplateFilterPtrOutputWithContext(context.Background())
}

func (o GetCatalogVappTemplateFilterOutput) ToGetCatalogVappTemplateFilterPtrOutputWithContext(ctx context.Context) GetCatalogVappTemplateFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetCatalogVappTemplateFilter) *GetCatalogVappTemplateFilter {
		return &v
	}).(GetCatalogVappTemplateFilterPtrOutput)
}

// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
func (o GetCatalogVappTemplateFilterOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateFilter) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Retrieves the oldest item
func (o GetCatalogVappTemplateFilterOutput) Earliest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateFilter) *bool { return v.Earliest }).(pulumi.BoolPtrOutput)
}

// Retrieves the newest item
func (o GetCatalogVappTemplateFilterOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateFilter) *bool { return v.Latest }).(pulumi.BoolPtrOutput)
}

// (Deprecated) Use `metadataEntry` instead. Key/value map of metadata for the associated vApp template.
func (o GetCatalogVappTemplateFilterOutput) Metadatas() GetCatalogVappTemplateFilterMetadataArrayOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateFilter) []GetCatalogVappTemplateFilterMetadata { return v.Metadatas }).(GetCatalogVappTemplateFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetCatalogVappTemplateFilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateFilter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetCatalogVappTemplateFilterPtrOutput struct{ *pulumi.OutputState }

func (GetCatalogVappTemplateFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCatalogVappTemplateFilter)(nil)).Elem()
}

func (o GetCatalogVappTemplateFilterPtrOutput) ToGetCatalogVappTemplateFilterPtrOutput() GetCatalogVappTemplateFilterPtrOutput {
	return o
}

func (o GetCatalogVappTemplateFilterPtrOutput) ToGetCatalogVappTemplateFilterPtrOutputWithContext(ctx context.Context) GetCatalogVappTemplateFilterPtrOutput {
	return o
}

func (o GetCatalogVappTemplateFilterPtrOutput) Elem() GetCatalogVappTemplateFilterOutput {
	return o.ApplyT(func(v *GetCatalogVappTemplateFilter) GetCatalogVappTemplateFilter {
		if v != nil {
			return *v
		}
		var ret GetCatalogVappTemplateFilter
		return ret
	}).(GetCatalogVappTemplateFilterOutput)
}

// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
func (o GetCatalogVappTemplateFilterPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCatalogVappTemplateFilter) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// Retrieves the oldest item
func (o GetCatalogVappTemplateFilterPtrOutput) Earliest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetCatalogVappTemplateFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Earliest
	}).(pulumi.BoolPtrOutput)
}

// Retrieves the newest item
func (o GetCatalogVappTemplateFilterPtrOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetCatalogVappTemplateFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Latest
	}).(pulumi.BoolPtrOutput)
}

// (Deprecated) Use `metadataEntry` instead. Key/value map of metadata for the associated vApp template.
func (o GetCatalogVappTemplateFilterPtrOutput) Metadatas() GetCatalogVappTemplateFilterMetadataArrayOutput {
	return o.ApplyT(func(v *GetCatalogVappTemplateFilter) []GetCatalogVappTemplateFilterMetadata {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(GetCatalogVappTemplateFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetCatalogVappTemplateFilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCatalogVappTemplateFilter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetCatalogVappTemplateFilterMetadata struct {
	// True if is a metadata@SYSTEM key
	IsSystem *bool `pulumi:"isSystem"`
	// Metadata key (field name)
	Key string `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type *string `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch *bool `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value string `pulumi:"value"`
}

// GetCatalogVappTemplateFilterMetadataInput is an input type that accepts GetCatalogVappTemplateFilterMetadataArgs and GetCatalogVappTemplateFilterMetadataOutput values.
// You can construct a concrete instance of `GetCatalogVappTemplateFilterMetadataInput` via:
//
//	GetCatalogVappTemplateFilterMetadataArgs{...}
type GetCatalogVappTemplateFilterMetadataInput interface {
	pulumi.Input

	ToGetCatalogVappTemplateFilterMetadataOutput() GetCatalogVappTemplateFilterMetadataOutput
	ToGetCatalogVappTemplateFilterMetadataOutputWithContext(context.Context) GetCatalogVappTemplateFilterMetadataOutput
}

type GetCatalogVappTemplateFilterMetadataArgs struct {
	// True if is a metadata@SYSTEM key
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Metadata key (field name)
	Key pulumi.StringInput `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch pulumi.BoolPtrInput `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCatalogVappTemplateFilterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogVappTemplateFilterMetadata)(nil)).Elem()
}

func (i GetCatalogVappTemplateFilterMetadataArgs) ToGetCatalogVappTemplateFilterMetadataOutput() GetCatalogVappTemplateFilterMetadataOutput {
	return i.ToGetCatalogVappTemplateFilterMetadataOutputWithContext(context.Background())
}

func (i GetCatalogVappTemplateFilterMetadataArgs) ToGetCatalogVappTemplateFilterMetadataOutputWithContext(ctx context.Context) GetCatalogVappTemplateFilterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogVappTemplateFilterMetadataOutput)
}

// GetCatalogVappTemplateFilterMetadataArrayInput is an input type that accepts GetCatalogVappTemplateFilterMetadataArray and GetCatalogVappTemplateFilterMetadataArrayOutput values.
// You can construct a concrete instance of `GetCatalogVappTemplateFilterMetadataArrayInput` via:
//
//	GetCatalogVappTemplateFilterMetadataArray{ GetCatalogVappTemplateFilterMetadataArgs{...} }
type GetCatalogVappTemplateFilterMetadataArrayInput interface {
	pulumi.Input

	ToGetCatalogVappTemplateFilterMetadataArrayOutput() GetCatalogVappTemplateFilterMetadataArrayOutput
	ToGetCatalogVappTemplateFilterMetadataArrayOutputWithContext(context.Context) GetCatalogVappTemplateFilterMetadataArrayOutput
}

type GetCatalogVappTemplateFilterMetadataArray []GetCatalogVappTemplateFilterMetadataInput

func (GetCatalogVappTemplateFilterMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogVappTemplateFilterMetadata)(nil)).Elem()
}

func (i GetCatalogVappTemplateFilterMetadataArray) ToGetCatalogVappTemplateFilterMetadataArrayOutput() GetCatalogVappTemplateFilterMetadataArrayOutput {
	return i.ToGetCatalogVappTemplateFilterMetadataArrayOutputWithContext(context.Background())
}

func (i GetCatalogVappTemplateFilterMetadataArray) ToGetCatalogVappTemplateFilterMetadataArrayOutputWithContext(ctx context.Context) GetCatalogVappTemplateFilterMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogVappTemplateFilterMetadataArrayOutput)
}

type GetCatalogVappTemplateFilterMetadataOutput struct{ *pulumi.OutputState }

func (GetCatalogVappTemplateFilterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogVappTemplateFilterMetadata)(nil)).Elem()
}

func (o GetCatalogVappTemplateFilterMetadataOutput) ToGetCatalogVappTemplateFilterMetadataOutput() GetCatalogVappTemplateFilterMetadataOutput {
	return o
}

func (o GetCatalogVappTemplateFilterMetadataOutput) ToGetCatalogVappTemplateFilterMetadataOutputWithContext(ctx context.Context) GetCatalogVappTemplateFilterMetadataOutput {
	return o
}

// True if is a metadata@SYSTEM key
func (o GetCatalogVappTemplateFilterMetadataOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateFilterMetadata) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Metadata key (field name)
func (o GetCatalogVappTemplateFilterMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateFilterMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// Type of metadata value (needed only if "useApiSearch" is true)
func (o GetCatalogVappTemplateFilterMetadataOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateFilterMetadata) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If true, will search the vCD using native metadata query (without regular expressions)
func (o GetCatalogVappTemplateFilterMetadataOutput) UseApiSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateFilterMetadata) *bool { return v.UseApiSearch }).(pulumi.BoolPtrOutput)
}

// Metadata value (can be a regular expression if "useApiSearch" is false)
func (o GetCatalogVappTemplateFilterMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateFilterMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type GetCatalogVappTemplateFilterMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogVappTemplateFilterMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogVappTemplateFilterMetadata)(nil)).Elem()
}

func (o GetCatalogVappTemplateFilterMetadataArrayOutput) ToGetCatalogVappTemplateFilterMetadataArrayOutput() GetCatalogVappTemplateFilterMetadataArrayOutput {
	return o
}

func (o GetCatalogVappTemplateFilterMetadataArrayOutput) ToGetCatalogVappTemplateFilterMetadataArrayOutputWithContext(ctx context.Context) GetCatalogVappTemplateFilterMetadataArrayOutput {
	return o
}

func (o GetCatalogVappTemplateFilterMetadataArrayOutput) Index(i pulumi.IntInput) GetCatalogVappTemplateFilterMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogVappTemplateFilterMetadata {
		return vs[0].([]GetCatalogVappTemplateFilterMetadata)[vs[1].(int)]
	}).(GetCatalogVappTemplateFilterMetadataOutput)
}

type GetCatalogVappTemplateLease struct {
	// How long the vApp Template is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by parent Org allows).
	StorageLeaseInSec int `pulumi:"storageLeaseInSec"`
}

// GetCatalogVappTemplateLeaseInput is an input type that accepts GetCatalogVappTemplateLeaseArgs and GetCatalogVappTemplateLeaseOutput values.
// You can construct a concrete instance of `GetCatalogVappTemplateLeaseInput` via:
//
//	GetCatalogVappTemplateLeaseArgs{...}
type GetCatalogVappTemplateLeaseInput interface {
	pulumi.Input

	ToGetCatalogVappTemplateLeaseOutput() GetCatalogVappTemplateLeaseOutput
	ToGetCatalogVappTemplateLeaseOutputWithContext(context.Context) GetCatalogVappTemplateLeaseOutput
}

type GetCatalogVappTemplateLeaseArgs struct {
	// How long the vApp Template is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by parent Org allows).
	StorageLeaseInSec pulumi.IntInput `pulumi:"storageLeaseInSec"`
}

func (GetCatalogVappTemplateLeaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogVappTemplateLease)(nil)).Elem()
}

func (i GetCatalogVappTemplateLeaseArgs) ToGetCatalogVappTemplateLeaseOutput() GetCatalogVappTemplateLeaseOutput {
	return i.ToGetCatalogVappTemplateLeaseOutputWithContext(context.Background())
}

func (i GetCatalogVappTemplateLeaseArgs) ToGetCatalogVappTemplateLeaseOutputWithContext(ctx context.Context) GetCatalogVappTemplateLeaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogVappTemplateLeaseOutput)
}

// GetCatalogVappTemplateLeaseArrayInput is an input type that accepts GetCatalogVappTemplateLeaseArray and GetCatalogVappTemplateLeaseArrayOutput values.
// You can construct a concrete instance of `GetCatalogVappTemplateLeaseArrayInput` via:
//
//	GetCatalogVappTemplateLeaseArray{ GetCatalogVappTemplateLeaseArgs{...} }
type GetCatalogVappTemplateLeaseArrayInput interface {
	pulumi.Input

	ToGetCatalogVappTemplateLeaseArrayOutput() GetCatalogVappTemplateLeaseArrayOutput
	ToGetCatalogVappTemplateLeaseArrayOutputWithContext(context.Context) GetCatalogVappTemplateLeaseArrayOutput
}

type GetCatalogVappTemplateLeaseArray []GetCatalogVappTemplateLeaseInput

func (GetCatalogVappTemplateLeaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogVappTemplateLease)(nil)).Elem()
}

func (i GetCatalogVappTemplateLeaseArray) ToGetCatalogVappTemplateLeaseArrayOutput() GetCatalogVappTemplateLeaseArrayOutput {
	return i.ToGetCatalogVappTemplateLeaseArrayOutputWithContext(context.Background())
}

func (i GetCatalogVappTemplateLeaseArray) ToGetCatalogVappTemplateLeaseArrayOutputWithContext(ctx context.Context) GetCatalogVappTemplateLeaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogVappTemplateLeaseArrayOutput)
}

type GetCatalogVappTemplateLeaseOutput struct{ *pulumi.OutputState }

func (GetCatalogVappTemplateLeaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogVappTemplateLease)(nil)).Elem()
}

func (o GetCatalogVappTemplateLeaseOutput) ToGetCatalogVappTemplateLeaseOutput() GetCatalogVappTemplateLeaseOutput {
	return o
}

func (o GetCatalogVappTemplateLeaseOutput) ToGetCatalogVappTemplateLeaseOutputWithContext(ctx context.Context) GetCatalogVappTemplateLeaseOutput {
	return o
}

// How long the vApp Template is available before being automatically deleted or marked as expired. 0 means never expires (or maximum allowed by parent Org allows).
func (o GetCatalogVappTemplateLeaseOutput) StorageLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateLease) int { return v.StorageLeaseInSec }).(pulumi.IntOutput)
}

type GetCatalogVappTemplateLeaseArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogVappTemplateLeaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogVappTemplateLease)(nil)).Elem()
}

func (o GetCatalogVappTemplateLeaseArrayOutput) ToGetCatalogVappTemplateLeaseArrayOutput() GetCatalogVappTemplateLeaseArrayOutput {
	return o
}

func (o GetCatalogVappTemplateLeaseArrayOutput) ToGetCatalogVappTemplateLeaseArrayOutputWithContext(ctx context.Context) GetCatalogVappTemplateLeaseArrayOutput {
	return o
}

func (o GetCatalogVappTemplateLeaseArrayOutput) Index(i pulumi.IntInput) GetCatalogVappTemplateLeaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogVappTemplateLease {
		return vs[0].([]GetCatalogVappTemplateLease)[vs[1].(int)]
	}).(GetCatalogVappTemplateLeaseOutput)
}

type GetCatalogVappTemplateMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetCatalogVappTemplateMetadataEntryInput is an input type that accepts GetCatalogVappTemplateMetadataEntryArgs and GetCatalogVappTemplateMetadataEntryOutput values.
// You can construct a concrete instance of `GetCatalogVappTemplateMetadataEntryInput` via:
//
//	GetCatalogVappTemplateMetadataEntryArgs{...}
type GetCatalogVappTemplateMetadataEntryInput interface {
	pulumi.Input

	ToGetCatalogVappTemplateMetadataEntryOutput() GetCatalogVappTemplateMetadataEntryOutput
	ToGetCatalogVappTemplateMetadataEntryOutputWithContext(context.Context) GetCatalogVappTemplateMetadataEntryOutput
}

type GetCatalogVappTemplateMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCatalogVappTemplateMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogVappTemplateMetadataEntry)(nil)).Elem()
}

func (i GetCatalogVappTemplateMetadataEntryArgs) ToGetCatalogVappTemplateMetadataEntryOutput() GetCatalogVappTemplateMetadataEntryOutput {
	return i.ToGetCatalogVappTemplateMetadataEntryOutputWithContext(context.Background())
}

func (i GetCatalogVappTemplateMetadataEntryArgs) ToGetCatalogVappTemplateMetadataEntryOutputWithContext(ctx context.Context) GetCatalogVappTemplateMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogVappTemplateMetadataEntryOutput)
}

// GetCatalogVappTemplateMetadataEntryArrayInput is an input type that accepts GetCatalogVappTemplateMetadataEntryArray and GetCatalogVappTemplateMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetCatalogVappTemplateMetadataEntryArrayInput` via:
//
//	GetCatalogVappTemplateMetadataEntryArray{ GetCatalogVappTemplateMetadataEntryArgs{...} }
type GetCatalogVappTemplateMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetCatalogVappTemplateMetadataEntryArrayOutput() GetCatalogVappTemplateMetadataEntryArrayOutput
	ToGetCatalogVappTemplateMetadataEntryArrayOutputWithContext(context.Context) GetCatalogVappTemplateMetadataEntryArrayOutput
}

type GetCatalogVappTemplateMetadataEntryArray []GetCatalogVappTemplateMetadataEntryInput

func (GetCatalogVappTemplateMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogVappTemplateMetadataEntry)(nil)).Elem()
}

func (i GetCatalogVappTemplateMetadataEntryArray) ToGetCatalogVappTemplateMetadataEntryArrayOutput() GetCatalogVappTemplateMetadataEntryArrayOutput {
	return i.ToGetCatalogVappTemplateMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetCatalogVappTemplateMetadataEntryArray) ToGetCatalogVappTemplateMetadataEntryArrayOutputWithContext(ctx context.Context) GetCatalogVappTemplateMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogVappTemplateMetadataEntryArrayOutput)
}

type GetCatalogVappTemplateMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetCatalogVappTemplateMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogVappTemplateMetadataEntry)(nil)).Elem()
}

func (o GetCatalogVappTemplateMetadataEntryOutput) ToGetCatalogVappTemplateMetadataEntryOutput() GetCatalogVappTemplateMetadataEntryOutput {
	return o
}

func (o GetCatalogVappTemplateMetadataEntryOutput) ToGetCatalogVappTemplateMetadataEntryOutputWithContext(ctx context.Context) GetCatalogVappTemplateMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetCatalogVappTemplateMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetCatalogVappTemplateMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetCatalogVappTemplateMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetCatalogVappTemplateMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetCatalogVappTemplateMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogVappTemplateMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetCatalogVappTemplateMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogVappTemplateMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogVappTemplateMetadataEntry)(nil)).Elem()
}

func (o GetCatalogVappTemplateMetadataEntryArrayOutput) ToGetCatalogVappTemplateMetadataEntryArrayOutput() GetCatalogVappTemplateMetadataEntryArrayOutput {
	return o
}

func (o GetCatalogVappTemplateMetadataEntryArrayOutput) ToGetCatalogVappTemplateMetadataEntryArrayOutputWithContext(ctx context.Context) GetCatalogVappTemplateMetadataEntryArrayOutput {
	return o
}

func (o GetCatalogVappTemplateMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetCatalogVappTemplateMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogVappTemplateMetadataEntry {
		return vs[0].([]GetCatalogVappTemplateMetadataEntry)[vs[1].(int)]
	}).(GetCatalogVappTemplateMetadataEntryOutput)
}

type GetCseKubernetesClusterControlPlane struct {
	// Disk size, in Gibibytes (Gi), of the control plane nodes
	DiskSizeGi int `pulumi:"diskSizeGi"`
	// IP of the control plane
	Ip string `pulumi:"ip"`
	// The number of nodes that the control plane has
	MachineCount int `pulumi:"machineCount"`
	// VM Placement policy of the control plane nodes
	PlacementPolicyId string `pulumi:"placementPolicyId"`
	// VM Sizing policy of the control plane nodes
	SizingPolicyId string `pulumi:"sizingPolicyId"`
	// Storage profile of the control plane nodes
	StorageProfileId string `pulumi:"storageProfileId"`
}

// GetCseKubernetesClusterControlPlaneInput is an input type that accepts GetCseKubernetesClusterControlPlaneArgs and GetCseKubernetesClusterControlPlaneOutput values.
// You can construct a concrete instance of `GetCseKubernetesClusterControlPlaneInput` via:
//
//	GetCseKubernetesClusterControlPlaneArgs{...}
type GetCseKubernetesClusterControlPlaneInput interface {
	pulumi.Input

	ToGetCseKubernetesClusterControlPlaneOutput() GetCseKubernetesClusterControlPlaneOutput
	ToGetCseKubernetesClusterControlPlaneOutputWithContext(context.Context) GetCseKubernetesClusterControlPlaneOutput
}

type GetCseKubernetesClusterControlPlaneArgs struct {
	// Disk size, in Gibibytes (Gi), of the control plane nodes
	DiskSizeGi pulumi.IntInput `pulumi:"diskSizeGi"`
	// IP of the control plane
	Ip pulumi.StringInput `pulumi:"ip"`
	// The number of nodes that the control plane has
	MachineCount pulumi.IntInput `pulumi:"machineCount"`
	// VM Placement policy of the control plane nodes
	PlacementPolicyId pulumi.StringInput `pulumi:"placementPolicyId"`
	// VM Sizing policy of the control plane nodes
	SizingPolicyId pulumi.StringInput `pulumi:"sizingPolicyId"`
	// Storage profile of the control plane nodes
	StorageProfileId pulumi.StringInput `pulumi:"storageProfileId"`
}

func (GetCseKubernetesClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCseKubernetesClusterControlPlane)(nil)).Elem()
}

func (i GetCseKubernetesClusterControlPlaneArgs) ToGetCseKubernetesClusterControlPlaneOutput() GetCseKubernetesClusterControlPlaneOutput {
	return i.ToGetCseKubernetesClusterControlPlaneOutputWithContext(context.Background())
}

func (i GetCseKubernetesClusterControlPlaneArgs) ToGetCseKubernetesClusterControlPlaneOutputWithContext(ctx context.Context) GetCseKubernetesClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCseKubernetesClusterControlPlaneOutput)
}

// GetCseKubernetesClusterControlPlaneArrayInput is an input type that accepts GetCseKubernetesClusterControlPlaneArray and GetCseKubernetesClusterControlPlaneArrayOutput values.
// You can construct a concrete instance of `GetCseKubernetesClusterControlPlaneArrayInput` via:
//
//	GetCseKubernetesClusterControlPlaneArray{ GetCseKubernetesClusterControlPlaneArgs{...} }
type GetCseKubernetesClusterControlPlaneArrayInput interface {
	pulumi.Input

	ToGetCseKubernetesClusterControlPlaneArrayOutput() GetCseKubernetesClusterControlPlaneArrayOutput
	ToGetCseKubernetesClusterControlPlaneArrayOutputWithContext(context.Context) GetCseKubernetesClusterControlPlaneArrayOutput
}

type GetCseKubernetesClusterControlPlaneArray []GetCseKubernetesClusterControlPlaneInput

func (GetCseKubernetesClusterControlPlaneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCseKubernetesClusterControlPlane)(nil)).Elem()
}

func (i GetCseKubernetesClusterControlPlaneArray) ToGetCseKubernetesClusterControlPlaneArrayOutput() GetCseKubernetesClusterControlPlaneArrayOutput {
	return i.ToGetCseKubernetesClusterControlPlaneArrayOutputWithContext(context.Background())
}

func (i GetCseKubernetesClusterControlPlaneArray) ToGetCseKubernetesClusterControlPlaneArrayOutputWithContext(ctx context.Context) GetCseKubernetesClusterControlPlaneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCseKubernetesClusterControlPlaneArrayOutput)
}

type GetCseKubernetesClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (GetCseKubernetesClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCseKubernetesClusterControlPlane)(nil)).Elem()
}

func (o GetCseKubernetesClusterControlPlaneOutput) ToGetCseKubernetesClusterControlPlaneOutput() GetCseKubernetesClusterControlPlaneOutput {
	return o
}

func (o GetCseKubernetesClusterControlPlaneOutput) ToGetCseKubernetesClusterControlPlaneOutputWithContext(ctx context.Context) GetCseKubernetesClusterControlPlaneOutput {
	return o
}

// Disk size, in Gibibytes (Gi), of the control plane nodes
func (o GetCseKubernetesClusterControlPlaneOutput) DiskSizeGi() pulumi.IntOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterControlPlane) int { return v.DiskSizeGi }).(pulumi.IntOutput)
}

// IP of the control plane
func (o GetCseKubernetesClusterControlPlaneOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterControlPlane) string { return v.Ip }).(pulumi.StringOutput)
}

// The number of nodes that the control plane has
func (o GetCseKubernetesClusterControlPlaneOutput) MachineCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterControlPlane) int { return v.MachineCount }).(pulumi.IntOutput)
}

// VM Placement policy of the control plane nodes
func (o GetCseKubernetesClusterControlPlaneOutput) PlacementPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterControlPlane) string { return v.PlacementPolicyId }).(pulumi.StringOutput)
}

// VM Sizing policy of the control plane nodes
func (o GetCseKubernetesClusterControlPlaneOutput) SizingPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterControlPlane) string { return v.SizingPolicyId }).(pulumi.StringOutput)
}

// Storage profile of the control plane nodes
func (o GetCseKubernetesClusterControlPlaneOutput) StorageProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterControlPlane) string { return v.StorageProfileId }).(pulumi.StringOutput)
}

type GetCseKubernetesClusterControlPlaneArrayOutput struct{ *pulumi.OutputState }

func (GetCseKubernetesClusterControlPlaneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCseKubernetesClusterControlPlane)(nil)).Elem()
}

func (o GetCseKubernetesClusterControlPlaneArrayOutput) ToGetCseKubernetesClusterControlPlaneArrayOutput() GetCseKubernetesClusterControlPlaneArrayOutput {
	return o
}

func (o GetCseKubernetesClusterControlPlaneArrayOutput) ToGetCseKubernetesClusterControlPlaneArrayOutputWithContext(ctx context.Context) GetCseKubernetesClusterControlPlaneArrayOutput {
	return o
}

func (o GetCseKubernetesClusterControlPlaneArrayOutput) Index(i pulumi.IntInput) GetCseKubernetesClusterControlPlaneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCseKubernetesClusterControlPlane {
		return vs[0].([]GetCseKubernetesClusterControlPlane)[vs[1].(int)]
	}).(GetCseKubernetesClusterControlPlaneOutput)
}

type GetCseKubernetesClusterDefaultStorageClass struct {
	// Filesystem of the storage class, can be either 'ext4' or 'xfs'
	Filesystem string `pulumi:"filesystem"`
	// Allows to find a Kubernetes cluster by name inside the given Organization with ID `orgId`. Either `clusterId` or `name` must be set. This argument requires `cseVersion` and `orgId` to be set.
	Name string `pulumi:"name"`
	// 'delete' deletes the volume when the PersistentVolumeClaim is deleted. 'retain' does not, and the volume can be manually reclaimed
	ReclaimPolicy string `pulumi:"reclaimPolicy"`
	// ID of the storage profile used by the storage class
	StorageProfileId string `pulumi:"storageProfileId"`
}

// GetCseKubernetesClusterDefaultStorageClassInput is an input type that accepts GetCseKubernetesClusterDefaultStorageClassArgs and GetCseKubernetesClusterDefaultStorageClassOutput values.
// You can construct a concrete instance of `GetCseKubernetesClusterDefaultStorageClassInput` via:
//
//	GetCseKubernetesClusterDefaultStorageClassArgs{...}
type GetCseKubernetesClusterDefaultStorageClassInput interface {
	pulumi.Input

	ToGetCseKubernetesClusterDefaultStorageClassOutput() GetCseKubernetesClusterDefaultStorageClassOutput
	ToGetCseKubernetesClusterDefaultStorageClassOutputWithContext(context.Context) GetCseKubernetesClusterDefaultStorageClassOutput
}

type GetCseKubernetesClusterDefaultStorageClassArgs struct {
	// Filesystem of the storage class, can be either 'ext4' or 'xfs'
	Filesystem pulumi.StringInput `pulumi:"filesystem"`
	// Allows to find a Kubernetes cluster by name inside the given Organization with ID `orgId`. Either `clusterId` or `name` must be set. This argument requires `cseVersion` and `orgId` to be set.
	Name pulumi.StringInput `pulumi:"name"`
	// 'delete' deletes the volume when the PersistentVolumeClaim is deleted. 'retain' does not, and the volume can be manually reclaimed
	ReclaimPolicy pulumi.StringInput `pulumi:"reclaimPolicy"`
	// ID of the storage profile used by the storage class
	StorageProfileId pulumi.StringInput `pulumi:"storageProfileId"`
}

func (GetCseKubernetesClusterDefaultStorageClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCseKubernetesClusterDefaultStorageClass)(nil)).Elem()
}

func (i GetCseKubernetesClusterDefaultStorageClassArgs) ToGetCseKubernetesClusterDefaultStorageClassOutput() GetCseKubernetesClusterDefaultStorageClassOutput {
	return i.ToGetCseKubernetesClusterDefaultStorageClassOutputWithContext(context.Background())
}

func (i GetCseKubernetesClusterDefaultStorageClassArgs) ToGetCseKubernetesClusterDefaultStorageClassOutputWithContext(ctx context.Context) GetCseKubernetesClusterDefaultStorageClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCseKubernetesClusterDefaultStorageClassOutput)
}

// GetCseKubernetesClusterDefaultStorageClassArrayInput is an input type that accepts GetCseKubernetesClusterDefaultStorageClassArray and GetCseKubernetesClusterDefaultStorageClassArrayOutput values.
// You can construct a concrete instance of `GetCseKubernetesClusterDefaultStorageClassArrayInput` via:
//
//	GetCseKubernetesClusterDefaultStorageClassArray{ GetCseKubernetesClusterDefaultStorageClassArgs{...} }
type GetCseKubernetesClusterDefaultStorageClassArrayInput interface {
	pulumi.Input

	ToGetCseKubernetesClusterDefaultStorageClassArrayOutput() GetCseKubernetesClusterDefaultStorageClassArrayOutput
	ToGetCseKubernetesClusterDefaultStorageClassArrayOutputWithContext(context.Context) GetCseKubernetesClusterDefaultStorageClassArrayOutput
}

type GetCseKubernetesClusterDefaultStorageClassArray []GetCseKubernetesClusterDefaultStorageClassInput

func (GetCseKubernetesClusterDefaultStorageClassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCseKubernetesClusterDefaultStorageClass)(nil)).Elem()
}

func (i GetCseKubernetesClusterDefaultStorageClassArray) ToGetCseKubernetesClusterDefaultStorageClassArrayOutput() GetCseKubernetesClusterDefaultStorageClassArrayOutput {
	return i.ToGetCseKubernetesClusterDefaultStorageClassArrayOutputWithContext(context.Background())
}

func (i GetCseKubernetesClusterDefaultStorageClassArray) ToGetCseKubernetesClusterDefaultStorageClassArrayOutputWithContext(ctx context.Context) GetCseKubernetesClusterDefaultStorageClassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCseKubernetesClusterDefaultStorageClassArrayOutput)
}

type GetCseKubernetesClusterDefaultStorageClassOutput struct{ *pulumi.OutputState }

func (GetCseKubernetesClusterDefaultStorageClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCseKubernetesClusterDefaultStorageClass)(nil)).Elem()
}

func (o GetCseKubernetesClusterDefaultStorageClassOutput) ToGetCseKubernetesClusterDefaultStorageClassOutput() GetCseKubernetesClusterDefaultStorageClassOutput {
	return o
}

func (o GetCseKubernetesClusterDefaultStorageClassOutput) ToGetCseKubernetesClusterDefaultStorageClassOutputWithContext(ctx context.Context) GetCseKubernetesClusterDefaultStorageClassOutput {
	return o
}

// Filesystem of the storage class, can be either 'ext4' or 'xfs'
func (o GetCseKubernetesClusterDefaultStorageClassOutput) Filesystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterDefaultStorageClass) string { return v.Filesystem }).(pulumi.StringOutput)
}

// Allows to find a Kubernetes cluster by name inside the given Organization with ID `orgId`. Either `clusterId` or `name` must be set. This argument requires `cseVersion` and `orgId` to be set.
func (o GetCseKubernetesClusterDefaultStorageClassOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterDefaultStorageClass) string { return v.Name }).(pulumi.StringOutput)
}

// 'delete' deletes the volume when the PersistentVolumeClaim is deleted. 'retain' does not, and the volume can be manually reclaimed
func (o GetCseKubernetesClusterDefaultStorageClassOutput) ReclaimPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterDefaultStorageClass) string { return v.ReclaimPolicy }).(pulumi.StringOutput)
}

// ID of the storage profile used by the storage class
func (o GetCseKubernetesClusterDefaultStorageClassOutput) StorageProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterDefaultStorageClass) string { return v.StorageProfileId }).(pulumi.StringOutput)
}

type GetCseKubernetesClusterDefaultStorageClassArrayOutput struct{ *pulumi.OutputState }

func (GetCseKubernetesClusterDefaultStorageClassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCseKubernetesClusterDefaultStorageClass)(nil)).Elem()
}

func (o GetCseKubernetesClusterDefaultStorageClassArrayOutput) ToGetCseKubernetesClusterDefaultStorageClassArrayOutput() GetCseKubernetesClusterDefaultStorageClassArrayOutput {
	return o
}

func (o GetCseKubernetesClusterDefaultStorageClassArrayOutput) ToGetCseKubernetesClusterDefaultStorageClassArrayOutputWithContext(ctx context.Context) GetCseKubernetesClusterDefaultStorageClassArrayOutput {
	return o
}

func (o GetCseKubernetesClusterDefaultStorageClassArrayOutput) Index(i pulumi.IntInput) GetCseKubernetesClusterDefaultStorageClassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCseKubernetesClusterDefaultStorageClass {
		return vs[0].([]GetCseKubernetesClusterDefaultStorageClass)[vs[1].(int)]
	}).(GetCseKubernetesClusterDefaultStorageClassOutput)
}

type GetCseKubernetesClusterEvent struct {
	// Details of the event
	Details string `pulumi:"details"`
	// Allows to find a Kubernetes cluster by name inside the given Organization with ID `orgId`. Either `clusterId` or `name` must be set. This argument requires `cseVersion` and `orgId` to be set.
	Name string `pulumi:"name"`
	// When the event happened
	OccurredAt string `pulumi:"occurredAt"`
	// ID of the resource that caused the event
	ResourceId string `pulumi:"resourceId"`
	// Type of the event, either 'event' or 'error'
	Type string `pulumi:"type"`
}

// GetCseKubernetesClusterEventInput is an input type that accepts GetCseKubernetesClusterEventArgs and GetCseKubernetesClusterEventOutput values.
// You can construct a concrete instance of `GetCseKubernetesClusterEventInput` via:
//
//	GetCseKubernetesClusterEventArgs{...}
type GetCseKubernetesClusterEventInput interface {
	pulumi.Input

	ToGetCseKubernetesClusterEventOutput() GetCseKubernetesClusterEventOutput
	ToGetCseKubernetesClusterEventOutputWithContext(context.Context) GetCseKubernetesClusterEventOutput
}

type GetCseKubernetesClusterEventArgs struct {
	// Details of the event
	Details pulumi.StringInput `pulumi:"details"`
	// Allows to find a Kubernetes cluster by name inside the given Organization with ID `orgId`. Either `clusterId` or `name` must be set. This argument requires `cseVersion` and `orgId` to be set.
	Name pulumi.StringInput `pulumi:"name"`
	// When the event happened
	OccurredAt pulumi.StringInput `pulumi:"occurredAt"`
	// ID of the resource that caused the event
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Type of the event, either 'event' or 'error'
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCseKubernetesClusterEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCseKubernetesClusterEvent)(nil)).Elem()
}

func (i GetCseKubernetesClusterEventArgs) ToGetCseKubernetesClusterEventOutput() GetCseKubernetesClusterEventOutput {
	return i.ToGetCseKubernetesClusterEventOutputWithContext(context.Background())
}

func (i GetCseKubernetesClusterEventArgs) ToGetCseKubernetesClusterEventOutputWithContext(ctx context.Context) GetCseKubernetesClusterEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCseKubernetesClusterEventOutput)
}

// GetCseKubernetesClusterEventArrayInput is an input type that accepts GetCseKubernetesClusterEventArray and GetCseKubernetesClusterEventArrayOutput values.
// You can construct a concrete instance of `GetCseKubernetesClusterEventArrayInput` via:
//
//	GetCseKubernetesClusterEventArray{ GetCseKubernetesClusterEventArgs{...} }
type GetCseKubernetesClusterEventArrayInput interface {
	pulumi.Input

	ToGetCseKubernetesClusterEventArrayOutput() GetCseKubernetesClusterEventArrayOutput
	ToGetCseKubernetesClusterEventArrayOutputWithContext(context.Context) GetCseKubernetesClusterEventArrayOutput
}

type GetCseKubernetesClusterEventArray []GetCseKubernetesClusterEventInput

func (GetCseKubernetesClusterEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCseKubernetesClusterEvent)(nil)).Elem()
}

func (i GetCseKubernetesClusterEventArray) ToGetCseKubernetesClusterEventArrayOutput() GetCseKubernetesClusterEventArrayOutput {
	return i.ToGetCseKubernetesClusterEventArrayOutputWithContext(context.Background())
}

func (i GetCseKubernetesClusterEventArray) ToGetCseKubernetesClusterEventArrayOutputWithContext(ctx context.Context) GetCseKubernetesClusterEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCseKubernetesClusterEventArrayOutput)
}

type GetCseKubernetesClusterEventOutput struct{ *pulumi.OutputState }

func (GetCseKubernetesClusterEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCseKubernetesClusterEvent)(nil)).Elem()
}

func (o GetCseKubernetesClusterEventOutput) ToGetCseKubernetesClusterEventOutput() GetCseKubernetesClusterEventOutput {
	return o
}

func (o GetCseKubernetesClusterEventOutput) ToGetCseKubernetesClusterEventOutputWithContext(ctx context.Context) GetCseKubernetesClusterEventOutput {
	return o
}

// Details of the event
func (o GetCseKubernetesClusterEventOutput) Details() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterEvent) string { return v.Details }).(pulumi.StringOutput)
}

// Allows to find a Kubernetes cluster by name inside the given Organization with ID `orgId`. Either `clusterId` or `name` must be set. This argument requires `cseVersion` and `orgId` to be set.
func (o GetCseKubernetesClusterEventOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterEvent) string { return v.Name }).(pulumi.StringOutput)
}

// When the event happened
func (o GetCseKubernetesClusterEventOutput) OccurredAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterEvent) string { return v.OccurredAt }).(pulumi.StringOutput)
}

// ID of the resource that caused the event
func (o GetCseKubernetesClusterEventOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterEvent) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Type of the event, either 'event' or 'error'
func (o GetCseKubernetesClusterEventOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterEvent) string { return v.Type }).(pulumi.StringOutput)
}

type GetCseKubernetesClusterEventArrayOutput struct{ *pulumi.OutputState }

func (GetCseKubernetesClusterEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCseKubernetesClusterEvent)(nil)).Elem()
}

func (o GetCseKubernetesClusterEventArrayOutput) ToGetCseKubernetesClusterEventArrayOutput() GetCseKubernetesClusterEventArrayOutput {
	return o
}

func (o GetCseKubernetesClusterEventArrayOutput) ToGetCseKubernetesClusterEventArrayOutputWithContext(ctx context.Context) GetCseKubernetesClusterEventArrayOutput {
	return o
}

func (o GetCseKubernetesClusterEventArrayOutput) Index(i pulumi.IntInput) GetCseKubernetesClusterEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCseKubernetesClusterEvent {
		return vs[0].([]GetCseKubernetesClusterEvent)[vs[1].(int)]
	}).(GetCseKubernetesClusterEventOutput)
}

type GetCseKubernetesClusterWorkerPool struct {
	// Maximum replicas of the autoscaling capabilities of this worker pool
	AutoscalerMaxReplicas int `pulumi:"autoscalerMaxReplicas"`
	// Minimum replicas of the autoscaling capabilities of this worker pool
	AutoscalerMinReplicas int `pulumi:"autoscalerMinReplicas"`
	// Disk size, in Gibibytes (Gi), of the control plane nodes
	DiskSizeGi int `pulumi:"diskSizeGi"`
	// The number of nodes that this node pool has
	MachineCount int `pulumi:"machineCount"`
	// Allows to find a Kubernetes cluster by name inside the given Organization with ID `orgId`. Either `clusterId` or `name` must be set. This argument requires `cseVersion` and `orgId` to be set.
	Name string `pulumi:"name"`
	// VM Placement policy of the control plane nodes
	PlacementPolicyId string `pulumi:"placementPolicyId"`
	// VM Sizing policy of the control plane nodes
	SizingPolicyId string `pulumi:"sizingPolicyId"`
	// Storage profile of the control plane nodes
	StorageProfileId string `pulumi:"storageProfileId"`
	// vGPU policy of the control plane nodes
	VgpuPolicyId string `pulumi:"vgpuPolicyId"`
}

// GetCseKubernetesClusterWorkerPoolInput is an input type that accepts GetCseKubernetesClusterWorkerPoolArgs and GetCseKubernetesClusterWorkerPoolOutput values.
// You can construct a concrete instance of `GetCseKubernetesClusterWorkerPoolInput` via:
//
//	GetCseKubernetesClusterWorkerPoolArgs{...}
type GetCseKubernetesClusterWorkerPoolInput interface {
	pulumi.Input

	ToGetCseKubernetesClusterWorkerPoolOutput() GetCseKubernetesClusterWorkerPoolOutput
	ToGetCseKubernetesClusterWorkerPoolOutputWithContext(context.Context) GetCseKubernetesClusterWorkerPoolOutput
}

type GetCseKubernetesClusterWorkerPoolArgs struct {
	// Maximum replicas of the autoscaling capabilities of this worker pool
	AutoscalerMaxReplicas pulumi.IntInput `pulumi:"autoscalerMaxReplicas"`
	// Minimum replicas of the autoscaling capabilities of this worker pool
	AutoscalerMinReplicas pulumi.IntInput `pulumi:"autoscalerMinReplicas"`
	// Disk size, in Gibibytes (Gi), of the control plane nodes
	DiskSizeGi pulumi.IntInput `pulumi:"diskSizeGi"`
	// The number of nodes that this node pool has
	MachineCount pulumi.IntInput `pulumi:"machineCount"`
	// Allows to find a Kubernetes cluster by name inside the given Organization with ID `orgId`. Either `clusterId` or `name` must be set. This argument requires `cseVersion` and `orgId` to be set.
	Name pulumi.StringInput `pulumi:"name"`
	// VM Placement policy of the control plane nodes
	PlacementPolicyId pulumi.StringInput `pulumi:"placementPolicyId"`
	// VM Sizing policy of the control plane nodes
	SizingPolicyId pulumi.StringInput `pulumi:"sizingPolicyId"`
	// Storage profile of the control plane nodes
	StorageProfileId pulumi.StringInput `pulumi:"storageProfileId"`
	// vGPU policy of the control plane nodes
	VgpuPolicyId pulumi.StringInput `pulumi:"vgpuPolicyId"`
}

func (GetCseKubernetesClusterWorkerPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCseKubernetesClusterWorkerPool)(nil)).Elem()
}

func (i GetCseKubernetesClusterWorkerPoolArgs) ToGetCseKubernetesClusterWorkerPoolOutput() GetCseKubernetesClusterWorkerPoolOutput {
	return i.ToGetCseKubernetesClusterWorkerPoolOutputWithContext(context.Background())
}

func (i GetCseKubernetesClusterWorkerPoolArgs) ToGetCseKubernetesClusterWorkerPoolOutputWithContext(ctx context.Context) GetCseKubernetesClusterWorkerPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCseKubernetesClusterWorkerPoolOutput)
}

// GetCseKubernetesClusterWorkerPoolArrayInput is an input type that accepts GetCseKubernetesClusterWorkerPoolArray and GetCseKubernetesClusterWorkerPoolArrayOutput values.
// You can construct a concrete instance of `GetCseKubernetesClusterWorkerPoolArrayInput` via:
//
//	GetCseKubernetesClusterWorkerPoolArray{ GetCseKubernetesClusterWorkerPoolArgs{...} }
type GetCseKubernetesClusterWorkerPoolArrayInput interface {
	pulumi.Input

	ToGetCseKubernetesClusterWorkerPoolArrayOutput() GetCseKubernetesClusterWorkerPoolArrayOutput
	ToGetCseKubernetesClusterWorkerPoolArrayOutputWithContext(context.Context) GetCseKubernetesClusterWorkerPoolArrayOutput
}

type GetCseKubernetesClusterWorkerPoolArray []GetCseKubernetesClusterWorkerPoolInput

func (GetCseKubernetesClusterWorkerPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCseKubernetesClusterWorkerPool)(nil)).Elem()
}

func (i GetCseKubernetesClusterWorkerPoolArray) ToGetCseKubernetesClusterWorkerPoolArrayOutput() GetCseKubernetesClusterWorkerPoolArrayOutput {
	return i.ToGetCseKubernetesClusterWorkerPoolArrayOutputWithContext(context.Background())
}

func (i GetCseKubernetesClusterWorkerPoolArray) ToGetCseKubernetesClusterWorkerPoolArrayOutputWithContext(ctx context.Context) GetCseKubernetesClusterWorkerPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCseKubernetesClusterWorkerPoolArrayOutput)
}

type GetCseKubernetesClusterWorkerPoolOutput struct{ *pulumi.OutputState }

func (GetCseKubernetesClusterWorkerPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCseKubernetesClusterWorkerPool)(nil)).Elem()
}

func (o GetCseKubernetesClusterWorkerPoolOutput) ToGetCseKubernetesClusterWorkerPoolOutput() GetCseKubernetesClusterWorkerPoolOutput {
	return o
}

func (o GetCseKubernetesClusterWorkerPoolOutput) ToGetCseKubernetesClusterWorkerPoolOutputWithContext(ctx context.Context) GetCseKubernetesClusterWorkerPoolOutput {
	return o
}

// Maximum replicas of the autoscaling capabilities of this worker pool
func (o GetCseKubernetesClusterWorkerPoolOutput) AutoscalerMaxReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterWorkerPool) int { return v.AutoscalerMaxReplicas }).(pulumi.IntOutput)
}

// Minimum replicas of the autoscaling capabilities of this worker pool
func (o GetCseKubernetesClusterWorkerPoolOutput) AutoscalerMinReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterWorkerPool) int { return v.AutoscalerMinReplicas }).(pulumi.IntOutput)
}

// Disk size, in Gibibytes (Gi), of the control plane nodes
func (o GetCseKubernetesClusterWorkerPoolOutput) DiskSizeGi() pulumi.IntOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterWorkerPool) int { return v.DiskSizeGi }).(pulumi.IntOutput)
}

// The number of nodes that this node pool has
func (o GetCseKubernetesClusterWorkerPoolOutput) MachineCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterWorkerPool) int { return v.MachineCount }).(pulumi.IntOutput)
}

// Allows to find a Kubernetes cluster by name inside the given Organization with ID `orgId`. Either `clusterId` or `name` must be set. This argument requires `cseVersion` and `orgId` to be set.
func (o GetCseKubernetesClusterWorkerPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterWorkerPool) string { return v.Name }).(pulumi.StringOutput)
}

// VM Placement policy of the control plane nodes
func (o GetCseKubernetesClusterWorkerPoolOutput) PlacementPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterWorkerPool) string { return v.PlacementPolicyId }).(pulumi.StringOutput)
}

// VM Sizing policy of the control plane nodes
func (o GetCseKubernetesClusterWorkerPoolOutput) SizingPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterWorkerPool) string { return v.SizingPolicyId }).(pulumi.StringOutput)
}

// Storage profile of the control plane nodes
func (o GetCseKubernetesClusterWorkerPoolOutput) StorageProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterWorkerPool) string { return v.StorageProfileId }).(pulumi.StringOutput)
}

// vGPU policy of the control plane nodes
func (o GetCseKubernetesClusterWorkerPoolOutput) VgpuPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCseKubernetesClusterWorkerPool) string { return v.VgpuPolicyId }).(pulumi.StringOutput)
}

type GetCseKubernetesClusterWorkerPoolArrayOutput struct{ *pulumi.OutputState }

func (GetCseKubernetesClusterWorkerPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCseKubernetesClusterWorkerPool)(nil)).Elem()
}

func (o GetCseKubernetesClusterWorkerPoolArrayOutput) ToGetCseKubernetesClusterWorkerPoolArrayOutput() GetCseKubernetesClusterWorkerPoolArrayOutput {
	return o
}

func (o GetCseKubernetesClusterWorkerPoolArrayOutput) ToGetCseKubernetesClusterWorkerPoolArrayOutputWithContext(ctx context.Context) GetCseKubernetesClusterWorkerPoolArrayOutput {
	return o
}

func (o GetCseKubernetesClusterWorkerPoolArrayOutput) Index(i pulumi.IntInput) GetCseKubernetesClusterWorkerPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCseKubernetesClusterWorkerPool {
		return vs[0].([]GetCseKubernetesClusterWorkerPool)[vs[1].(int)]
	}).(GetCseKubernetesClusterWorkerPoolOutput)
}

type GetDseRegistryConfigurationContainerRegistry struct {
	// Registry description
	Description string `pulumi:"description"`
	// Registry host
	Host string `pulumi:"host"`
	// Password for registry user
	Password *string `pulumi:"password"`
	// Username for registry access
	Username *string `pulumi:"username"`
}

// GetDseRegistryConfigurationContainerRegistryInput is an input type that accepts GetDseRegistryConfigurationContainerRegistryArgs and GetDseRegistryConfigurationContainerRegistryOutput values.
// You can construct a concrete instance of `GetDseRegistryConfigurationContainerRegistryInput` via:
//
//	GetDseRegistryConfigurationContainerRegistryArgs{...}
type GetDseRegistryConfigurationContainerRegistryInput interface {
	pulumi.Input

	ToGetDseRegistryConfigurationContainerRegistryOutput() GetDseRegistryConfigurationContainerRegistryOutput
	ToGetDseRegistryConfigurationContainerRegistryOutputWithContext(context.Context) GetDseRegistryConfigurationContainerRegistryOutput
}

type GetDseRegistryConfigurationContainerRegistryArgs struct {
	// Registry description
	Description pulumi.StringInput `pulumi:"description"`
	// Registry host
	Host pulumi.StringInput `pulumi:"host"`
	// Password for registry user
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Username for registry access
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetDseRegistryConfigurationContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDseRegistryConfigurationContainerRegistry)(nil)).Elem()
}

func (i GetDseRegistryConfigurationContainerRegistryArgs) ToGetDseRegistryConfigurationContainerRegistryOutput() GetDseRegistryConfigurationContainerRegistryOutput {
	return i.ToGetDseRegistryConfigurationContainerRegistryOutputWithContext(context.Background())
}

func (i GetDseRegistryConfigurationContainerRegistryArgs) ToGetDseRegistryConfigurationContainerRegistryOutputWithContext(ctx context.Context) GetDseRegistryConfigurationContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDseRegistryConfigurationContainerRegistryOutput)
}

// GetDseRegistryConfigurationContainerRegistryArrayInput is an input type that accepts GetDseRegistryConfigurationContainerRegistryArray and GetDseRegistryConfigurationContainerRegistryArrayOutput values.
// You can construct a concrete instance of `GetDseRegistryConfigurationContainerRegistryArrayInput` via:
//
//	GetDseRegistryConfigurationContainerRegistryArray{ GetDseRegistryConfigurationContainerRegistryArgs{...} }
type GetDseRegistryConfigurationContainerRegistryArrayInput interface {
	pulumi.Input

	ToGetDseRegistryConfigurationContainerRegistryArrayOutput() GetDseRegistryConfigurationContainerRegistryArrayOutput
	ToGetDseRegistryConfigurationContainerRegistryArrayOutputWithContext(context.Context) GetDseRegistryConfigurationContainerRegistryArrayOutput
}

type GetDseRegistryConfigurationContainerRegistryArray []GetDseRegistryConfigurationContainerRegistryInput

func (GetDseRegistryConfigurationContainerRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDseRegistryConfigurationContainerRegistry)(nil)).Elem()
}

func (i GetDseRegistryConfigurationContainerRegistryArray) ToGetDseRegistryConfigurationContainerRegistryArrayOutput() GetDseRegistryConfigurationContainerRegistryArrayOutput {
	return i.ToGetDseRegistryConfigurationContainerRegistryArrayOutputWithContext(context.Background())
}

func (i GetDseRegistryConfigurationContainerRegistryArray) ToGetDseRegistryConfigurationContainerRegistryArrayOutputWithContext(ctx context.Context) GetDseRegistryConfigurationContainerRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDseRegistryConfigurationContainerRegistryArrayOutput)
}

type GetDseRegistryConfigurationContainerRegistryOutput struct{ *pulumi.OutputState }

func (GetDseRegistryConfigurationContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDseRegistryConfigurationContainerRegistry)(nil)).Elem()
}

func (o GetDseRegistryConfigurationContainerRegistryOutput) ToGetDseRegistryConfigurationContainerRegistryOutput() GetDseRegistryConfigurationContainerRegistryOutput {
	return o
}

func (o GetDseRegistryConfigurationContainerRegistryOutput) ToGetDseRegistryConfigurationContainerRegistryOutputWithContext(ctx context.Context) GetDseRegistryConfigurationContainerRegistryOutput {
	return o
}

// Registry description
func (o GetDseRegistryConfigurationContainerRegistryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDseRegistryConfigurationContainerRegistry) string { return v.Description }).(pulumi.StringOutput)
}

// Registry host
func (o GetDseRegistryConfigurationContainerRegistryOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDseRegistryConfigurationContainerRegistry) string { return v.Host }).(pulumi.StringOutput)
}

// Password for registry user
func (o GetDseRegistryConfigurationContainerRegistryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDseRegistryConfigurationContainerRegistry) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Username for registry access
func (o GetDseRegistryConfigurationContainerRegistryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDseRegistryConfigurationContainerRegistry) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetDseRegistryConfigurationContainerRegistryArrayOutput struct{ *pulumi.OutputState }

func (GetDseRegistryConfigurationContainerRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDseRegistryConfigurationContainerRegistry)(nil)).Elem()
}

func (o GetDseRegistryConfigurationContainerRegistryArrayOutput) ToGetDseRegistryConfigurationContainerRegistryArrayOutput() GetDseRegistryConfigurationContainerRegistryArrayOutput {
	return o
}

func (o GetDseRegistryConfigurationContainerRegistryArrayOutput) ToGetDseRegistryConfigurationContainerRegistryArrayOutputWithContext(ctx context.Context) GetDseRegistryConfigurationContainerRegistryArrayOutput {
	return o
}

func (o GetDseRegistryConfigurationContainerRegistryArrayOutput) Index(i pulumi.IntInput) GetDseRegistryConfigurationContainerRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDseRegistryConfigurationContainerRegistry {
		return vs[0].([]GetDseRegistryConfigurationContainerRegistry)[vs[1].(int)]
	}).(GetDseRegistryConfigurationContainerRegistryOutput)
}

type GetEdgegatewayExternalNetwork struct {
	// Enable rate limiting
	EnableRateLimit bool `pulumi:"enableRateLimit"`
	// Incoming rate limit (Mbps)
	IncomingRateLimit float64 `pulumi:"incomingRateLimit"`
	// A unique name for the edge gateway (optional when `filter` is used)
	Name string `pulumi:"name"`
	// Outgoing rate limit (Mbps)
	OutgoingRateLimit float64                               `pulumi:"outgoingRateLimit"`
	Subnets           []GetEdgegatewayExternalNetworkSubnet `pulumi:"subnets"`
}

// GetEdgegatewayExternalNetworkInput is an input type that accepts GetEdgegatewayExternalNetworkArgs and GetEdgegatewayExternalNetworkOutput values.
// You can construct a concrete instance of `GetEdgegatewayExternalNetworkInput` via:
//
//	GetEdgegatewayExternalNetworkArgs{...}
type GetEdgegatewayExternalNetworkInput interface {
	pulumi.Input

	ToGetEdgegatewayExternalNetworkOutput() GetEdgegatewayExternalNetworkOutput
	ToGetEdgegatewayExternalNetworkOutputWithContext(context.Context) GetEdgegatewayExternalNetworkOutput
}

type GetEdgegatewayExternalNetworkArgs struct {
	// Enable rate limiting
	EnableRateLimit pulumi.BoolInput `pulumi:"enableRateLimit"`
	// Incoming rate limit (Mbps)
	IncomingRateLimit pulumi.Float64Input `pulumi:"incomingRateLimit"`
	// A unique name for the edge gateway (optional when `filter` is used)
	Name pulumi.StringInput `pulumi:"name"`
	// Outgoing rate limit (Mbps)
	OutgoingRateLimit pulumi.Float64Input                           `pulumi:"outgoingRateLimit"`
	Subnets           GetEdgegatewayExternalNetworkSubnetArrayInput `pulumi:"subnets"`
}

func (GetEdgegatewayExternalNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgegatewayExternalNetwork)(nil)).Elem()
}

func (i GetEdgegatewayExternalNetworkArgs) ToGetEdgegatewayExternalNetworkOutput() GetEdgegatewayExternalNetworkOutput {
	return i.ToGetEdgegatewayExternalNetworkOutputWithContext(context.Background())
}

func (i GetEdgegatewayExternalNetworkArgs) ToGetEdgegatewayExternalNetworkOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgegatewayExternalNetworkOutput)
}

// GetEdgegatewayExternalNetworkArrayInput is an input type that accepts GetEdgegatewayExternalNetworkArray and GetEdgegatewayExternalNetworkArrayOutput values.
// You can construct a concrete instance of `GetEdgegatewayExternalNetworkArrayInput` via:
//
//	GetEdgegatewayExternalNetworkArray{ GetEdgegatewayExternalNetworkArgs{...} }
type GetEdgegatewayExternalNetworkArrayInput interface {
	pulumi.Input

	ToGetEdgegatewayExternalNetworkArrayOutput() GetEdgegatewayExternalNetworkArrayOutput
	ToGetEdgegatewayExternalNetworkArrayOutputWithContext(context.Context) GetEdgegatewayExternalNetworkArrayOutput
}

type GetEdgegatewayExternalNetworkArray []GetEdgegatewayExternalNetworkInput

func (GetEdgegatewayExternalNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEdgegatewayExternalNetwork)(nil)).Elem()
}

func (i GetEdgegatewayExternalNetworkArray) ToGetEdgegatewayExternalNetworkArrayOutput() GetEdgegatewayExternalNetworkArrayOutput {
	return i.ToGetEdgegatewayExternalNetworkArrayOutputWithContext(context.Background())
}

func (i GetEdgegatewayExternalNetworkArray) ToGetEdgegatewayExternalNetworkArrayOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgegatewayExternalNetworkArrayOutput)
}

type GetEdgegatewayExternalNetworkOutput struct{ *pulumi.OutputState }

func (GetEdgegatewayExternalNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgegatewayExternalNetwork)(nil)).Elem()
}

func (o GetEdgegatewayExternalNetworkOutput) ToGetEdgegatewayExternalNetworkOutput() GetEdgegatewayExternalNetworkOutput {
	return o
}

func (o GetEdgegatewayExternalNetworkOutput) ToGetEdgegatewayExternalNetworkOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkOutput {
	return o
}

// Enable rate limiting
func (o GetEdgegatewayExternalNetworkOutput) EnableRateLimit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEdgegatewayExternalNetwork) bool { return v.EnableRateLimit }).(pulumi.BoolOutput)
}

// Incoming rate limit (Mbps)
func (o GetEdgegatewayExternalNetworkOutput) IncomingRateLimit() pulumi.Float64Output {
	return o.ApplyT(func(v GetEdgegatewayExternalNetwork) float64 { return v.IncomingRateLimit }).(pulumi.Float64Output)
}

// A unique name for the edge gateway (optional when `filter` is used)
func (o GetEdgegatewayExternalNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgegatewayExternalNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// Outgoing rate limit (Mbps)
func (o GetEdgegatewayExternalNetworkOutput) OutgoingRateLimit() pulumi.Float64Output {
	return o.ApplyT(func(v GetEdgegatewayExternalNetwork) float64 { return v.OutgoingRateLimit }).(pulumi.Float64Output)
}

func (o GetEdgegatewayExternalNetworkOutput) Subnets() GetEdgegatewayExternalNetworkSubnetArrayOutput {
	return o.ApplyT(func(v GetEdgegatewayExternalNetwork) []GetEdgegatewayExternalNetworkSubnet { return v.Subnets }).(GetEdgegatewayExternalNetworkSubnetArrayOutput)
}

type GetEdgegatewayExternalNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetEdgegatewayExternalNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEdgegatewayExternalNetwork)(nil)).Elem()
}

func (o GetEdgegatewayExternalNetworkArrayOutput) ToGetEdgegatewayExternalNetworkArrayOutput() GetEdgegatewayExternalNetworkArrayOutput {
	return o
}

func (o GetEdgegatewayExternalNetworkArrayOutput) ToGetEdgegatewayExternalNetworkArrayOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkArrayOutput {
	return o
}

func (o GetEdgegatewayExternalNetworkArrayOutput) Index(i pulumi.IntInput) GetEdgegatewayExternalNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEdgegatewayExternalNetwork {
		return vs[0].([]GetEdgegatewayExternalNetwork)[vs[1].(int)]
	}).(GetEdgegatewayExternalNetworkOutput)
}

type GetEdgegatewayExternalNetworkSubnet struct {
	// Gateway address for a subnet
	Gateway string `pulumi:"gateway"`
	// IP address on the edge gateway - will be auto-assigned if not defined
	IpAddress string `pulumi:"ipAddress"`
	// Netmask address for a subnet
	Netmask string `pulumi:"netmask"`
	// Define zero or more blocks to sub-allocate pools on the edge gateway
	SuballocatePools []GetEdgegatewayExternalNetworkSubnetSuballocatePool `pulumi:"suballocatePools"`
	// Defines if this subnet should be used as default gateway for edge
	UseForDefaultRoute bool `pulumi:"useForDefaultRoute"`
}

// GetEdgegatewayExternalNetworkSubnetInput is an input type that accepts GetEdgegatewayExternalNetworkSubnetArgs and GetEdgegatewayExternalNetworkSubnetOutput values.
// You can construct a concrete instance of `GetEdgegatewayExternalNetworkSubnetInput` via:
//
//	GetEdgegatewayExternalNetworkSubnetArgs{...}
type GetEdgegatewayExternalNetworkSubnetInput interface {
	pulumi.Input

	ToGetEdgegatewayExternalNetworkSubnetOutput() GetEdgegatewayExternalNetworkSubnetOutput
	ToGetEdgegatewayExternalNetworkSubnetOutputWithContext(context.Context) GetEdgegatewayExternalNetworkSubnetOutput
}

type GetEdgegatewayExternalNetworkSubnetArgs struct {
	// Gateway address for a subnet
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// IP address on the edge gateway - will be auto-assigned if not defined
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Netmask address for a subnet
	Netmask pulumi.StringInput `pulumi:"netmask"`
	// Define zero or more blocks to sub-allocate pools on the edge gateway
	SuballocatePools GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayInput `pulumi:"suballocatePools"`
	// Defines if this subnet should be used as default gateway for edge
	UseForDefaultRoute pulumi.BoolInput `pulumi:"useForDefaultRoute"`
}

func (GetEdgegatewayExternalNetworkSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgegatewayExternalNetworkSubnet)(nil)).Elem()
}

func (i GetEdgegatewayExternalNetworkSubnetArgs) ToGetEdgegatewayExternalNetworkSubnetOutput() GetEdgegatewayExternalNetworkSubnetOutput {
	return i.ToGetEdgegatewayExternalNetworkSubnetOutputWithContext(context.Background())
}

func (i GetEdgegatewayExternalNetworkSubnetArgs) ToGetEdgegatewayExternalNetworkSubnetOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgegatewayExternalNetworkSubnetOutput)
}

// GetEdgegatewayExternalNetworkSubnetArrayInput is an input type that accepts GetEdgegatewayExternalNetworkSubnetArray and GetEdgegatewayExternalNetworkSubnetArrayOutput values.
// You can construct a concrete instance of `GetEdgegatewayExternalNetworkSubnetArrayInput` via:
//
//	GetEdgegatewayExternalNetworkSubnetArray{ GetEdgegatewayExternalNetworkSubnetArgs{...} }
type GetEdgegatewayExternalNetworkSubnetArrayInput interface {
	pulumi.Input

	ToGetEdgegatewayExternalNetworkSubnetArrayOutput() GetEdgegatewayExternalNetworkSubnetArrayOutput
	ToGetEdgegatewayExternalNetworkSubnetArrayOutputWithContext(context.Context) GetEdgegatewayExternalNetworkSubnetArrayOutput
}

type GetEdgegatewayExternalNetworkSubnetArray []GetEdgegatewayExternalNetworkSubnetInput

func (GetEdgegatewayExternalNetworkSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEdgegatewayExternalNetworkSubnet)(nil)).Elem()
}

func (i GetEdgegatewayExternalNetworkSubnetArray) ToGetEdgegatewayExternalNetworkSubnetArrayOutput() GetEdgegatewayExternalNetworkSubnetArrayOutput {
	return i.ToGetEdgegatewayExternalNetworkSubnetArrayOutputWithContext(context.Background())
}

func (i GetEdgegatewayExternalNetworkSubnetArray) ToGetEdgegatewayExternalNetworkSubnetArrayOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgegatewayExternalNetworkSubnetArrayOutput)
}

type GetEdgegatewayExternalNetworkSubnetOutput struct{ *pulumi.OutputState }

func (GetEdgegatewayExternalNetworkSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgegatewayExternalNetworkSubnet)(nil)).Elem()
}

func (o GetEdgegatewayExternalNetworkSubnetOutput) ToGetEdgegatewayExternalNetworkSubnetOutput() GetEdgegatewayExternalNetworkSubnetOutput {
	return o
}

func (o GetEdgegatewayExternalNetworkSubnetOutput) ToGetEdgegatewayExternalNetworkSubnetOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkSubnetOutput {
	return o
}

// Gateway address for a subnet
func (o GetEdgegatewayExternalNetworkSubnetOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgegatewayExternalNetworkSubnet) string { return v.Gateway }).(pulumi.StringOutput)
}

// IP address on the edge gateway - will be auto-assigned if not defined
func (o GetEdgegatewayExternalNetworkSubnetOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgegatewayExternalNetworkSubnet) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Netmask address for a subnet
func (o GetEdgegatewayExternalNetworkSubnetOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgegatewayExternalNetworkSubnet) string { return v.Netmask }).(pulumi.StringOutput)
}

// Define zero or more blocks to sub-allocate pools on the edge gateway
func (o GetEdgegatewayExternalNetworkSubnetOutput) SuballocatePools() GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput {
	return o.ApplyT(func(v GetEdgegatewayExternalNetworkSubnet) []GetEdgegatewayExternalNetworkSubnetSuballocatePool {
		return v.SuballocatePools
	}).(GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput)
}

// Defines if this subnet should be used as default gateway for edge
func (o GetEdgegatewayExternalNetworkSubnetOutput) UseForDefaultRoute() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEdgegatewayExternalNetworkSubnet) bool { return v.UseForDefaultRoute }).(pulumi.BoolOutput)
}

type GetEdgegatewayExternalNetworkSubnetArrayOutput struct{ *pulumi.OutputState }

func (GetEdgegatewayExternalNetworkSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEdgegatewayExternalNetworkSubnet)(nil)).Elem()
}

func (o GetEdgegatewayExternalNetworkSubnetArrayOutput) ToGetEdgegatewayExternalNetworkSubnetArrayOutput() GetEdgegatewayExternalNetworkSubnetArrayOutput {
	return o
}

func (o GetEdgegatewayExternalNetworkSubnetArrayOutput) ToGetEdgegatewayExternalNetworkSubnetArrayOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkSubnetArrayOutput {
	return o
}

func (o GetEdgegatewayExternalNetworkSubnetArrayOutput) Index(i pulumi.IntInput) GetEdgegatewayExternalNetworkSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEdgegatewayExternalNetworkSubnet {
		return vs[0].([]GetEdgegatewayExternalNetworkSubnet)[vs[1].(int)]
	}).(GetEdgegatewayExternalNetworkSubnetOutput)
}

type GetEdgegatewayExternalNetworkSubnetSuballocatePool struct {
	EndAddress   string `pulumi:"endAddress"`
	StartAddress string `pulumi:"startAddress"`
}

// GetEdgegatewayExternalNetworkSubnetSuballocatePoolInput is an input type that accepts GetEdgegatewayExternalNetworkSubnetSuballocatePoolArgs and GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput values.
// You can construct a concrete instance of `GetEdgegatewayExternalNetworkSubnetSuballocatePoolInput` via:
//
//	GetEdgegatewayExternalNetworkSubnetSuballocatePoolArgs{...}
type GetEdgegatewayExternalNetworkSubnetSuballocatePoolInput interface {
	pulumi.Input

	ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput() GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput
	ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolOutputWithContext(context.Context) GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput
}

type GetEdgegatewayExternalNetworkSubnetSuballocatePoolArgs struct {
	EndAddress   pulumi.StringInput `pulumi:"endAddress"`
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetEdgegatewayExternalNetworkSubnetSuballocatePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgegatewayExternalNetworkSubnetSuballocatePool)(nil)).Elem()
}

func (i GetEdgegatewayExternalNetworkSubnetSuballocatePoolArgs) ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput() GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput {
	return i.ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolOutputWithContext(context.Background())
}

func (i GetEdgegatewayExternalNetworkSubnetSuballocatePoolArgs) ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput)
}

// GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayInput is an input type that accepts GetEdgegatewayExternalNetworkSubnetSuballocatePoolArray and GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput values.
// You can construct a concrete instance of `GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayInput` via:
//
//	GetEdgegatewayExternalNetworkSubnetSuballocatePoolArray{ GetEdgegatewayExternalNetworkSubnetSuballocatePoolArgs{...} }
type GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayInput interface {
	pulumi.Input

	ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput() GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput
	ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutputWithContext(context.Context) GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput
}

type GetEdgegatewayExternalNetworkSubnetSuballocatePoolArray []GetEdgegatewayExternalNetworkSubnetSuballocatePoolInput

func (GetEdgegatewayExternalNetworkSubnetSuballocatePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEdgegatewayExternalNetworkSubnetSuballocatePool)(nil)).Elem()
}

func (i GetEdgegatewayExternalNetworkSubnetSuballocatePoolArray) ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput() GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput {
	return i.ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutputWithContext(context.Background())
}

func (i GetEdgegatewayExternalNetworkSubnetSuballocatePoolArray) ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput)
}

type GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput struct{ *pulumi.OutputState }

func (GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgegatewayExternalNetworkSubnetSuballocatePool)(nil)).Elem()
}

func (o GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput) ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput() GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput {
	return o
}

func (o GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput) ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput {
	return o
}

func (o GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgegatewayExternalNetworkSubnetSuballocatePool) string { return v.EndAddress }).(pulumi.StringOutput)
}

func (o GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgegatewayExternalNetworkSubnetSuballocatePool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput struct{ *pulumi.OutputState }

func (GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEdgegatewayExternalNetworkSubnetSuballocatePool)(nil)).Elem()
}

func (o GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput) ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput() GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput {
	return o
}

func (o GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput) ToGetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutputWithContext(ctx context.Context) GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput {
	return o
}

func (o GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput) Index(i pulumi.IntInput) GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEdgegatewayExternalNetworkSubnetSuballocatePool {
		return vs[0].([]GetEdgegatewayExternalNetworkSubnetSuballocatePool)[vs[1].(int)]
	}).(GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput)
}

type GetEdgegatewayFilter struct {
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetEdgegatewayFilterInput is an input type that accepts GetEdgegatewayFilterArgs and GetEdgegatewayFilterOutput values.
// You can construct a concrete instance of `GetEdgegatewayFilterInput` via:
//
//	GetEdgegatewayFilterArgs{...}
type GetEdgegatewayFilterInput interface {
	pulumi.Input

	ToGetEdgegatewayFilterOutput() GetEdgegatewayFilterOutput
	ToGetEdgegatewayFilterOutputWithContext(context.Context) GetEdgegatewayFilterOutput
}

type GetEdgegatewayFilterArgs struct {
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetEdgegatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgegatewayFilter)(nil)).Elem()
}

func (i GetEdgegatewayFilterArgs) ToGetEdgegatewayFilterOutput() GetEdgegatewayFilterOutput {
	return i.ToGetEdgegatewayFilterOutputWithContext(context.Background())
}

func (i GetEdgegatewayFilterArgs) ToGetEdgegatewayFilterOutputWithContext(ctx context.Context) GetEdgegatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgegatewayFilterOutput)
}

func (i GetEdgegatewayFilterArgs) ToGetEdgegatewayFilterPtrOutput() GetEdgegatewayFilterPtrOutput {
	return i.ToGetEdgegatewayFilterPtrOutputWithContext(context.Background())
}

func (i GetEdgegatewayFilterArgs) ToGetEdgegatewayFilterPtrOutputWithContext(ctx context.Context) GetEdgegatewayFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgegatewayFilterOutput).ToGetEdgegatewayFilterPtrOutputWithContext(ctx)
}

// GetEdgegatewayFilterPtrInput is an input type that accepts GetEdgegatewayFilterArgs, GetEdgegatewayFilterPtr and GetEdgegatewayFilterPtrOutput values.
// You can construct a concrete instance of `GetEdgegatewayFilterPtrInput` via:
//
//	        GetEdgegatewayFilterArgs{...}
//
//	or:
//
//	        nil
type GetEdgegatewayFilterPtrInput interface {
	pulumi.Input

	ToGetEdgegatewayFilterPtrOutput() GetEdgegatewayFilterPtrOutput
	ToGetEdgegatewayFilterPtrOutputWithContext(context.Context) GetEdgegatewayFilterPtrOutput
}

type getEdgegatewayFilterPtrType GetEdgegatewayFilterArgs

func GetEdgegatewayFilterPtr(v *GetEdgegatewayFilterArgs) GetEdgegatewayFilterPtrInput {
	return (*getEdgegatewayFilterPtrType)(v)
}

func (*getEdgegatewayFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetEdgegatewayFilter)(nil)).Elem()
}

func (i *getEdgegatewayFilterPtrType) ToGetEdgegatewayFilterPtrOutput() GetEdgegatewayFilterPtrOutput {
	return i.ToGetEdgegatewayFilterPtrOutputWithContext(context.Background())
}

func (i *getEdgegatewayFilterPtrType) ToGetEdgegatewayFilterPtrOutputWithContext(ctx context.Context) GetEdgegatewayFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEdgegatewayFilterPtrOutput)
}

type GetEdgegatewayFilterOutput struct{ *pulumi.OutputState }

func (GetEdgegatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgegatewayFilter)(nil)).Elem()
}

func (o GetEdgegatewayFilterOutput) ToGetEdgegatewayFilterOutput() GetEdgegatewayFilterOutput {
	return o
}

func (o GetEdgegatewayFilterOutput) ToGetEdgegatewayFilterOutputWithContext(ctx context.Context) GetEdgegatewayFilterOutput {
	return o
}

func (o GetEdgegatewayFilterOutput) ToGetEdgegatewayFilterPtrOutput() GetEdgegatewayFilterPtrOutput {
	return o.ToGetEdgegatewayFilterPtrOutputWithContext(context.Background())
}

func (o GetEdgegatewayFilterOutput) ToGetEdgegatewayFilterPtrOutputWithContext(ctx context.Context) GetEdgegatewayFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetEdgegatewayFilter) *GetEdgegatewayFilter {
		return &v
	}).(GetEdgegatewayFilterPtrOutput)
}

// Search by name with a regular expression
func (o GetEdgegatewayFilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEdgegatewayFilter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetEdgegatewayFilterPtrOutput struct{ *pulumi.OutputState }

func (GetEdgegatewayFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetEdgegatewayFilter)(nil)).Elem()
}

func (o GetEdgegatewayFilterPtrOutput) ToGetEdgegatewayFilterPtrOutput() GetEdgegatewayFilterPtrOutput {
	return o
}

func (o GetEdgegatewayFilterPtrOutput) ToGetEdgegatewayFilterPtrOutputWithContext(ctx context.Context) GetEdgegatewayFilterPtrOutput {
	return o
}

func (o GetEdgegatewayFilterPtrOutput) Elem() GetEdgegatewayFilterOutput {
	return o.ApplyT(func(v *GetEdgegatewayFilter) GetEdgegatewayFilter {
		if v != nil {
			return *v
		}
		var ret GetEdgegatewayFilter
		return ret
	}).(GetEdgegatewayFilterOutput)
}

// Search by name with a regular expression
func (o GetEdgegatewayFilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetEdgegatewayFilter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetExternalNetworkIpScope struct {
	// Primary DNS server
	Dns1 string `pulumi:"dns1"`
	// Secondary DNS server
	Dns2 string `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix string `pulumi:"dnsSuffix"`
	// Gateway of the network
	Gateway string `pulumi:"gateway"`
	// Network mask
	Netmask string `pulumi:"netmask"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools []GetExternalNetworkIpScopeStaticIpPool `pulumi:"staticIpPools"`
}

// GetExternalNetworkIpScopeInput is an input type that accepts GetExternalNetworkIpScopeArgs and GetExternalNetworkIpScopeOutput values.
// You can construct a concrete instance of `GetExternalNetworkIpScopeInput` via:
//
//	GetExternalNetworkIpScopeArgs{...}
type GetExternalNetworkIpScopeInput interface {
	pulumi.Input

	ToGetExternalNetworkIpScopeOutput() GetExternalNetworkIpScopeOutput
	ToGetExternalNetworkIpScopeOutputWithContext(context.Context) GetExternalNetworkIpScopeOutput
}

type GetExternalNetworkIpScopeArgs struct {
	// Primary DNS server
	Dns1 pulumi.StringInput `pulumi:"dns1"`
	// Secondary DNS server
	Dns2 pulumi.StringInput `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix pulumi.StringInput `pulumi:"dnsSuffix"`
	// Gateway of the network
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Network mask
	Netmask pulumi.StringInput `pulumi:"netmask"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools GetExternalNetworkIpScopeStaticIpPoolArrayInput `pulumi:"staticIpPools"`
}

func (GetExternalNetworkIpScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkIpScope)(nil)).Elem()
}

func (i GetExternalNetworkIpScopeArgs) ToGetExternalNetworkIpScopeOutput() GetExternalNetworkIpScopeOutput {
	return i.ToGetExternalNetworkIpScopeOutputWithContext(context.Background())
}

func (i GetExternalNetworkIpScopeArgs) ToGetExternalNetworkIpScopeOutputWithContext(ctx context.Context) GetExternalNetworkIpScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkIpScopeOutput)
}

// GetExternalNetworkIpScopeArrayInput is an input type that accepts GetExternalNetworkIpScopeArray and GetExternalNetworkIpScopeArrayOutput values.
// You can construct a concrete instance of `GetExternalNetworkIpScopeArrayInput` via:
//
//	GetExternalNetworkIpScopeArray{ GetExternalNetworkIpScopeArgs{...} }
type GetExternalNetworkIpScopeArrayInput interface {
	pulumi.Input

	ToGetExternalNetworkIpScopeArrayOutput() GetExternalNetworkIpScopeArrayOutput
	ToGetExternalNetworkIpScopeArrayOutputWithContext(context.Context) GetExternalNetworkIpScopeArrayOutput
}

type GetExternalNetworkIpScopeArray []GetExternalNetworkIpScopeInput

func (GetExternalNetworkIpScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkIpScope)(nil)).Elem()
}

func (i GetExternalNetworkIpScopeArray) ToGetExternalNetworkIpScopeArrayOutput() GetExternalNetworkIpScopeArrayOutput {
	return i.ToGetExternalNetworkIpScopeArrayOutputWithContext(context.Background())
}

func (i GetExternalNetworkIpScopeArray) ToGetExternalNetworkIpScopeArrayOutputWithContext(ctx context.Context) GetExternalNetworkIpScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkIpScopeArrayOutput)
}

type GetExternalNetworkIpScopeOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkIpScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkIpScope)(nil)).Elem()
}

func (o GetExternalNetworkIpScopeOutput) ToGetExternalNetworkIpScopeOutput() GetExternalNetworkIpScopeOutput {
	return o
}

func (o GetExternalNetworkIpScopeOutput) ToGetExternalNetworkIpScopeOutputWithContext(ctx context.Context) GetExternalNetworkIpScopeOutput {
	return o
}

// Primary DNS server
func (o GetExternalNetworkIpScopeOutput) Dns1() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkIpScope) string { return v.Dns1 }).(pulumi.StringOutput)
}

// Secondary DNS server
func (o GetExternalNetworkIpScopeOutput) Dns2() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkIpScope) string { return v.Dns2 }).(pulumi.StringOutput)
}

// DNS suffix
func (o GetExternalNetworkIpScopeOutput) DnsSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkIpScope) string { return v.DnsSuffix }).(pulumi.StringOutput)
}

// Gateway of the network
func (o GetExternalNetworkIpScopeOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkIpScope) string { return v.Gateway }).(pulumi.StringOutput)
}

// Network mask
func (o GetExternalNetworkIpScopeOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkIpScope) string { return v.Netmask }).(pulumi.StringOutput)
}

// IP ranges used for static pool allocation in the network
func (o GetExternalNetworkIpScopeOutput) StaticIpPools() GetExternalNetworkIpScopeStaticIpPoolArrayOutput {
	return o.ApplyT(func(v GetExternalNetworkIpScope) []GetExternalNetworkIpScopeStaticIpPool { return v.StaticIpPools }).(GetExternalNetworkIpScopeStaticIpPoolArrayOutput)
}

type GetExternalNetworkIpScopeArrayOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkIpScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkIpScope)(nil)).Elem()
}

func (o GetExternalNetworkIpScopeArrayOutput) ToGetExternalNetworkIpScopeArrayOutput() GetExternalNetworkIpScopeArrayOutput {
	return o
}

func (o GetExternalNetworkIpScopeArrayOutput) ToGetExternalNetworkIpScopeArrayOutputWithContext(ctx context.Context) GetExternalNetworkIpScopeArrayOutput {
	return o
}

func (o GetExternalNetworkIpScopeArrayOutput) Index(i pulumi.IntInput) GetExternalNetworkIpScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExternalNetworkIpScope {
		return vs[0].([]GetExternalNetworkIpScope)[vs[1].(int)]
	}).(GetExternalNetworkIpScopeOutput)
}

type GetExternalNetworkIpScopeStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetExternalNetworkIpScopeStaticIpPoolInput is an input type that accepts GetExternalNetworkIpScopeStaticIpPoolArgs and GetExternalNetworkIpScopeStaticIpPoolOutput values.
// You can construct a concrete instance of `GetExternalNetworkIpScopeStaticIpPoolInput` via:
//
//	GetExternalNetworkIpScopeStaticIpPoolArgs{...}
type GetExternalNetworkIpScopeStaticIpPoolInput interface {
	pulumi.Input

	ToGetExternalNetworkIpScopeStaticIpPoolOutput() GetExternalNetworkIpScopeStaticIpPoolOutput
	ToGetExternalNetworkIpScopeStaticIpPoolOutputWithContext(context.Context) GetExternalNetworkIpScopeStaticIpPoolOutput
}

type GetExternalNetworkIpScopeStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetExternalNetworkIpScopeStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkIpScopeStaticIpPool)(nil)).Elem()
}

func (i GetExternalNetworkIpScopeStaticIpPoolArgs) ToGetExternalNetworkIpScopeStaticIpPoolOutput() GetExternalNetworkIpScopeStaticIpPoolOutput {
	return i.ToGetExternalNetworkIpScopeStaticIpPoolOutputWithContext(context.Background())
}

func (i GetExternalNetworkIpScopeStaticIpPoolArgs) ToGetExternalNetworkIpScopeStaticIpPoolOutputWithContext(ctx context.Context) GetExternalNetworkIpScopeStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkIpScopeStaticIpPoolOutput)
}

// GetExternalNetworkIpScopeStaticIpPoolArrayInput is an input type that accepts GetExternalNetworkIpScopeStaticIpPoolArray and GetExternalNetworkIpScopeStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetExternalNetworkIpScopeStaticIpPoolArrayInput` via:
//
//	GetExternalNetworkIpScopeStaticIpPoolArray{ GetExternalNetworkIpScopeStaticIpPoolArgs{...} }
type GetExternalNetworkIpScopeStaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetExternalNetworkIpScopeStaticIpPoolArrayOutput() GetExternalNetworkIpScopeStaticIpPoolArrayOutput
	ToGetExternalNetworkIpScopeStaticIpPoolArrayOutputWithContext(context.Context) GetExternalNetworkIpScopeStaticIpPoolArrayOutput
}

type GetExternalNetworkIpScopeStaticIpPoolArray []GetExternalNetworkIpScopeStaticIpPoolInput

func (GetExternalNetworkIpScopeStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkIpScopeStaticIpPool)(nil)).Elem()
}

func (i GetExternalNetworkIpScopeStaticIpPoolArray) ToGetExternalNetworkIpScopeStaticIpPoolArrayOutput() GetExternalNetworkIpScopeStaticIpPoolArrayOutput {
	return i.ToGetExternalNetworkIpScopeStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetExternalNetworkIpScopeStaticIpPoolArray) ToGetExternalNetworkIpScopeStaticIpPoolArrayOutputWithContext(ctx context.Context) GetExternalNetworkIpScopeStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkIpScopeStaticIpPoolArrayOutput)
}

type GetExternalNetworkIpScopeStaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkIpScopeStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkIpScopeStaticIpPool)(nil)).Elem()
}

func (o GetExternalNetworkIpScopeStaticIpPoolOutput) ToGetExternalNetworkIpScopeStaticIpPoolOutput() GetExternalNetworkIpScopeStaticIpPoolOutput {
	return o
}

func (o GetExternalNetworkIpScopeStaticIpPoolOutput) ToGetExternalNetworkIpScopeStaticIpPoolOutputWithContext(ctx context.Context) GetExternalNetworkIpScopeStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o GetExternalNetworkIpScopeStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkIpScopeStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o GetExternalNetworkIpScopeStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkIpScopeStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetExternalNetworkIpScopeStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkIpScopeStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkIpScopeStaticIpPool)(nil)).Elem()
}

func (o GetExternalNetworkIpScopeStaticIpPoolArrayOutput) ToGetExternalNetworkIpScopeStaticIpPoolArrayOutput() GetExternalNetworkIpScopeStaticIpPoolArrayOutput {
	return o
}

func (o GetExternalNetworkIpScopeStaticIpPoolArrayOutput) ToGetExternalNetworkIpScopeStaticIpPoolArrayOutputWithContext(ctx context.Context) GetExternalNetworkIpScopeStaticIpPoolArrayOutput {
	return o
}

func (o GetExternalNetworkIpScopeStaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetExternalNetworkIpScopeStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExternalNetworkIpScopeStaticIpPool {
		return vs[0].([]GetExternalNetworkIpScopeStaticIpPool)[vs[1].(int)]
	}).(GetExternalNetworkIpScopeStaticIpPoolOutput)
}

type GetExternalNetworkV2IpScope struct {
	// Primary DNS server
	Dns1 *string `pulumi:"dns1"`
	// Secondary DNS server
	Dns2 *string `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// If subnet is enabled
	Enabled *bool `pulumi:"enabled"`
	// Gateway of the network
	Gateway string `pulumi:"gateway"`
	// Network mask
	PrefixLength int `pulumi:"prefixLength"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools []GetExternalNetworkV2IpScopeStaticIpPool `pulumi:"staticIpPools"`
}

// GetExternalNetworkV2IpScopeInput is an input type that accepts GetExternalNetworkV2IpScopeArgs and GetExternalNetworkV2IpScopeOutput values.
// You can construct a concrete instance of `GetExternalNetworkV2IpScopeInput` via:
//
//	GetExternalNetworkV2IpScopeArgs{...}
type GetExternalNetworkV2IpScopeInput interface {
	pulumi.Input

	ToGetExternalNetworkV2IpScopeOutput() GetExternalNetworkV2IpScopeOutput
	ToGetExternalNetworkV2IpScopeOutputWithContext(context.Context) GetExternalNetworkV2IpScopeOutput
}

type GetExternalNetworkV2IpScopeArgs struct {
	// Primary DNS server
	Dns1 pulumi.StringPtrInput `pulumi:"dns1"`
	// Secondary DNS server
	Dns2 pulumi.StringPtrInput `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix pulumi.StringPtrInput `pulumi:"dnsSuffix"`
	// If subnet is enabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Gateway of the network
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Network mask
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools GetExternalNetworkV2IpScopeStaticIpPoolArrayInput `pulumi:"staticIpPools"`
}

func (GetExternalNetworkV2IpScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkV2IpScope)(nil)).Elem()
}

func (i GetExternalNetworkV2IpScopeArgs) ToGetExternalNetworkV2IpScopeOutput() GetExternalNetworkV2IpScopeOutput {
	return i.ToGetExternalNetworkV2IpScopeOutputWithContext(context.Background())
}

func (i GetExternalNetworkV2IpScopeArgs) ToGetExternalNetworkV2IpScopeOutputWithContext(ctx context.Context) GetExternalNetworkV2IpScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkV2IpScopeOutput)
}

// GetExternalNetworkV2IpScopeArrayInput is an input type that accepts GetExternalNetworkV2IpScopeArray and GetExternalNetworkV2IpScopeArrayOutput values.
// You can construct a concrete instance of `GetExternalNetworkV2IpScopeArrayInput` via:
//
//	GetExternalNetworkV2IpScopeArray{ GetExternalNetworkV2IpScopeArgs{...} }
type GetExternalNetworkV2IpScopeArrayInput interface {
	pulumi.Input

	ToGetExternalNetworkV2IpScopeArrayOutput() GetExternalNetworkV2IpScopeArrayOutput
	ToGetExternalNetworkV2IpScopeArrayOutputWithContext(context.Context) GetExternalNetworkV2IpScopeArrayOutput
}

type GetExternalNetworkV2IpScopeArray []GetExternalNetworkV2IpScopeInput

func (GetExternalNetworkV2IpScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkV2IpScope)(nil)).Elem()
}

func (i GetExternalNetworkV2IpScopeArray) ToGetExternalNetworkV2IpScopeArrayOutput() GetExternalNetworkV2IpScopeArrayOutput {
	return i.ToGetExternalNetworkV2IpScopeArrayOutputWithContext(context.Background())
}

func (i GetExternalNetworkV2IpScopeArray) ToGetExternalNetworkV2IpScopeArrayOutputWithContext(ctx context.Context) GetExternalNetworkV2IpScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkV2IpScopeArrayOutput)
}

type GetExternalNetworkV2IpScopeOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkV2IpScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkV2IpScope)(nil)).Elem()
}

func (o GetExternalNetworkV2IpScopeOutput) ToGetExternalNetworkV2IpScopeOutput() GetExternalNetworkV2IpScopeOutput {
	return o
}

func (o GetExternalNetworkV2IpScopeOutput) ToGetExternalNetworkV2IpScopeOutputWithContext(ctx context.Context) GetExternalNetworkV2IpScopeOutput {
	return o
}

// Primary DNS server
func (o GetExternalNetworkV2IpScopeOutput) Dns1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalNetworkV2IpScope) *string { return v.Dns1 }).(pulumi.StringPtrOutput)
}

// Secondary DNS server
func (o GetExternalNetworkV2IpScopeOutput) Dns2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalNetworkV2IpScope) *string { return v.Dns2 }).(pulumi.StringPtrOutput)
}

// DNS suffix
func (o GetExternalNetworkV2IpScopeOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalNetworkV2IpScope) *string { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// If subnet is enabled
func (o GetExternalNetworkV2IpScopeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetExternalNetworkV2IpScope) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Gateway of the network
func (o GetExternalNetworkV2IpScopeOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkV2IpScope) string { return v.Gateway }).(pulumi.StringOutput)
}

// Network mask
func (o GetExternalNetworkV2IpScopeOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetExternalNetworkV2IpScope) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// IP ranges used for static pool allocation in the network
func (o GetExternalNetworkV2IpScopeOutput) StaticIpPools() GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput {
	return o.ApplyT(func(v GetExternalNetworkV2IpScope) []GetExternalNetworkV2IpScopeStaticIpPool { return v.StaticIpPools }).(GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput)
}

type GetExternalNetworkV2IpScopeArrayOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkV2IpScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkV2IpScope)(nil)).Elem()
}

func (o GetExternalNetworkV2IpScopeArrayOutput) ToGetExternalNetworkV2IpScopeArrayOutput() GetExternalNetworkV2IpScopeArrayOutput {
	return o
}

func (o GetExternalNetworkV2IpScopeArrayOutput) ToGetExternalNetworkV2IpScopeArrayOutputWithContext(ctx context.Context) GetExternalNetworkV2IpScopeArrayOutput {
	return o
}

func (o GetExternalNetworkV2IpScopeArrayOutput) Index(i pulumi.IntInput) GetExternalNetworkV2IpScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExternalNetworkV2IpScope {
		return vs[0].([]GetExternalNetworkV2IpScope)[vs[1].(int)]
	}).(GetExternalNetworkV2IpScopeOutput)
}

type GetExternalNetworkV2IpScopeStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetExternalNetworkV2IpScopeStaticIpPoolInput is an input type that accepts GetExternalNetworkV2IpScopeStaticIpPoolArgs and GetExternalNetworkV2IpScopeStaticIpPoolOutput values.
// You can construct a concrete instance of `GetExternalNetworkV2IpScopeStaticIpPoolInput` via:
//
//	GetExternalNetworkV2IpScopeStaticIpPoolArgs{...}
type GetExternalNetworkV2IpScopeStaticIpPoolInput interface {
	pulumi.Input

	ToGetExternalNetworkV2IpScopeStaticIpPoolOutput() GetExternalNetworkV2IpScopeStaticIpPoolOutput
	ToGetExternalNetworkV2IpScopeStaticIpPoolOutputWithContext(context.Context) GetExternalNetworkV2IpScopeStaticIpPoolOutput
}

type GetExternalNetworkV2IpScopeStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetExternalNetworkV2IpScopeStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkV2IpScopeStaticIpPool)(nil)).Elem()
}

func (i GetExternalNetworkV2IpScopeStaticIpPoolArgs) ToGetExternalNetworkV2IpScopeStaticIpPoolOutput() GetExternalNetworkV2IpScopeStaticIpPoolOutput {
	return i.ToGetExternalNetworkV2IpScopeStaticIpPoolOutputWithContext(context.Background())
}

func (i GetExternalNetworkV2IpScopeStaticIpPoolArgs) ToGetExternalNetworkV2IpScopeStaticIpPoolOutputWithContext(ctx context.Context) GetExternalNetworkV2IpScopeStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkV2IpScopeStaticIpPoolOutput)
}

// GetExternalNetworkV2IpScopeStaticIpPoolArrayInput is an input type that accepts GetExternalNetworkV2IpScopeStaticIpPoolArray and GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetExternalNetworkV2IpScopeStaticIpPoolArrayInput` via:
//
//	GetExternalNetworkV2IpScopeStaticIpPoolArray{ GetExternalNetworkV2IpScopeStaticIpPoolArgs{...} }
type GetExternalNetworkV2IpScopeStaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetExternalNetworkV2IpScopeStaticIpPoolArrayOutput() GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput
	ToGetExternalNetworkV2IpScopeStaticIpPoolArrayOutputWithContext(context.Context) GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput
}

type GetExternalNetworkV2IpScopeStaticIpPoolArray []GetExternalNetworkV2IpScopeStaticIpPoolInput

func (GetExternalNetworkV2IpScopeStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkV2IpScopeStaticIpPool)(nil)).Elem()
}

func (i GetExternalNetworkV2IpScopeStaticIpPoolArray) ToGetExternalNetworkV2IpScopeStaticIpPoolArrayOutput() GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput {
	return i.ToGetExternalNetworkV2IpScopeStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetExternalNetworkV2IpScopeStaticIpPoolArray) ToGetExternalNetworkV2IpScopeStaticIpPoolArrayOutputWithContext(ctx context.Context) GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput)
}

type GetExternalNetworkV2IpScopeStaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkV2IpScopeStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkV2IpScopeStaticIpPool)(nil)).Elem()
}

func (o GetExternalNetworkV2IpScopeStaticIpPoolOutput) ToGetExternalNetworkV2IpScopeStaticIpPoolOutput() GetExternalNetworkV2IpScopeStaticIpPoolOutput {
	return o
}

func (o GetExternalNetworkV2IpScopeStaticIpPoolOutput) ToGetExternalNetworkV2IpScopeStaticIpPoolOutputWithContext(ctx context.Context) GetExternalNetworkV2IpScopeStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o GetExternalNetworkV2IpScopeStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkV2IpScopeStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o GetExternalNetworkV2IpScopeStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkV2IpScopeStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkV2IpScopeStaticIpPool)(nil)).Elem()
}

func (o GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput) ToGetExternalNetworkV2IpScopeStaticIpPoolArrayOutput() GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput {
	return o
}

func (o GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput) ToGetExternalNetworkV2IpScopeStaticIpPoolArrayOutputWithContext(ctx context.Context) GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput {
	return o
}

func (o GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetExternalNetworkV2IpScopeStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExternalNetworkV2IpScopeStaticIpPool {
		return vs[0].([]GetExternalNetworkV2IpScopeStaticIpPool)[vs[1].(int)]
	}).(GetExternalNetworkV2IpScopeStaticIpPoolOutput)
}

type GetExternalNetworkV2NsxtNetwork struct {
	// ID of NSX-T manager
	NsxtManagerId string `pulumi:"nsxtManagerId"`
	// Name of NSX-T segment (for NSX-T segment backed external network)
	NsxtSegmentName string `pulumi:"nsxtSegmentName"`
	// ID of NSX-T Tier-0 router (for T0 gateway backed external network)
	NsxtTier0RouterId string `pulumi:"nsxtTier0RouterId"`
}

// GetExternalNetworkV2NsxtNetworkInput is an input type that accepts GetExternalNetworkV2NsxtNetworkArgs and GetExternalNetworkV2NsxtNetworkOutput values.
// You can construct a concrete instance of `GetExternalNetworkV2NsxtNetworkInput` via:
//
//	GetExternalNetworkV2NsxtNetworkArgs{...}
type GetExternalNetworkV2NsxtNetworkInput interface {
	pulumi.Input

	ToGetExternalNetworkV2NsxtNetworkOutput() GetExternalNetworkV2NsxtNetworkOutput
	ToGetExternalNetworkV2NsxtNetworkOutputWithContext(context.Context) GetExternalNetworkV2NsxtNetworkOutput
}

type GetExternalNetworkV2NsxtNetworkArgs struct {
	// ID of NSX-T manager
	NsxtManagerId pulumi.StringInput `pulumi:"nsxtManagerId"`
	// Name of NSX-T segment (for NSX-T segment backed external network)
	NsxtSegmentName pulumi.StringInput `pulumi:"nsxtSegmentName"`
	// ID of NSX-T Tier-0 router (for T0 gateway backed external network)
	NsxtTier0RouterId pulumi.StringInput `pulumi:"nsxtTier0RouterId"`
}

func (GetExternalNetworkV2NsxtNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkV2NsxtNetwork)(nil)).Elem()
}

func (i GetExternalNetworkV2NsxtNetworkArgs) ToGetExternalNetworkV2NsxtNetworkOutput() GetExternalNetworkV2NsxtNetworkOutput {
	return i.ToGetExternalNetworkV2NsxtNetworkOutputWithContext(context.Background())
}

func (i GetExternalNetworkV2NsxtNetworkArgs) ToGetExternalNetworkV2NsxtNetworkOutputWithContext(ctx context.Context) GetExternalNetworkV2NsxtNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkV2NsxtNetworkOutput)
}

// GetExternalNetworkV2NsxtNetworkArrayInput is an input type that accepts GetExternalNetworkV2NsxtNetworkArray and GetExternalNetworkV2NsxtNetworkArrayOutput values.
// You can construct a concrete instance of `GetExternalNetworkV2NsxtNetworkArrayInput` via:
//
//	GetExternalNetworkV2NsxtNetworkArray{ GetExternalNetworkV2NsxtNetworkArgs{...} }
type GetExternalNetworkV2NsxtNetworkArrayInput interface {
	pulumi.Input

	ToGetExternalNetworkV2NsxtNetworkArrayOutput() GetExternalNetworkV2NsxtNetworkArrayOutput
	ToGetExternalNetworkV2NsxtNetworkArrayOutputWithContext(context.Context) GetExternalNetworkV2NsxtNetworkArrayOutput
}

type GetExternalNetworkV2NsxtNetworkArray []GetExternalNetworkV2NsxtNetworkInput

func (GetExternalNetworkV2NsxtNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkV2NsxtNetwork)(nil)).Elem()
}

func (i GetExternalNetworkV2NsxtNetworkArray) ToGetExternalNetworkV2NsxtNetworkArrayOutput() GetExternalNetworkV2NsxtNetworkArrayOutput {
	return i.ToGetExternalNetworkV2NsxtNetworkArrayOutputWithContext(context.Background())
}

func (i GetExternalNetworkV2NsxtNetworkArray) ToGetExternalNetworkV2NsxtNetworkArrayOutputWithContext(ctx context.Context) GetExternalNetworkV2NsxtNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkV2NsxtNetworkArrayOutput)
}

type GetExternalNetworkV2NsxtNetworkOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkV2NsxtNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkV2NsxtNetwork)(nil)).Elem()
}

func (o GetExternalNetworkV2NsxtNetworkOutput) ToGetExternalNetworkV2NsxtNetworkOutput() GetExternalNetworkV2NsxtNetworkOutput {
	return o
}

func (o GetExternalNetworkV2NsxtNetworkOutput) ToGetExternalNetworkV2NsxtNetworkOutputWithContext(ctx context.Context) GetExternalNetworkV2NsxtNetworkOutput {
	return o
}

// ID of NSX-T manager
func (o GetExternalNetworkV2NsxtNetworkOutput) NsxtManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkV2NsxtNetwork) string { return v.NsxtManagerId }).(pulumi.StringOutput)
}

// Name of NSX-T segment (for NSX-T segment backed external network)
func (o GetExternalNetworkV2NsxtNetworkOutput) NsxtSegmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkV2NsxtNetwork) string { return v.NsxtSegmentName }).(pulumi.StringOutput)
}

// ID of NSX-T Tier-0 router (for T0 gateway backed external network)
func (o GetExternalNetworkV2NsxtNetworkOutput) NsxtTier0RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkV2NsxtNetwork) string { return v.NsxtTier0RouterId }).(pulumi.StringOutput)
}

type GetExternalNetworkV2NsxtNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkV2NsxtNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkV2NsxtNetwork)(nil)).Elem()
}

func (o GetExternalNetworkV2NsxtNetworkArrayOutput) ToGetExternalNetworkV2NsxtNetworkArrayOutput() GetExternalNetworkV2NsxtNetworkArrayOutput {
	return o
}

func (o GetExternalNetworkV2NsxtNetworkArrayOutput) ToGetExternalNetworkV2NsxtNetworkArrayOutputWithContext(ctx context.Context) GetExternalNetworkV2NsxtNetworkArrayOutput {
	return o
}

func (o GetExternalNetworkV2NsxtNetworkArrayOutput) Index(i pulumi.IntInput) GetExternalNetworkV2NsxtNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExternalNetworkV2NsxtNetwork {
		return vs[0].([]GetExternalNetworkV2NsxtNetwork)[vs[1].(int)]
	}).(GetExternalNetworkV2NsxtNetworkOutput)
}

type GetExternalNetworkV2VsphereNetwork struct {
	// The portgroup ID
	PortgroupId string `pulumi:"portgroupId"`
	// The vCenter server ID
	VcenterId string `pulumi:"vcenterId"`
}

// GetExternalNetworkV2VsphereNetworkInput is an input type that accepts GetExternalNetworkV2VsphereNetworkArgs and GetExternalNetworkV2VsphereNetworkOutput values.
// You can construct a concrete instance of `GetExternalNetworkV2VsphereNetworkInput` via:
//
//	GetExternalNetworkV2VsphereNetworkArgs{...}
type GetExternalNetworkV2VsphereNetworkInput interface {
	pulumi.Input

	ToGetExternalNetworkV2VsphereNetworkOutput() GetExternalNetworkV2VsphereNetworkOutput
	ToGetExternalNetworkV2VsphereNetworkOutputWithContext(context.Context) GetExternalNetworkV2VsphereNetworkOutput
}

type GetExternalNetworkV2VsphereNetworkArgs struct {
	// The portgroup ID
	PortgroupId pulumi.StringInput `pulumi:"portgroupId"`
	// The vCenter server ID
	VcenterId pulumi.StringInput `pulumi:"vcenterId"`
}

func (GetExternalNetworkV2VsphereNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkV2VsphereNetwork)(nil)).Elem()
}

func (i GetExternalNetworkV2VsphereNetworkArgs) ToGetExternalNetworkV2VsphereNetworkOutput() GetExternalNetworkV2VsphereNetworkOutput {
	return i.ToGetExternalNetworkV2VsphereNetworkOutputWithContext(context.Background())
}

func (i GetExternalNetworkV2VsphereNetworkArgs) ToGetExternalNetworkV2VsphereNetworkOutputWithContext(ctx context.Context) GetExternalNetworkV2VsphereNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkV2VsphereNetworkOutput)
}

// GetExternalNetworkV2VsphereNetworkArrayInput is an input type that accepts GetExternalNetworkV2VsphereNetworkArray and GetExternalNetworkV2VsphereNetworkArrayOutput values.
// You can construct a concrete instance of `GetExternalNetworkV2VsphereNetworkArrayInput` via:
//
//	GetExternalNetworkV2VsphereNetworkArray{ GetExternalNetworkV2VsphereNetworkArgs{...} }
type GetExternalNetworkV2VsphereNetworkArrayInput interface {
	pulumi.Input

	ToGetExternalNetworkV2VsphereNetworkArrayOutput() GetExternalNetworkV2VsphereNetworkArrayOutput
	ToGetExternalNetworkV2VsphereNetworkArrayOutputWithContext(context.Context) GetExternalNetworkV2VsphereNetworkArrayOutput
}

type GetExternalNetworkV2VsphereNetworkArray []GetExternalNetworkV2VsphereNetworkInput

func (GetExternalNetworkV2VsphereNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkV2VsphereNetwork)(nil)).Elem()
}

func (i GetExternalNetworkV2VsphereNetworkArray) ToGetExternalNetworkV2VsphereNetworkArrayOutput() GetExternalNetworkV2VsphereNetworkArrayOutput {
	return i.ToGetExternalNetworkV2VsphereNetworkArrayOutputWithContext(context.Background())
}

func (i GetExternalNetworkV2VsphereNetworkArray) ToGetExternalNetworkV2VsphereNetworkArrayOutputWithContext(ctx context.Context) GetExternalNetworkV2VsphereNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkV2VsphereNetworkArrayOutput)
}

type GetExternalNetworkV2VsphereNetworkOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkV2VsphereNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkV2VsphereNetwork)(nil)).Elem()
}

func (o GetExternalNetworkV2VsphereNetworkOutput) ToGetExternalNetworkV2VsphereNetworkOutput() GetExternalNetworkV2VsphereNetworkOutput {
	return o
}

func (o GetExternalNetworkV2VsphereNetworkOutput) ToGetExternalNetworkV2VsphereNetworkOutputWithContext(ctx context.Context) GetExternalNetworkV2VsphereNetworkOutput {
	return o
}

// The portgroup ID
func (o GetExternalNetworkV2VsphereNetworkOutput) PortgroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkV2VsphereNetwork) string { return v.PortgroupId }).(pulumi.StringOutput)
}

// The vCenter server ID
func (o GetExternalNetworkV2VsphereNetworkOutput) VcenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkV2VsphereNetwork) string { return v.VcenterId }).(pulumi.StringOutput)
}

type GetExternalNetworkV2VsphereNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkV2VsphereNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkV2VsphereNetwork)(nil)).Elem()
}

func (o GetExternalNetworkV2VsphereNetworkArrayOutput) ToGetExternalNetworkV2VsphereNetworkArrayOutput() GetExternalNetworkV2VsphereNetworkArrayOutput {
	return o
}

func (o GetExternalNetworkV2VsphereNetworkArrayOutput) ToGetExternalNetworkV2VsphereNetworkArrayOutputWithContext(ctx context.Context) GetExternalNetworkV2VsphereNetworkArrayOutput {
	return o
}

func (o GetExternalNetworkV2VsphereNetworkArrayOutput) Index(i pulumi.IntInput) GetExternalNetworkV2VsphereNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExternalNetworkV2VsphereNetwork {
		return vs[0].([]GetExternalNetworkV2VsphereNetwork)[vs[1].(int)]
	}).(GetExternalNetworkV2VsphereNetworkOutput)
}

type GetExternalNetworkVsphereNetwork struct {
	// external network name
	Name string `pulumi:"name"`
	// The vSphere port group type. One of: DV_PORTGROUP (distributed virtual port group), NETWORK
	Type string `pulumi:"type"`
	// The vCenter server name
	Vcenter string `pulumi:"vcenter"`
}

// GetExternalNetworkVsphereNetworkInput is an input type that accepts GetExternalNetworkVsphereNetworkArgs and GetExternalNetworkVsphereNetworkOutput values.
// You can construct a concrete instance of `GetExternalNetworkVsphereNetworkInput` via:
//
//	GetExternalNetworkVsphereNetworkArgs{...}
type GetExternalNetworkVsphereNetworkInput interface {
	pulumi.Input

	ToGetExternalNetworkVsphereNetworkOutput() GetExternalNetworkVsphereNetworkOutput
	ToGetExternalNetworkVsphereNetworkOutputWithContext(context.Context) GetExternalNetworkVsphereNetworkOutput
}

type GetExternalNetworkVsphereNetworkArgs struct {
	// external network name
	Name pulumi.StringInput `pulumi:"name"`
	// The vSphere port group type. One of: DV_PORTGROUP (distributed virtual port group), NETWORK
	Type pulumi.StringInput `pulumi:"type"`
	// The vCenter server name
	Vcenter pulumi.StringInput `pulumi:"vcenter"`
}

func (GetExternalNetworkVsphereNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkVsphereNetwork)(nil)).Elem()
}

func (i GetExternalNetworkVsphereNetworkArgs) ToGetExternalNetworkVsphereNetworkOutput() GetExternalNetworkVsphereNetworkOutput {
	return i.ToGetExternalNetworkVsphereNetworkOutputWithContext(context.Background())
}

func (i GetExternalNetworkVsphereNetworkArgs) ToGetExternalNetworkVsphereNetworkOutputWithContext(ctx context.Context) GetExternalNetworkVsphereNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkVsphereNetworkOutput)
}

// GetExternalNetworkVsphereNetworkArrayInput is an input type that accepts GetExternalNetworkVsphereNetworkArray and GetExternalNetworkVsphereNetworkArrayOutput values.
// You can construct a concrete instance of `GetExternalNetworkVsphereNetworkArrayInput` via:
//
//	GetExternalNetworkVsphereNetworkArray{ GetExternalNetworkVsphereNetworkArgs{...} }
type GetExternalNetworkVsphereNetworkArrayInput interface {
	pulumi.Input

	ToGetExternalNetworkVsphereNetworkArrayOutput() GetExternalNetworkVsphereNetworkArrayOutput
	ToGetExternalNetworkVsphereNetworkArrayOutputWithContext(context.Context) GetExternalNetworkVsphereNetworkArrayOutput
}

type GetExternalNetworkVsphereNetworkArray []GetExternalNetworkVsphereNetworkInput

func (GetExternalNetworkVsphereNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkVsphereNetwork)(nil)).Elem()
}

func (i GetExternalNetworkVsphereNetworkArray) ToGetExternalNetworkVsphereNetworkArrayOutput() GetExternalNetworkVsphereNetworkArrayOutput {
	return i.ToGetExternalNetworkVsphereNetworkArrayOutputWithContext(context.Background())
}

func (i GetExternalNetworkVsphereNetworkArray) ToGetExternalNetworkVsphereNetworkArrayOutputWithContext(ctx context.Context) GetExternalNetworkVsphereNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExternalNetworkVsphereNetworkArrayOutput)
}

type GetExternalNetworkVsphereNetworkOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkVsphereNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNetworkVsphereNetwork)(nil)).Elem()
}

func (o GetExternalNetworkVsphereNetworkOutput) ToGetExternalNetworkVsphereNetworkOutput() GetExternalNetworkVsphereNetworkOutput {
	return o
}

func (o GetExternalNetworkVsphereNetworkOutput) ToGetExternalNetworkVsphereNetworkOutputWithContext(ctx context.Context) GetExternalNetworkVsphereNetworkOutput {
	return o
}

// external network name
func (o GetExternalNetworkVsphereNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkVsphereNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// The vSphere port group type. One of: DV_PORTGROUP (distributed virtual port group), NETWORK
func (o GetExternalNetworkVsphereNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkVsphereNetwork) string { return v.Type }).(pulumi.StringOutput)
}

// The vCenter server name
func (o GetExternalNetworkVsphereNetworkOutput) Vcenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNetworkVsphereNetwork) string { return v.Vcenter }).(pulumi.StringOutput)
}

type GetExternalNetworkVsphereNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetExternalNetworkVsphereNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExternalNetworkVsphereNetwork)(nil)).Elem()
}

func (o GetExternalNetworkVsphereNetworkArrayOutput) ToGetExternalNetworkVsphereNetworkArrayOutput() GetExternalNetworkVsphereNetworkArrayOutput {
	return o
}

func (o GetExternalNetworkVsphereNetworkArrayOutput) ToGetExternalNetworkVsphereNetworkArrayOutputWithContext(ctx context.Context) GetExternalNetworkVsphereNetworkArrayOutput {
	return o
}

func (o GetExternalNetworkVsphereNetworkArrayOutput) Index(i pulumi.IntInput) GetExternalNetworkVsphereNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExternalNetworkVsphereNetwork {
		return vs[0].([]GetExternalNetworkVsphereNetwork)[vs[1].(int)]
	}).(GetExternalNetworkVsphereNetworkOutput)
}

type GetIndependentDiskMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetIndependentDiskMetadataEntryInput is an input type that accepts GetIndependentDiskMetadataEntryArgs and GetIndependentDiskMetadataEntryOutput values.
// You can construct a concrete instance of `GetIndependentDiskMetadataEntryInput` via:
//
//	GetIndependentDiskMetadataEntryArgs{...}
type GetIndependentDiskMetadataEntryInput interface {
	pulumi.Input

	ToGetIndependentDiskMetadataEntryOutput() GetIndependentDiskMetadataEntryOutput
	ToGetIndependentDiskMetadataEntryOutputWithContext(context.Context) GetIndependentDiskMetadataEntryOutput
}

type GetIndependentDiskMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetIndependentDiskMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndependentDiskMetadataEntry)(nil)).Elem()
}

func (i GetIndependentDiskMetadataEntryArgs) ToGetIndependentDiskMetadataEntryOutput() GetIndependentDiskMetadataEntryOutput {
	return i.ToGetIndependentDiskMetadataEntryOutputWithContext(context.Background())
}

func (i GetIndependentDiskMetadataEntryArgs) ToGetIndependentDiskMetadataEntryOutputWithContext(ctx context.Context) GetIndependentDiskMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndependentDiskMetadataEntryOutput)
}

// GetIndependentDiskMetadataEntryArrayInput is an input type that accepts GetIndependentDiskMetadataEntryArray and GetIndependentDiskMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetIndependentDiskMetadataEntryArrayInput` via:
//
//	GetIndependentDiskMetadataEntryArray{ GetIndependentDiskMetadataEntryArgs{...} }
type GetIndependentDiskMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetIndependentDiskMetadataEntryArrayOutput() GetIndependentDiskMetadataEntryArrayOutput
	ToGetIndependentDiskMetadataEntryArrayOutputWithContext(context.Context) GetIndependentDiskMetadataEntryArrayOutput
}

type GetIndependentDiskMetadataEntryArray []GetIndependentDiskMetadataEntryInput

func (GetIndependentDiskMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIndependentDiskMetadataEntry)(nil)).Elem()
}

func (i GetIndependentDiskMetadataEntryArray) ToGetIndependentDiskMetadataEntryArrayOutput() GetIndependentDiskMetadataEntryArrayOutput {
	return i.ToGetIndependentDiskMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetIndependentDiskMetadataEntryArray) ToGetIndependentDiskMetadataEntryArrayOutputWithContext(ctx context.Context) GetIndependentDiskMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndependentDiskMetadataEntryArrayOutput)
}

type GetIndependentDiskMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetIndependentDiskMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndependentDiskMetadataEntry)(nil)).Elem()
}

func (o GetIndependentDiskMetadataEntryOutput) ToGetIndependentDiskMetadataEntryOutput() GetIndependentDiskMetadataEntryOutput {
	return o
}

func (o GetIndependentDiskMetadataEntryOutput) ToGetIndependentDiskMetadataEntryOutputWithContext(ctx context.Context) GetIndependentDiskMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetIndependentDiskMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIndependentDiskMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetIndependentDiskMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndependentDiskMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetIndependentDiskMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndependentDiskMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetIndependentDiskMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndependentDiskMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetIndependentDiskMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndependentDiskMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetIndependentDiskMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetIndependentDiskMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIndependentDiskMetadataEntry)(nil)).Elem()
}

func (o GetIndependentDiskMetadataEntryArrayOutput) ToGetIndependentDiskMetadataEntryArrayOutput() GetIndependentDiskMetadataEntryArrayOutput {
	return o
}

func (o GetIndependentDiskMetadataEntryArrayOutput) ToGetIndependentDiskMetadataEntryArrayOutputWithContext(ctx context.Context) GetIndependentDiskMetadataEntryArrayOutput {
	return o
}

func (o GetIndependentDiskMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetIndependentDiskMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIndependentDiskMetadataEntry {
		return vs[0].([]GetIndependentDiskMetadataEntry)[vs[1].(int)]
	}).(GetIndependentDiskMetadataEntryOutput)
}

type GetIpSpaceCustomQuotaIpPrefixQuota struct {
	// Prefix length
	PrefixLength string `pulumi:"prefixLength"`
	// IP Prefix Quota
	Quota string `pulumi:"quota"`
}

// GetIpSpaceCustomQuotaIpPrefixQuotaInput is an input type that accepts GetIpSpaceCustomQuotaIpPrefixQuotaArgs and GetIpSpaceCustomQuotaIpPrefixQuotaOutput values.
// You can construct a concrete instance of `GetIpSpaceCustomQuotaIpPrefixQuotaInput` via:
//
//	GetIpSpaceCustomQuotaIpPrefixQuotaArgs{...}
type GetIpSpaceCustomQuotaIpPrefixQuotaInput interface {
	pulumi.Input

	ToGetIpSpaceCustomQuotaIpPrefixQuotaOutput() GetIpSpaceCustomQuotaIpPrefixQuotaOutput
	ToGetIpSpaceCustomQuotaIpPrefixQuotaOutputWithContext(context.Context) GetIpSpaceCustomQuotaIpPrefixQuotaOutput
}

type GetIpSpaceCustomQuotaIpPrefixQuotaArgs struct {
	// Prefix length
	PrefixLength pulumi.StringInput `pulumi:"prefixLength"`
	// IP Prefix Quota
	Quota pulumi.StringInput `pulumi:"quota"`
}

func (GetIpSpaceCustomQuotaIpPrefixQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSpaceCustomQuotaIpPrefixQuota)(nil)).Elem()
}

func (i GetIpSpaceCustomQuotaIpPrefixQuotaArgs) ToGetIpSpaceCustomQuotaIpPrefixQuotaOutput() GetIpSpaceCustomQuotaIpPrefixQuotaOutput {
	return i.ToGetIpSpaceCustomQuotaIpPrefixQuotaOutputWithContext(context.Background())
}

func (i GetIpSpaceCustomQuotaIpPrefixQuotaArgs) ToGetIpSpaceCustomQuotaIpPrefixQuotaOutputWithContext(ctx context.Context) GetIpSpaceCustomQuotaIpPrefixQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSpaceCustomQuotaIpPrefixQuotaOutput)
}

// GetIpSpaceCustomQuotaIpPrefixQuotaArrayInput is an input type that accepts GetIpSpaceCustomQuotaIpPrefixQuotaArray and GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput values.
// You can construct a concrete instance of `GetIpSpaceCustomQuotaIpPrefixQuotaArrayInput` via:
//
//	GetIpSpaceCustomQuotaIpPrefixQuotaArray{ GetIpSpaceCustomQuotaIpPrefixQuotaArgs{...} }
type GetIpSpaceCustomQuotaIpPrefixQuotaArrayInput interface {
	pulumi.Input

	ToGetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput() GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput
	ToGetIpSpaceCustomQuotaIpPrefixQuotaArrayOutputWithContext(context.Context) GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput
}

type GetIpSpaceCustomQuotaIpPrefixQuotaArray []GetIpSpaceCustomQuotaIpPrefixQuotaInput

func (GetIpSpaceCustomQuotaIpPrefixQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSpaceCustomQuotaIpPrefixQuota)(nil)).Elem()
}

func (i GetIpSpaceCustomQuotaIpPrefixQuotaArray) ToGetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput() GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput {
	return i.ToGetIpSpaceCustomQuotaIpPrefixQuotaArrayOutputWithContext(context.Background())
}

func (i GetIpSpaceCustomQuotaIpPrefixQuotaArray) ToGetIpSpaceCustomQuotaIpPrefixQuotaArrayOutputWithContext(ctx context.Context) GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput)
}

type GetIpSpaceCustomQuotaIpPrefixQuotaOutput struct{ *pulumi.OutputState }

func (GetIpSpaceCustomQuotaIpPrefixQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSpaceCustomQuotaIpPrefixQuota)(nil)).Elem()
}

func (o GetIpSpaceCustomQuotaIpPrefixQuotaOutput) ToGetIpSpaceCustomQuotaIpPrefixQuotaOutput() GetIpSpaceCustomQuotaIpPrefixQuotaOutput {
	return o
}

func (o GetIpSpaceCustomQuotaIpPrefixQuotaOutput) ToGetIpSpaceCustomQuotaIpPrefixQuotaOutputWithContext(ctx context.Context) GetIpSpaceCustomQuotaIpPrefixQuotaOutput {
	return o
}

// Prefix length
func (o GetIpSpaceCustomQuotaIpPrefixQuotaOutput) PrefixLength() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSpaceCustomQuotaIpPrefixQuota) string { return v.PrefixLength }).(pulumi.StringOutput)
}

// IP Prefix Quota
func (o GetIpSpaceCustomQuotaIpPrefixQuotaOutput) Quota() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSpaceCustomQuotaIpPrefixQuota) string { return v.Quota }).(pulumi.StringOutput)
}

type GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput struct{ *pulumi.OutputState }

func (GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSpaceCustomQuotaIpPrefixQuota)(nil)).Elem()
}

func (o GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput) ToGetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput() GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput {
	return o
}

func (o GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput) ToGetIpSpaceCustomQuotaIpPrefixQuotaArrayOutputWithContext(ctx context.Context) GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput {
	return o
}

func (o GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput) Index(i pulumi.IntInput) GetIpSpaceCustomQuotaIpPrefixQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpSpaceCustomQuotaIpPrefixQuota {
		return vs[0].([]GetIpSpaceCustomQuotaIpPrefixQuota)[vs[1].(int)]
	}).(GetIpSpaceCustomQuotaIpPrefixQuotaOutput)
}

type GetIpSpaceIpPrefix struct {
	// Floating IP quota
	DefaultQuota string `pulumi:"defaultQuota"`
	// IP Prefix
	Prefixes []GetIpSpaceIpPrefixPrefix `pulumi:"prefixes"`
}

// GetIpSpaceIpPrefixInput is an input type that accepts GetIpSpaceIpPrefixArgs and GetIpSpaceIpPrefixOutput values.
// You can construct a concrete instance of `GetIpSpaceIpPrefixInput` via:
//
//	GetIpSpaceIpPrefixArgs{...}
type GetIpSpaceIpPrefixInput interface {
	pulumi.Input

	ToGetIpSpaceIpPrefixOutput() GetIpSpaceIpPrefixOutput
	ToGetIpSpaceIpPrefixOutputWithContext(context.Context) GetIpSpaceIpPrefixOutput
}

type GetIpSpaceIpPrefixArgs struct {
	// Floating IP quota
	DefaultQuota pulumi.StringInput `pulumi:"defaultQuota"`
	// IP Prefix
	Prefixes GetIpSpaceIpPrefixPrefixArrayInput `pulumi:"prefixes"`
}

func (GetIpSpaceIpPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSpaceIpPrefix)(nil)).Elem()
}

func (i GetIpSpaceIpPrefixArgs) ToGetIpSpaceIpPrefixOutput() GetIpSpaceIpPrefixOutput {
	return i.ToGetIpSpaceIpPrefixOutputWithContext(context.Background())
}

func (i GetIpSpaceIpPrefixArgs) ToGetIpSpaceIpPrefixOutputWithContext(ctx context.Context) GetIpSpaceIpPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSpaceIpPrefixOutput)
}

// GetIpSpaceIpPrefixArrayInput is an input type that accepts GetIpSpaceIpPrefixArray and GetIpSpaceIpPrefixArrayOutput values.
// You can construct a concrete instance of `GetIpSpaceIpPrefixArrayInput` via:
//
//	GetIpSpaceIpPrefixArray{ GetIpSpaceIpPrefixArgs{...} }
type GetIpSpaceIpPrefixArrayInput interface {
	pulumi.Input

	ToGetIpSpaceIpPrefixArrayOutput() GetIpSpaceIpPrefixArrayOutput
	ToGetIpSpaceIpPrefixArrayOutputWithContext(context.Context) GetIpSpaceIpPrefixArrayOutput
}

type GetIpSpaceIpPrefixArray []GetIpSpaceIpPrefixInput

func (GetIpSpaceIpPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSpaceIpPrefix)(nil)).Elem()
}

func (i GetIpSpaceIpPrefixArray) ToGetIpSpaceIpPrefixArrayOutput() GetIpSpaceIpPrefixArrayOutput {
	return i.ToGetIpSpaceIpPrefixArrayOutputWithContext(context.Background())
}

func (i GetIpSpaceIpPrefixArray) ToGetIpSpaceIpPrefixArrayOutputWithContext(ctx context.Context) GetIpSpaceIpPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSpaceIpPrefixArrayOutput)
}

type GetIpSpaceIpPrefixOutput struct{ *pulumi.OutputState }

func (GetIpSpaceIpPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSpaceIpPrefix)(nil)).Elem()
}

func (o GetIpSpaceIpPrefixOutput) ToGetIpSpaceIpPrefixOutput() GetIpSpaceIpPrefixOutput {
	return o
}

func (o GetIpSpaceIpPrefixOutput) ToGetIpSpaceIpPrefixOutputWithContext(ctx context.Context) GetIpSpaceIpPrefixOutput {
	return o
}

// Floating IP quota
func (o GetIpSpaceIpPrefixOutput) DefaultQuota() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSpaceIpPrefix) string { return v.DefaultQuota }).(pulumi.StringOutput)
}

// IP Prefix
func (o GetIpSpaceIpPrefixOutput) Prefixes() GetIpSpaceIpPrefixPrefixArrayOutput {
	return o.ApplyT(func(v GetIpSpaceIpPrefix) []GetIpSpaceIpPrefixPrefix { return v.Prefixes }).(GetIpSpaceIpPrefixPrefixArrayOutput)
}

type GetIpSpaceIpPrefixArrayOutput struct{ *pulumi.OutputState }

func (GetIpSpaceIpPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSpaceIpPrefix)(nil)).Elem()
}

func (o GetIpSpaceIpPrefixArrayOutput) ToGetIpSpaceIpPrefixArrayOutput() GetIpSpaceIpPrefixArrayOutput {
	return o
}

func (o GetIpSpaceIpPrefixArrayOutput) ToGetIpSpaceIpPrefixArrayOutputWithContext(ctx context.Context) GetIpSpaceIpPrefixArrayOutput {
	return o
}

func (o GetIpSpaceIpPrefixArrayOutput) Index(i pulumi.IntInput) GetIpSpaceIpPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpSpaceIpPrefix {
		return vs[0].([]GetIpSpaceIpPrefix)[vs[1].(int)]
	}).(GetIpSpaceIpPrefixOutput)
}

type GetIpSpaceIpPrefixPrefix struct {
	// First IP
	FirstIp string `pulumi:"firstIp"`
	// ID of IP Prefix
	Id string `pulumi:"id"`
	// Prefix count
	PrefixCount string `pulumi:"prefixCount"`
	// Prefix length
	PrefixLength string `pulumi:"prefixLength"`
}

// GetIpSpaceIpPrefixPrefixInput is an input type that accepts GetIpSpaceIpPrefixPrefixArgs and GetIpSpaceIpPrefixPrefixOutput values.
// You can construct a concrete instance of `GetIpSpaceIpPrefixPrefixInput` via:
//
//	GetIpSpaceIpPrefixPrefixArgs{...}
type GetIpSpaceIpPrefixPrefixInput interface {
	pulumi.Input

	ToGetIpSpaceIpPrefixPrefixOutput() GetIpSpaceIpPrefixPrefixOutput
	ToGetIpSpaceIpPrefixPrefixOutputWithContext(context.Context) GetIpSpaceIpPrefixPrefixOutput
}

type GetIpSpaceIpPrefixPrefixArgs struct {
	// First IP
	FirstIp pulumi.StringInput `pulumi:"firstIp"`
	// ID of IP Prefix
	Id pulumi.StringInput `pulumi:"id"`
	// Prefix count
	PrefixCount pulumi.StringInput `pulumi:"prefixCount"`
	// Prefix length
	PrefixLength pulumi.StringInput `pulumi:"prefixLength"`
}

func (GetIpSpaceIpPrefixPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSpaceIpPrefixPrefix)(nil)).Elem()
}

func (i GetIpSpaceIpPrefixPrefixArgs) ToGetIpSpaceIpPrefixPrefixOutput() GetIpSpaceIpPrefixPrefixOutput {
	return i.ToGetIpSpaceIpPrefixPrefixOutputWithContext(context.Background())
}

func (i GetIpSpaceIpPrefixPrefixArgs) ToGetIpSpaceIpPrefixPrefixOutputWithContext(ctx context.Context) GetIpSpaceIpPrefixPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSpaceIpPrefixPrefixOutput)
}

// GetIpSpaceIpPrefixPrefixArrayInput is an input type that accepts GetIpSpaceIpPrefixPrefixArray and GetIpSpaceIpPrefixPrefixArrayOutput values.
// You can construct a concrete instance of `GetIpSpaceIpPrefixPrefixArrayInput` via:
//
//	GetIpSpaceIpPrefixPrefixArray{ GetIpSpaceIpPrefixPrefixArgs{...} }
type GetIpSpaceIpPrefixPrefixArrayInput interface {
	pulumi.Input

	ToGetIpSpaceIpPrefixPrefixArrayOutput() GetIpSpaceIpPrefixPrefixArrayOutput
	ToGetIpSpaceIpPrefixPrefixArrayOutputWithContext(context.Context) GetIpSpaceIpPrefixPrefixArrayOutput
}

type GetIpSpaceIpPrefixPrefixArray []GetIpSpaceIpPrefixPrefixInput

func (GetIpSpaceIpPrefixPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSpaceIpPrefixPrefix)(nil)).Elem()
}

func (i GetIpSpaceIpPrefixPrefixArray) ToGetIpSpaceIpPrefixPrefixArrayOutput() GetIpSpaceIpPrefixPrefixArrayOutput {
	return i.ToGetIpSpaceIpPrefixPrefixArrayOutputWithContext(context.Background())
}

func (i GetIpSpaceIpPrefixPrefixArray) ToGetIpSpaceIpPrefixPrefixArrayOutputWithContext(ctx context.Context) GetIpSpaceIpPrefixPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSpaceIpPrefixPrefixArrayOutput)
}

type GetIpSpaceIpPrefixPrefixOutput struct{ *pulumi.OutputState }

func (GetIpSpaceIpPrefixPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSpaceIpPrefixPrefix)(nil)).Elem()
}

func (o GetIpSpaceIpPrefixPrefixOutput) ToGetIpSpaceIpPrefixPrefixOutput() GetIpSpaceIpPrefixPrefixOutput {
	return o
}

func (o GetIpSpaceIpPrefixPrefixOutput) ToGetIpSpaceIpPrefixPrefixOutputWithContext(ctx context.Context) GetIpSpaceIpPrefixPrefixOutput {
	return o
}

// First IP
func (o GetIpSpaceIpPrefixPrefixOutput) FirstIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSpaceIpPrefixPrefix) string { return v.FirstIp }).(pulumi.StringOutput)
}

// ID of IP Prefix
func (o GetIpSpaceIpPrefixPrefixOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSpaceIpPrefixPrefix) string { return v.Id }).(pulumi.StringOutput)
}

// Prefix count
func (o GetIpSpaceIpPrefixPrefixOutput) PrefixCount() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSpaceIpPrefixPrefix) string { return v.PrefixCount }).(pulumi.StringOutput)
}

// Prefix length
func (o GetIpSpaceIpPrefixPrefixOutput) PrefixLength() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSpaceIpPrefixPrefix) string { return v.PrefixLength }).(pulumi.StringOutput)
}

type GetIpSpaceIpPrefixPrefixArrayOutput struct{ *pulumi.OutputState }

func (GetIpSpaceIpPrefixPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSpaceIpPrefixPrefix)(nil)).Elem()
}

func (o GetIpSpaceIpPrefixPrefixArrayOutput) ToGetIpSpaceIpPrefixPrefixArrayOutput() GetIpSpaceIpPrefixPrefixArrayOutput {
	return o
}

func (o GetIpSpaceIpPrefixPrefixArrayOutput) ToGetIpSpaceIpPrefixPrefixArrayOutputWithContext(ctx context.Context) GetIpSpaceIpPrefixPrefixArrayOutput {
	return o
}

func (o GetIpSpaceIpPrefixPrefixArrayOutput) Index(i pulumi.IntInput) GetIpSpaceIpPrefixPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpSpaceIpPrefixPrefix {
		return vs[0].([]GetIpSpaceIpPrefixPrefix)[vs[1].(int)]
	}).(GetIpSpaceIpPrefixPrefixOutput)
}

type GetIpSpaceIpRange struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// ID of IP Range
	Id string `pulumi:"id"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetIpSpaceIpRangeInput is an input type that accepts GetIpSpaceIpRangeArgs and GetIpSpaceIpRangeOutput values.
// You can construct a concrete instance of `GetIpSpaceIpRangeInput` via:
//
//	GetIpSpaceIpRangeArgs{...}
type GetIpSpaceIpRangeInput interface {
	pulumi.Input

	ToGetIpSpaceIpRangeOutput() GetIpSpaceIpRangeOutput
	ToGetIpSpaceIpRangeOutputWithContext(context.Context) GetIpSpaceIpRangeOutput
}

type GetIpSpaceIpRangeArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// ID of IP Range
	Id pulumi.StringInput `pulumi:"id"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetIpSpaceIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSpaceIpRange)(nil)).Elem()
}

func (i GetIpSpaceIpRangeArgs) ToGetIpSpaceIpRangeOutput() GetIpSpaceIpRangeOutput {
	return i.ToGetIpSpaceIpRangeOutputWithContext(context.Background())
}

func (i GetIpSpaceIpRangeArgs) ToGetIpSpaceIpRangeOutputWithContext(ctx context.Context) GetIpSpaceIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSpaceIpRangeOutput)
}

// GetIpSpaceIpRangeArrayInput is an input type that accepts GetIpSpaceIpRangeArray and GetIpSpaceIpRangeArrayOutput values.
// You can construct a concrete instance of `GetIpSpaceIpRangeArrayInput` via:
//
//	GetIpSpaceIpRangeArray{ GetIpSpaceIpRangeArgs{...} }
type GetIpSpaceIpRangeArrayInput interface {
	pulumi.Input

	ToGetIpSpaceIpRangeArrayOutput() GetIpSpaceIpRangeArrayOutput
	ToGetIpSpaceIpRangeArrayOutputWithContext(context.Context) GetIpSpaceIpRangeArrayOutput
}

type GetIpSpaceIpRangeArray []GetIpSpaceIpRangeInput

func (GetIpSpaceIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSpaceIpRange)(nil)).Elem()
}

func (i GetIpSpaceIpRangeArray) ToGetIpSpaceIpRangeArrayOutput() GetIpSpaceIpRangeArrayOutput {
	return i.ToGetIpSpaceIpRangeArrayOutputWithContext(context.Background())
}

func (i GetIpSpaceIpRangeArray) ToGetIpSpaceIpRangeArrayOutputWithContext(ctx context.Context) GetIpSpaceIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSpaceIpRangeArrayOutput)
}

type GetIpSpaceIpRangeOutput struct{ *pulumi.OutputState }

func (GetIpSpaceIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSpaceIpRange)(nil)).Elem()
}

func (o GetIpSpaceIpRangeOutput) ToGetIpSpaceIpRangeOutput() GetIpSpaceIpRangeOutput {
	return o
}

func (o GetIpSpaceIpRangeOutput) ToGetIpSpaceIpRangeOutputWithContext(ctx context.Context) GetIpSpaceIpRangeOutput {
	return o
}

// End address of the IP range
func (o GetIpSpaceIpRangeOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSpaceIpRange) string { return v.EndAddress }).(pulumi.StringOutput)
}

// ID of IP Range
func (o GetIpSpaceIpRangeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSpaceIpRange) string { return v.Id }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o GetIpSpaceIpRangeOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSpaceIpRange) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetIpSpaceIpRangeArrayOutput struct{ *pulumi.OutputState }

func (GetIpSpaceIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSpaceIpRange)(nil)).Elem()
}

func (o GetIpSpaceIpRangeArrayOutput) ToGetIpSpaceIpRangeArrayOutput() GetIpSpaceIpRangeArrayOutput {
	return o
}

func (o GetIpSpaceIpRangeArrayOutput) ToGetIpSpaceIpRangeArrayOutputWithContext(ctx context.Context) GetIpSpaceIpRangeArrayOutput {
	return o
}

func (o GetIpSpaceIpRangeArrayOutput) Index(i pulumi.IntInput) GetIpSpaceIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpSpaceIpRange {
		return vs[0].([]GetIpSpaceIpRange)[vs[1].(int)]
	}).(GetIpSpaceIpRangeOutput)
}

type GetLbServerPoolMember struct {
	// Defines member state. One of enabled, drain, disabled.
	Condition string `pulumi:"condition"`
	// Pool member id (formatted as member-xx, where xx is a number)
	Id string `pulumi:"id"`
	// IP address of member in server pool
	IpAddress string `pulumi:"ipAddress"`
	// The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released
	MaxConnections int `pulumi:"maxConnections"`
	// Minimum number of concurrent connections a member must always accept
	MinConnections int `pulumi:"minConnections"`
	// Port at which the member is to receive health monitor requests. Can be the same as port
	MonitorPort int `pulumi:"monitorPort"`
	// Server Pool name for identifying the exact server pool
	Name string `pulumi:"name"`
	// Port at which the member is to receive traffic from the load balancer
	Port int `pulumi:"port"`
	// Proportion of traffic this member is to handle. Must be an integer in the range 1-256
	Weight int `pulumi:"weight"`
}

// GetLbServerPoolMemberInput is an input type that accepts GetLbServerPoolMemberArgs and GetLbServerPoolMemberOutput values.
// You can construct a concrete instance of `GetLbServerPoolMemberInput` via:
//
//	GetLbServerPoolMemberArgs{...}
type GetLbServerPoolMemberInput interface {
	pulumi.Input

	ToGetLbServerPoolMemberOutput() GetLbServerPoolMemberOutput
	ToGetLbServerPoolMemberOutputWithContext(context.Context) GetLbServerPoolMemberOutput
}

type GetLbServerPoolMemberArgs struct {
	// Defines member state. One of enabled, drain, disabled.
	Condition pulumi.StringInput `pulumi:"condition"`
	// Pool member id (formatted as member-xx, where xx is a number)
	Id pulumi.StringInput `pulumi:"id"`
	// IP address of member in server pool
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// Minimum number of concurrent connections a member must always accept
	MinConnections pulumi.IntInput `pulumi:"minConnections"`
	// Port at which the member is to receive health monitor requests. Can be the same as port
	MonitorPort pulumi.IntInput `pulumi:"monitorPort"`
	// Server Pool name for identifying the exact server pool
	Name pulumi.StringInput `pulumi:"name"`
	// Port at which the member is to receive traffic from the load balancer
	Port pulumi.IntInput `pulumi:"port"`
	// Proportion of traffic this member is to handle. Must be an integer in the range 1-256
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetLbServerPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbServerPoolMember)(nil)).Elem()
}

func (i GetLbServerPoolMemberArgs) ToGetLbServerPoolMemberOutput() GetLbServerPoolMemberOutput {
	return i.ToGetLbServerPoolMemberOutputWithContext(context.Background())
}

func (i GetLbServerPoolMemberArgs) ToGetLbServerPoolMemberOutputWithContext(ctx context.Context) GetLbServerPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbServerPoolMemberOutput)
}

// GetLbServerPoolMemberArrayInput is an input type that accepts GetLbServerPoolMemberArray and GetLbServerPoolMemberArrayOutput values.
// You can construct a concrete instance of `GetLbServerPoolMemberArrayInput` via:
//
//	GetLbServerPoolMemberArray{ GetLbServerPoolMemberArgs{...} }
type GetLbServerPoolMemberArrayInput interface {
	pulumi.Input

	ToGetLbServerPoolMemberArrayOutput() GetLbServerPoolMemberArrayOutput
	ToGetLbServerPoolMemberArrayOutputWithContext(context.Context) GetLbServerPoolMemberArrayOutput
}

type GetLbServerPoolMemberArray []GetLbServerPoolMemberInput

func (GetLbServerPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbServerPoolMember)(nil)).Elem()
}

func (i GetLbServerPoolMemberArray) ToGetLbServerPoolMemberArrayOutput() GetLbServerPoolMemberArrayOutput {
	return i.ToGetLbServerPoolMemberArrayOutputWithContext(context.Background())
}

func (i GetLbServerPoolMemberArray) ToGetLbServerPoolMemberArrayOutputWithContext(ctx context.Context) GetLbServerPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbServerPoolMemberArrayOutput)
}

type GetLbServerPoolMemberOutput struct{ *pulumi.OutputState }

func (GetLbServerPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbServerPoolMember)(nil)).Elem()
}

func (o GetLbServerPoolMemberOutput) ToGetLbServerPoolMemberOutput() GetLbServerPoolMemberOutput {
	return o
}

func (o GetLbServerPoolMemberOutput) ToGetLbServerPoolMemberOutputWithContext(ctx context.Context) GetLbServerPoolMemberOutput {
	return o
}

// Defines member state. One of enabled, drain, disabled.
func (o GetLbServerPoolMemberOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbServerPoolMember) string { return v.Condition }).(pulumi.StringOutput)
}

// Pool member id (formatted as member-xx, where xx is a number)
func (o GetLbServerPoolMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbServerPoolMember) string { return v.Id }).(pulumi.StringOutput)
}

// IP address of member in server pool
func (o GetLbServerPoolMemberOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbServerPoolMember) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released
func (o GetLbServerPoolMemberOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbServerPoolMember) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// Minimum number of concurrent connections a member must always accept
func (o GetLbServerPoolMemberOutput) MinConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbServerPoolMember) int { return v.MinConnections }).(pulumi.IntOutput)
}

// Port at which the member is to receive health monitor requests. Can be the same as port
func (o GetLbServerPoolMemberOutput) MonitorPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbServerPoolMember) int { return v.MonitorPort }).(pulumi.IntOutput)
}

// Server Pool name for identifying the exact server pool
func (o GetLbServerPoolMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbServerPoolMember) string { return v.Name }).(pulumi.StringOutput)
}

// Port at which the member is to receive traffic from the load balancer
func (o GetLbServerPoolMemberOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbServerPoolMember) int { return v.Port }).(pulumi.IntOutput)
}

// Proportion of traffic this member is to handle. Must be an integer in the range 1-256
func (o GetLbServerPoolMemberOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbServerPoolMember) int { return v.Weight }).(pulumi.IntOutput)
}

type GetLbServerPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (GetLbServerPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbServerPoolMember)(nil)).Elem()
}

func (o GetLbServerPoolMemberArrayOutput) ToGetLbServerPoolMemberArrayOutput() GetLbServerPoolMemberArrayOutput {
	return o
}

func (o GetLbServerPoolMemberArrayOutput) ToGetLbServerPoolMemberArrayOutputWithContext(ctx context.Context) GetLbServerPoolMemberArrayOutput {
	return o
}

func (o GetLbServerPoolMemberArrayOutput) Index(i pulumi.IntInput) GetLbServerPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbServerPoolMember {
		return vs[0].([]GetLbServerPoolMember)[vs[1].(int)]
	}).(GetLbServerPoolMemberOutput)
}

type GetNetworkDirectFilter struct {
	// Search by IP. The value can be a regular expression
	Ip *string `pulumi:"ip"`
	// metadata filter
	Metadatas []GetNetworkDirectFilterMetadata `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetNetworkDirectFilterInput is an input type that accepts GetNetworkDirectFilterArgs and GetNetworkDirectFilterOutput values.
// You can construct a concrete instance of `GetNetworkDirectFilterInput` via:
//
//	GetNetworkDirectFilterArgs{...}
type GetNetworkDirectFilterInput interface {
	pulumi.Input

	ToGetNetworkDirectFilterOutput() GetNetworkDirectFilterOutput
	ToGetNetworkDirectFilterOutputWithContext(context.Context) GetNetworkDirectFilterOutput
}

type GetNetworkDirectFilterArgs struct {
	// Search by IP. The value can be a regular expression
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// metadata filter
	Metadatas GetNetworkDirectFilterMetadataArrayInput `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetNetworkDirectFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDirectFilter)(nil)).Elem()
}

func (i GetNetworkDirectFilterArgs) ToGetNetworkDirectFilterOutput() GetNetworkDirectFilterOutput {
	return i.ToGetNetworkDirectFilterOutputWithContext(context.Background())
}

func (i GetNetworkDirectFilterArgs) ToGetNetworkDirectFilterOutputWithContext(ctx context.Context) GetNetworkDirectFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDirectFilterOutput)
}

func (i GetNetworkDirectFilterArgs) ToGetNetworkDirectFilterPtrOutput() GetNetworkDirectFilterPtrOutput {
	return i.ToGetNetworkDirectFilterPtrOutputWithContext(context.Background())
}

func (i GetNetworkDirectFilterArgs) ToGetNetworkDirectFilterPtrOutputWithContext(ctx context.Context) GetNetworkDirectFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDirectFilterOutput).ToGetNetworkDirectFilterPtrOutputWithContext(ctx)
}

// GetNetworkDirectFilterPtrInput is an input type that accepts GetNetworkDirectFilterArgs, GetNetworkDirectFilterPtr and GetNetworkDirectFilterPtrOutput values.
// You can construct a concrete instance of `GetNetworkDirectFilterPtrInput` via:
//
//	        GetNetworkDirectFilterArgs{...}
//
//	or:
//
//	        nil
type GetNetworkDirectFilterPtrInput interface {
	pulumi.Input

	ToGetNetworkDirectFilterPtrOutput() GetNetworkDirectFilterPtrOutput
	ToGetNetworkDirectFilterPtrOutputWithContext(context.Context) GetNetworkDirectFilterPtrOutput
}

type getNetworkDirectFilterPtrType GetNetworkDirectFilterArgs

func GetNetworkDirectFilterPtr(v *GetNetworkDirectFilterArgs) GetNetworkDirectFilterPtrInput {
	return (*getNetworkDirectFilterPtrType)(v)
}

func (*getNetworkDirectFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkDirectFilter)(nil)).Elem()
}

func (i *getNetworkDirectFilterPtrType) ToGetNetworkDirectFilterPtrOutput() GetNetworkDirectFilterPtrOutput {
	return i.ToGetNetworkDirectFilterPtrOutputWithContext(context.Background())
}

func (i *getNetworkDirectFilterPtrType) ToGetNetworkDirectFilterPtrOutputWithContext(ctx context.Context) GetNetworkDirectFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDirectFilterPtrOutput)
}

type GetNetworkDirectFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkDirectFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDirectFilter)(nil)).Elem()
}

func (o GetNetworkDirectFilterOutput) ToGetNetworkDirectFilterOutput() GetNetworkDirectFilterOutput {
	return o
}

func (o GetNetworkDirectFilterOutput) ToGetNetworkDirectFilterOutputWithContext(ctx context.Context) GetNetworkDirectFilterOutput {
	return o
}

func (o GetNetworkDirectFilterOutput) ToGetNetworkDirectFilterPtrOutput() GetNetworkDirectFilterPtrOutput {
	return o.ToGetNetworkDirectFilterPtrOutputWithContext(context.Background())
}

func (o GetNetworkDirectFilterOutput) ToGetNetworkDirectFilterPtrOutputWithContext(ctx context.Context) GetNetworkDirectFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetNetworkDirectFilter) *GetNetworkDirectFilter {
		return &v
	}).(GetNetworkDirectFilterPtrOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNetworkDirectFilterOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkDirectFilter) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// metadata filter
func (o GetNetworkDirectFilterOutput) Metadatas() GetNetworkDirectFilterMetadataArrayOutput {
	return o.ApplyT(func(v GetNetworkDirectFilter) []GetNetworkDirectFilterMetadata { return v.Metadatas }).(GetNetworkDirectFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetNetworkDirectFilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkDirectFilter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetNetworkDirectFilterPtrOutput struct{ *pulumi.OutputState }

func (GetNetworkDirectFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkDirectFilter)(nil)).Elem()
}

func (o GetNetworkDirectFilterPtrOutput) ToGetNetworkDirectFilterPtrOutput() GetNetworkDirectFilterPtrOutput {
	return o
}

func (o GetNetworkDirectFilterPtrOutput) ToGetNetworkDirectFilterPtrOutputWithContext(ctx context.Context) GetNetworkDirectFilterPtrOutput {
	return o
}

func (o GetNetworkDirectFilterPtrOutput) Elem() GetNetworkDirectFilterOutput {
	return o.ApplyT(func(v *GetNetworkDirectFilter) GetNetworkDirectFilter {
		if v != nil {
			return *v
		}
		var ret GetNetworkDirectFilter
		return ret
	}).(GetNetworkDirectFilterOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNetworkDirectFilterPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNetworkDirectFilter) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// metadata filter
func (o GetNetworkDirectFilterPtrOutput) Metadatas() GetNetworkDirectFilterMetadataArrayOutput {
	return o.ApplyT(func(v *GetNetworkDirectFilter) []GetNetworkDirectFilterMetadata {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(GetNetworkDirectFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetNetworkDirectFilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNetworkDirectFilter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetNetworkDirectFilterMetadata struct {
	// True if is a metadata@SYSTEM key
	IsSystem *bool `pulumi:"isSystem"`
	// Metadata key (field name)
	Key string `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type *string `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch *bool `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value string `pulumi:"value"`
}

// GetNetworkDirectFilterMetadataInput is an input type that accepts GetNetworkDirectFilterMetadataArgs and GetNetworkDirectFilterMetadataOutput values.
// You can construct a concrete instance of `GetNetworkDirectFilterMetadataInput` via:
//
//	GetNetworkDirectFilterMetadataArgs{...}
type GetNetworkDirectFilterMetadataInput interface {
	pulumi.Input

	ToGetNetworkDirectFilterMetadataOutput() GetNetworkDirectFilterMetadataOutput
	ToGetNetworkDirectFilterMetadataOutputWithContext(context.Context) GetNetworkDirectFilterMetadataOutput
}

type GetNetworkDirectFilterMetadataArgs struct {
	// True if is a metadata@SYSTEM key
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Metadata key (field name)
	Key pulumi.StringInput `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch pulumi.BoolPtrInput `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkDirectFilterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDirectFilterMetadata)(nil)).Elem()
}

func (i GetNetworkDirectFilterMetadataArgs) ToGetNetworkDirectFilterMetadataOutput() GetNetworkDirectFilterMetadataOutput {
	return i.ToGetNetworkDirectFilterMetadataOutputWithContext(context.Background())
}

func (i GetNetworkDirectFilterMetadataArgs) ToGetNetworkDirectFilterMetadataOutputWithContext(ctx context.Context) GetNetworkDirectFilterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDirectFilterMetadataOutput)
}

// GetNetworkDirectFilterMetadataArrayInput is an input type that accepts GetNetworkDirectFilterMetadataArray and GetNetworkDirectFilterMetadataArrayOutput values.
// You can construct a concrete instance of `GetNetworkDirectFilterMetadataArrayInput` via:
//
//	GetNetworkDirectFilterMetadataArray{ GetNetworkDirectFilterMetadataArgs{...} }
type GetNetworkDirectFilterMetadataArrayInput interface {
	pulumi.Input

	ToGetNetworkDirectFilterMetadataArrayOutput() GetNetworkDirectFilterMetadataArrayOutput
	ToGetNetworkDirectFilterMetadataArrayOutputWithContext(context.Context) GetNetworkDirectFilterMetadataArrayOutput
}

type GetNetworkDirectFilterMetadataArray []GetNetworkDirectFilterMetadataInput

func (GetNetworkDirectFilterMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkDirectFilterMetadata)(nil)).Elem()
}

func (i GetNetworkDirectFilterMetadataArray) ToGetNetworkDirectFilterMetadataArrayOutput() GetNetworkDirectFilterMetadataArrayOutput {
	return i.ToGetNetworkDirectFilterMetadataArrayOutputWithContext(context.Background())
}

func (i GetNetworkDirectFilterMetadataArray) ToGetNetworkDirectFilterMetadataArrayOutputWithContext(ctx context.Context) GetNetworkDirectFilterMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDirectFilterMetadataArrayOutput)
}

type GetNetworkDirectFilterMetadataOutput struct{ *pulumi.OutputState }

func (GetNetworkDirectFilterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDirectFilterMetadata)(nil)).Elem()
}

func (o GetNetworkDirectFilterMetadataOutput) ToGetNetworkDirectFilterMetadataOutput() GetNetworkDirectFilterMetadataOutput {
	return o
}

func (o GetNetworkDirectFilterMetadataOutput) ToGetNetworkDirectFilterMetadataOutputWithContext(ctx context.Context) GetNetworkDirectFilterMetadataOutput {
	return o
}

// True if is a metadata@SYSTEM key
func (o GetNetworkDirectFilterMetadataOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworkDirectFilterMetadata) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Metadata key (field name)
func (o GetNetworkDirectFilterMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDirectFilterMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// Type of metadata value (needed only if "useApiSearch" is true)
func (o GetNetworkDirectFilterMetadataOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkDirectFilterMetadata) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If true, will search the vCD using native metadata query (without regular expressions)
func (o GetNetworkDirectFilterMetadataOutput) UseApiSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworkDirectFilterMetadata) *bool { return v.UseApiSearch }).(pulumi.BoolPtrOutput)
}

// Metadata value (can be a regular expression if "useApiSearch" is false)
func (o GetNetworkDirectFilterMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDirectFilterMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkDirectFilterMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkDirectFilterMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkDirectFilterMetadata)(nil)).Elem()
}

func (o GetNetworkDirectFilterMetadataArrayOutput) ToGetNetworkDirectFilterMetadataArrayOutput() GetNetworkDirectFilterMetadataArrayOutput {
	return o
}

func (o GetNetworkDirectFilterMetadataArrayOutput) ToGetNetworkDirectFilterMetadataArrayOutputWithContext(ctx context.Context) GetNetworkDirectFilterMetadataArrayOutput {
	return o
}

func (o GetNetworkDirectFilterMetadataArrayOutput) Index(i pulumi.IntInput) GetNetworkDirectFilterMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkDirectFilterMetadata {
		return vs[0].([]GetNetworkDirectFilterMetadata)[vs[1].(int)]
	}).(GetNetworkDirectFilterMetadataOutput)
}

type GetNetworkDirectMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetNetworkDirectMetadataEntryInput is an input type that accepts GetNetworkDirectMetadataEntryArgs and GetNetworkDirectMetadataEntryOutput values.
// You can construct a concrete instance of `GetNetworkDirectMetadataEntryInput` via:
//
//	GetNetworkDirectMetadataEntryArgs{...}
type GetNetworkDirectMetadataEntryInput interface {
	pulumi.Input

	ToGetNetworkDirectMetadataEntryOutput() GetNetworkDirectMetadataEntryOutput
	ToGetNetworkDirectMetadataEntryOutputWithContext(context.Context) GetNetworkDirectMetadataEntryOutput
}

type GetNetworkDirectMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkDirectMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDirectMetadataEntry)(nil)).Elem()
}

func (i GetNetworkDirectMetadataEntryArgs) ToGetNetworkDirectMetadataEntryOutput() GetNetworkDirectMetadataEntryOutput {
	return i.ToGetNetworkDirectMetadataEntryOutputWithContext(context.Background())
}

func (i GetNetworkDirectMetadataEntryArgs) ToGetNetworkDirectMetadataEntryOutputWithContext(ctx context.Context) GetNetworkDirectMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDirectMetadataEntryOutput)
}

// GetNetworkDirectMetadataEntryArrayInput is an input type that accepts GetNetworkDirectMetadataEntryArray and GetNetworkDirectMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetNetworkDirectMetadataEntryArrayInput` via:
//
//	GetNetworkDirectMetadataEntryArray{ GetNetworkDirectMetadataEntryArgs{...} }
type GetNetworkDirectMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetNetworkDirectMetadataEntryArrayOutput() GetNetworkDirectMetadataEntryArrayOutput
	ToGetNetworkDirectMetadataEntryArrayOutputWithContext(context.Context) GetNetworkDirectMetadataEntryArrayOutput
}

type GetNetworkDirectMetadataEntryArray []GetNetworkDirectMetadataEntryInput

func (GetNetworkDirectMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkDirectMetadataEntry)(nil)).Elem()
}

func (i GetNetworkDirectMetadataEntryArray) ToGetNetworkDirectMetadataEntryArrayOutput() GetNetworkDirectMetadataEntryArrayOutput {
	return i.ToGetNetworkDirectMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetNetworkDirectMetadataEntryArray) ToGetNetworkDirectMetadataEntryArrayOutputWithContext(ctx context.Context) GetNetworkDirectMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDirectMetadataEntryArrayOutput)
}

type GetNetworkDirectMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetNetworkDirectMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDirectMetadataEntry)(nil)).Elem()
}

func (o GetNetworkDirectMetadataEntryOutput) ToGetNetworkDirectMetadataEntryOutput() GetNetworkDirectMetadataEntryOutput {
	return o
}

func (o GetNetworkDirectMetadataEntryOutput) ToGetNetworkDirectMetadataEntryOutputWithContext(ctx context.Context) GetNetworkDirectMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetNetworkDirectMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkDirectMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetNetworkDirectMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDirectMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetNetworkDirectMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDirectMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetNetworkDirectMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDirectMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetNetworkDirectMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDirectMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkDirectMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkDirectMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkDirectMetadataEntry)(nil)).Elem()
}

func (o GetNetworkDirectMetadataEntryArrayOutput) ToGetNetworkDirectMetadataEntryArrayOutput() GetNetworkDirectMetadataEntryArrayOutput {
	return o
}

func (o GetNetworkDirectMetadataEntryArrayOutput) ToGetNetworkDirectMetadataEntryArrayOutputWithContext(ctx context.Context) GetNetworkDirectMetadataEntryArrayOutput {
	return o
}

func (o GetNetworkDirectMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetNetworkDirectMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkDirectMetadataEntry {
		return vs[0].([]GetNetworkDirectMetadataEntry)[vs[1].(int)]
	}).(GetNetworkDirectMetadataEntryOutput)
}

type GetNetworkIsolatedDhcpPool struct {
	// The default DHCP lease time to use
	DefaultLeaseTime int `pulumi:"defaultLeaseTime"`
	// The final address in the IP Range
	EndAddress string `pulumi:"endAddress"`
	// The maximum DHCP lease time to use
	MaxLeaseTime int `pulumi:"maxLeaseTime"`
	// The first address in the IP Range
	StartAddress string `pulumi:"startAddress"`
}

// GetNetworkIsolatedDhcpPoolInput is an input type that accepts GetNetworkIsolatedDhcpPoolArgs and GetNetworkIsolatedDhcpPoolOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedDhcpPoolInput` via:
//
//	GetNetworkIsolatedDhcpPoolArgs{...}
type GetNetworkIsolatedDhcpPoolInput interface {
	pulumi.Input

	ToGetNetworkIsolatedDhcpPoolOutput() GetNetworkIsolatedDhcpPoolOutput
	ToGetNetworkIsolatedDhcpPoolOutputWithContext(context.Context) GetNetworkIsolatedDhcpPoolOutput
}

type GetNetworkIsolatedDhcpPoolArgs struct {
	// The default DHCP lease time to use
	DefaultLeaseTime pulumi.IntInput `pulumi:"defaultLeaseTime"`
	// The final address in the IP Range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// The maximum DHCP lease time to use
	MaxLeaseTime pulumi.IntInput `pulumi:"maxLeaseTime"`
	// The first address in the IP Range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNetworkIsolatedDhcpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedDhcpPool)(nil)).Elem()
}

func (i GetNetworkIsolatedDhcpPoolArgs) ToGetNetworkIsolatedDhcpPoolOutput() GetNetworkIsolatedDhcpPoolOutput {
	return i.ToGetNetworkIsolatedDhcpPoolOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedDhcpPoolArgs) ToGetNetworkIsolatedDhcpPoolOutputWithContext(ctx context.Context) GetNetworkIsolatedDhcpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedDhcpPoolOutput)
}

// GetNetworkIsolatedDhcpPoolArrayInput is an input type that accepts GetNetworkIsolatedDhcpPoolArray and GetNetworkIsolatedDhcpPoolArrayOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedDhcpPoolArrayInput` via:
//
//	GetNetworkIsolatedDhcpPoolArray{ GetNetworkIsolatedDhcpPoolArgs{...} }
type GetNetworkIsolatedDhcpPoolArrayInput interface {
	pulumi.Input

	ToGetNetworkIsolatedDhcpPoolArrayOutput() GetNetworkIsolatedDhcpPoolArrayOutput
	ToGetNetworkIsolatedDhcpPoolArrayOutputWithContext(context.Context) GetNetworkIsolatedDhcpPoolArrayOutput
}

type GetNetworkIsolatedDhcpPoolArray []GetNetworkIsolatedDhcpPoolInput

func (GetNetworkIsolatedDhcpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedDhcpPool)(nil)).Elem()
}

func (i GetNetworkIsolatedDhcpPoolArray) ToGetNetworkIsolatedDhcpPoolArrayOutput() GetNetworkIsolatedDhcpPoolArrayOutput {
	return i.ToGetNetworkIsolatedDhcpPoolArrayOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedDhcpPoolArray) ToGetNetworkIsolatedDhcpPoolArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedDhcpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedDhcpPoolArrayOutput)
}

type GetNetworkIsolatedDhcpPoolOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedDhcpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedDhcpPool)(nil)).Elem()
}

func (o GetNetworkIsolatedDhcpPoolOutput) ToGetNetworkIsolatedDhcpPoolOutput() GetNetworkIsolatedDhcpPoolOutput {
	return o
}

func (o GetNetworkIsolatedDhcpPoolOutput) ToGetNetworkIsolatedDhcpPoolOutputWithContext(ctx context.Context) GetNetworkIsolatedDhcpPoolOutput {
	return o
}

// The default DHCP lease time to use
func (o GetNetworkIsolatedDhcpPoolOutput) DefaultLeaseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkIsolatedDhcpPool) int { return v.DefaultLeaseTime }).(pulumi.IntOutput)
}

// The final address in the IP Range
func (o GetNetworkIsolatedDhcpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedDhcpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// The maximum DHCP lease time to use
func (o GetNetworkIsolatedDhcpPoolOutput) MaxLeaseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkIsolatedDhcpPool) int { return v.MaxLeaseTime }).(pulumi.IntOutput)
}

// The first address in the IP Range
func (o GetNetworkIsolatedDhcpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedDhcpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNetworkIsolatedDhcpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedDhcpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedDhcpPool)(nil)).Elem()
}

func (o GetNetworkIsolatedDhcpPoolArrayOutput) ToGetNetworkIsolatedDhcpPoolArrayOutput() GetNetworkIsolatedDhcpPoolArrayOutput {
	return o
}

func (o GetNetworkIsolatedDhcpPoolArrayOutput) ToGetNetworkIsolatedDhcpPoolArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedDhcpPoolArrayOutput {
	return o
}

func (o GetNetworkIsolatedDhcpPoolArrayOutput) Index(i pulumi.IntInput) GetNetworkIsolatedDhcpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkIsolatedDhcpPool {
		return vs[0].([]GetNetworkIsolatedDhcpPool)[vs[1].(int)]
	}).(GetNetworkIsolatedDhcpPoolOutput)
}

type GetNetworkIsolatedFilter struct {
	// Search by IP. The value can be a regular expression
	Ip *string `pulumi:"ip"`
	// metadata filter
	Metadatas []GetNetworkIsolatedFilterMetadata `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetNetworkIsolatedFilterInput is an input type that accepts GetNetworkIsolatedFilterArgs and GetNetworkIsolatedFilterOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedFilterInput` via:
//
//	GetNetworkIsolatedFilterArgs{...}
type GetNetworkIsolatedFilterInput interface {
	pulumi.Input

	ToGetNetworkIsolatedFilterOutput() GetNetworkIsolatedFilterOutput
	ToGetNetworkIsolatedFilterOutputWithContext(context.Context) GetNetworkIsolatedFilterOutput
}

type GetNetworkIsolatedFilterArgs struct {
	// Search by IP. The value can be a regular expression
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// metadata filter
	Metadatas GetNetworkIsolatedFilterMetadataArrayInput `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetNetworkIsolatedFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedFilter)(nil)).Elem()
}

func (i GetNetworkIsolatedFilterArgs) ToGetNetworkIsolatedFilterOutput() GetNetworkIsolatedFilterOutput {
	return i.ToGetNetworkIsolatedFilterOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedFilterArgs) ToGetNetworkIsolatedFilterOutputWithContext(ctx context.Context) GetNetworkIsolatedFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedFilterOutput)
}

func (i GetNetworkIsolatedFilterArgs) ToGetNetworkIsolatedFilterPtrOutput() GetNetworkIsolatedFilterPtrOutput {
	return i.ToGetNetworkIsolatedFilterPtrOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedFilterArgs) ToGetNetworkIsolatedFilterPtrOutputWithContext(ctx context.Context) GetNetworkIsolatedFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedFilterOutput).ToGetNetworkIsolatedFilterPtrOutputWithContext(ctx)
}

// GetNetworkIsolatedFilterPtrInput is an input type that accepts GetNetworkIsolatedFilterArgs, GetNetworkIsolatedFilterPtr and GetNetworkIsolatedFilterPtrOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedFilterPtrInput` via:
//
//	        GetNetworkIsolatedFilterArgs{...}
//
//	or:
//
//	        nil
type GetNetworkIsolatedFilterPtrInput interface {
	pulumi.Input

	ToGetNetworkIsolatedFilterPtrOutput() GetNetworkIsolatedFilterPtrOutput
	ToGetNetworkIsolatedFilterPtrOutputWithContext(context.Context) GetNetworkIsolatedFilterPtrOutput
}

type getNetworkIsolatedFilterPtrType GetNetworkIsolatedFilterArgs

func GetNetworkIsolatedFilterPtr(v *GetNetworkIsolatedFilterArgs) GetNetworkIsolatedFilterPtrInput {
	return (*getNetworkIsolatedFilterPtrType)(v)
}

func (*getNetworkIsolatedFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkIsolatedFilter)(nil)).Elem()
}

func (i *getNetworkIsolatedFilterPtrType) ToGetNetworkIsolatedFilterPtrOutput() GetNetworkIsolatedFilterPtrOutput {
	return i.ToGetNetworkIsolatedFilterPtrOutputWithContext(context.Background())
}

func (i *getNetworkIsolatedFilterPtrType) ToGetNetworkIsolatedFilterPtrOutputWithContext(ctx context.Context) GetNetworkIsolatedFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedFilterPtrOutput)
}

type GetNetworkIsolatedFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedFilter)(nil)).Elem()
}

func (o GetNetworkIsolatedFilterOutput) ToGetNetworkIsolatedFilterOutput() GetNetworkIsolatedFilterOutput {
	return o
}

func (o GetNetworkIsolatedFilterOutput) ToGetNetworkIsolatedFilterOutputWithContext(ctx context.Context) GetNetworkIsolatedFilterOutput {
	return o
}

func (o GetNetworkIsolatedFilterOutput) ToGetNetworkIsolatedFilterPtrOutput() GetNetworkIsolatedFilterPtrOutput {
	return o.ToGetNetworkIsolatedFilterPtrOutputWithContext(context.Background())
}

func (o GetNetworkIsolatedFilterOutput) ToGetNetworkIsolatedFilterPtrOutputWithContext(ctx context.Context) GetNetworkIsolatedFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetNetworkIsolatedFilter) *GetNetworkIsolatedFilter {
		return &v
	}).(GetNetworkIsolatedFilterPtrOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNetworkIsolatedFilterOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkIsolatedFilter) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// metadata filter
func (o GetNetworkIsolatedFilterOutput) Metadatas() GetNetworkIsolatedFilterMetadataArrayOutput {
	return o.ApplyT(func(v GetNetworkIsolatedFilter) []GetNetworkIsolatedFilterMetadata { return v.Metadatas }).(GetNetworkIsolatedFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetNetworkIsolatedFilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkIsolatedFilter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetNetworkIsolatedFilterPtrOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkIsolatedFilter)(nil)).Elem()
}

func (o GetNetworkIsolatedFilterPtrOutput) ToGetNetworkIsolatedFilterPtrOutput() GetNetworkIsolatedFilterPtrOutput {
	return o
}

func (o GetNetworkIsolatedFilterPtrOutput) ToGetNetworkIsolatedFilterPtrOutputWithContext(ctx context.Context) GetNetworkIsolatedFilterPtrOutput {
	return o
}

func (o GetNetworkIsolatedFilterPtrOutput) Elem() GetNetworkIsolatedFilterOutput {
	return o.ApplyT(func(v *GetNetworkIsolatedFilter) GetNetworkIsolatedFilter {
		if v != nil {
			return *v
		}
		var ret GetNetworkIsolatedFilter
		return ret
	}).(GetNetworkIsolatedFilterOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNetworkIsolatedFilterPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNetworkIsolatedFilter) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// metadata filter
func (o GetNetworkIsolatedFilterPtrOutput) Metadatas() GetNetworkIsolatedFilterMetadataArrayOutput {
	return o.ApplyT(func(v *GetNetworkIsolatedFilter) []GetNetworkIsolatedFilterMetadata {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(GetNetworkIsolatedFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetNetworkIsolatedFilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNetworkIsolatedFilter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetNetworkIsolatedFilterMetadata struct {
	// True if is a metadata@SYSTEM key
	IsSystem *bool `pulumi:"isSystem"`
	// Metadata key (field name)
	Key string `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type *string `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch *bool `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value string `pulumi:"value"`
}

// GetNetworkIsolatedFilterMetadataInput is an input type that accepts GetNetworkIsolatedFilterMetadataArgs and GetNetworkIsolatedFilterMetadataOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedFilterMetadataInput` via:
//
//	GetNetworkIsolatedFilterMetadataArgs{...}
type GetNetworkIsolatedFilterMetadataInput interface {
	pulumi.Input

	ToGetNetworkIsolatedFilterMetadataOutput() GetNetworkIsolatedFilterMetadataOutput
	ToGetNetworkIsolatedFilterMetadataOutputWithContext(context.Context) GetNetworkIsolatedFilterMetadataOutput
}

type GetNetworkIsolatedFilterMetadataArgs struct {
	// True if is a metadata@SYSTEM key
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Metadata key (field name)
	Key pulumi.StringInput `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch pulumi.BoolPtrInput `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkIsolatedFilterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedFilterMetadata)(nil)).Elem()
}

func (i GetNetworkIsolatedFilterMetadataArgs) ToGetNetworkIsolatedFilterMetadataOutput() GetNetworkIsolatedFilterMetadataOutput {
	return i.ToGetNetworkIsolatedFilterMetadataOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedFilterMetadataArgs) ToGetNetworkIsolatedFilterMetadataOutputWithContext(ctx context.Context) GetNetworkIsolatedFilterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedFilterMetadataOutput)
}

// GetNetworkIsolatedFilterMetadataArrayInput is an input type that accepts GetNetworkIsolatedFilterMetadataArray and GetNetworkIsolatedFilterMetadataArrayOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedFilterMetadataArrayInput` via:
//
//	GetNetworkIsolatedFilterMetadataArray{ GetNetworkIsolatedFilterMetadataArgs{...} }
type GetNetworkIsolatedFilterMetadataArrayInput interface {
	pulumi.Input

	ToGetNetworkIsolatedFilterMetadataArrayOutput() GetNetworkIsolatedFilterMetadataArrayOutput
	ToGetNetworkIsolatedFilterMetadataArrayOutputWithContext(context.Context) GetNetworkIsolatedFilterMetadataArrayOutput
}

type GetNetworkIsolatedFilterMetadataArray []GetNetworkIsolatedFilterMetadataInput

func (GetNetworkIsolatedFilterMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedFilterMetadata)(nil)).Elem()
}

func (i GetNetworkIsolatedFilterMetadataArray) ToGetNetworkIsolatedFilterMetadataArrayOutput() GetNetworkIsolatedFilterMetadataArrayOutput {
	return i.ToGetNetworkIsolatedFilterMetadataArrayOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedFilterMetadataArray) ToGetNetworkIsolatedFilterMetadataArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedFilterMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedFilterMetadataArrayOutput)
}

type GetNetworkIsolatedFilterMetadataOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedFilterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedFilterMetadata)(nil)).Elem()
}

func (o GetNetworkIsolatedFilterMetadataOutput) ToGetNetworkIsolatedFilterMetadataOutput() GetNetworkIsolatedFilterMetadataOutput {
	return o
}

func (o GetNetworkIsolatedFilterMetadataOutput) ToGetNetworkIsolatedFilterMetadataOutputWithContext(ctx context.Context) GetNetworkIsolatedFilterMetadataOutput {
	return o
}

// True if is a metadata@SYSTEM key
func (o GetNetworkIsolatedFilterMetadataOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworkIsolatedFilterMetadata) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Metadata key (field name)
func (o GetNetworkIsolatedFilterMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedFilterMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// Type of metadata value (needed only if "useApiSearch" is true)
func (o GetNetworkIsolatedFilterMetadataOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkIsolatedFilterMetadata) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If true, will search the vCD using native metadata query (without regular expressions)
func (o GetNetworkIsolatedFilterMetadataOutput) UseApiSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworkIsolatedFilterMetadata) *bool { return v.UseApiSearch }).(pulumi.BoolPtrOutput)
}

// Metadata value (can be a regular expression if "useApiSearch" is false)
func (o GetNetworkIsolatedFilterMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedFilterMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkIsolatedFilterMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedFilterMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedFilterMetadata)(nil)).Elem()
}

func (o GetNetworkIsolatedFilterMetadataArrayOutput) ToGetNetworkIsolatedFilterMetadataArrayOutput() GetNetworkIsolatedFilterMetadataArrayOutput {
	return o
}

func (o GetNetworkIsolatedFilterMetadataArrayOutput) ToGetNetworkIsolatedFilterMetadataArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedFilterMetadataArrayOutput {
	return o
}

func (o GetNetworkIsolatedFilterMetadataArrayOutput) Index(i pulumi.IntInput) GetNetworkIsolatedFilterMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkIsolatedFilterMetadata {
		return vs[0].([]GetNetworkIsolatedFilterMetadata)[vs[1].(int)]
	}).(GetNetworkIsolatedFilterMetadataOutput)
}

type GetNetworkIsolatedMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetNetworkIsolatedMetadataEntryInput is an input type that accepts GetNetworkIsolatedMetadataEntryArgs and GetNetworkIsolatedMetadataEntryOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedMetadataEntryInput` via:
//
//	GetNetworkIsolatedMetadataEntryArgs{...}
type GetNetworkIsolatedMetadataEntryInput interface {
	pulumi.Input

	ToGetNetworkIsolatedMetadataEntryOutput() GetNetworkIsolatedMetadataEntryOutput
	ToGetNetworkIsolatedMetadataEntryOutputWithContext(context.Context) GetNetworkIsolatedMetadataEntryOutput
}

type GetNetworkIsolatedMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkIsolatedMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedMetadataEntry)(nil)).Elem()
}

func (i GetNetworkIsolatedMetadataEntryArgs) ToGetNetworkIsolatedMetadataEntryOutput() GetNetworkIsolatedMetadataEntryOutput {
	return i.ToGetNetworkIsolatedMetadataEntryOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedMetadataEntryArgs) ToGetNetworkIsolatedMetadataEntryOutputWithContext(ctx context.Context) GetNetworkIsolatedMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedMetadataEntryOutput)
}

// GetNetworkIsolatedMetadataEntryArrayInput is an input type that accepts GetNetworkIsolatedMetadataEntryArray and GetNetworkIsolatedMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedMetadataEntryArrayInput` via:
//
//	GetNetworkIsolatedMetadataEntryArray{ GetNetworkIsolatedMetadataEntryArgs{...} }
type GetNetworkIsolatedMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetNetworkIsolatedMetadataEntryArrayOutput() GetNetworkIsolatedMetadataEntryArrayOutput
	ToGetNetworkIsolatedMetadataEntryArrayOutputWithContext(context.Context) GetNetworkIsolatedMetadataEntryArrayOutput
}

type GetNetworkIsolatedMetadataEntryArray []GetNetworkIsolatedMetadataEntryInput

func (GetNetworkIsolatedMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedMetadataEntry)(nil)).Elem()
}

func (i GetNetworkIsolatedMetadataEntryArray) ToGetNetworkIsolatedMetadataEntryArrayOutput() GetNetworkIsolatedMetadataEntryArrayOutput {
	return i.ToGetNetworkIsolatedMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedMetadataEntryArray) ToGetNetworkIsolatedMetadataEntryArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedMetadataEntryArrayOutput)
}

type GetNetworkIsolatedMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedMetadataEntry)(nil)).Elem()
}

func (o GetNetworkIsolatedMetadataEntryOutput) ToGetNetworkIsolatedMetadataEntryOutput() GetNetworkIsolatedMetadataEntryOutput {
	return o
}

func (o GetNetworkIsolatedMetadataEntryOutput) ToGetNetworkIsolatedMetadataEntryOutputWithContext(ctx context.Context) GetNetworkIsolatedMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetNetworkIsolatedMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkIsolatedMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetNetworkIsolatedMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetNetworkIsolatedMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetNetworkIsolatedMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetNetworkIsolatedMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkIsolatedMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedMetadataEntry)(nil)).Elem()
}

func (o GetNetworkIsolatedMetadataEntryArrayOutput) ToGetNetworkIsolatedMetadataEntryArrayOutput() GetNetworkIsolatedMetadataEntryArrayOutput {
	return o
}

func (o GetNetworkIsolatedMetadataEntryArrayOutput) ToGetNetworkIsolatedMetadataEntryArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedMetadataEntryArrayOutput {
	return o
}

func (o GetNetworkIsolatedMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetNetworkIsolatedMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkIsolatedMetadataEntry {
		return vs[0].([]GetNetworkIsolatedMetadataEntry)[vs[1].(int)]
	}).(GetNetworkIsolatedMetadataEntryOutput)
}

type GetNetworkIsolatedStaticIpPool struct {
	// The final address in the IP Range
	EndAddress string `pulumi:"endAddress"`
	// The first address in the IP Range
	StartAddress string `pulumi:"startAddress"`
}

// GetNetworkIsolatedStaticIpPoolInput is an input type that accepts GetNetworkIsolatedStaticIpPoolArgs and GetNetworkIsolatedStaticIpPoolOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedStaticIpPoolInput` via:
//
//	GetNetworkIsolatedStaticIpPoolArgs{...}
type GetNetworkIsolatedStaticIpPoolInput interface {
	pulumi.Input

	ToGetNetworkIsolatedStaticIpPoolOutput() GetNetworkIsolatedStaticIpPoolOutput
	ToGetNetworkIsolatedStaticIpPoolOutputWithContext(context.Context) GetNetworkIsolatedStaticIpPoolOutput
}

type GetNetworkIsolatedStaticIpPoolArgs struct {
	// The final address in the IP Range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// The first address in the IP Range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNetworkIsolatedStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedStaticIpPool)(nil)).Elem()
}

func (i GetNetworkIsolatedStaticIpPoolArgs) ToGetNetworkIsolatedStaticIpPoolOutput() GetNetworkIsolatedStaticIpPoolOutput {
	return i.ToGetNetworkIsolatedStaticIpPoolOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedStaticIpPoolArgs) ToGetNetworkIsolatedStaticIpPoolOutputWithContext(ctx context.Context) GetNetworkIsolatedStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedStaticIpPoolOutput)
}

// GetNetworkIsolatedStaticIpPoolArrayInput is an input type that accepts GetNetworkIsolatedStaticIpPoolArray and GetNetworkIsolatedStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedStaticIpPoolArrayInput` via:
//
//	GetNetworkIsolatedStaticIpPoolArray{ GetNetworkIsolatedStaticIpPoolArgs{...} }
type GetNetworkIsolatedStaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetNetworkIsolatedStaticIpPoolArrayOutput() GetNetworkIsolatedStaticIpPoolArrayOutput
	ToGetNetworkIsolatedStaticIpPoolArrayOutputWithContext(context.Context) GetNetworkIsolatedStaticIpPoolArrayOutput
}

type GetNetworkIsolatedStaticIpPoolArray []GetNetworkIsolatedStaticIpPoolInput

func (GetNetworkIsolatedStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedStaticIpPool)(nil)).Elem()
}

func (i GetNetworkIsolatedStaticIpPoolArray) ToGetNetworkIsolatedStaticIpPoolArrayOutput() GetNetworkIsolatedStaticIpPoolArrayOutput {
	return i.ToGetNetworkIsolatedStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedStaticIpPoolArray) ToGetNetworkIsolatedStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedStaticIpPoolArrayOutput)
}

type GetNetworkIsolatedStaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedStaticIpPool)(nil)).Elem()
}

func (o GetNetworkIsolatedStaticIpPoolOutput) ToGetNetworkIsolatedStaticIpPoolOutput() GetNetworkIsolatedStaticIpPoolOutput {
	return o
}

func (o GetNetworkIsolatedStaticIpPoolOutput) ToGetNetworkIsolatedStaticIpPoolOutputWithContext(ctx context.Context) GetNetworkIsolatedStaticIpPoolOutput {
	return o
}

// The final address in the IP Range
func (o GetNetworkIsolatedStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// The first address in the IP Range
func (o GetNetworkIsolatedStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNetworkIsolatedStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedStaticIpPool)(nil)).Elem()
}

func (o GetNetworkIsolatedStaticIpPoolArrayOutput) ToGetNetworkIsolatedStaticIpPoolArrayOutput() GetNetworkIsolatedStaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkIsolatedStaticIpPoolArrayOutput) ToGetNetworkIsolatedStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedStaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkIsolatedStaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetNetworkIsolatedStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkIsolatedStaticIpPool {
		return vs[0].([]GetNetworkIsolatedStaticIpPool)[vs[1].(int)]
	}).(GetNetworkIsolatedStaticIpPoolOutput)
}

type GetNetworkIsolatedV2Filter struct {
	// Search by IP. The value can be a regular expression
	Ip *string `pulumi:"ip"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetNetworkIsolatedV2FilterInput is an input type that accepts GetNetworkIsolatedV2FilterArgs and GetNetworkIsolatedV2FilterOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedV2FilterInput` via:
//
//	GetNetworkIsolatedV2FilterArgs{...}
type GetNetworkIsolatedV2FilterInput interface {
	pulumi.Input

	ToGetNetworkIsolatedV2FilterOutput() GetNetworkIsolatedV2FilterOutput
	ToGetNetworkIsolatedV2FilterOutputWithContext(context.Context) GetNetworkIsolatedV2FilterOutput
}

type GetNetworkIsolatedV2FilterArgs struct {
	// Search by IP. The value can be a regular expression
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetNetworkIsolatedV2FilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedV2Filter)(nil)).Elem()
}

func (i GetNetworkIsolatedV2FilterArgs) ToGetNetworkIsolatedV2FilterOutput() GetNetworkIsolatedV2FilterOutput {
	return i.ToGetNetworkIsolatedV2FilterOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedV2FilterArgs) ToGetNetworkIsolatedV2FilterOutputWithContext(ctx context.Context) GetNetworkIsolatedV2FilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedV2FilterOutput)
}

func (i GetNetworkIsolatedV2FilterArgs) ToGetNetworkIsolatedV2FilterPtrOutput() GetNetworkIsolatedV2FilterPtrOutput {
	return i.ToGetNetworkIsolatedV2FilterPtrOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedV2FilterArgs) ToGetNetworkIsolatedV2FilterPtrOutputWithContext(ctx context.Context) GetNetworkIsolatedV2FilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedV2FilterOutput).ToGetNetworkIsolatedV2FilterPtrOutputWithContext(ctx)
}

// GetNetworkIsolatedV2FilterPtrInput is an input type that accepts GetNetworkIsolatedV2FilterArgs, GetNetworkIsolatedV2FilterPtr and GetNetworkIsolatedV2FilterPtrOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedV2FilterPtrInput` via:
//
//	        GetNetworkIsolatedV2FilterArgs{...}
//
//	or:
//
//	        nil
type GetNetworkIsolatedV2FilterPtrInput interface {
	pulumi.Input

	ToGetNetworkIsolatedV2FilterPtrOutput() GetNetworkIsolatedV2FilterPtrOutput
	ToGetNetworkIsolatedV2FilterPtrOutputWithContext(context.Context) GetNetworkIsolatedV2FilterPtrOutput
}

type getNetworkIsolatedV2FilterPtrType GetNetworkIsolatedV2FilterArgs

func GetNetworkIsolatedV2FilterPtr(v *GetNetworkIsolatedV2FilterArgs) GetNetworkIsolatedV2FilterPtrInput {
	return (*getNetworkIsolatedV2FilterPtrType)(v)
}

func (*getNetworkIsolatedV2FilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkIsolatedV2Filter)(nil)).Elem()
}

func (i *getNetworkIsolatedV2FilterPtrType) ToGetNetworkIsolatedV2FilterPtrOutput() GetNetworkIsolatedV2FilterPtrOutput {
	return i.ToGetNetworkIsolatedV2FilterPtrOutputWithContext(context.Background())
}

func (i *getNetworkIsolatedV2FilterPtrType) ToGetNetworkIsolatedV2FilterPtrOutputWithContext(ctx context.Context) GetNetworkIsolatedV2FilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedV2FilterPtrOutput)
}

type GetNetworkIsolatedV2FilterOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedV2FilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedV2Filter)(nil)).Elem()
}

func (o GetNetworkIsolatedV2FilterOutput) ToGetNetworkIsolatedV2FilterOutput() GetNetworkIsolatedV2FilterOutput {
	return o
}

func (o GetNetworkIsolatedV2FilterOutput) ToGetNetworkIsolatedV2FilterOutputWithContext(ctx context.Context) GetNetworkIsolatedV2FilterOutput {
	return o
}

func (o GetNetworkIsolatedV2FilterOutput) ToGetNetworkIsolatedV2FilterPtrOutput() GetNetworkIsolatedV2FilterPtrOutput {
	return o.ToGetNetworkIsolatedV2FilterPtrOutputWithContext(context.Background())
}

func (o GetNetworkIsolatedV2FilterOutput) ToGetNetworkIsolatedV2FilterPtrOutputWithContext(ctx context.Context) GetNetworkIsolatedV2FilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetNetworkIsolatedV2Filter) *GetNetworkIsolatedV2Filter {
		return &v
	}).(GetNetworkIsolatedV2FilterPtrOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNetworkIsolatedV2FilterOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2Filter) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Search by name with a regular expression
func (o GetNetworkIsolatedV2FilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2Filter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetNetworkIsolatedV2FilterPtrOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedV2FilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkIsolatedV2Filter)(nil)).Elem()
}

func (o GetNetworkIsolatedV2FilterPtrOutput) ToGetNetworkIsolatedV2FilterPtrOutput() GetNetworkIsolatedV2FilterPtrOutput {
	return o
}

func (o GetNetworkIsolatedV2FilterPtrOutput) ToGetNetworkIsolatedV2FilterPtrOutputWithContext(ctx context.Context) GetNetworkIsolatedV2FilterPtrOutput {
	return o
}

func (o GetNetworkIsolatedV2FilterPtrOutput) Elem() GetNetworkIsolatedV2FilterOutput {
	return o.ApplyT(func(v *GetNetworkIsolatedV2Filter) GetNetworkIsolatedV2Filter {
		if v != nil {
			return *v
		}
		var ret GetNetworkIsolatedV2Filter
		return ret
	}).(GetNetworkIsolatedV2FilterOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNetworkIsolatedV2FilterPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNetworkIsolatedV2Filter) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Search by name with a regular expression
func (o GetNetworkIsolatedV2FilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNetworkIsolatedV2Filter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetNetworkIsolatedV2MetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetNetworkIsolatedV2MetadataEntryInput is an input type that accepts GetNetworkIsolatedV2MetadataEntryArgs and GetNetworkIsolatedV2MetadataEntryOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedV2MetadataEntryInput` via:
//
//	GetNetworkIsolatedV2MetadataEntryArgs{...}
type GetNetworkIsolatedV2MetadataEntryInput interface {
	pulumi.Input

	ToGetNetworkIsolatedV2MetadataEntryOutput() GetNetworkIsolatedV2MetadataEntryOutput
	ToGetNetworkIsolatedV2MetadataEntryOutputWithContext(context.Context) GetNetworkIsolatedV2MetadataEntryOutput
}

type GetNetworkIsolatedV2MetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkIsolatedV2MetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedV2MetadataEntry)(nil)).Elem()
}

func (i GetNetworkIsolatedV2MetadataEntryArgs) ToGetNetworkIsolatedV2MetadataEntryOutput() GetNetworkIsolatedV2MetadataEntryOutput {
	return i.ToGetNetworkIsolatedV2MetadataEntryOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedV2MetadataEntryArgs) ToGetNetworkIsolatedV2MetadataEntryOutputWithContext(ctx context.Context) GetNetworkIsolatedV2MetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedV2MetadataEntryOutput)
}

// GetNetworkIsolatedV2MetadataEntryArrayInput is an input type that accepts GetNetworkIsolatedV2MetadataEntryArray and GetNetworkIsolatedV2MetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedV2MetadataEntryArrayInput` via:
//
//	GetNetworkIsolatedV2MetadataEntryArray{ GetNetworkIsolatedV2MetadataEntryArgs{...} }
type GetNetworkIsolatedV2MetadataEntryArrayInput interface {
	pulumi.Input

	ToGetNetworkIsolatedV2MetadataEntryArrayOutput() GetNetworkIsolatedV2MetadataEntryArrayOutput
	ToGetNetworkIsolatedV2MetadataEntryArrayOutputWithContext(context.Context) GetNetworkIsolatedV2MetadataEntryArrayOutput
}

type GetNetworkIsolatedV2MetadataEntryArray []GetNetworkIsolatedV2MetadataEntryInput

func (GetNetworkIsolatedV2MetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedV2MetadataEntry)(nil)).Elem()
}

func (i GetNetworkIsolatedV2MetadataEntryArray) ToGetNetworkIsolatedV2MetadataEntryArrayOutput() GetNetworkIsolatedV2MetadataEntryArrayOutput {
	return i.ToGetNetworkIsolatedV2MetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedV2MetadataEntryArray) ToGetNetworkIsolatedV2MetadataEntryArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedV2MetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedV2MetadataEntryArrayOutput)
}

type GetNetworkIsolatedV2MetadataEntryOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedV2MetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedV2MetadataEntry)(nil)).Elem()
}

func (o GetNetworkIsolatedV2MetadataEntryOutput) ToGetNetworkIsolatedV2MetadataEntryOutput() GetNetworkIsolatedV2MetadataEntryOutput {
	return o
}

func (o GetNetworkIsolatedV2MetadataEntryOutput) ToGetNetworkIsolatedV2MetadataEntryOutputWithContext(ctx context.Context) GetNetworkIsolatedV2MetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetNetworkIsolatedV2MetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2MetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetNetworkIsolatedV2MetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2MetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetNetworkIsolatedV2MetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2MetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetNetworkIsolatedV2MetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2MetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetNetworkIsolatedV2MetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2MetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkIsolatedV2MetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedV2MetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedV2MetadataEntry)(nil)).Elem()
}

func (o GetNetworkIsolatedV2MetadataEntryArrayOutput) ToGetNetworkIsolatedV2MetadataEntryArrayOutput() GetNetworkIsolatedV2MetadataEntryArrayOutput {
	return o
}

func (o GetNetworkIsolatedV2MetadataEntryArrayOutput) ToGetNetworkIsolatedV2MetadataEntryArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedV2MetadataEntryArrayOutput {
	return o
}

func (o GetNetworkIsolatedV2MetadataEntryArrayOutput) Index(i pulumi.IntInput) GetNetworkIsolatedV2MetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkIsolatedV2MetadataEntry {
		return vs[0].([]GetNetworkIsolatedV2MetadataEntry)[vs[1].(int)]
	}).(GetNetworkIsolatedV2MetadataEntryOutput)
}

type GetNetworkIsolatedV2SecondaryStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetNetworkIsolatedV2SecondaryStaticIpPoolInput is an input type that accepts GetNetworkIsolatedV2SecondaryStaticIpPoolArgs and GetNetworkIsolatedV2SecondaryStaticIpPoolOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedV2SecondaryStaticIpPoolInput` via:
//
//	GetNetworkIsolatedV2SecondaryStaticIpPoolArgs{...}
type GetNetworkIsolatedV2SecondaryStaticIpPoolInput interface {
	pulumi.Input

	ToGetNetworkIsolatedV2SecondaryStaticIpPoolOutput() GetNetworkIsolatedV2SecondaryStaticIpPoolOutput
	ToGetNetworkIsolatedV2SecondaryStaticIpPoolOutputWithContext(context.Context) GetNetworkIsolatedV2SecondaryStaticIpPoolOutput
}

type GetNetworkIsolatedV2SecondaryStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNetworkIsolatedV2SecondaryStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (i GetNetworkIsolatedV2SecondaryStaticIpPoolArgs) ToGetNetworkIsolatedV2SecondaryStaticIpPoolOutput() GetNetworkIsolatedV2SecondaryStaticIpPoolOutput {
	return i.ToGetNetworkIsolatedV2SecondaryStaticIpPoolOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedV2SecondaryStaticIpPoolArgs) ToGetNetworkIsolatedV2SecondaryStaticIpPoolOutputWithContext(ctx context.Context) GetNetworkIsolatedV2SecondaryStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedV2SecondaryStaticIpPoolOutput)
}

// GetNetworkIsolatedV2SecondaryStaticIpPoolArrayInput is an input type that accepts GetNetworkIsolatedV2SecondaryStaticIpPoolArray and GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedV2SecondaryStaticIpPoolArrayInput` via:
//
//	GetNetworkIsolatedV2SecondaryStaticIpPoolArray{ GetNetworkIsolatedV2SecondaryStaticIpPoolArgs{...} }
type GetNetworkIsolatedV2SecondaryStaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput() GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput
	ToGetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutputWithContext(context.Context) GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput
}

type GetNetworkIsolatedV2SecondaryStaticIpPoolArray []GetNetworkIsolatedV2SecondaryStaticIpPoolInput

func (GetNetworkIsolatedV2SecondaryStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (i GetNetworkIsolatedV2SecondaryStaticIpPoolArray) ToGetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput() GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput {
	return i.ToGetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedV2SecondaryStaticIpPoolArray) ToGetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput)
}

type GetNetworkIsolatedV2SecondaryStaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedV2SecondaryStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (o GetNetworkIsolatedV2SecondaryStaticIpPoolOutput) ToGetNetworkIsolatedV2SecondaryStaticIpPoolOutput() GetNetworkIsolatedV2SecondaryStaticIpPoolOutput {
	return o
}

func (o GetNetworkIsolatedV2SecondaryStaticIpPoolOutput) ToGetNetworkIsolatedV2SecondaryStaticIpPoolOutputWithContext(ctx context.Context) GetNetworkIsolatedV2SecondaryStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o GetNetworkIsolatedV2SecondaryStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2SecondaryStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o GetNetworkIsolatedV2SecondaryStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2SecondaryStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (o GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput) ToGetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput() GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput) ToGetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetNetworkIsolatedV2SecondaryStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkIsolatedV2SecondaryStaticIpPool {
		return vs[0].([]GetNetworkIsolatedV2SecondaryStaticIpPool)[vs[1].(int)]
	}).(GetNetworkIsolatedV2SecondaryStaticIpPoolOutput)
}

type GetNetworkIsolatedV2StaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetNetworkIsolatedV2StaticIpPoolInput is an input type that accepts GetNetworkIsolatedV2StaticIpPoolArgs and GetNetworkIsolatedV2StaticIpPoolOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedV2StaticIpPoolInput` via:
//
//	GetNetworkIsolatedV2StaticIpPoolArgs{...}
type GetNetworkIsolatedV2StaticIpPoolInput interface {
	pulumi.Input

	ToGetNetworkIsolatedV2StaticIpPoolOutput() GetNetworkIsolatedV2StaticIpPoolOutput
	ToGetNetworkIsolatedV2StaticIpPoolOutputWithContext(context.Context) GetNetworkIsolatedV2StaticIpPoolOutput
}

type GetNetworkIsolatedV2StaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNetworkIsolatedV2StaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedV2StaticIpPool)(nil)).Elem()
}

func (i GetNetworkIsolatedV2StaticIpPoolArgs) ToGetNetworkIsolatedV2StaticIpPoolOutput() GetNetworkIsolatedV2StaticIpPoolOutput {
	return i.ToGetNetworkIsolatedV2StaticIpPoolOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedV2StaticIpPoolArgs) ToGetNetworkIsolatedV2StaticIpPoolOutputWithContext(ctx context.Context) GetNetworkIsolatedV2StaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedV2StaticIpPoolOutput)
}

// GetNetworkIsolatedV2StaticIpPoolArrayInput is an input type that accepts GetNetworkIsolatedV2StaticIpPoolArray and GetNetworkIsolatedV2StaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetNetworkIsolatedV2StaticIpPoolArrayInput` via:
//
//	GetNetworkIsolatedV2StaticIpPoolArray{ GetNetworkIsolatedV2StaticIpPoolArgs{...} }
type GetNetworkIsolatedV2StaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetNetworkIsolatedV2StaticIpPoolArrayOutput() GetNetworkIsolatedV2StaticIpPoolArrayOutput
	ToGetNetworkIsolatedV2StaticIpPoolArrayOutputWithContext(context.Context) GetNetworkIsolatedV2StaticIpPoolArrayOutput
}

type GetNetworkIsolatedV2StaticIpPoolArray []GetNetworkIsolatedV2StaticIpPoolInput

func (GetNetworkIsolatedV2StaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedV2StaticIpPool)(nil)).Elem()
}

func (i GetNetworkIsolatedV2StaticIpPoolArray) ToGetNetworkIsolatedV2StaticIpPoolArrayOutput() GetNetworkIsolatedV2StaticIpPoolArrayOutput {
	return i.ToGetNetworkIsolatedV2StaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetNetworkIsolatedV2StaticIpPoolArray) ToGetNetworkIsolatedV2StaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedV2StaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkIsolatedV2StaticIpPoolArrayOutput)
}

type GetNetworkIsolatedV2StaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedV2StaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkIsolatedV2StaticIpPool)(nil)).Elem()
}

func (o GetNetworkIsolatedV2StaticIpPoolOutput) ToGetNetworkIsolatedV2StaticIpPoolOutput() GetNetworkIsolatedV2StaticIpPoolOutput {
	return o
}

func (o GetNetworkIsolatedV2StaticIpPoolOutput) ToGetNetworkIsolatedV2StaticIpPoolOutputWithContext(ctx context.Context) GetNetworkIsolatedV2StaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o GetNetworkIsolatedV2StaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2StaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o GetNetworkIsolatedV2StaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkIsolatedV2StaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNetworkIsolatedV2StaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkIsolatedV2StaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkIsolatedV2StaticIpPool)(nil)).Elem()
}

func (o GetNetworkIsolatedV2StaticIpPoolArrayOutput) ToGetNetworkIsolatedV2StaticIpPoolArrayOutput() GetNetworkIsolatedV2StaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkIsolatedV2StaticIpPoolArrayOutput) ToGetNetworkIsolatedV2StaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkIsolatedV2StaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkIsolatedV2StaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetNetworkIsolatedV2StaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkIsolatedV2StaticIpPool {
		return vs[0].([]GetNetworkIsolatedV2StaticIpPool)[vs[1].(int)]
	}).(GetNetworkIsolatedV2StaticIpPoolOutput)
}

type GetNetworkPoolBacking struct {
	// Distributed switch backing
	DistributedSwitches []GetNetworkPoolBackingDistributedSwitch `pulumi:"distributedSwitches"`
	// Port Group backing
	PortGroups []GetNetworkPoolBackingPortGroup `pulumi:"portGroups"`
	// Distributed Switch ID ranges (used with VLAN backing)
	RangeIds []GetNetworkPoolBackingRangeId `pulumi:"rangeIds"`
	// Transport Zone Backing
	TransportZones []GetNetworkPoolBackingTransportZone `pulumi:"transportZones"`
}

// GetNetworkPoolBackingInput is an input type that accepts GetNetworkPoolBackingArgs and GetNetworkPoolBackingOutput values.
// You can construct a concrete instance of `GetNetworkPoolBackingInput` via:
//
//	GetNetworkPoolBackingArgs{...}
type GetNetworkPoolBackingInput interface {
	pulumi.Input

	ToGetNetworkPoolBackingOutput() GetNetworkPoolBackingOutput
	ToGetNetworkPoolBackingOutputWithContext(context.Context) GetNetworkPoolBackingOutput
}

type GetNetworkPoolBackingArgs struct {
	// Distributed switch backing
	DistributedSwitches GetNetworkPoolBackingDistributedSwitchArrayInput `pulumi:"distributedSwitches"`
	// Port Group backing
	PortGroups GetNetworkPoolBackingPortGroupArrayInput `pulumi:"portGroups"`
	// Distributed Switch ID ranges (used with VLAN backing)
	RangeIds GetNetworkPoolBackingRangeIdArrayInput `pulumi:"rangeIds"`
	// Transport Zone Backing
	TransportZones GetNetworkPoolBackingTransportZoneArrayInput `pulumi:"transportZones"`
}

func (GetNetworkPoolBackingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPoolBacking)(nil)).Elem()
}

func (i GetNetworkPoolBackingArgs) ToGetNetworkPoolBackingOutput() GetNetworkPoolBackingOutput {
	return i.ToGetNetworkPoolBackingOutputWithContext(context.Background())
}

func (i GetNetworkPoolBackingArgs) ToGetNetworkPoolBackingOutputWithContext(ctx context.Context) GetNetworkPoolBackingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPoolBackingOutput)
}

// GetNetworkPoolBackingArrayInput is an input type that accepts GetNetworkPoolBackingArray and GetNetworkPoolBackingArrayOutput values.
// You can construct a concrete instance of `GetNetworkPoolBackingArrayInput` via:
//
//	GetNetworkPoolBackingArray{ GetNetworkPoolBackingArgs{...} }
type GetNetworkPoolBackingArrayInput interface {
	pulumi.Input

	ToGetNetworkPoolBackingArrayOutput() GetNetworkPoolBackingArrayOutput
	ToGetNetworkPoolBackingArrayOutputWithContext(context.Context) GetNetworkPoolBackingArrayOutput
}

type GetNetworkPoolBackingArray []GetNetworkPoolBackingInput

func (GetNetworkPoolBackingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPoolBacking)(nil)).Elem()
}

func (i GetNetworkPoolBackingArray) ToGetNetworkPoolBackingArrayOutput() GetNetworkPoolBackingArrayOutput {
	return i.ToGetNetworkPoolBackingArrayOutputWithContext(context.Background())
}

func (i GetNetworkPoolBackingArray) ToGetNetworkPoolBackingArrayOutputWithContext(ctx context.Context) GetNetworkPoolBackingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPoolBackingArrayOutput)
}

type GetNetworkPoolBackingOutput struct{ *pulumi.OutputState }

func (GetNetworkPoolBackingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPoolBacking)(nil)).Elem()
}

func (o GetNetworkPoolBackingOutput) ToGetNetworkPoolBackingOutput() GetNetworkPoolBackingOutput {
	return o
}

func (o GetNetworkPoolBackingOutput) ToGetNetworkPoolBackingOutputWithContext(ctx context.Context) GetNetworkPoolBackingOutput {
	return o
}

// Distributed switch backing
func (o GetNetworkPoolBackingOutput) DistributedSwitches() GetNetworkPoolBackingDistributedSwitchArrayOutput {
	return o.ApplyT(func(v GetNetworkPoolBacking) []GetNetworkPoolBackingDistributedSwitch { return v.DistributedSwitches }).(GetNetworkPoolBackingDistributedSwitchArrayOutput)
}

// Port Group backing
func (o GetNetworkPoolBackingOutput) PortGroups() GetNetworkPoolBackingPortGroupArrayOutput {
	return o.ApplyT(func(v GetNetworkPoolBacking) []GetNetworkPoolBackingPortGroup { return v.PortGroups }).(GetNetworkPoolBackingPortGroupArrayOutput)
}

// Distributed Switch ID ranges (used with VLAN backing)
func (o GetNetworkPoolBackingOutput) RangeIds() GetNetworkPoolBackingRangeIdArrayOutput {
	return o.ApplyT(func(v GetNetworkPoolBacking) []GetNetworkPoolBackingRangeId { return v.RangeIds }).(GetNetworkPoolBackingRangeIdArrayOutput)
}

// Transport Zone Backing
func (o GetNetworkPoolBackingOutput) TransportZones() GetNetworkPoolBackingTransportZoneArrayOutput {
	return o.ApplyT(func(v GetNetworkPoolBacking) []GetNetworkPoolBackingTransportZone { return v.TransportZones }).(GetNetworkPoolBackingTransportZoneArrayOutput)
}

type GetNetworkPoolBackingArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPoolBackingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPoolBacking)(nil)).Elem()
}

func (o GetNetworkPoolBackingArrayOutput) ToGetNetworkPoolBackingArrayOutput() GetNetworkPoolBackingArrayOutput {
	return o
}

func (o GetNetworkPoolBackingArrayOutput) ToGetNetworkPoolBackingArrayOutputWithContext(ctx context.Context) GetNetworkPoolBackingArrayOutput {
	return o
}

func (o GetNetworkPoolBackingArrayOutput) Index(i pulumi.IntInput) GetNetworkPoolBackingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPoolBacking {
		return vs[0].([]GetNetworkPoolBacking)[vs[1].(int)]
	}).(GetNetworkPoolBackingOutput)
}

type GetNetworkPoolBackingDistributedSwitch struct {
	// Backing ID
	Id string `pulumi:"id"`
	// network pool name.
	Name string `pulumi:"name"`
	// Backing Type (one of 'Transport Zone', 'Port Group', 'Distributed Switch')
	Type string `pulumi:"type"`
}

// GetNetworkPoolBackingDistributedSwitchInput is an input type that accepts GetNetworkPoolBackingDistributedSwitchArgs and GetNetworkPoolBackingDistributedSwitchOutput values.
// You can construct a concrete instance of `GetNetworkPoolBackingDistributedSwitchInput` via:
//
//	GetNetworkPoolBackingDistributedSwitchArgs{...}
type GetNetworkPoolBackingDistributedSwitchInput interface {
	pulumi.Input

	ToGetNetworkPoolBackingDistributedSwitchOutput() GetNetworkPoolBackingDistributedSwitchOutput
	ToGetNetworkPoolBackingDistributedSwitchOutputWithContext(context.Context) GetNetworkPoolBackingDistributedSwitchOutput
}

type GetNetworkPoolBackingDistributedSwitchArgs struct {
	// Backing ID
	Id pulumi.StringInput `pulumi:"id"`
	// network pool name.
	Name pulumi.StringInput `pulumi:"name"`
	// Backing Type (one of 'Transport Zone', 'Port Group', 'Distributed Switch')
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNetworkPoolBackingDistributedSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPoolBackingDistributedSwitch)(nil)).Elem()
}

func (i GetNetworkPoolBackingDistributedSwitchArgs) ToGetNetworkPoolBackingDistributedSwitchOutput() GetNetworkPoolBackingDistributedSwitchOutput {
	return i.ToGetNetworkPoolBackingDistributedSwitchOutputWithContext(context.Background())
}

func (i GetNetworkPoolBackingDistributedSwitchArgs) ToGetNetworkPoolBackingDistributedSwitchOutputWithContext(ctx context.Context) GetNetworkPoolBackingDistributedSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPoolBackingDistributedSwitchOutput)
}

// GetNetworkPoolBackingDistributedSwitchArrayInput is an input type that accepts GetNetworkPoolBackingDistributedSwitchArray and GetNetworkPoolBackingDistributedSwitchArrayOutput values.
// You can construct a concrete instance of `GetNetworkPoolBackingDistributedSwitchArrayInput` via:
//
//	GetNetworkPoolBackingDistributedSwitchArray{ GetNetworkPoolBackingDistributedSwitchArgs{...} }
type GetNetworkPoolBackingDistributedSwitchArrayInput interface {
	pulumi.Input

	ToGetNetworkPoolBackingDistributedSwitchArrayOutput() GetNetworkPoolBackingDistributedSwitchArrayOutput
	ToGetNetworkPoolBackingDistributedSwitchArrayOutputWithContext(context.Context) GetNetworkPoolBackingDistributedSwitchArrayOutput
}

type GetNetworkPoolBackingDistributedSwitchArray []GetNetworkPoolBackingDistributedSwitchInput

func (GetNetworkPoolBackingDistributedSwitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPoolBackingDistributedSwitch)(nil)).Elem()
}

func (i GetNetworkPoolBackingDistributedSwitchArray) ToGetNetworkPoolBackingDistributedSwitchArrayOutput() GetNetworkPoolBackingDistributedSwitchArrayOutput {
	return i.ToGetNetworkPoolBackingDistributedSwitchArrayOutputWithContext(context.Background())
}

func (i GetNetworkPoolBackingDistributedSwitchArray) ToGetNetworkPoolBackingDistributedSwitchArrayOutputWithContext(ctx context.Context) GetNetworkPoolBackingDistributedSwitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPoolBackingDistributedSwitchArrayOutput)
}

type GetNetworkPoolBackingDistributedSwitchOutput struct{ *pulumi.OutputState }

func (GetNetworkPoolBackingDistributedSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPoolBackingDistributedSwitch)(nil)).Elem()
}

func (o GetNetworkPoolBackingDistributedSwitchOutput) ToGetNetworkPoolBackingDistributedSwitchOutput() GetNetworkPoolBackingDistributedSwitchOutput {
	return o
}

func (o GetNetworkPoolBackingDistributedSwitchOutput) ToGetNetworkPoolBackingDistributedSwitchOutputWithContext(ctx context.Context) GetNetworkPoolBackingDistributedSwitchOutput {
	return o
}

// Backing ID
func (o GetNetworkPoolBackingDistributedSwitchOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingDistributedSwitch) string { return v.Id }).(pulumi.StringOutput)
}

// network pool name.
func (o GetNetworkPoolBackingDistributedSwitchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingDistributedSwitch) string { return v.Name }).(pulumi.StringOutput)
}

// Backing Type (one of 'Transport Zone', 'Port Group', 'Distributed Switch')
func (o GetNetworkPoolBackingDistributedSwitchOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingDistributedSwitch) string { return v.Type }).(pulumi.StringOutput)
}

type GetNetworkPoolBackingDistributedSwitchArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPoolBackingDistributedSwitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPoolBackingDistributedSwitch)(nil)).Elem()
}

func (o GetNetworkPoolBackingDistributedSwitchArrayOutput) ToGetNetworkPoolBackingDistributedSwitchArrayOutput() GetNetworkPoolBackingDistributedSwitchArrayOutput {
	return o
}

func (o GetNetworkPoolBackingDistributedSwitchArrayOutput) ToGetNetworkPoolBackingDistributedSwitchArrayOutputWithContext(ctx context.Context) GetNetworkPoolBackingDistributedSwitchArrayOutput {
	return o
}

func (o GetNetworkPoolBackingDistributedSwitchArrayOutput) Index(i pulumi.IntInput) GetNetworkPoolBackingDistributedSwitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPoolBackingDistributedSwitch {
		return vs[0].([]GetNetworkPoolBackingDistributedSwitch)[vs[1].(int)]
	}).(GetNetworkPoolBackingDistributedSwitchOutput)
}

type GetNetworkPoolBackingPortGroup struct {
	// Backing ID
	Id string `pulumi:"id"`
	// network pool name.
	Name string `pulumi:"name"`
	// Backing Type (one of 'Transport Zone', 'Port Group', 'Distributed Switch')
	Type string `pulumi:"type"`
}

// GetNetworkPoolBackingPortGroupInput is an input type that accepts GetNetworkPoolBackingPortGroupArgs and GetNetworkPoolBackingPortGroupOutput values.
// You can construct a concrete instance of `GetNetworkPoolBackingPortGroupInput` via:
//
//	GetNetworkPoolBackingPortGroupArgs{...}
type GetNetworkPoolBackingPortGroupInput interface {
	pulumi.Input

	ToGetNetworkPoolBackingPortGroupOutput() GetNetworkPoolBackingPortGroupOutput
	ToGetNetworkPoolBackingPortGroupOutputWithContext(context.Context) GetNetworkPoolBackingPortGroupOutput
}

type GetNetworkPoolBackingPortGroupArgs struct {
	// Backing ID
	Id pulumi.StringInput `pulumi:"id"`
	// network pool name.
	Name pulumi.StringInput `pulumi:"name"`
	// Backing Type (one of 'Transport Zone', 'Port Group', 'Distributed Switch')
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNetworkPoolBackingPortGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPoolBackingPortGroup)(nil)).Elem()
}

func (i GetNetworkPoolBackingPortGroupArgs) ToGetNetworkPoolBackingPortGroupOutput() GetNetworkPoolBackingPortGroupOutput {
	return i.ToGetNetworkPoolBackingPortGroupOutputWithContext(context.Background())
}

func (i GetNetworkPoolBackingPortGroupArgs) ToGetNetworkPoolBackingPortGroupOutputWithContext(ctx context.Context) GetNetworkPoolBackingPortGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPoolBackingPortGroupOutput)
}

// GetNetworkPoolBackingPortGroupArrayInput is an input type that accepts GetNetworkPoolBackingPortGroupArray and GetNetworkPoolBackingPortGroupArrayOutput values.
// You can construct a concrete instance of `GetNetworkPoolBackingPortGroupArrayInput` via:
//
//	GetNetworkPoolBackingPortGroupArray{ GetNetworkPoolBackingPortGroupArgs{...} }
type GetNetworkPoolBackingPortGroupArrayInput interface {
	pulumi.Input

	ToGetNetworkPoolBackingPortGroupArrayOutput() GetNetworkPoolBackingPortGroupArrayOutput
	ToGetNetworkPoolBackingPortGroupArrayOutputWithContext(context.Context) GetNetworkPoolBackingPortGroupArrayOutput
}

type GetNetworkPoolBackingPortGroupArray []GetNetworkPoolBackingPortGroupInput

func (GetNetworkPoolBackingPortGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPoolBackingPortGroup)(nil)).Elem()
}

func (i GetNetworkPoolBackingPortGroupArray) ToGetNetworkPoolBackingPortGroupArrayOutput() GetNetworkPoolBackingPortGroupArrayOutput {
	return i.ToGetNetworkPoolBackingPortGroupArrayOutputWithContext(context.Background())
}

func (i GetNetworkPoolBackingPortGroupArray) ToGetNetworkPoolBackingPortGroupArrayOutputWithContext(ctx context.Context) GetNetworkPoolBackingPortGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPoolBackingPortGroupArrayOutput)
}

type GetNetworkPoolBackingPortGroupOutput struct{ *pulumi.OutputState }

func (GetNetworkPoolBackingPortGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPoolBackingPortGroup)(nil)).Elem()
}

func (o GetNetworkPoolBackingPortGroupOutput) ToGetNetworkPoolBackingPortGroupOutput() GetNetworkPoolBackingPortGroupOutput {
	return o
}

func (o GetNetworkPoolBackingPortGroupOutput) ToGetNetworkPoolBackingPortGroupOutputWithContext(ctx context.Context) GetNetworkPoolBackingPortGroupOutput {
	return o
}

// Backing ID
func (o GetNetworkPoolBackingPortGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingPortGroup) string { return v.Id }).(pulumi.StringOutput)
}

// network pool name.
func (o GetNetworkPoolBackingPortGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingPortGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Backing Type (one of 'Transport Zone', 'Port Group', 'Distributed Switch')
func (o GetNetworkPoolBackingPortGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingPortGroup) string { return v.Type }).(pulumi.StringOutput)
}

type GetNetworkPoolBackingPortGroupArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPoolBackingPortGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPoolBackingPortGroup)(nil)).Elem()
}

func (o GetNetworkPoolBackingPortGroupArrayOutput) ToGetNetworkPoolBackingPortGroupArrayOutput() GetNetworkPoolBackingPortGroupArrayOutput {
	return o
}

func (o GetNetworkPoolBackingPortGroupArrayOutput) ToGetNetworkPoolBackingPortGroupArrayOutputWithContext(ctx context.Context) GetNetworkPoolBackingPortGroupArrayOutput {
	return o
}

func (o GetNetworkPoolBackingPortGroupArrayOutput) Index(i pulumi.IntInput) GetNetworkPoolBackingPortGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPoolBackingPortGroup {
		return vs[0].([]GetNetworkPoolBackingPortGroup)[vs[1].(int)]
	}).(GetNetworkPoolBackingPortGroupOutput)
}

type GetNetworkPoolBackingRangeId struct {
	// End of the IDs range
	EndId int `pulumi:"endId"`
	// Start of the IDs range
	StartId int `pulumi:"startId"`
}

// GetNetworkPoolBackingRangeIdInput is an input type that accepts GetNetworkPoolBackingRangeIdArgs and GetNetworkPoolBackingRangeIdOutput values.
// You can construct a concrete instance of `GetNetworkPoolBackingRangeIdInput` via:
//
//	GetNetworkPoolBackingRangeIdArgs{...}
type GetNetworkPoolBackingRangeIdInput interface {
	pulumi.Input

	ToGetNetworkPoolBackingRangeIdOutput() GetNetworkPoolBackingRangeIdOutput
	ToGetNetworkPoolBackingRangeIdOutputWithContext(context.Context) GetNetworkPoolBackingRangeIdOutput
}

type GetNetworkPoolBackingRangeIdArgs struct {
	// End of the IDs range
	EndId pulumi.IntInput `pulumi:"endId"`
	// Start of the IDs range
	StartId pulumi.IntInput `pulumi:"startId"`
}

func (GetNetworkPoolBackingRangeIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPoolBackingRangeId)(nil)).Elem()
}

func (i GetNetworkPoolBackingRangeIdArgs) ToGetNetworkPoolBackingRangeIdOutput() GetNetworkPoolBackingRangeIdOutput {
	return i.ToGetNetworkPoolBackingRangeIdOutputWithContext(context.Background())
}

func (i GetNetworkPoolBackingRangeIdArgs) ToGetNetworkPoolBackingRangeIdOutputWithContext(ctx context.Context) GetNetworkPoolBackingRangeIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPoolBackingRangeIdOutput)
}

// GetNetworkPoolBackingRangeIdArrayInput is an input type that accepts GetNetworkPoolBackingRangeIdArray and GetNetworkPoolBackingRangeIdArrayOutput values.
// You can construct a concrete instance of `GetNetworkPoolBackingRangeIdArrayInput` via:
//
//	GetNetworkPoolBackingRangeIdArray{ GetNetworkPoolBackingRangeIdArgs{...} }
type GetNetworkPoolBackingRangeIdArrayInput interface {
	pulumi.Input

	ToGetNetworkPoolBackingRangeIdArrayOutput() GetNetworkPoolBackingRangeIdArrayOutput
	ToGetNetworkPoolBackingRangeIdArrayOutputWithContext(context.Context) GetNetworkPoolBackingRangeIdArrayOutput
}

type GetNetworkPoolBackingRangeIdArray []GetNetworkPoolBackingRangeIdInput

func (GetNetworkPoolBackingRangeIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPoolBackingRangeId)(nil)).Elem()
}

func (i GetNetworkPoolBackingRangeIdArray) ToGetNetworkPoolBackingRangeIdArrayOutput() GetNetworkPoolBackingRangeIdArrayOutput {
	return i.ToGetNetworkPoolBackingRangeIdArrayOutputWithContext(context.Background())
}

func (i GetNetworkPoolBackingRangeIdArray) ToGetNetworkPoolBackingRangeIdArrayOutputWithContext(ctx context.Context) GetNetworkPoolBackingRangeIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPoolBackingRangeIdArrayOutput)
}

type GetNetworkPoolBackingRangeIdOutput struct{ *pulumi.OutputState }

func (GetNetworkPoolBackingRangeIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPoolBackingRangeId)(nil)).Elem()
}

func (o GetNetworkPoolBackingRangeIdOutput) ToGetNetworkPoolBackingRangeIdOutput() GetNetworkPoolBackingRangeIdOutput {
	return o
}

func (o GetNetworkPoolBackingRangeIdOutput) ToGetNetworkPoolBackingRangeIdOutputWithContext(ctx context.Context) GetNetworkPoolBackingRangeIdOutput {
	return o
}

// End of the IDs range
func (o GetNetworkPoolBackingRangeIdOutput) EndId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingRangeId) int { return v.EndId }).(pulumi.IntOutput)
}

// Start of the IDs range
func (o GetNetworkPoolBackingRangeIdOutput) StartId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingRangeId) int { return v.StartId }).(pulumi.IntOutput)
}

type GetNetworkPoolBackingRangeIdArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPoolBackingRangeIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPoolBackingRangeId)(nil)).Elem()
}

func (o GetNetworkPoolBackingRangeIdArrayOutput) ToGetNetworkPoolBackingRangeIdArrayOutput() GetNetworkPoolBackingRangeIdArrayOutput {
	return o
}

func (o GetNetworkPoolBackingRangeIdArrayOutput) ToGetNetworkPoolBackingRangeIdArrayOutputWithContext(ctx context.Context) GetNetworkPoolBackingRangeIdArrayOutput {
	return o
}

func (o GetNetworkPoolBackingRangeIdArrayOutput) Index(i pulumi.IntInput) GetNetworkPoolBackingRangeIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPoolBackingRangeId {
		return vs[0].([]GetNetworkPoolBackingRangeId)[vs[1].(int)]
	}).(GetNetworkPoolBackingRangeIdOutput)
}

type GetNetworkPoolBackingTransportZone struct {
	// Backing ID
	Id string `pulumi:"id"`
	// network pool name.
	Name string `pulumi:"name"`
	// Backing Type (one of 'Transport Zone', 'Port Group', 'Distributed Switch')
	Type string `pulumi:"type"`
}

// GetNetworkPoolBackingTransportZoneInput is an input type that accepts GetNetworkPoolBackingTransportZoneArgs and GetNetworkPoolBackingTransportZoneOutput values.
// You can construct a concrete instance of `GetNetworkPoolBackingTransportZoneInput` via:
//
//	GetNetworkPoolBackingTransportZoneArgs{...}
type GetNetworkPoolBackingTransportZoneInput interface {
	pulumi.Input

	ToGetNetworkPoolBackingTransportZoneOutput() GetNetworkPoolBackingTransportZoneOutput
	ToGetNetworkPoolBackingTransportZoneOutputWithContext(context.Context) GetNetworkPoolBackingTransportZoneOutput
}

type GetNetworkPoolBackingTransportZoneArgs struct {
	// Backing ID
	Id pulumi.StringInput `pulumi:"id"`
	// network pool name.
	Name pulumi.StringInput `pulumi:"name"`
	// Backing Type (one of 'Transport Zone', 'Port Group', 'Distributed Switch')
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNetworkPoolBackingTransportZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPoolBackingTransportZone)(nil)).Elem()
}

func (i GetNetworkPoolBackingTransportZoneArgs) ToGetNetworkPoolBackingTransportZoneOutput() GetNetworkPoolBackingTransportZoneOutput {
	return i.ToGetNetworkPoolBackingTransportZoneOutputWithContext(context.Background())
}

func (i GetNetworkPoolBackingTransportZoneArgs) ToGetNetworkPoolBackingTransportZoneOutputWithContext(ctx context.Context) GetNetworkPoolBackingTransportZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPoolBackingTransportZoneOutput)
}

// GetNetworkPoolBackingTransportZoneArrayInput is an input type that accepts GetNetworkPoolBackingTransportZoneArray and GetNetworkPoolBackingTransportZoneArrayOutput values.
// You can construct a concrete instance of `GetNetworkPoolBackingTransportZoneArrayInput` via:
//
//	GetNetworkPoolBackingTransportZoneArray{ GetNetworkPoolBackingTransportZoneArgs{...} }
type GetNetworkPoolBackingTransportZoneArrayInput interface {
	pulumi.Input

	ToGetNetworkPoolBackingTransportZoneArrayOutput() GetNetworkPoolBackingTransportZoneArrayOutput
	ToGetNetworkPoolBackingTransportZoneArrayOutputWithContext(context.Context) GetNetworkPoolBackingTransportZoneArrayOutput
}

type GetNetworkPoolBackingTransportZoneArray []GetNetworkPoolBackingTransportZoneInput

func (GetNetworkPoolBackingTransportZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPoolBackingTransportZone)(nil)).Elem()
}

func (i GetNetworkPoolBackingTransportZoneArray) ToGetNetworkPoolBackingTransportZoneArrayOutput() GetNetworkPoolBackingTransportZoneArrayOutput {
	return i.ToGetNetworkPoolBackingTransportZoneArrayOutputWithContext(context.Background())
}

func (i GetNetworkPoolBackingTransportZoneArray) ToGetNetworkPoolBackingTransportZoneArrayOutputWithContext(ctx context.Context) GetNetworkPoolBackingTransportZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPoolBackingTransportZoneArrayOutput)
}

type GetNetworkPoolBackingTransportZoneOutput struct{ *pulumi.OutputState }

func (GetNetworkPoolBackingTransportZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPoolBackingTransportZone)(nil)).Elem()
}

func (o GetNetworkPoolBackingTransportZoneOutput) ToGetNetworkPoolBackingTransportZoneOutput() GetNetworkPoolBackingTransportZoneOutput {
	return o
}

func (o GetNetworkPoolBackingTransportZoneOutput) ToGetNetworkPoolBackingTransportZoneOutputWithContext(ctx context.Context) GetNetworkPoolBackingTransportZoneOutput {
	return o
}

// Backing ID
func (o GetNetworkPoolBackingTransportZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingTransportZone) string { return v.Id }).(pulumi.StringOutput)
}

// network pool name.
func (o GetNetworkPoolBackingTransportZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingTransportZone) string { return v.Name }).(pulumi.StringOutput)
}

// Backing Type (one of 'Transport Zone', 'Port Group', 'Distributed Switch')
func (o GetNetworkPoolBackingTransportZoneOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPoolBackingTransportZone) string { return v.Type }).(pulumi.StringOutput)
}

type GetNetworkPoolBackingTransportZoneArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPoolBackingTransportZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPoolBackingTransportZone)(nil)).Elem()
}

func (o GetNetworkPoolBackingTransportZoneArrayOutput) ToGetNetworkPoolBackingTransportZoneArrayOutput() GetNetworkPoolBackingTransportZoneArrayOutput {
	return o
}

func (o GetNetworkPoolBackingTransportZoneArrayOutput) ToGetNetworkPoolBackingTransportZoneArrayOutputWithContext(ctx context.Context) GetNetworkPoolBackingTransportZoneArrayOutput {
	return o
}

func (o GetNetworkPoolBackingTransportZoneArrayOutput) Index(i pulumi.IntInput) GetNetworkPoolBackingTransportZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPoolBackingTransportZone {
		return vs[0].([]GetNetworkPoolBackingTransportZone)[vs[1].(int)]
	}).(GetNetworkPoolBackingTransportZoneOutput)
}

type GetNetworkRoutedDhcpPool struct {
	// The default DHCP lease time to use
	DefaultLeaseTime int `pulumi:"defaultLeaseTime"`
	// The final address in the IP Range
	EndAddress string `pulumi:"endAddress"`
	// The maximum DHCP lease time to use
	MaxLeaseTime int `pulumi:"maxLeaseTime"`
	// The first address in the IP Range
	StartAddress string `pulumi:"startAddress"`
}

// GetNetworkRoutedDhcpPoolInput is an input type that accepts GetNetworkRoutedDhcpPoolArgs and GetNetworkRoutedDhcpPoolOutput values.
// You can construct a concrete instance of `GetNetworkRoutedDhcpPoolInput` via:
//
//	GetNetworkRoutedDhcpPoolArgs{...}
type GetNetworkRoutedDhcpPoolInput interface {
	pulumi.Input

	ToGetNetworkRoutedDhcpPoolOutput() GetNetworkRoutedDhcpPoolOutput
	ToGetNetworkRoutedDhcpPoolOutputWithContext(context.Context) GetNetworkRoutedDhcpPoolOutput
}

type GetNetworkRoutedDhcpPoolArgs struct {
	// The default DHCP lease time to use
	DefaultLeaseTime pulumi.IntInput `pulumi:"defaultLeaseTime"`
	// The final address in the IP Range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// The maximum DHCP lease time to use
	MaxLeaseTime pulumi.IntInput `pulumi:"maxLeaseTime"`
	// The first address in the IP Range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNetworkRoutedDhcpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedDhcpPool)(nil)).Elem()
}

func (i GetNetworkRoutedDhcpPoolArgs) ToGetNetworkRoutedDhcpPoolOutput() GetNetworkRoutedDhcpPoolOutput {
	return i.ToGetNetworkRoutedDhcpPoolOutputWithContext(context.Background())
}

func (i GetNetworkRoutedDhcpPoolArgs) ToGetNetworkRoutedDhcpPoolOutputWithContext(ctx context.Context) GetNetworkRoutedDhcpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedDhcpPoolOutput)
}

// GetNetworkRoutedDhcpPoolArrayInput is an input type that accepts GetNetworkRoutedDhcpPoolArray and GetNetworkRoutedDhcpPoolArrayOutput values.
// You can construct a concrete instance of `GetNetworkRoutedDhcpPoolArrayInput` via:
//
//	GetNetworkRoutedDhcpPoolArray{ GetNetworkRoutedDhcpPoolArgs{...} }
type GetNetworkRoutedDhcpPoolArrayInput interface {
	pulumi.Input

	ToGetNetworkRoutedDhcpPoolArrayOutput() GetNetworkRoutedDhcpPoolArrayOutput
	ToGetNetworkRoutedDhcpPoolArrayOutputWithContext(context.Context) GetNetworkRoutedDhcpPoolArrayOutput
}

type GetNetworkRoutedDhcpPoolArray []GetNetworkRoutedDhcpPoolInput

func (GetNetworkRoutedDhcpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedDhcpPool)(nil)).Elem()
}

func (i GetNetworkRoutedDhcpPoolArray) ToGetNetworkRoutedDhcpPoolArrayOutput() GetNetworkRoutedDhcpPoolArrayOutput {
	return i.ToGetNetworkRoutedDhcpPoolArrayOutputWithContext(context.Background())
}

func (i GetNetworkRoutedDhcpPoolArray) ToGetNetworkRoutedDhcpPoolArrayOutputWithContext(ctx context.Context) GetNetworkRoutedDhcpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedDhcpPoolArrayOutput)
}

type GetNetworkRoutedDhcpPoolOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedDhcpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedDhcpPool)(nil)).Elem()
}

func (o GetNetworkRoutedDhcpPoolOutput) ToGetNetworkRoutedDhcpPoolOutput() GetNetworkRoutedDhcpPoolOutput {
	return o
}

func (o GetNetworkRoutedDhcpPoolOutput) ToGetNetworkRoutedDhcpPoolOutputWithContext(ctx context.Context) GetNetworkRoutedDhcpPoolOutput {
	return o
}

// The default DHCP lease time to use
func (o GetNetworkRoutedDhcpPoolOutput) DefaultLeaseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkRoutedDhcpPool) int { return v.DefaultLeaseTime }).(pulumi.IntOutput)
}

// The final address in the IP Range
func (o GetNetworkRoutedDhcpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedDhcpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// The maximum DHCP lease time to use
func (o GetNetworkRoutedDhcpPoolOutput) MaxLeaseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkRoutedDhcpPool) int { return v.MaxLeaseTime }).(pulumi.IntOutput)
}

// The first address in the IP Range
func (o GetNetworkRoutedDhcpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedDhcpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNetworkRoutedDhcpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedDhcpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedDhcpPool)(nil)).Elem()
}

func (o GetNetworkRoutedDhcpPoolArrayOutput) ToGetNetworkRoutedDhcpPoolArrayOutput() GetNetworkRoutedDhcpPoolArrayOutput {
	return o
}

func (o GetNetworkRoutedDhcpPoolArrayOutput) ToGetNetworkRoutedDhcpPoolArrayOutputWithContext(ctx context.Context) GetNetworkRoutedDhcpPoolArrayOutput {
	return o
}

func (o GetNetworkRoutedDhcpPoolArrayOutput) Index(i pulumi.IntInput) GetNetworkRoutedDhcpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkRoutedDhcpPool {
		return vs[0].([]GetNetworkRoutedDhcpPool)[vs[1].(int)]
	}).(GetNetworkRoutedDhcpPoolOutput)
}

type GetNetworkRoutedFilter struct {
	// Search by IP. The value can be a regular expression
	Ip *string `pulumi:"ip"`
	// metadata filter
	Metadatas []GetNetworkRoutedFilterMetadata `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetNetworkRoutedFilterInput is an input type that accepts GetNetworkRoutedFilterArgs and GetNetworkRoutedFilterOutput values.
// You can construct a concrete instance of `GetNetworkRoutedFilterInput` via:
//
//	GetNetworkRoutedFilterArgs{...}
type GetNetworkRoutedFilterInput interface {
	pulumi.Input

	ToGetNetworkRoutedFilterOutput() GetNetworkRoutedFilterOutput
	ToGetNetworkRoutedFilterOutputWithContext(context.Context) GetNetworkRoutedFilterOutput
}

type GetNetworkRoutedFilterArgs struct {
	// Search by IP. The value can be a regular expression
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// metadata filter
	Metadatas GetNetworkRoutedFilterMetadataArrayInput `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetNetworkRoutedFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedFilter)(nil)).Elem()
}

func (i GetNetworkRoutedFilterArgs) ToGetNetworkRoutedFilterOutput() GetNetworkRoutedFilterOutput {
	return i.ToGetNetworkRoutedFilterOutputWithContext(context.Background())
}

func (i GetNetworkRoutedFilterArgs) ToGetNetworkRoutedFilterOutputWithContext(ctx context.Context) GetNetworkRoutedFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedFilterOutput)
}

func (i GetNetworkRoutedFilterArgs) ToGetNetworkRoutedFilterPtrOutput() GetNetworkRoutedFilterPtrOutput {
	return i.ToGetNetworkRoutedFilterPtrOutputWithContext(context.Background())
}

func (i GetNetworkRoutedFilterArgs) ToGetNetworkRoutedFilterPtrOutputWithContext(ctx context.Context) GetNetworkRoutedFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedFilterOutput).ToGetNetworkRoutedFilterPtrOutputWithContext(ctx)
}

// GetNetworkRoutedFilterPtrInput is an input type that accepts GetNetworkRoutedFilterArgs, GetNetworkRoutedFilterPtr and GetNetworkRoutedFilterPtrOutput values.
// You can construct a concrete instance of `GetNetworkRoutedFilterPtrInput` via:
//
//	        GetNetworkRoutedFilterArgs{...}
//
//	or:
//
//	        nil
type GetNetworkRoutedFilterPtrInput interface {
	pulumi.Input

	ToGetNetworkRoutedFilterPtrOutput() GetNetworkRoutedFilterPtrOutput
	ToGetNetworkRoutedFilterPtrOutputWithContext(context.Context) GetNetworkRoutedFilterPtrOutput
}

type getNetworkRoutedFilterPtrType GetNetworkRoutedFilterArgs

func GetNetworkRoutedFilterPtr(v *GetNetworkRoutedFilterArgs) GetNetworkRoutedFilterPtrInput {
	return (*getNetworkRoutedFilterPtrType)(v)
}

func (*getNetworkRoutedFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkRoutedFilter)(nil)).Elem()
}

func (i *getNetworkRoutedFilterPtrType) ToGetNetworkRoutedFilterPtrOutput() GetNetworkRoutedFilterPtrOutput {
	return i.ToGetNetworkRoutedFilterPtrOutputWithContext(context.Background())
}

func (i *getNetworkRoutedFilterPtrType) ToGetNetworkRoutedFilterPtrOutputWithContext(ctx context.Context) GetNetworkRoutedFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedFilterPtrOutput)
}

type GetNetworkRoutedFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedFilter)(nil)).Elem()
}

func (o GetNetworkRoutedFilterOutput) ToGetNetworkRoutedFilterOutput() GetNetworkRoutedFilterOutput {
	return o
}

func (o GetNetworkRoutedFilterOutput) ToGetNetworkRoutedFilterOutputWithContext(ctx context.Context) GetNetworkRoutedFilterOutput {
	return o
}

func (o GetNetworkRoutedFilterOutput) ToGetNetworkRoutedFilterPtrOutput() GetNetworkRoutedFilterPtrOutput {
	return o.ToGetNetworkRoutedFilterPtrOutputWithContext(context.Background())
}

func (o GetNetworkRoutedFilterOutput) ToGetNetworkRoutedFilterPtrOutputWithContext(ctx context.Context) GetNetworkRoutedFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetNetworkRoutedFilter) *GetNetworkRoutedFilter {
		return &v
	}).(GetNetworkRoutedFilterPtrOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNetworkRoutedFilterOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkRoutedFilter) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// metadata filter
func (o GetNetworkRoutedFilterOutput) Metadatas() GetNetworkRoutedFilterMetadataArrayOutput {
	return o.ApplyT(func(v GetNetworkRoutedFilter) []GetNetworkRoutedFilterMetadata { return v.Metadatas }).(GetNetworkRoutedFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetNetworkRoutedFilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkRoutedFilter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetNetworkRoutedFilterPtrOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkRoutedFilter)(nil)).Elem()
}

func (o GetNetworkRoutedFilterPtrOutput) ToGetNetworkRoutedFilterPtrOutput() GetNetworkRoutedFilterPtrOutput {
	return o
}

func (o GetNetworkRoutedFilterPtrOutput) ToGetNetworkRoutedFilterPtrOutputWithContext(ctx context.Context) GetNetworkRoutedFilterPtrOutput {
	return o
}

func (o GetNetworkRoutedFilterPtrOutput) Elem() GetNetworkRoutedFilterOutput {
	return o.ApplyT(func(v *GetNetworkRoutedFilter) GetNetworkRoutedFilter {
		if v != nil {
			return *v
		}
		var ret GetNetworkRoutedFilter
		return ret
	}).(GetNetworkRoutedFilterOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNetworkRoutedFilterPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNetworkRoutedFilter) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// metadata filter
func (o GetNetworkRoutedFilterPtrOutput) Metadatas() GetNetworkRoutedFilterMetadataArrayOutput {
	return o.ApplyT(func(v *GetNetworkRoutedFilter) []GetNetworkRoutedFilterMetadata {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(GetNetworkRoutedFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetNetworkRoutedFilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNetworkRoutedFilter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetNetworkRoutedFilterMetadata struct {
	// True if is a metadata@SYSTEM key
	IsSystem *bool `pulumi:"isSystem"`
	// Metadata key (field name)
	Key string `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type *string `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch *bool `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value string `pulumi:"value"`
}

// GetNetworkRoutedFilterMetadataInput is an input type that accepts GetNetworkRoutedFilterMetadataArgs and GetNetworkRoutedFilterMetadataOutput values.
// You can construct a concrete instance of `GetNetworkRoutedFilterMetadataInput` via:
//
//	GetNetworkRoutedFilterMetadataArgs{...}
type GetNetworkRoutedFilterMetadataInput interface {
	pulumi.Input

	ToGetNetworkRoutedFilterMetadataOutput() GetNetworkRoutedFilterMetadataOutput
	ToGetNetworkRoutedFilterMetadataOutputWithContext(context.Context) GetNetworkRoutedFilterMetadataOutput
}

type GetNetworkRoutedFilterMetadataArgs struct {
	// True if is a metadata@SYSTEM key
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Metadata key (field name)
	Key pulumi.StringInput `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch pulumi.BoolPtrInput `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkRoutedFilterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedFilterMetadata)(nil)).Elem()
}

func (i GetNetworkRoutedFilterMetadataArgs) ToGetNetworkRoutedFilterMetadataOutput() GetNetworkRoutedFilterMetadataOutput {
	return i.ToGetNetworkRoutedFilterMetadataOutputWithContext(context.Background())
}

func (i GetNetworkRoutedFilterMetadataArgs) ToGetNetworkRoutedFilterMetadataOutputWithContext(ctx context.Context) GetNetworkRoutedFilterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedFilterMetadataOutput)
}

// GetNetworkRoutedFilterMetadataArrayInput is an input type that accepts GetNetworkRoutedFilterMetadataArray and GetNetworkRoutedFilterMetadataArrayOutput values.
// You can construct a concrete instance of `GetNetworkRoutedFilterMetadataArrayInput` via:
//
//	GetNetworkRoutedFilterMetadataArray{ GetNetworkRoutedFilterMetadataArgs{...} }
type GetNetworkRoutedFilterMetadataArrayInput interface {
	pulumi.Input

	ToGetNetworkRoutedFilterMetadataArrayOutput() GetNetworkRoutedFilterMetadataArrayOutput
	ToGetNetworkRoutedFilterMetadataArrayOutputWithContext(context.Context) GetNetworkRoutedFilterMetadataArrayOutput
}

type GetNetworkRoutedFilterMetadataArray []GetNetworkRoutedFilterMetadataInput

func (GetNetworkRoutedFilterMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedFilterMetadata)(nil)).Elem()
}

func (i GetNetworkRoutedFilterMetadataArray) ToGetNetworkRoutedFilterMetadataArrayOutput() GetNetworkRoutedFilterMetadataArrayOutput {
	return i.ToGetNetworkRoutedFilterMetadataArrayOutputWithContext(context.Background())
}

func (i GetNetworkRoutedFilterMetadataArray) ToGetNetworkRoutedFilterMetadataArrayOutputWithContext(ctx context.Context) GetNetworkRoutedFilterMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedFilterMetadataArrayOutput)
}

type GetNetworkRoutedFilterMetadataOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedFilterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedFilterMetadata)(nil)).Elem()
}

func (o GetNetworkRoutedFilterMetadataOutput) ToGetNetworkRoutedFilterMetadataOutput() GetNetworkRoutedFilterMetadataOutput {
	return o
}

func (o GetNetworkRoutedFilterMetadataOutput) ToGetNetworkRoutedFilterMetadataOutputWithContext(ctx context.Context) GetNetworkRoutedFilterMetadataOutput {
	return o
}

// True if is a metadata@SYSTEM key
func (o GetNetworkRoutedFilterMetadataOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworkRoutedFilterMetadata) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Metadata key (field name)
func (o GetNetworkRoutedFilterMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedFilterMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// Type of metadata value (needed only if "useApiSearch" is true)
func (o GetNetworkRoutedFilterMetadataOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkRoutedFilterMetadata) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If true, will search the vCD using native metadata query (without regular expressions)
func (o GetNetworkRoutedFilterMetadataOutput) UseApiSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNetworkRoutedFilterMetadata) *bool { return v.UseApiSearch }).(pulumi.BoolPtrOutput)
}

// Metadata value (can be a regular expression if "useApiSearch" is false)
func (o GetNetworkRoutedFilterMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedFilterMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkRoutedFilterMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedFilterMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedFilterMetadata)(nil)).Elem()
}

func (o GetNetworkRoutedFilterMetadataArrayOutput) ToGetNetworkRoutedFilterMetadataArrayOutput() GetNetworkRoutedFilterMetadataArrayOutput {
	return o
}

func (o GetNetworkRoutedFilterMetadataArrayOutput) ToGetNetworkRoutedFilterMetadataArrayOutputWithContext(ctx context.Context) GetNetworkRoutedFilterMetadataArrayOutput {
	return o
}

func (o GetNetworkRoutedFilterMetadataArrayOutput) Index(i pulumi.IntInput) GetNetworkRoutedFilterMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkRoutedFilterMetadata {
		return vs[0].([]GetNetworkRoutedFilterMetadata)[vs[1].(int)]
	}).(GetNetworkRoutedFilterMetadataOutput)
}

type GetNetworkRoutedMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetNetworkRoutedMetadataEntryInput is an input type that accepts GetNetworkRoutedMetadataEntryArgs and GetNetworkRoutedMetadataEntryOutput values.
// You can construct a concrete instance of `GetNetworkRoutedMetadataEntryInput` via:
//
//	GetNetworkRoutedMetadataEntryArgs{...}
type GetNetworkRoutedMetadataEntryInput interface {
	pulumi.Input

	ToGetNetworkRoutedMetadataEntryOutput() GetNetworkRoutedMetadataEntryOutput
	ToGetNetworkRoutedMetadataEntryOutputWithContext(context.Context) GetNetworkRoutedMetadataEntryOutput
}

type GetNetworkRoutedMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkRoutedMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedMetadataEntry)(nil)).Elem()
}

func (i GetNetworkRoutedMetadataEntryArgs) ToGetNetworkRoutedMetadataEntryOutput() GetNetworkRoutedMetadataEntryOutput {
	return i.ToGetNetworkRoutedMetadataEntryOutputWithContext(context.Background())
}

func (i GetNetworkRoutedMetadataEntryArgs) ToGetNetworkRoutedMetadataEntryOutputWithContext(ctx context.Context) GetNetworkRoutedMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedMetadataEntryOutput)
}

// GetNetworkRoutedMetadataEntryArrayInput is an input type that accepts GetNetworkRoutedMetadataEntryArray and GetNetworkRoutedMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetNetworkRoutedMetadataEntryArrayInput` via:
//
//	GetNetworkRoutedMetadataEntryArray{ GetNetworkRoutedMetadataEntryArgs{...} }
type GetNetworkRoutedMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetNetworkRoutedMetadataEntryArrayOutput() GetNetworkRoutedMetadataEntryArrayOutput
	ToGetNetworkRoutedMetadataEntryArrayOutputWithContext(context.Context) GetNetworkRoutedMetadataEntryArrayOutput
}

type GetNetworkRoutedMetadataEntryArray []GetNetworkRoutedMetadataEntryInput

func (GetNetworkRoutedMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedMetadataEntry)(nil)).Elem()
}

func (i GetNetworkRoutedMetadataEntryArray) ToGetNetworkRoutedMetadataEntryArrayOutput() GetNetworkRoutedMetadataEntryArrayOutput {
	return i.ToGetNetworkRoutedMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetNetworkRoutedMetadataEntryArray) ToGetNetworkRoutedMetadataEntryArrayOutputWithContext(ctx context.Context) GetNetworkRoutedMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedMetadataEntryArrayOutput)
}

type GetNetworkRoutedMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedMetadataEntry)(nil)).Elem()
}

func (o GetNetworkRoutedMetadataEntryOutput) ToGetNetworkRoutedMetadataEntryOutput() GetNetworkRoutedMetadataEntryOutput {
	return o
}

func (o GetNetworkRoutedMetadataEntryOutput) ToGetNetworkRoutedMetadataEntryOutputWithContext(ctx context.Context) GetNetworkRoutedMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetNetworkRoutedMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkRoutedMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetNetworkRoutedMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetNetworkRoutedMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetNetworkRoutedMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetNetworkRoutedMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkRoutedMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedMetadataEntry)(nil)).Elem()
}

func (o GetNetworkRoutedMetadataEntryArrayOutput) ToGetNetworkRoutedMetadataEntryArrayOutput() GetNetworkRoutedMetadataEntryArrayOutput {
	return o
}

func (o GetNetworkRoutedMetadataEntryArrayOutput) ToGetNetworkRoutedMetadataEntryArrayOutputWithContext(ctx context.Context) GetNetworkRoutedMetadataEntryArrayOutput {
	return o
}

func (o GetNetworkRoutedMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetNetworkRoutedMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkRoutedMetadataEntry {
		return vs[0].([]GetNetworkRoutedMetadataEntry)[vs[1].(int)]
	}).(GetNetworkRoutedMetadataEntryOutput)
}

type GetNetworkRoutedStaticIpPool struct {
	// The final address in the IP Range
	EndAddress string `pulumi:"endAddress"`
	// The first address in the IP Range
	StartAddress string `pulumi:"startAddress"`
}

// GetNetworkRoutedStaticIpPoolInput is an input type that accepts GetNetworkRoutedStaticIpPoolArgs and GetNetworkRoutedStaticIpPoolOutput values.
// You can construct a concrete instance of `GetNetworkRoutedStaticIpPoolInput` via:
//
//	GetNetworkRoutedStaticIpPoolArgs{...}
type GetNetworkRoutedStaticIpPoolInput interface {
	pulumi.Input

	ToGetNetworkRoutedStaticIpPoolOutput() GetNetworkRoutedStaticIpPoolOutput
	ToGetNetworkRoutedStaticIpPoolOutputWithContext(context.Context) GetNetworkRoutedStaticIpPoolOutput
}

type GetNetworkRoutedStaticIpPoolArgs struct {
	// The final address in the IP Range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// The first address in the IP Range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNetworkRoutedStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedStaticIpPool)(nil)).Elem()
}

func (i GetNetworkRoutedStaticIpPoolArgs) ToGetNetworkRoutedStaticIpPoolOutput() GetNetworkRoutedStaticIpPoolOutput {
	return i.ToGetNetworkRoutedStaticIpPoolOutputWithContext(context.Background())
}

func (i GetNetworkRoutedStaticIpPoolArgs) ToGetNetworkRoutedStaticIpPoolOutputWithContext(ctx context.Context) GetNetworkRoutedStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedStaticIpPoolOutput)
}

// GetNetworkRoutedStaticIpPoolArrayInput is an input type that accepts GetNetworkRoutedStaticIpPoolArray and GetNetworkRoutedStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetNetworkRoutedStaticIpPoolArrayInput` via:
//
//	GetNetworkRoutedStaticIpPoolArray{ GetNetworkRoutedStaticIpPoolArgs{...} }
type GetNetworkRoutedStaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetNetworkRoutedStaticIpPoolArrayOutput() GetNetworkRoutedStaticIpPoolArrayOutput
	ToGetNetworkRoutedStaticIpPoolArrayOutputWithContext(context.Context) GetNetworkRoutedStaticIpPoolArrayOutput
}

type GetNetworkRoutedStaticIpPoolArray []GetNetworkRoutedStaticIpPoolInput

func (GetNetworkRoutedStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedStaticIpPool)(nil)).Elem()
}

func (i GetNetworkRoutedStaticIpPoolArray) ToGetNetworkRoutedStaticIpPoolArrayOutput() GetNetworkRoutedStaticIpPoolArrayOutput {
	return i.ToGetNetworkRoutedStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetNetworkRoutedStaticIpPoolArray) ToGetNetworkRoutedStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkRoutedStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedStaticIpPoolArrayOutput)
}

type GetNetworkRoutedStaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedStaticIpPool)(nil)).Elem()
}

func (o GetNetworkRoutedStaticIpPoolOutput) ToGetNetworkRoutedStaticIpPoolOutput() GetNetworkRoutedStaticIpPoolOutput {
	return o
}

func (o GetNetworkRoutedStaticIpPoolOutput) ToGetNetworkRoutedStaticIpPoolOutputWithContext(ctx context.Context) GetNetworkRoutedStaticIpPoolOutput {
	return o
}

// The final address in the IP Range
func (o GetNetworkRoutedStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// The first address in the IP Range
func (o GetNetworkRoutedStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNetworkRoutedStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedStaticIpPool)(nil)).Elem()
}

func (o GetNetworkRoutedStaticIpPoolArrayOutput) ToGetNetworkRoutedStaticIpPoolArrayOutput() GetNetworkRoutedStaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkRoutedStaticIpPoolArrayOutput) ToGetNetworkRoutedStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkRoutedStaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkRoutedStaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetNetworkRoutedStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkRoutedStaticIpPool {
		return vs[0].([]GetNetworkRoutedStaticIpPool)[vs[1].(int)]
	}).(GetNetworkRoutedStaticIpPoolOutput)
}

type GetNetworkRoutedV2Filter struct {
	// Search by IP. The value can be a regular expression
	Ip *string `pulumi:"ip"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetNetworkRoutedV2FilterInput is an input type that accepts GetNetworkRoutedV2FilterArgs and GetNetworkRoutedV2FilterOutput values.
// You can construct a concrete instance of `GetNetworkRoutedV2FilterInput` via:
//
//	GetNetworkRoutedV2FilterArgs{...}
type GetNetworkRoutedV2FilterInput interface {
	pulumi.Input

	ToGetNetworkRoutedV2FilterOutput() GetNetworkRoutedV2FilterOutput
	ToGetNetworkRoutedV2FilterOutputWithContext(context.Context) GetNetworkRoutedV2FilterOutput
}

type GetNetworkRoutedV2FilterArgs struct {
	// Search by IP. The value can be a regular expression
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetNetworkRoutedV2FilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedV2Filter)(nil)).Elem()
}

func (i GetNetworkRoutedV2FilterArgs) ToGetNetworkRoutedV2FilterOutput() GetNetworkRoutedV2FilterOutput {
	return i.ToGetNetworkRoutedV2FilterOutputWithContext(context.Background())
}

func (i GetNetworkRoutedV2FilterArgs) ToGetNetworkRoutedV2FilterOutputWithContext(ctx context.Context) GetNetworkRoutedV2FilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedV2FilterOutput)
}

func (i GetNetworkRoutedV2FilterArgs) ToGetNetworkRoutedV2FilterPtrOutput() GetNetworkRoutedV2FilterPtrOutput {
	return i.ToGetNetworkRoutedV2FilterPtrOutputWithContext(context.Background())
}

func (i GetNetworkRoutedV2FilterArgs) ToGetNetworkRoutedV2FilterPtrOutputWithContext(ctx context.Context) GetNetworkRoutedV2FilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedV2FilterOutput).ToGetNetworkRoutedV2FilterPtrOutputWithContext(ctx)
}

// GetNetworkRoutedV2FilterPtrInput is an input type that accepts GetNetworkRoutedV2FilterArgs, GetNetworkRoutedV2FilterPtr and GetNetworkRoutedV2FilterPtrOutput values.
// You can construct a concrete instance of `GetNetworkRoutedV2FilterPtrInput` via:
//
//	        GetNetworkRoutedV2FilterArgs{...}
//
//	or:
//
//	        nil
type GetNetworkRoutedV2FilterPtrInput interface {
	pulumi.Input

	ToGetNetworkRoutedV2FilterPtrOutput() GetNetworkRoutedV2FilterPtrOutput
	ToGetNetworkRoutedV2FilterPtrOutputWithContext(context.Context) GetNetworkRoutedV2FilterPtrOutput
}

type getNetworkRoutedV2FilterPtrType GetNetworkRoutedV2FilterArgs

func GetNetworkRoutedV2FilterPtr(v *GetNetworkRoutedV2FilterArgs) GetNetworkRoutedV2FilterPtrInput {
	return (*getNetworkRoutedV2FilterPtrType)(v)
}

func (*getNetworkRoutedV2FilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkRoutedV2Filter)(nil)).Elem()
}

func (i *getNetworkRoutedV2FilterPtrType) ToGetNetworkRoutedV2FilterPtrOutput() GetNetworkRoutedV2FilterPtrOutput {
	return i.ToGetNetworkRoutedV2FilterPtrOutputWithContext(context.Background())
}

func (i *getNetworkRoutedV2FilterPtrType) ToGetNetworkRoutedV2FilterPtrOutputWithContext(ctx context.Context) GetNetworkRoutedV2FilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedV2FilterPtrOutput)
}

type GetNetworkRoutedV2FilterOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedV2FilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedV2Filter)(nil)).Elem()
}

func (o GetNetworkRoutedV2FilterOutput) ToGetNetworkRoutedV2FilterOutput() GetNetworkRoutedV2FilterOutput {
	return o
}

func (o GetNetworkRoutedV2FilterOutput) ToGetNetworkRoutedV2FilterOutputWithContext(ctx context.Context) GetNetworkRoutedV2FilterOutput {
	return o
}

func (o GetNetworkRoutedV2FilterOutput) ToGetNetworkRoutedV2FilterPtrOutput() GetNetworkRoutedV2FilterPtrOutput {
	return o.ToGetNetworkRoutedV2FilterPtrOutputWithContext(context.Background())
}

func (o GetNetworkRoutedV2FilterOutput) ToGetNetworkRoutedV2FilterPtrOutputWithContext(ctx context.Context) GetNetworkRoutedV2FilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetNetworkRoutedV2Filter) *GetNetworkRoutedV2Filter {
		return &v
	}).(GetNetworkRoutedV2FilterPtrOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNetworkRoutedV2FilterOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2Filter) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Search by name with a regular expression
func (o GetNetworkRoutedV2FilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2Filter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetNetworkRoutedV2FilterPtrOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedV2FilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkRoutedV2Filter)(nil)).Elem()
}

func (o GetNetworkRoutedV2FilterPtrOutput) ToGetNetworkRoutedV2FilterPtrOutput() GetNetworkRoutedV2FilterPtrOutput {
	return o
}

func (o GetNetworkRoutedV2FilterPtrOutput) ToGetNetworkRoutedV2FilterPtrOutputWithContext(ctx context.Context) GetNetworkRoutedV2FilterPtrOutput {
	return o
}

func (o GetNetworkRoutedV2FilterPtrOutput) Elem() GetNetworkRoutedV2FilterOutput {
	return o.ApplyT(func(v *GetNetworkRoutedV2Filter) GetNetworkRoutedV2Filter {
		if v != nil {
			return *v
		}
		var ret GetNetworkRoutedV2Filter
		return ret
	}).(GetNetworkRoutedV2FilterOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNetworkRoutedV2FilterPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNetworkRoutedV2Filter) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Search by name with a regular expression
func (o GetNetworkRoutedV2FilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNetworkRoutedV2Filter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetNetworkRoutedV2MetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetNetworkRoutedV2MetadataEntryInput is an input type that accepts GetNetworkRoutedV2MetadataEntryArgs and GetNetworkRoutedV2MetadataEntryOutput values.
// You can construct a concrete instance of `GetNetworkRoutedV2MetadataEntryInput` via:
//
//	GetNetworkRoutedV2MetadataEntryArgs{...}
type GetNetworkRoutedV2MetadataEntryInput interface {
	pulumi.Input

	ToGetNetworkRoutedV2MetadataEntryOutput() GetNetworkRoutedV2MetadataEntryOutput
	ToGetNetworkRoutedV2MetadataEntryOutputWithContext(context.Context) GetNetworkRoutedV2MetadataEntryOutput
}

type GetNetworkRoutedV2MetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkRoutedV2MetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedV2MetadataEntry)(nil)).Elem()
}

func (i GetNetworkRoutedV2MetadataEntryArgs) ToGetNetworkRoutedV2MetadataEntryOutput() GetNetworkRoutedV2MetadataEntryOutput {
	return i.ToGetNetworkRoutedV2MetadataEntryOutputWithContext(context.Background())
}

func (i GetNetworkRoutedV2MetadataEntryArgs) ToGetNetworkRoutedV2MetadataEntryOutputWithContext(ctx context.Context) GetNetworkRoutedV2MetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedV2MetadataEntryOutput)
}

// GetNetworkRoutedV2MetadataEntryArrayInput is an input type that accepts GetNetworkRoutedV2MetadataEntryArray and GetNetworkRoutedV2MetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetNetworkRoutedV2MetadataEntryArrayInput` via:
//
//	GetNetworkRoutedV2MetadataEntryArray{ GetNetworkRoutedV2MetadataEntryArgs{...} }
type GetNetworkRoutedV2MetadataEntryArrayInput interface {
	pulumi.Input

	ToGetNetworkRoutedV2MetadataEntryArrayOutput() GetNetworkRoutedV2MetadataEntryArrayOutput
	ToGetNetworkRoutedV2MetadataEntryArrayOutputWithContext(context.Context) GetNetworkRoutedV2MetadataEntryArrayOutput
}

type GetNetworkRoutedV2MetadataEntryArray []GetNetworkRoutedV2MetadataEntryInput

func (GetNetworkRoutedV2MetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedV2MetadataEntry)(nil)).Elem()
}

func (i GetNetworkRoutedV2MetadataEntryArray) ToGetNetworkRoutedV2MetadataEntryArrayOutput() GetNetworkRoutedV2MetadataEntryArrayOutput {
	return i.ToGetNetworkRoutedV2MetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetNetworkRoutedV2MetadataEntryArray) ToGetNetworkRoutedV2MetadataEntryArrayOutputWithContext(ctx context.Context) GetNetworkRoutedV2MetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedV2MetadataEntryArrayOutput)
}

type GetNetworkRoutedV2MetadataEntryOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedV2MetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedV2MetadataEntry)(nil)).Elem()
}

func (o GetNetworkRoutedV2MetadataEntryOutput) ToGetNetworkRoutedV2MetadataEntryOutput() GetNetworkRoutedV2MetadataEntryOutput {
	return o
}

func (o GetNetworkRoutedV2MetadataEntryOutput) ToGetNetworkRoutedV2MetadataEntryOutputWithContext(ctx context.Context) GetNetworkRoutedV2MetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetNetworkRoutedV2MetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2MetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetNetworkRoutedV2MetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2MetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetNetworkRoutedV2MetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2MetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetNetworkRoutedV2MetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2MetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetNetworkRoutedV2MetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2MetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkRoutedV2MetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedV2MetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedV2MetadataEntry)(nil)).Elem()
}

func (o GetNetworkRoutedV2MetadataEntryArrayOutput) ToGetNetworkRoutedV2MetadataEntryArrayOutput() GetNetworkRoutedV2MetadataEntryArrayOutput {
	return o
}

func (o GetNetworkRoutedV2MetadataEntryArrayOutput) ToGetNetworkRoutedV2MetadataEntryArrayOutputWithContext(ctx context.Context) GetNetworkRoutedV2MetadataEntryArrayOutput {
	return o
}

func (o GetNetworkRoutedV2MetadataEntryArrayOutput) Index(i pulumi.IntInput) GetNetworkRoutedV2MetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkRoutedV2MetadataEntry {
		return vs[0].([]GetNetworkRoutedV2MetadataEntry)[vs[1].(int)]
	}).(GetNetworkRoutedV2MetadataEntryOutput)
}

type GetNetworkRoutedV2SecondaryStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetNetworkRoutedV2SecondaryStaticIpPoolInput is an input type that accepts GetNetworkRoutedV2SecondaryStaticIpPoolArgs and GetNetworkRoutedV2SecondaryStaticIpPoolOutput values.
// You can construct a concrete instance of `GetNetworkRoutedV2SecondaryStaticIpPoolInput` via:
//
//	GetNetworkRoutedV2SecondaryStaticIpPoolArgs{...}
type GetNetworkRoutedV2SecondaryStaticIpPoolInput interface {
	pulumi.Input

	ToGetNetworkRoutedV2SecondaryStaticIpPoolOutput() GetNetworkRoutedV2SecondaryStaticIpPoolOutput
	ToGetNetworkRoutedV2SecondaryStaticIpPoolOutputWithContext(context.Context) GetNetworkRoutedV2SecondaryStaticIpPoolOutput
}

type GetNetworkRoutedV2SecondaryStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNetworkRoutedV2SecondaryStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (i GetNetworkRoutedV2SecondaryStaticIpPoolArgs) ToGetNetworkRoutedV2SecondaryStaticIpPoolOutput() GetNetworkRoutedV2SecondaryStaticIpPoolOutput {
	return i.ToGetNetworkRoutedV2SecondaryStaticIpPoolOutputWithContext(context.Background())
}

func (i GetNetworkRoutedV2SecondaryStaticIpPoolArgs) ToGetNetworkRoutedV2SecondaryStaticIpPoolOutputWithContext(ctx context.Context) GetNetworkRoutedV2SecondaryStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedV2SecondaryStaticIpPoolOutput)
}

// GetNetworkRoutedV2SecondaryStaticIpPoolArrayInput is an input type that accepts GetNetworkRoutedV2SecondaryStaticIpPoolArray and GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetNetworkRoutedV2SecondaryStaticIpPoolArrayInput` via:
//
//	GetNetworkRoutedV2SecondaryStaticIpPoolArray{ GetNetworkRoutedV2SecondaryStaticIpPoolArgs{...} }
type GetNetworkRoutedV2SecondaryStaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput() GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput
	ToGetNetworkRoutedV2SecondaryStaticIpPoolArrayOutputWithContext(context.Context) GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput
}

type GetNetworkRoutedV2SecondaryStaticIpPoolArray []GetNetworkRoutedV2SecondaryStaticIpPoolInput

func (GetNetworkRoutedV2SecondaryStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (i GetNetworkRoutedV2SecondaryStaticIpPoolArray) ToGetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput() GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput {
	return i.ToGetNetworkRoutedV2SecondaryStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetNetworkRoutedV2SecondaryStaticIpPoolArray) ToGetNetworkRoutedV2SecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput)
}

type GetNetworkRoutedV2SecondaryStaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedV2SecondaryStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (o GetNetworkRoutedV2SecondaryStaticIpPoolOutput) ToGetNetworkRoutedV2SecondaryStaticIpPoolOutput() GetNetworkRoutedV2SecondaryStaticIpPoolOutput {
	return o
}

func (o GetNetworkRoutedV2SecondaryStaticIpPoolOutput) ToGetNetworkRoutedV2SecondaryStaticIpPoolOutputWithContext(ctx context.Context) GetNetworkRoutedV2SecondaryStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o GetNetworkRoutedV2SecondaryStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2SecondaryStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o GetNetworkRoutedV2SecondaryStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2SecondaryStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedV2SecondaryStaticIpPool)(nil)).Elem()
}

func (o GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput) ToGetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput() GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput) ToGetNetworkRoutedV2SecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetNetworkRoutedV2SecondaryStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkRoutedV2SecondaryStaticIpPool {
		return vs[0].([]GetNetworkRoutedV2SecondaryStaticIpPool)[vs[1].(int)]
	}).(GetNetworkRoutedV2SecondaryStaticIpPoolOutput)
}

type GetNetworkRoutedV2StaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetNetworkRoutedV2StaticIpPoolInput is an input type that accepts GetNetworkRoutedV2StaticIpPoolArgs and GetNetworkRoutedV2StaticIpPoolOutput values.
// You can construct a concrete instance of `GetNetworkRoutedV2StaticIpPoolInput` via:
//
//	GetNetworkRoutedV2StaticIpPoolArgs{...}
type GetNetworkRoutedV2StaticIpPoolInput interface {
	pulumi.Input

	ToGetNetworkRoutedV2StaticIpPoolOutput() GetNetworkRoutedV2StaticIpPoolOutput
	ToGetNetworkRoutedV2StaticIpPoolOutputWithContext(context.Context) GetNetworkRoutedV2StaticIpPoolOutput
}

type GetNetworkRoutedV2StaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNetworkRoutedV2StaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedV2StaticIpPool)(nil)).Elem()
}

func (i GetNetworkRoutedV2StaticIpPoolArgs) ToGetNetworkRoutedV2StaticIpPoolOutput() GetNetworkRoutedV2StaticIpPoolOutput {
	return i.ToGetNetworkRoutedV2StaticIpPoolOutputWithContext(context.Background())
}

func (i GetNetworkRoutedV2StaticIpPoolArgs) ToGetNetworkRoutedV2StaticIpPoolOutputWithContext(ctx context.Context) GetNetworkRoutedV2StaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedV2StaticIpPoolOutput)
}

// GetNetworkRoutedV2StaticIpPoolArrayInput is an input type that accepts GetNetworkRoutedV2StaticIpPoolArray and GetNetworkRoutedV2StaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetNetworkRoutedV2StaticIpPoolArrayInput` via:
//
//	GetNetworkRoutedV2StaticIpPoolArray{ GetNetworkRoutedV2StaticIpPoolArgs{...} }
type GetNetworkRoutedV2StaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetNetworkRoutedV2StaticIpPoolArrayOutput() GetNetworkRoutedV2StaticIpPoolArrayOutput
	ToGetNetworkRoutedV2StaticIpPoolArrayOutputWithContext(context.Context) GetNetworkRoutedV2StaticIpPoolArrayOutput
}

type GetNetworkRoutedV2StaticIpPoolArray []GetNetworkRoutedV2StaticIpPoolInput

func (GetNetworkRoutedV2StaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedV2StaticIpPool)(nil)).Elem()
}

func (i GetNetworkRoutedV2StaticIpPoolArray) ToGetNetworkRoutedV2StaticIpPoolArrayOutput() GetNetworkRoutedV2StaticIpPoolArrayOutput {
	return i.ToGetNetworkRoutedV2StaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetNetworkRoutedV2StaticIpPoolArray) ToGetNetworkRoutedV2StaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkRoutedV2StaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkRoutedV2StaticIpPoolArrayOutput)
}

type GetNetworkRoutedV2StaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedV2StaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkRoutedV2StaticIpPool)(nil)).Elem()
}

func (o GetNetworkRoutedV2StaticIpPoolOutput) ToGetNetworkRoutedV2StaticIpPoolOutput() GetNetworkRoutedV2StaticIpPoolOutput {
	return o
}

func (o GetNetworkRoutedV2StaticIpPoolOutput) ToGetNetworkRoutedV2StaticIpPoolOutputWithContext(ctx context.Context) GetNetworkRoutedV2StaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o GetNetworkRoutedV2StaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2StaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o GetNetworkRoutedV2StaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkRoutedV2StaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNetworkRoutedV2StaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkRoutedV2StaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkRoutedV2StaticIpPool)(nil)).Elem()
}

func (o GetNetworkRoutedV2StaticIpPoolArrayOutput) ToGetNetworkRoutedV2StaticIpPoolArrayOutput() GetNetworkRoutedV2StaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkRoutedV2StaticIpPoolArrayOutput) ToGetNetworkRoutedV2StaticIpPoolArrayOutputWithContext(ctx context.Context) GetNetworkRoutedV2StaticIpPoolArrayOutput {
	return o
}

func (o GetNetworkRoutedV2StaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetNetworkRoutedV2StaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkRoutedV2StaticIpPool {
		return vs[0].([]GetNetworkRoutedV2StaticIpPool)[vs[1].(int)]
	}).(GetNetworkRoutedV2StaticIpPoolOutput)
}

type GetNsxtAlbPoolHealthMonitor struct {
	// Name of existing ALB Pool.
	Name          string `pulumi:"name"`
	SystemDefined bool   `pulumi:"systemDefined"`
	// Type of health monitor
	Type string `pulumi:"type"`
}

// GetNsxtAlbPoolHealthMonitorInput is an input type that accepts GetNsxtAlbPoolHealthMonitorArgs and GetNsxtAlbPoolHealthMonitorOutput values.
// You can construct a concrete instance of `GetNsxtAlbPoolHealthMonitorInput` via:
//
//	GetNsxtAlbPoolHealthMonitorArgs{...}
type GetNsxtAlbPoolHealthMonitorInput interface {
	pulumi.Input

	ToGetNsxtAlbPoolHealthMonitorOutput() GetNsxtAlbPoolHealthMonitorOutput
	ToGetNsxtAlbPoolHealthMonitorOutputWithContext(context.Context) GetNsxtAlbPoolHealthMonitorOutput
}

type GetNsxtAlbPoolHealthMonitorArgs struct {
	// Name of existing ALB Pool.
	Name          pulumi.StringInput `pulumi:"name"`
	SystemDefined pulumi.BoolInput   `pulumi:"systemDefined"`
	// Type of health monitor
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNsxtAlbPoolHealthMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbPoolHealthMonitor)(nil)).Elem()
}

func (i GetNsxtAlbPoolHealthMonitorArgs) ToGetNsxtAlbPoolHealthMonitorOutput() GetNsxtAlbPoolHealthMonitorOutput {
	return i.ToGetNsxtAlbPoolHealthMonitorOutputWithContext(context.Background())
}

func (i GetNsxtAlbPoolHealthMonitorArgs) ToGetNsxtAlbPoolHealthMonitorOutputWithContext(ctx context.Context) GetNsxtAlbPoolHealthMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbPoolHealthMonitorOutput)
}

// GetNsxtAlbPoolHealthMonitorArrayInput is an input type that accepts GetNsxtAlbPoolHealthMonitorArray and GetNsxtAlbPoolHealthMonitorArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbPoolHealthMonitorArrayInput` via:
//
//	GetNsxtAlbPoolHealthMonitorArray{ GetNsxtAlbPoolHealthMonitorArgs{...} }
type GetNsxtAlbPoolHealthMonitorArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbPoolHealthMonitorArrayOutput() GetNsxtAlbPoolHealthMonitorArrayOutput
	ToGetNsxtAlbPoolHealthMonitorArrayOutputWithContext(context.Context) GetNsxtAlbPoolHealthMonitorArrayOutput
}

type GetNsxtAlbPoolHealthMonitorArray []GetNsxtAlbPoolHealthMonitorInput

func (GetNsxtAlbPoolHealthMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbPoolHealthMonitor)(nil)).Elem()
}

func (i GetNsxtAlbPoolHealthMonitorArray) ToGetNsxtAlbPoolHealthMonitorArrayOutput() GetNsxtAlbPoolHealthMonitorArrayOutput {
	return i.ToGetNsxtAlbPoolHealthMonitorArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbPoolHealthMonitorArray) ToGetNsxtAlbPoolHealthMonitorArrayOutputWithContext(ctx context.Context) GetNsxtAlbPoolHealthMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbPoolHealthMonitorArrayOutput)
}

type GetNsxtAlbPoolHealthMonitorOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbPoolHealthMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbPoolHealthMonitor)(nil)).Elem()
}

func (o GetNsxtAlbPoolHealthMonitorOutput) ToGetNsxtAlbPoolHealthMonitorOutput() GetNsxtAlbPoolHealthMonitorOutput {
	return o
}

func (o GetNsxtAlbPoolHealthMonitorOutput) ToGetNsxtAlbPoolHealthMonitorOutputWithContext(ctx context.Context) GetNsxtAlbPoolHealthMonitorOutput {
	return o
}

// Name of existing ALB Pool.
func (o GetNsxtAlbPoolHealthMonitorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolHealthMonitor) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNsxtAlbPoolHealthMonitorOutput) SystemDefined() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolHealthMonitor) bool { return v.SystemDefined }).(pulumi.BoolOutput)
}

// Type of health monitor
func (o GetNsxtAlbPoolHealthMonitorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolHealthMonitor) string { return v.Type }).(pulumi.StringOutput)
}

type GetNsxtAlbPoolHealthMonitorArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbPoolHealthMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbPoolHealthMonitor)(nil)).Elem()
}

func (o GetNsxtAlbPoolHealthMonitorArrayOutput) ToGetNsxtAlbPoolHealthMonitorArrayOutput() GetNsxtAlbPoolHealthMonitorArrayOutput {
	return o
}

func (o GetNsxtAlbPoolHealthMonitorArrayOutput) ToGetNsxtAlbPoolHealthMonitorArrayOutputWithContext(ctx context.Context) GetNsxtAlbPoolHealthMonitorArrayOutput {
	return o
}

func (o GetNsxtAlbPoolHealthMonitorArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbPoolHealthMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbPoolHealthMonitor {
		return vs[0].([]GetNsxtAlbPoolHealthMonitor)[vs[1].(int)]
	}).(GetNsxtAlbPoolHealthMonitorOutput)
}

type GetNsxtAlbPoolMember struct {
	// Detailed health message
	DetailedHealthMessage string `pulumi:"detailedHealthMessage"`
	// Shows is the member is enabled or not
	Enabled bool `pulumi:"enabled"`
	// Health status
	HealthStatus string `pulumi:"healthStatus"`
	// IP Address of pool member
	IpAddress string `pulumi:"ipAddress"`
	// Marked down by provides a set of health monitors that marked the service down
	MarkedDownBies []string `pulumi:"markedDownBies"`
	// Service port
	Port int `pulumi:"port"`
	// Load ratio
	Ratio int `pulumi:"ratio"`
}

// GetNsxtAlbPoolMemberInput is an input type that accepts GetNsxtAlbPoolMemberArgs and GetNsxtAlbPoolMemberOutput values.
// You can construct a concrete instance of `GetNsxtAlbPoolMemberInput` via:
//
//	GetNsxtAlbPoolMemberArgs{...}
type GetNsxtAlbPoolMemberInput interface {
	pulumi.Input

	ToGetNsxtAlbPoolMemberOutput() GetNsxtAlbPoolMemberOutput
	ToGetNsxtAlbPoolMemberOutputWithContext(context.Context) GetNsxtAlbPoolMemberOutput
}

type GetNsxtAlbPoolMemberArgs struct {
	// Detailed health message
	DetailedHealthMessage pulumi.StringInput `pulumi:"detailedHealthMessage"`
	// Shows is the member is enabled or not
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Health status
	HealthStatus pulumi.StringInput `pulumi:"healthStatus"`
	// IP Address of pool member
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Marked down by provides a set of health monitors that marked the service down
	MarkedDownBies pulumi.StringArrayInput `pulumi:"markedDownBies"`
	// Service port
	Port pulumi.IntInput `pulumi:"port"`
	// Load ratio
	Ratio pulumi.IntInput `pulumi:"ratio"`
}

func (GetNsxtAlbPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbPoolMember)(nil)).Elem()
}

func (i GetNsxtAlbPoolMemberArgs) ToGetNsxtAlbPoolMemberOutput() GetNsxtAlbPoolMemberOutput {
	return i.ToGetNsxtAlbPoolMemberOutputWithContext(context.Background())
}

func (i GetNsxtAlbPoolMemberArgs) ToGetNsxtAlbPoolMemberOutputWithContext(ctx context.Context) GetNsxtAlbPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbPoolMemberOutput)
}

// GetNsxtAlbPoolMemberArrayInput is an input type that accepts GetNsxtAlbPoolMemberArray and GetNsxtAlbPoolMemberArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbPoolMemberArrayInput` via:
//
//	GetNsxtAlbPoolMemberArray{ GetNsxtAlbPoolMemberArgs{...} }
type GetNsxtAlbPoolMemberArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbPoolMemberArrayOutput() GetNsxtAlbPoolMemberArrayOutput
	ToGetNsxtAlbPoolMemberArrayOutputWithContext(context.Context) GetNsxtAlbPoolMemberArrayOutput
}

type GetNsxtAlbPoolMemberArray []GetNsxtAlbPoolMemberInput

func (GetNsxtAlbPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbPoolMember)(nil)).Elem()
}

func (i GetNsxtAlbPoolMemberArray) ToGetNsxtAlbPoolMemberArrayOutput() GetNsxtAlbPoolMemberArrayOutput {
	return i.ToGetNsxtAlbPoolMemberArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbPoolMemberArray) ToGetNsxtAlbPoolMemberArrayOutputWithContext(ctx context.Context) GetNsxtAlbPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbPoolMemberArrayOutput)
}

type GetNsxtAlbPoolMemberOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbPoolMember)(nil)).Elem()
}

func (o GetNsxtAlbPoolMemberOutput) ToGetNsxtAlbPoolMemberOutput() GetNsxtAlbPoolMemberOutput {
	return o
}

func (o GetNsxtAlbPoolMemberOutput) ToGetNsxtAlbPoolMemberOutputWithContext(ctx context.Context) GetNsxtAlbPoolMemberOutput {
	return o
}

// Detailed health message
func (o GetNsxtAlbPoolMemberOutput) DetailedHealthMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolMember) string { return v.DetailedHealthMessage }).(pulumi.StringOutput)
}

// Shows is the member is enabled or not
func (o GetNsxtAlbPoolMemberOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolMember) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Health status
func (o GetNsxtAlbPoolMemberOutput) HealthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolMember) string { return v.HealthStatus }).(pulumi.StringOutput)
}

// IP Address of pool member
func (o GetNsxtAlbPoolMemberOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolMember) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Marked down by provides a set of health monitors that marked the service down
func (o GetNsxtAlbPoolMemberOutput) MarkedDownBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolMember) []string { return v.MarkedDownBies }).(pulumi.StringArrayOutput)
}

// Service port
func (o GetNsxtAlbPoolMemberOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolMember) int { return v.Port }).(pulumi.IntOutput)
}

// Load ratio
func (o GetNsxtAlbPoolMemberOutput) Ratio() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolMember) int { return v.Ratio }).(pulumi.IntOutput)
}

type GetNsxtAlbPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbPoolMember)(nil)).Elem()
}

func (o GetNsxtAlbPoolMemberArrayOutput) ToGetNsxtAlbPoolMemberArrayOutput() GetNsxtAlbPoolMemberArrayOutput {
	return o
}

func (o GetNsxtAlbPoolMemberArrayOutput) ToGetNsxtAlbPoolMemberArrayOutputWithContext(ctx context.Context) GetNsxtAlbPoolMemberArrayOutput {
	return o
}

func (o GetNsxtAlbPoolMemberArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbPoolMember {
		return vs[0].([]GetNsxtAlbPoolMember)[vs[1].(int)]
	}).(GetNsxtAlbPoolMemberOutput)
}

type GetNsxtAlbPoolPersistenceProfile struct {
	// Name of existing ALB Pool.
	Name string `pulumi:"name"`
	// Type of persistence strategy
	Type string `pulumi:"type"`
	// Value of attribute based on persistence type
	Value string `pulumi:"value"`
}

// GetNsxtAlbPoolPersistenceProfileInput is an input type that accepts GetNsxtAlbPoolPersistenceProfileArgs and GetNsxtAlbPoolPersistenceProfileOutput values.
// You can construct a concrete instance of `GetNsxtAlbPoolPersistenceProfileInput` via:
//
//	GetNsxtAlbPoolPersistenceProfileArgs{...}
type GetNsxtAlbPoolPersistenceProfileInput interface {
	pulumi.Input

	ToGetNsxtAlbPoolPersistenceProfileOutput() GetNsxtAlbPoolPersistenceProfileOutput
	ToGetNsxtAlbPoolPersistenceProfileOutputWithContext(context.Context) GetNsxtAlbPoolPersistenceProfileOutput
}

type GetNsxtAlbPoolPersistenceProfileArgs struct {
	// Name of existing ALB Pool.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of persistence strategy
	Type pulumi.StringInput `pulumi:"type"`
	// Value of attribute based on persistence type
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxtAlbPoolPersistenceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbPoolPersistenceProfile)(nil)).Elem()
}

func (i GetNsxtAlbPoolPersistenceProfileArgs) ToGetNsxtAlbPoolPersistenceProfileOutput() GetNsxtAlbPoolPersistenceProfileOutput {
	return i.ToGetNsxtAlbPoolPersistenceProfileOutputWithContext(context.Background())
}

func (i GetNsxtAlbPoolPersistenceProfileArgs) ToGetNsxtAlbPoolPersistenceProfileOutputWithContext(ctx context.Context) GetNsxtAlbPoolPersistenceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbPoolPersistenceProfileOutput)
}

// GetNsxtAlbPoolPersistenceProfileArrayInput is an input type that accepts GetNsxtAlbPoolPersistenceProfileArray and GetNsxtAlbPoolPersistenceProfileArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbPoolPersistenceProfileArrayInput` via:
//
//	GetNsxtAlbPoolPersistenceProfileArray{ GetNsxtAlbPoolPersistenceProfileArgs{...} }
type GetNsxtAlbPoolPersistenceProfileArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbPoolPersistenceProfileArrayOutput() GetNsxtAlbPoolPersistenceProfileArrayOutput
	ToGetNsxtAlbPoolPersistenceProfileArrayOutputWithContext(context.Context) GetNsxtAlbPoolPersistenceProfileArrayOutput
}

type GetNsxtAlbPoolPersistenceProfileArray []GetNsxtAlbPoolPersistenceProfileInput

func (GetNsxtAlbPoolPersistenceProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbPoolPersistenceProfile)(nil)).Elem()
}

func (i GetNsxtAlbPoolPersistenceProfileArray) ToGetNsxtAlbPoolPersistenceProfileArrayOutput() GetNsxtAlbPoolPersistenceProfileArrayOutput {
	return i.ToGetNsxtAlbPoolPersistenceProfileArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbPoolPersistenceProfileArray) ToGetNsxtAlbPoolPersistenceProfileArrayOutputWithContext(ctx context.Context) GetNsxtAlbPoolPersistenceProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbPoolPersistenceProfileArrayOutput)
}

type GetNsxtAlbPoolPersistenceProfileOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbPoolPersistenceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbPoolPersistenceProfile)(nil)).Elem()
}

func (o GetNsxtAlbPoolPersistenceProfileOutput) ToGetNsxtAlbPoolPersistenceProfileOutput() GetNsxtAlbPoolPersistenceProfileOutput {
	return o
}

func (o GetNsxtAlbPoolPersistenceProfileOutput) ToGetNsxtAlbPoolPersistenceProfileOutputWithContext(ctx context.Context) GetNsxtAlbPoolPersistenceProfileOutput {
	return o
}

// Name of existing ALB Pool.
func (o GetNsxtAlbPoolPersistenceProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolPersistenceProfile) string { return v.Name }).(pulumi.StringOutput)
}

// Type of persistence strategy
func (o GetNsxtAlbPoolPersistenceProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolPersistenceProfile) string { return v.Type }).(pulumi.StringOutput)
}

// Value of attribute based on persistence type
func (o GetNsxtAlbPoolPersistenceProfileOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbPoolPersistenceProfile) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxtAlbPoolPersistenceProfileArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbPoolPersistenceProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbPoolPersistenceProfile)(nil)).Elem()
}

func (o GetNsxtAlbPoolPersistenceProfileArrayOutput) ToGetNsxtAlbPoolPersistenceProfileArrayOutput() GetNsxtAlbPoolPersistenceProfileArrayOutput {
	return o
}

func (o GetNsxtAlbPoolPersistenceProfileArrayOutput) ToGetNsxtAlbPoolPersistenceProfileArrayOutputWithContext(ctx context.Context) GetNsxtAlbPoolPersistenceProfileArrayOutput {
	return o
}

func (o GetNsxtAlbPoolPersistenceProfileArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbPoolPersistenceProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbPoolPersistenceProfile {
		return vs[0].([]GetNsxtAlbPoolPersistenceProfile)[vs[1].(int)]
	}).(GetNsxtAlbPoolPersistenceProfileOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRule struct {
	// Actions to perform with the rule that matches
	Actions []GetNsxtAlbVirtualServiceHttpReqRulesRuleAction `pulumi:"actions"`
	// Defines if the rule is active or not
	Active bool `pulumi:"active"`
	// Defines whether logging with headers on rule match is enabled or not
	Logging bool `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriterias []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria `pulumi:"matchCriterias"`
	// Name of the rule
	Name string `pulumi:"name"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleArgs struct {
	// Actions to perform with the rule that matches
	Actions GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayInput `pulumi:"actions"`
	// Defines if the rule is active or not
	Active pulumi.BoolInput `pulumi:"active"`
	// Defines whether logging with headers on rule match is enabled or not
	Logging pulumi.BoolInput `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriterias GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayInput `pulumi:"matchCriterias"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRule)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRule)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRule)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput {
	return o
}

// Actions to perform with the rule that matches
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput) Actions() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRule) []GetNsxtAlbVirtualServiceHttpReqRulesRuleAction {
		return v.Actions
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput)
}

// Defines if the rule is active or not
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRule) bool { return v.Active }).(pulumi.BoolOutput)
}

// Defines whether logging with headers on rule match is enabled or not
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput) Logging() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRule) bool { return v.Logging }).(pulumi.BoolOutput)
}

// Rule matching Criteria
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput) MatchCriterias() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRule) []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria {
		return v.MatchCriterias
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput)
}

// Name of the rule
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRule)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRule {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRule)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleAction struct {
	// A set of header modification rules
	ModifyHeaders []GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader `pulumi:"modifyHeaders"`
	// Redirect request
	Redirects []GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect `pulumi:"redirects"`
	// URL rewrite rules
	RewriteUrls []GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl `pulumi:"rewriteUrls"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleActionInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleActionInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArgs struct {
	// A set of header modification rules
	ModifyHeaders GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayInput `pulumi:"modifyHeaders"`
	// Redirect request
	Redirects GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayInput `pulumi:"redirects"`
	// URL rewrite rules
	RewriteUrls GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayInput `pulumi:"rewriteUrls"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleAction)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleActionInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleAction)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleAction)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput {
	return o
}

// A set of header modification rules
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput) ModifyHeaders() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleAction) []GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader {
		return v.ModifyHeaders
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput)
}

// Redirect request
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput) Redirects() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleAction) []GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect {
		return v.Redirects
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput)
}

// URL rewrite rules
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput) RewriteUrls() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleAction) []GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl {
		return v.RewriteUrls
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleAction)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleAction {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleAction)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader struct {
	// One of the following HTTP header actions
	Action string `pulumi:"action"`
	// HTTP header name
	Name string `pulumi:"name"`
	// HTTP header value
	Value string `pulumi:"value"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArgs struct {
	// One of the following HTTP header actions
	Action pulumi.StringInput `pulumi:"action"`
	// HTTP header name
	Name pulumi.StringInput `pulumi:"name"`
	// HTTP header value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput {
	return o
}

// One of the following HTTP header actions
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader) string { return v.Action }).(pulumi.StringOutput)
}

// HTTP header name
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader) string { return v.Name }).(pulumi.StringOutput)
}

// HTTP header value
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeader)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect struct {
	// Host to which redirect the request
	Host string `pulumi:"host"`
	// Path to which redirect the request
	KeepQuery bool `pulumi:"keepQuery"`
	// Port to which redirect the request
	Path string `pulumi:"path"`
	// Port to which the request will be redirected
	Port string `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol string `pulumi:"protocol"`
	// Redirect status code
	StatusCode int `pulumi:"statusCode"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArgs struct {
	// Host to which redirect the request
	Host pulumi.StringInput `pulumi:"host"`
	// Path to which redirect the request
	KeepQuery pulumi.BoolInput `pulumi:"keepQuery"`
	// Port to which redirect the request
	Path pulumi.StringInput `pulumi:"path"`
	// Port to which the request will be redirected
	Port pulumi.StringInput `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Redirect status code
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput {
	return o
}

// Host to which redirect the request
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect) string { return v.Host }).(pulumi.StringOutput)
}

// Path to which redirect the request
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput) KeepQuery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect) bool { return v.KeepQuery }).(pulumi.BoolOutput)
}

// Port to which redirect the request
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect) string { return v.Path }).(pulumi.StringOutput)
}

// Port to which the request will be redirected
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect) string { return v.Port }).(pulumi.StringOutput)
}

// HTTP or HTTPS protocol
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect) string { return v.Protocol }).(pulumi.StringOutput)
}

// Redirect status code
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect) int { return v.StatusCode }).(pulumi.IntOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirect)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl struct {
	// Path to use for the rewritten URL
	ExistingPath string `pulumi:"existingPath"`
	// Host to use for the rewritten URL
	HostHeader string `pulumi:"hostHeader"`
	// Whether or not to keep the existing query string when rewriting the URL
	KeepQuery bool `pulumi:"keepQuery"`
	// Query string to use or append to the existing query string in the rewritten URL
	Query string `pulumi:"query"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArgs struct {
	// Path to use for the rewritten URL
	ExistingPath pulumi.StringInput `pulumi:"existingPath"`
	// Host to use for the rewritten URL
	HostHeader pulumi.StringInput `pulumi:"hostHeader"`
	// Whether or not to keep the existing query string when rewriting the URL
	KeepQuery pulumi.BoolInput `pulumi:"keepQuery"`
	// Query string to use or append to the existing query string in the rewritten URL
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput {
	return o
}

// Path to use for the rewritten URL
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput) ExistingPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl) string { return v.ExistingPath }).(pulumi.StringOutput)
}

// Host to use for the rewritten URL
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput) HostHeader() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl) string { return v.HostHeader }).(pulumi.StringOutput)
}

// Whether or not to keep the existing query string when rewriting the URL
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput) KeepQuery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl) bool { return v.KeepQuery }).(pulumi.BoolOutput)
}

// Query string to use or append to the existing query string in the rewritten URL
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl) string { return v.Query }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrl)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria struct {
	// Client IP Address criteria
	ClientIpAddresses []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress `pulumi:"clientIpAddresses"`
	// Rule for matching cookie
	Cookies []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie `pulumi:"cookies"`
	// HTTP methods that are matched
	HttpMethods []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod `pulumi:"httpMethods"`
	// HTTP request path that will be matched
	Paths []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath `pulumi:"paths"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType string `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries []string `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader `pulumi:"requestHeaders"`
	// Service Port criteria
	ServicePorts []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort `pulumi:"servicePorts"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs struct {
	// Client IP Address criteria
	ClientIpAddresses GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayInput `pulumi:"clientIpAddresses"`
	// Rule for matching cookie
	Cookies GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayInput `pulumi:"cookies"`
	// HTTP methods that are matched
	HttpMethods GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayInput `pulumi:"httpMethods"`
	// HTTP request path that will be matched
	Paths GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayInput `pulumi:"paths"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType pulumi.StringInput `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries pulumi.StringArrayInput `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// Service Port criteria
	ServicePorts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayInput `pulumi:"servicePorts"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput {
	return o
}

// Client IP Address criteria
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ClientIpAddresses() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress {
		return v.ClientIpAddresses
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput)
}

// Rule for matching cookie
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) Cookies() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie {
		return v.Cookies
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput)
}

// HTTP methods that are matched
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) HttpMethods() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod {
		return v.HttpMethods
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput)
}

// HTTP request path that will be matched
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) Paths() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath {
		return v.Paths
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput)
}

// Protocol to match - 'HTTP' or 'HTTPS'
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// HTTP request query strings to match
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) []string { return v.Queries }).(pulumi.StringArrayOutput)
}

// A set of rules for matching request headers
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) RequestHeaders() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader {
		return v.RequestHeaders
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

// Service Port criteria
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput) ServicePorts() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort {
		return v.ServicePorts
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteria)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress struct {
	// Criteria to use for IP address matching the HTTP request
	Criteria string `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses []string `pulumi:"ipAddresses"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs struct {
	// Criteria to use for IP address matching the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

// Criteria to use for IP address matching the HTTP request
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of IP addresses
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress) []string {
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddress)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie struct {
	// Criteria to use for matching cookies in the HTTP request
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value string `pulumi:"value"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs struct {
	// Criteria to use for matching cookies in the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput {
	return o
}

// Criteria to use for matching cookies in the HTTP request
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP cookie whose value is to be matched
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP cookie
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookie)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod struct {
	// Criteria to use for HTTP method matching in the HTTP request
	Criteria string `pulumi:"criteria"`
	// HTTP methods that will be matched
	Methods []string `pulumi:"methods"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArgs struct {
	// Criteria to use for HTTP method matching in the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// HTTP methods that will be matched
	Methods pulumi.StringArrayInput `pulumi:"methods"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput {
	return o
}

// Criteria to use for HTTP method matching in the HTTP request
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod) string { return v.Criteria }).(pulumi.StringOutput)
}

// HTTP methods that will be matched
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethod)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath struct {
	// Criteria to use for matching the path in the HTTP request URI
	Criteria string `pulumi:"criteria"`
	// String values to match the path
	Paths []string `pulumi:"paths"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs struct {
	// Criteria to use for matching the path in the HTTP request URI
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// String values to match the path
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput {
	return o
}

// Criteria to use for matching the path in the HTTP request URI
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath) string { return v.Criteria }).(pulumi.StringOutput)
}

// String values to match the path
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPath)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP header
	Values []string `pulumi:"values"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP header
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

// Criteria to use for matching headers and cookies in the HTTP request amd response
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP header whose value is to be matched
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP header
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeader)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort struct {
	// Criteria to use for service port matching the HTTP request
	Criteria string `pulumi:"criteria"`
	// A set of TCP ports
	Ports []int `pulumi:"ports"`
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArgs and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArgs{...}
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArgs struct {
	// Criteria to use for service port matching the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of TCP ports
	Ports pulumi.IntArrayInput `pulumi:"ports"`
}

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArgs) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput)
}

// GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArray and GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArray{ GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArgs{...} }
type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput
	ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArray []GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortInput

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArray) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput {
	return o
}

// Criteria to use for service port matching the HTTP request
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of TCP ports
func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput() GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput) ToGetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePort)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRule struct {
	// Actions to perform with the rule that matches
	Actions []GetNsxtAlbVirtualServiceHttpRespRulesRuleAction `pulumi:"actions"`
	// Defines if the rule is active or not
	Active bool `pulumi:"active"`
	// Defines whether logging with headers on rule match is enabled or not
	Logging bool `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriterias []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria `pulumi:"matchCriterias"`
	// Name of the rule
	Name string `pulumi:"name"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleArgs struct {
	// Actions to perform with the rule that matches
	Actions GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayInput `pulumi:"actions"`
	// Defines if the rule is active or not
	Active pulumi.BoolInput `pulumi:"active"`
	// Defines whether logging with headers on rule match is enabled or not
	Logging pulumi.BoolInput `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriterias GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayInput `pulumi:"matchCriterias"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRule)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRule)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRule)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput {
	return o
}

// Actions to perform with the rule that matches
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput) Actions() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRule) []GetNsxtAlbVirtualServiceHttpRespRulesRuleAction {
		return v.Actions
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput)
}

// Defines if the rule is active or not
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRule) bool { return v.Active }).(pulumi.BoolOutput)
}

// Defines whether logging with headers on rule match is enabled or not
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput) Logging() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRule) bool { return v.Logging }).(pulumi.BoolOutput)
}

// Rule matching Criteria
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput) MatchCriterias() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRule) []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria {
		return v.MatchCriterias
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput)
}

// Name of the rule
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRule)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRule {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRule)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleAction struct {
	// Modify header
	ModifyHeaders []GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader `pulumi:"modifyHeaders"`
	// Rewrite location header
	RewriteLocationHeaders []GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader `pulumi:"rewriteLocationHeaders"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleActionInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleActionInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArgs struct {
	// Modify header
	ModifyHeaders GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayInput `pulumi:"modifyHeaders"`
	// Rewrite location header
	RewriteLocationHeaders GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayInput `pulumi:"rewriteLocationHeaders"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleAction)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleActionInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleAction)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleAction)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput {
	return o
}

// Modify header
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput) ModifyHeaders() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleAction) []GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader {
		return v.ModifyHeaders
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput)
}

// Rewrite location header
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput) RewriteLocationHeaders() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleAction) []GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader {
		return v.RewriteLocationHeaders
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleAction)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleAction {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleAction)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader struct {
	// One of the following HTTP header actions
	Action string `pulumi:"action"`
	// HTTP header name
	Name string `pulumi:"name"`
	// HTTP header value
	Value string `pulumi:"value"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArgs struct {
	// One of the following HTTP header actions
	Action pulumi.StringInput `pulumi:"action"`
	// HTTP header name
	Name pulumi.StringInput `pulumi:"name"`
	// HTTP header value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput {
	return o
}

// One of the following HTTP header actions
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader) string { return v.Action }).(pulumi.StringOutput)
}

// HTTP header name
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader) string { return v.Name }).(pulumi.StringOutput)
}

// HTTP header value
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeader)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader struct {
	// Host to which redirect the request
	Host string `pulumi:"host"`
	// Path to which redirect the request
	KeepQuery bool `pulumi:"keepQuery"`
	// Port to which redirect the request
	Path string `pulumi:"path"`
	// Port to which redirect the request
	Port string `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol string `pulumi:"protocol"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArgs struct {
	// Host to which redirect the request
	Host pulumi.StringInput `pulumi:"host"`
	// Path to which redirect the request
	KeepQuery pulumi.BoolInput `pulumi:"keepQuery"`
	// Port to which redirect the request
	Path pulumi.StringInput `pulumi:"path"`
	// Port to which redirect the request
	Port pulumi.StringInput `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput {
	return o
}

// Host to which redirect the request
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader) string { return v.Host }).(pulumi.StringOutput)
}

// Path to which redirect the request
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput) KeepQuery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader) bool { return v.KeepQuery }).(pulumi.BoolOutput)
}

// Port to which redirect the request
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader) string { return v.Path }).(pulumi.StringOutput)
}

// Port to which redirect the request
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader) string { return v.Port }).(pulumi.StringOutput)
}

// HTTP or HTTPS protocol
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeader)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria struct {
	// Criteria for matching client IP Address
	ClientIpAddresses []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress `pulumi:"clientIpAddresses"`
	// Rule for matching cookie
	Cookies []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie `pulumi:"cookies"`
	// Criteria to match HTTP methods
	HttpMethods []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod `pulumi:"httpMethods"`
	// A matching criteria for Location header
	LocationHeaders []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader `pulumi:"locationHeaders"`
	// Criteria for matching request paths
	Paths []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath `pulumi:"paths"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType string `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries []string `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader `pulumi:"requestHeaders"`
	// A set of criteria to match response headers
	ResponseHeaders []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader `pulumi:"responseHeaders"`
	// Criteria for matching service ports
	ServicePorts []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort `pulumi:"servicePorts"`
	// HTTP Status code to match
	StatusCodes []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode `pulumi:"statusCodes"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs struct {
	// Criteria for matching client IP Address
	ClientIpAddresses GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayInput `pulumi:"clientIpAddresses"`
	// Rule for matching cookie
	Cookies GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayInput `pulumi:"cookies"`
	// Criteria to match HTTP methods
	HttpMethods GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayInput `pulumi:"httpMethods"`
	// A matching criteria for Location header
	LocationHeaders GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayInput `pulumi:"locationHeaders"`
	// Criteria for matching request paths
	Paths GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayInput `pulumi:"paths"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType pulumi.StringInput `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries pulumi.StringArrayInput `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// A set of criteria to match response headers
	ResponseHeaders GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayInput `pulumi:"responseHeaders"`
	// Criteria for matching service ports
	ServicePorts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayInput `pulumi:"servicePorts"`
	// HTTP Status code to match
	StatusCodes GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayInput `pulumi:"statusCodes"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput {
	return o
}

// Criteria for matching client IP Address
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ClientIpAddresses() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress {
		return v.ClientIpAddresses
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput)
}

// Rule for matching cookie
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) Cookies() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie {
		return v.Cookies
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput)
}

// Criteria to match HTTP methods
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) HttpMethods() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod {
		return v.HttpMethods
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput)
}

// A matching criteria for Location header
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) LocationHeaders() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader {
		return v.LocationHeaders
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput)
}

// Criteria for matching request paths
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) Paths() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath {
		return v.Paths
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput)
}

// Protocol to match - 'HTTP' or 'HTTPS'
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// HTTP request query strings to match
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []string { return v.Queries }).(pulumi.StringArrayOutput)
}

// A set of rules for matching request headers
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) RequestHeaders() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader {
		return v.RequestHeaders
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

// A set of criteria to match response headers
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ResponseHeaders() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader {
		return v.ResponseHeaders
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput)
}

// Criteria for matching service ports
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) ServicePorts() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort {
		return v.ServicePorts
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput)
}

// HTTP Status code to match
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput) StatusCodes() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode {
		return v.StatusCodes
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteria)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress struct {
	// Criteria to use for IP address matching the HTTP request
	Criteria string `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses []string `pulumi:"ipAddresses"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs struct {
	// Criteria to use for IP address matching the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

// Criteria to use for IP address matching the HTTP request
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress) string {
		return v.Criteria
	}).(pulumi.StringOutput)
}

// A set of IP addresses
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress) []string {
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddress)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie struct {
	// Criteria to use for matching cookies in the HTTP request
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value string `pulumi:"value"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs struct {
	// Criteria to use for matching cookies in the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput {
	return o
}

// Criteria to use for matching cookies in the HTTP request
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP cookie whose value is to be matched
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP cookie
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookie)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod struct {
	// Criteria to use for HTTP methods matching the request
	Criteria string `pulumi:"criteria"`
	// HTTP methods to match
	Methods []string `pulumi:"methods"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArgs struct {
	// Criteria to use for HTTP methods matching the request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// HTTP methods to match
	Methods pulumi.StringArrayInput `pulumi:"methods"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput {
	return o
}

// Criteria to use for HTTP methods matching the request
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod) string { return v.Criteria }).(pulumi.StringOutput)
}

// HTTP methods to match
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethod)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader struct {
	// Criteria to use for matching location header
	Criteria string `pulumi:"criteria"`
	// A set of values to match for criteria
	Values []string `pulumi:"values"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs struct {
	// Criteria to use for matching location header
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of values to match for criteria
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput {
	return o
}

// Criteria to use for matching location header
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of values to match for criteria
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeader)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath struct {
	// Criteria to use for matching the path in the HTTP request URI
	Criteria string `pulumi:"criteria"`
	// String values to match the path
	Paths []string `pulumi:"paths"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs struct {
	// Criteria to use for matching the path in the HTTP request URI
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// String values to match the path
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput {
	return o
}

// Criteria to use for matching the path in the HTTP request URI
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath) string { return v.Criteria }).(pulumi.StringOutput)
}

// String values to match the path
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPath)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP header
	Values []string `pulumi:"values"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP header
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

// Criteria to use for matching headers and cookies in the HTTP request amd response
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP header whose value is to be matched
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP header
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeader)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name string `pulumi:"name"`
	// A set of values to match for an HTTP header
	Values []string `pulumi:"values"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// A set of values to match for an HTTP header
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput {
	return o
}

// Criteria to use for matching headers and cookies in the HTTP request amd response
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP header whose value is to be matched
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader) string { return v.Name }).(pulumi.StringOutput)
}

// A set of values to match for an HTTP header
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeader)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort struct {
	// Criteria to use for service ports matching the HTTP request
	Criteria string `pulumi:"criteria"`
	// A set of TCP ports
	Ports []int `pulumi:"ports"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArgs struct {
	// Criteria to use for service ports matching the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of TCP ports
	Ports pulumi.IntArrayInput `pulumi:"ports"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput {
	return o
}

// Criteria to use for service ports matching the HTTP request
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of TCP ports
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePort)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode struct {
	// Criteria to use for status code matching the HTTP request.
	Criteria string `pulumi:"criteria"`
	// HTTP status code or range of this rule matching
	HttpStatusCode string `pulumi:"httpStatusCode"`
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs{...}
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs struct {
	// Criteria to use for status code matching the HTTP request.
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// HTTP status code or range of this rule matching
	HttpStatusCode pulumi.StringInput `pulumi:"httpStatusCode"`
}

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput)
}

// GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArray and GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArray{ GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs{...} }
type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput
	ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArray []GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeInput

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArray) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput {
	return o
}

// Criteria to use for status code matching the HTTP request.
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode) string { return v.Criteria }).(pulumi.StringOutput)
}

// HTTP status code or range of this rule matching
func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput) HttpStatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode) string {
		return v.HttpStatusCode
	}).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput() GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput) ToGetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCode)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRule struct {
	// Actions to perform with the rule that matches
	Actions []GetNsxtAlbVirtualServiceHttpSecRulesRuleAction `pulumi:"actions"`
	// Defines is the rule is active or not
	Active bool `pulumi:"active"`
	// Defines whether to enable logging with headers on rule match or not
	Logging bool `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriterias []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria `pulumi:"matchCriterias"`
	// Name of the rule
	Name string `pulumi:"name"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleArgs struct {
	// Actions to perform with the rule that matches
	Actions GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayInput `pulumi:"actions"`
	// Defines is the rule is active or not
	Active pulumi.BoolInput `pulumi:"active"`
	// Defines whether to enable logging with headers on rule match or not
	Logging pulumi.BoolInput `pulumi:"logging"`
	// Rule matching Criteria
	MatchCriterias GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayInput `pulumi:"matchCriterias"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRule)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRule)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRule)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput {
	return o
}

// Actions to perform with the rule that matches
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput) Actions() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRule) []GetNsxtAlbVirtualServiceHttpSecRulesRuleAction {
		return v.Actions
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput)
}

// Defines is the rule is active or not
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRule) bool { return v.Active }).(pulumi.BoolOutput)
}

// Defines whether to enable logging with headers on rule match or not
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput) Logging() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRule) bool { return v.Logging }).(pulumi.BoolOutput)
}

// Rule matching Criteria
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput) MatchCriterias() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRule) []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria {
		return v.MatchCriterias
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput)
}

// Name of the rule
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRule)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRule {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRule)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleAction struct {
	// ALLOW or CLOSE connections
	Connections string `pulumi:"connections"`
	// Apply actions based on rate limits
	RateLimits []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit `pulumi:"rateLimits"`
	// Port number that should be redirected to HTTPS
	RedirectToHttps string `pulumi:"redirectToHttps"`
	// Send custom response
	SendResponses []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse `pulumi:"sendResponses"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleActionInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleActionInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArgs struct {
	// ALLOW or CLOSE connections
	Connections pulumi.StringInput `pulumi:"connections"`
	// Apply actions based on rate limits
	RateLimits GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayInput `pulumi:"rateLimits"`
	// Port number that should be redirected to HTTPS
	RedirectToHttps pulumi.StringInput `pulumi:"redirectToHttps"`
	// Send custom response
	SendResponses GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayInput `pulumi:"sendResponses"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleAction)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleAction)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleAction)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput {
	return o
}

// ALLOW or CLOSE connections
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput) Connections() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleAction) string { return v.Connections }).(pulumi.StringOutput)
}

// Apply actions based on rate limits
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput) RateLimits() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleAction) []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit {
		return v.RateLimits
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput)
}

// Port number that should be redirected to HTTPS
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput) RedirectToHttps() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleAction) string { return v.RedirectToHttps }).(pulumi.StringOutput)
}

// Send custom response
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput) SendResponses() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleAction) []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse {
		return v.SendResponses
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleAction)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleAction {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleAction)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit struct {
	// True if the connection should be closed
	ActionCloseConnection bool `pulumi:"actionCloseConnection"`
	// Send custom response
	ActionLocalResponses []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse `pulumi:"actionLocalResponses"`
	// Redirect request
	ActionRedirects []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect `pulumi:"actionRedirects"`
	// Maximum number of connections, requests or packets permitted each period. The count must be between 1 and 1000000000
	Count string `pulumi:"count"`
	// Time value in seconds to enforce rate count. The period must be between 1 and 1000000000
	Period string `pulumi:"period"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArgs struct {
	// True if the connection should be closed
	ActionCloseConnection pulumi.BoolInput `pulumi:"actionCloseConnection"`
	// Send custom response
	ActionLocalResponses GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayInput `pulumi:"actionLocalResponses"`
	// Redirect request
	ActionRedirects GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayInput `pulumi:"actionRedirects"`
	// Maximum number of connections, requests or packets permitted each period. The count must be between 1 and 1000000000
	Count pulumi.StringInput `pulumi:"count"`
	// Time value in seconds to enforce rate count. The period must be between 1 and 1000000000
	Period pulumi.StringInput `pulumi:"period"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput {
	return o
}

// True if the connection should be closed
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput) ActionCloseConnection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit) bool { return v.ActionCloseConnection }).(pulumi.BoolOutput)
}

// Send custom response
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput) ActionLocalResponses() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit) []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse {
		return v.ActionLocalResponses
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput)
}

// Redirect request
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput) ActionRedirects() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit) []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect {
		return v.ActionRedirects
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput)
}

// Maximum number of connections, requests or packets permitted each period. The count must be between 1 and 1000000000
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput) Count() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit) string { return v.Count }).(pulumi.StringOutput)
}

// Time value in seconds to enforce rate count. The period must be between 1 and 1000000000
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit) string { return v.Period }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimit)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse struct {
	// Base64 encoded content
	Content string `pulumi:"content"`
	// MIME type for the content
	ContentType string `pulumi:"contentType"`
	// HTTP Status code to send
	StatusCode string `pulumi:"statusCode"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArgs struct {
	// Base64 encoded content
	Content pulumi.StringInput `pulumi:"content"`
	// MIME type for the content
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// HTTP Status code to send
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput {
	return o
}

// Base64 encoded content
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse) string {
		return v.Content
	}).(pulumi.StringOutput)
}

// MIME type for the content
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse) string {
		return v.ContentType
	}).(pulumi.StringOutput)
}

// HTTP Status code to send
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse) string {
		return v.StatusCode
	}).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponse)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect struct {
	// Host to which redirect the request. Default is the original host
	Host string `pulumi:"host"`
	// Path to which redirect the request. Default is the original path
	KeepQuery bool `pulumi:"keepQuery"`
	// Port to which redirect the request. Default is 80 for HTTP and 443 for HTTPS protocol
	Path string `pulumi:"path"`
	// Port to which redirect the request. Default is 80 for HTTP and 443 for HTTPS protocol
	Port string `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol string `pulumi:"protocol"`
	// One of the redirect status codes - 301, 302, 307
	StatusCode int `pulumi:"statusCode"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArgs struct {
	// Host to which redirect the request. Default is the original host
	Host pulumi.StringInput `pulumi:"host"`
	// Path to which redirect the request. Default is the original path
	KeepQuery pulumi.BoolInput `pulumi:"keepQuery"`
	// Port to which redirect the request. Default is 80 for HTTP and 443 for HTTPS protocol
	Path pulumi.StringInput `pulumi:"path"`
	// Port to which redirect the request. Default is 80 for HTTP and 443 for HTTPS protocol
	Port pulumi.StringInput `pulumi:"port"`
	// HTTP or HTTPS protocol
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// One of the redirect status codes - 301, 302, 307
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput {
	return o
}

// Host to which redirect the request. Default is the original host
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect) string { return v.Host }).(pulumi.StringOutput)
}

// Path to which redirect the request. Default is the original path
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput) KeepQuery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect) bool { return v.KeepQuery }).(pulumi.BoolOutput)
}

// Port to which redirect the request. Default is 80 for HTTP and 443 for HTTPS protocol
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect) string { return v.Path }).(pulumi.StringOutput)
}

// Port to which redirect the request. Default is 80 for HTTP and 443 for HTTPS protocol
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect) string { return v.Port }).(pulumi.StringOutput)
}

// HTTP or HTTPS protocol
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect) string {
		return v.Protocol
	}).(pulumi.StringOutput)
}

// One of the redirect status codes - 301, 302, 307
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect) int { return v.StatusCode }).(pulumi.IntOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirect)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse struct {
	// Base64 encoded content
	Content string `pulumi:"content"`
	// MIME type for the content
	ContentType string `pulumi:"contentType"`
	// HTTP Status code to send
	StatusCode string `pulumi:"statusCode"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArgs struct {
	// Base64 encoded content
	Content pulumi.StringInput `pulumi:"content"`
	// MIME type for the content
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// HTTP Status code to send
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput {
	return o
}

// Base64 encoded content
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse) string { return v.Content }).(pulumi.StringOutput)
}

// MIME type for the content
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

// HTTP Status code to send
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse) string { return v.StatusCode }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponse)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria struct {
	// Client IP Address criteria
	ClientIpAddresses []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress `pulumi:"clientIpAddresses"`
	// Rule for matching cookie
	Cookies []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie `pulumi:"cookies"`
	// HTTP methods that are matched
	HttpMethods []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod `pulumi:"httpMethods"`
	// HTTP request path that will be matched
	Paths []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath `pulumi:"paths"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType string `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries []string `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader `pulumi:"requestHeaders"`
	// Service Port criteria
	ServicePorts []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort `pulumi:"servicePorts"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs struct {
	// Client IP Address criteria
	ClientIpAddresses GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayInput `pulumi:"clientIpAddresses"`
	// Rule for matching cookie
	Cookies GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayInput `pulumi:"cookies"`
	// HTTP methods that are matched
	HttpMethods GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayInput `pulumi:"httpMethods"`
	// HTTP request path that will be matched
	Paths GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayInput `pulumi:"paths"`
	// Protocol to match - 'HTTP' or 'HTTPS'
	ProtocolType pulumi.StringInput `pulumi:"protocolType"`
	// HTTP request query strings to match
	Queries pulumi.StringArrayInput `pulumi:"queries"`
	// A set of rules for matching request headers
	RequestHeaders GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// Service Port criteria
	ServicePorts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayInput `pulumi:"servicePorts"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput {
	return o
}

// Client IP Address criteria
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ClientIpAddresses() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress {
		return v.ClientIpAddresses
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput)
}

// Rule for matching cookie
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) Cookies() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie {
		return v.Cookies
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput)
}

// HTTP methods that are matched
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) HttpMethods() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod {
		return v.HttpMethods
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput)
}

// HTTP request path that will be matched
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) Paths() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath {
		return v.Paths
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput)
}

// Protocol to match - 'HTTP' or 'HTTPS'
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// HTTP request query strings to match
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) []string { return v.Queries }).(pulumi.StringArrayOutput)
}

// A set of rules for matching request headers
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) RequestHeaders() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader {
		return v.RequestHeaders
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

// Service Port criteria
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput) ServicePorts() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria) []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort {
		return v.ServicePorts
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteria)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress struct {
	// Criteria to use for IP address matching the HTTP request
	Criteria string `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses []string `pulumi:"ipAddresses"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs struct {
	// Criteria to use for IP address matching the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of IP addresses
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput {
	return o
}

// Criteria to use for IP address matching the HTTP request
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of IP addresses
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress) []string {
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddress)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie struct {
	// Criteria to use for matching cookies in the HTTP request
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value string `pulumi:"value"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs struct {
	// Criteria to use for matching cookies in the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP cookie whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP cookie
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput {
	return o
}

// Criteria to use for matching cookies in the HTTP request
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP cookie whose value is to be matched
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP cookie
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookie)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod struct {
	// Criteria to use for HTTP method matching in the HTTP request
	Criteria string `pulumi:"criteria"`
	// HTTP methods that will be matched
	Methods []string `pulumi:"methods"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArgs struct {
	// Criteria to use for HTTP method matching in the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// HTTP methods that will be matched
	Methods pulumi.StringArrayInput `pulumi:"methods"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput {
	return o
}

// Criteria to use for HTTP method matching in the HTTP request
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod) string { return v.Criteria }).(pulumi.StringOutput)
}

// HTTP methods that will be matched
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethod)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath struct {
	// Criteria to use for matching the path in the HTTP request URI
	Criteria string `pulumi:"criteria"`
	// String values to match the path
	Paths []string `pulumi:"paths"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs struct {
	// Criteria to use for matching the path in the HTTP request URI
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// String values to match the path
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput {
	return o
}

// Criteria to use for matching the path in the HTTP request URI
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath) string { return v.Criteria }).(pulumi.StringOutput)
}

// String values to match the path
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPath)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response
	Criteria string `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name string `pulumi:"name"`
	// String values to match for an HTTP header
	Values []string `pulumi:"values"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs struct {
	// Criteria to use for matching headers and cookies in the HTTP request amd response
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// Name of the HTTP header whose value is to be matched
	Name pulumi.StringInput `pulumi:"name"`
	// String values to match for an HTTP header
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput {
	return o
}

// Criteria to use for matching headers and cookies in the HTTP request amd response
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader) string { return v.Criteria }).(pulumi.StringOutput)
}

// Name of the HTTP header whose value is to be matched
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

// String values to match for an HTTP header
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeader)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort struct {
	// Criteria to use for service port matching the HTTP request
	Criteria string `pulumi:"criteria"`
	// A set of TCP ports
	Ports []int `pulumi:"ports"`
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArgs and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArgs{...}
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArgs struct {
	// Criteria to use for service port matching the HTTP request
	Criteria pulumi.StringInput `pulumi:"criteria"`
	// A set of TCP ports
	Ports pulumi.IntArrayInput `pulumi:"ports"`
}

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArgs) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput)
}

// GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayInput is an input type that accepts GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArray and GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayInput` via:
//
//	GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArray{ GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArgs{...} }
type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput
	ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArray []GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortInput

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArray) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput {
	return o
}

// Criteria to use for service port matching the HTTP request
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort) string { return v.Criteria }).(pulumi.StringOutput)
}

// A set of TCP ports
func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

type GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput() GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput) ToGetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort {
		return vs[0].([]GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePort)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput)
}

type GetNsxtAlbVirtualServiceServicePort struct {
	// Last port in the range
	EndPort int `pulumi:"endPort"`
	// Starting port in the range
	SslEnabled bool `pulumi:"sslEnabled"`
	// Starting port in the range
	StartPort int `pulumi:"startPort"`
	// One of 'TCP_PROXY', 'TCP_FAST_PATH', 'UDP_FAST_PATH'
	Type string `pulumi:"type"`
}

// GetNsxtAlbVirtualServiceServicePortInput is an input type that accepts GetNsxtAlbVirtualServiceServicePortArgs and GetNsxtAlbVirtualServiceServicePortOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceServicePortInput` via:
//
//	GetNsxtAlbVirtualServiceServicePortArgs{...}
type GetNsxtAlbVirtualServiceServicePortInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceServicePortOutput() GetNsxtAlbVirtualServiceServicePortOutput
	ToGetNsxtAlbVirtualServiceServicePortOutputWithContext(context.Context) GetNsxtAlbVirtualServiceServicePortOutput
}

type GetNsxtAlbVirtualServiceServicePortArgs struct {
	// Last port in the range
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Starting port in the range
	SslEnabled pulumi.BoolInput `pulumi:"sslEnabled"`
	// Starting port in the range
	StartPort pulumi.IntInput `pulumi:"startPort"`
	// One of 'TCP_PROXY', 'TCP_FAST_PATH', 'UDP_FAST_PATH'
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNsxtAlbVirtualServiceServicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceServicePort)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceServicePortArgs) ToGetNsxtAlbVirtualServiceServicePortOutput() GetNsxtAlbVirtualServiceServicePortOutput {
	return i.ToGetNsxtAlbVirtualServiceServicePortOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceServicePortArgs) ToGetNsxtAlbVirtualServiceServicePortOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceServicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceServicePortOutput)
}

// GetNsxtAlbVirtualServiceServicePortArrayInput is an input type that accepts GetNsxtAlbVirtualServiceServicePortArray and GetNsxtAlbVirtualServiceServicePortArrayOutput values.
// You can construct a concrete instance of `GetNsxtAlbVirtualServiceServicePortArrayInput` via:
//
//	GetNsxtAlbVirtualServiceServicePortArray{ GetNsxtAlbVirtualServiceServicePortArgs{...} }
type GetNsxtAlbVirtualServiceServicePortArrayInput interface {
	pulumi.Input

	ToGetNsxtAlbVirtualServiceServicePortArrayOutput() GetNsxtAlbVirtualServiceServicePortArrayOutput
	ToGetNsxtAlbVirtualServiceServicePortArrayOutputWithContext(context.Context) GetNsxtAlbVirtualServiceServicePortArrayOutput
}

type GetNsxtAlbVirtualServiceServicePortArray []GetNsxtAlbVirtualServiceServicePortInput

func (GetNsxtAlbVirtualServiceServicePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceServicePort)(nil)).Elem()
}

func (i GetNsxtAlbVirtualServiceServicePortArray) ToGetNsxtAlbVirtualServiceServicePortArrayOutput() GetNsxtAlbVirtualServiceServicePortArrayOutput {
	return i.ToGetNsxtAlbVirtualServiceServicePortArrayOutputWithContext(context.Background())
}

func (i GetNsxtAlbVirtualServiceServicePortArray) ToGetNsxtAlbVirtualServiceServicePortArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceServicePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAlbVirtualServiceServicePortArrayOutput)
}

type GetNsxtAlbVirtualServiceServicePortOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceServicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAlbVirtualServiceServicePort)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceServicePortOutput) ToGetNsxtAlbVirtualServiceServicePortOutput() GetNsxtAlbVirtualServiceServicePortOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceServicePortOutput) ToGetNsxtAlbVirtualServiceServicePortOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceServicePortOutput {
	return o
}

// Last port in the range
func (o GetNsxtAlbVirtualServiceServicePortOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceServicePort) int { return v.EndPort }).(pulumi.IntOutput)
}

// Starting port in the range
func (o GetNsxtAlbVirtualServiceServicePortOutput) SslEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceServicePort) bool { return v.SslEnabled }).(pulumi.BoolOutput)
}

// Starting port in the range
func (o GetNsxtAlbVirtualServiceServicePortOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceServicePort) int { return v.StartPort }).(pulumi.IntOutput)
}

// One of 'TCP_PROXY', 'TCP_FAST_PATH', 'UDP_FAST_PATH'
func (o GetNsxtAlbVirtualServiceServicePortOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAlbVirtualServiceServicePort) string { return v.Type }).(pulumi.StringOutput)
}

type GetNsxtAlbVirtualServiceServicePortArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAlbVirtualServiceServicePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAlbVirtualServiceServicePort)(nil)).Elem()
}

func (o GetNsxtAlbVirtualServiceServicePortArrayOutput) ToGetNsxtAlbVirtualServiceServicePortArrayOutput() GetNsxtAlbVirtualServiceServicePortArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceServicePortArrayOutput) ToGetNsxtAlbVirtualServiceServicePortArrayOutputWithContext(ctx context.Context) GetNsxtAlbVirtualServiceServicePortArrayOutput {
	return o
}

func (o GetNsxtAlbVirtualServiceServicePortArrayOutput) Index(i pulumi.IntInput) GetNsxtAlbVirtualServiceServicePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAlbVirtualServiceServicePort {
		return vs[0].([]GetNsxtAlbVirtualServiceServicePort)[vs[1].(int)]
	}).(GetNsxtAlbVirtualServiceServicePortOutput)
}

type GetNsxtAppPortProfileAppPort struct {
	// Set of ports or ranges
	Ports    []string `pulumi:"ports"`
	Protocol string   `pulumi:"protocol"`
}

// GetNsxtAppPortProfileAppPortInput is an input type that accepts GetNsxtAppPortProfileAppPortArgs and GetNsxtAppPortProfileAppPortOutput values.
// You can construct a concrete instance of `GetNsxtAppPortProfileAppPortInput` via:
//
//	GetNsxtAppPortProfileAppPortArgs{...}
type GetNsxtAppPortProfileAppPortInput interface {
	pulumi.Input

	ToGetNsxtAppPortProfileAppPortOutput() GetNsxtAppPortProfileAppPortOutput
	ToGetNsxtAppPortProfileAppPortOutputWithContext(context.Context) GetNsxtAppPortProfileAppPortOutput
}

type GetNsxtAppPortProfileAppPortArgs struct {
	// Set of ports or ranges
	Ports    pulumi.StringArrayInput `pulumi:"ports"`
	Protocol pulumi.StringInput      `pulumi:"protocol"`
}

func (GetNsxtAppPortProfileAppPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAppPortProfileAppPort)(nil)).Elem()
}

func (i GetNsxtAppPortProfileAppPortArgs) ToGetNsxtAppPortProfileAppPortOutput() GetNsxtAppPortProfileAppPortOutput {
	return i.ToGetNsxtAppPortProfileAppPortOutputWithContext(context.Background())
}

func (i GetNsxtAppPortProfileAppPortArgs) ToGetNsxtAppPortProfileAppPortOutputWithContext(ctx context.Context) GetNsxtAppPortProfileAppPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAppPortProfileAppPortOutput)
}

// GetNsxtAppPortProfileAppPortArrayInput is an input type that accepts GetNsxtAppPortProfileAppPortArray and GetNsxtAppPortProfileAppPortArrayOutput values.
// You can construct a concrete instance of `GetNsxtAppPortProfileAppPortArrayInput` via:
//
//	GetNsxtAppPortProfileAppPortArray{ GetNsxtAppPortProfileAppPortArgs{...} }
type GetNsxtAppPortProfileAppPortArrayInput interface {
	pulumi.Input

	ToGetNsxtAppPortProfileAppPortArrayOutput() GetNsxtAppPortProfileAppPortArrayOutput
	ToGetNsxtAppPortProfileAppPortArrayOutputWithContext(context.Context) GetNsxtAppPortProfileAppPortArrayOutput
}

type GetNsxtAppPortProfileAppPortArray []GetNsxtAppPortProfileAppPortInput

func (GetNsxtAppPortProfileAppPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAppPortProfileAppPort)(nil)).Elem()
}

func (i GetNsxtAppPortProfileAppPortArray) ToGetNsxtAppPortProfileAppPortArrayOutput() GetNsxtAppPortProfileAppPortArrayOutput {
	return i.ToGetNsxtAppPortProfileAppPortArrayOutputWithContext(context.Background())
}

func (i GetNsxtAppPortProfileAppPortArray) ToGetNsxtAppPortProfileAppPortArrayOutputWithContext(ctx context.Context) GetNsxtAppPortProfileAppPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtAppPortProfileAppPortArrayOutput)
}

type GetNsxtAppPortProfileAppPortOutput struct{ *pulumi.OutputState }

func (GetNsxtAppPortProfileAppPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtAppPortProfileAppPort)(nil)).Elem()
}

func (o GetNsxtAppPortProfileAppPortOutput) ToGetNsxtAppPortProfileAppPortOutput() GetNsxtAppPortProfileAppPortOutput {
	return o
}

func (o GetNsxtAppPortProfileAppPortOutput) ToGetNsxtAppPortProfileAppPortOutputWithContext(ctx context.Context) GetNsxtAppPortProfileAppPortOutput {
	return o
}

// Set of ports or ranges
func (o GetNsxtAppPortProfileAppPortOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtAppPortProfileAppPort) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

func (o GetNsxtAppPortProfileAppPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtAppPortProfileAppPort) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetNsxtAppPortProfileAppPortArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtAppPortProfileAppPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtAppPortProfileAppPort)(nil)).Elem()
}

func (o GetNsxtAppPortProfileAppPortArrayOutput) ToGetNsxtAppPortProfileAppPortArrayOutput() GetNsxtAppPortProfileAppPortArrayOutput {
	return o
}

func (o GetNsxtAppPortProfileAppPortArrayOutput) ToGetNsxtAppPortProfileAppPortArrayOutputWithContext(ctx context.Context) GetNsxtAppPortProfileAppPortArrayOutput {
	return o
}

func (o GetNsxtAppPortProfileAppPortArrayOutput) Index(i pulumi.IntInput) GetNsxtAppPortProfileAppPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtAppPortProfileAppPort {
		return vs[0].([]GetNsxtAppPortProfileAppPort)[vs[1].(int)]
	}).(GetNsxtAppPortProfileAppPortOutput)
}

type GetNsxtDistributedFirewallRuleType struct {
	// Defines if the rule should 'ALLOW', 'DROP', 'REJECT' matching traffic
	Action string `pulumi:"action"`
	// A set of Application Port Profile IDs.'
	AppPortProfileIds []string `pulumi:"appPortProfileIds"`
	// Comment that is shown next to rule in UI (VCD 10.3.2+)
	Comment string `pulumi:"comment"`
	// Description (not shown in UI)
	Description string `pulumi:"description"`
	// Reverses firewall matching for to match all except Destinations Groups specified in 'destination_ids' (VCD 10.3.2+)
	DestinationGroupsExcluded bool `pulumi:"destinationGroupsExcluded"`
	// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Empty means 'Any'
	DestinationIds []string `pulumi:"destinationIds"`
	// Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')
	Direction string `pulumi:"direction"`
	// Defines if Firewall Rule is active
	Enabled bool `pulumi:"enabled"`
	// Firewall Rule ID
	Id string `pulumi:"id"`
	// Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')
	IpProtocol string `pulumi:"ipProtocol"`
	// Defines if matching traffic should be logged
	Logging bool `pulumi:"logging"`
	// Firewall Rule name
	Name string `pulumi:"name"`
	// A set of Network Context Profile IDs.
	NetworkContextProfileIds []string `pulumi:"networkContextProfileIds"`
	// Reverses firewall matching for to match all except Source Groups specified in 'source_ids' (VCD 10.3.2+)
	SourceGroupsExcluded bool `pulumi:"sourceGroupsExcluded"`
	// A set of Source Firewall Group IDs (IP Sets or Security Groups). Empty means 'Any'
	SourceIds []string `pulumi:"sourceIds"`
}

// GetNsxtDistributedFirewallRuleTypeInput is an input type that accepts GetNsxtDistributedFirewallRuleTypeArgs and GetNsxtDistributedFirewallRuleTypeOutput values.
// You can construct a concrete instance of `GetNsxtDistributedFirewallRuleTypeInput` via:
//
//	GetNsxtDistributedFirewallRuleTypeArgs{...}
type GetNsxtDistributedFirewallRuleTypeInput interface {
	pulumi.Input

	ToGetNsxtDistributedFirewallRuleTypeOutput() GetNsxtDistributedFirewallRuleTypeOutput
	ToGetNsxtDistributedFirewallRuleTypeOutputWithContext(context.Context) GetNsxtDistributedFirewallRuleTypeOutput
}

type GetNsxtDistributedFirewallRuleTypeArgs struct {
	// Defines if the rule should 'ALLOW', 'DROP', 'REJECT' matching traffic
	Action pulumi.StringInput `pulumi:"action"`
	// A set of Application Port Profile IDs.'
	AppPortProfileIds pulumi.StringArrayInput `pulumi:"appPortProfileIds"`
	// Comment that is shown next to rule in UI (VCD 10.3.2+)
	Comment pulumi.StringInput `pulumi:"comment"`
	// Description (not shown in UI)
	Description pulumi.StringInput `pulumi:"description"`
	// Reverses firewall matching for to match all except Destinations Groups specified in 'destination_ids' (VCD 10.3.2+)
	DestinationGroupsExcluded pulumi.BoolInput `pulumi:"destinationGroupsExcluded"`
	// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Empty means 'Any'
	DestinationIds pulumi.StringArrayInput `pulumi:"destinationIds"`
	// Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')
	Direction pulumi.StringInput `pulumi:"direction"`
	// Defines if Firewall Rule is active
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Firewall Rule ID
	Id pulumi.StringInput `pulumi:"id"`
	// Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// Defines if matching traffic should be logged
	Logging pulumi.BoolInput `pulumi:"logging"`
	// Firewall Rule name
	Name pulumi.StringInput `pulumi:"name"`
	// A set of Network Context Profile IDs.
	NetworkContextProfileIds pulumi.StringArrayInput `pulumi:"networkContextProfileIds"`
	// Reverses firewall matching for to match all except Source Groups specified in 'source_ids' (VCD 10.3.2+)
	SourceGroupsExcluded pulumi.BoolInput `pulumi:"sourceGroupsExcluded"`
	// A set of Source Firewall Group IDs (IP Sets or Security Groups). Empty means 'Any'
	SourceIds pulumi.StringArrayInput `pulumi:"sourceIds"`
}

func (GetNsxtDistributedFirewallRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtDistributedFirewallRuleType)(nil)).Elem()
}

func (i GetNsxtDistributedFirewallRuleTypeArgs) ToGetNsxtDistributedFirewallRuleTypeOutput() GetNsxtDistributedFirewallRuleTypeOutput {
	return i.ToGetNsxtDistributedFirewallRuleTypeOutputWithContext(context.Background())
}

func (i GetNsxtDistributedFirewallRuleTypeArgs) ToGetNsxtDistributedFirewallRuleTypeOutputWithContext(ctx context.Context) GetNsxtDistributedFirewallRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtDistributedFirewallRuleTypeOutput)
}

// GetNsxtDistributedFirewallRuleTypeArrayInput is an input type that accepts GetNsxtDistributedFirewallRuleTypeArray and GetNsxtDistributedFirewallRuleTypeArrayOutput values.
// You can construct a concrete instance of `GetNsxtDistributedFirewallRuleTypeArrayInput` via:
//
//	GetNsxtDistributedFirewallRuleTypeArray{ GetNsxtDistributedFirewallRuleTypeArgs{...} }
type GetNsxtDistributedFirewallRuleTypeArrayInput interface {
	pulumi.Input

	ToGetNsxtDistributedFirewallRuleTypeArrayOutput() GetNsxtDistributedFirewallRuleTypeArrayOutput
	ToGetNsxtDistributedFirewallRuleTypeArrayOutputWithContext(context.Context) GetNsxtDistributedFirewallRuleTypeArrayOutput
}

type GetNsxtDistributedFirewallRuleTypeArray []GetNsxtDistributedFirewallRuleTypeInput

func (GetNsxtDistributedFirewallRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtDistributedFirewallRuleType)(nil)).Elem()
}

func (i GetNsxtDistributedFirewallRuleTypeArray) ToGetNsxtDistributedFirewallRuleTypeArrayOutput() GetNsxtDistributedFirewallRuleTypeArrayOutput {
	return i.ToGetNsxtDistributedFirewallRuleTypeArrayOutputWithContext(context.Background())
}

func (i GetNsxtDistributedFirewallRuleTypeArray) ToGetNsxtDistributedFirewallRuleTypeArrayOutputWithContext(ctx context.Context) GetNsxtDistributedFirewallRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtDistributedFirewallRuleTypeArrayOutput)
}

type GetNsxtDistributedFirewallRuleTypeOutput struct{ *pulumi.OutputState }

func (GetNsxtDistributedFirewallRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtDistributedFirewallRuleType)(nil)).Elem()
}

func (o GetNsxtDistributedFirewallRuleTypeOutput) ToGetNsxtDistributedFirewallRuleTypeOutput() GetNsxtDistributedFirewallRuleTypeOutput {
	return o
}

func (o GetNsxtDistributedFirewallRuleTypeOutput) ToGetNsxtDistributedFirewallRuleTypeOutputWithContext(ctx context.Context) GetNsxtDistributedFirewallRuleTypeOutput {
	return o
}

// Defines if the rule should 'ALLOW', 'DROP', 'REJECT' matching traffic
func (o GetNsxtDistributedFirewallRuleTypeOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) string { return v.Action }).(pulumi.StringOutput)
}

// A set of Application Port Profile IDs.'
func (o GetNsxtDistributedFirewallRuleTypeOutput) AppPortProfileIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) []string { return v.AppPortProfileIds }).(pulumi.StringArrayOutput)
}

// Comment that is shown next to rule in UI (VCD 10.3.2+)
func (o GetNsxtDistributedFirewallRuleTypeOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) string { return v.Comment }).(pulumi.StringOutput)
}

// Description (not shown in UI)
func (o GetNsxtDistributedFirewallRuleTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) string { return v.Description }).(pulumi.StringOutput)
}

// Reverses firewall matching for to match all except Destinations Groups specified in 'destination_ids' (VCD 10.3.2+)
func (o GetNsxtDistributedFirewallRuleTypeOutput) DestinationGroupsExcluded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) bool { return v.DestinationGroupsExcluded }).(pulumi.BoolOutput)
}

// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Empty means 'Any'
func (o GetNsxtDistributedFirewallRuleTypeOutput) DestinationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) []string { return v.DestinationIds }).(pulumi.StringArrayOutput)
}

// Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')
func (o GetNsxtDistributedFirewallRuleTypeOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) string { return v.Direction }).(pulumi.StringOutput)
}

// Defines if Firewall Rule is active
func (o GetNsxtDistributedFirewallRuleTypeOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Firewall Rule ID
func (o GetNsxtDistributedFirewallRuleTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) string { return v.Id }).(pulumi.StringOutput)
}

// Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')
func (o GetNsxtDistributedFirewallRuleTypeOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// Defines if matching traffic should be logged
func (o GetNsxtDistributedFirewallRuleTypeOutput) Logging() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) bool { return v.Logging }).(pulumi.BoolOutput)
}

// Firewall Rule name
func (o GetNsxtDistributedFirewallRuleTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) string { return v.Name }).(pulumi.StringOutput)
}

// A set of Network Context Profile IDs.
func (o GetNsxtDistributedFirewallRuleTypeOutput) NetworkContextProfileIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) []string { return v.NetworkContextProfileIds }).(pulumi.StringArrayOutput)
}

// Reverses firewall matching for to match all except Source Groups specified in 'source_ids' (VCD 10.3.2+)
func (o GetNsxtDistributedFirewallRuleTypeOutput) SourceGroupsExcluded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) bool { return v.SourceGroupsExcluded }).(pulumi.BoolOutput)
}

// A set of Source Firewall Group IDs (IP Sets or Security Groups). Empty means 'Any'
func (o GetNsxtDistributedFirewallRuleTypeOutput) SourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtDistributedFirewallRuleType) []string { return v.SourceIds }).(pulumi.StringArrayOutput)
}

type GetNsxtDistributedFirewallRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtDistributedFirewallRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtDistributedFirewallRuleType)(nil)).Elem()
}

func (o GetNsxtDistributedFirewallRuleTypeArrayOutput) ToGetNsxtDistributedFirewallRuleTypeArrayOutput() GetNsxtDistributedFirewallRuleTypeArrayOutput {
	return o
}

func (o GetNsxtDistributedFirewallRuleTypeArrayOutput) ToGetNsxtDistributedFirewallRuleTypeArrayOutputWithContext(ctx context.Context) GetNsxtDistributedFirewallRuleTypeArrayOutput {
	return o
}

func (o GetNsxtDistributedFirewallRuleTypeArrayOutput) Index(i pulumi.IntInput) GetNsxtDistributedFirewallRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtDistributedFirewallRuleType {
		return vs[0].([]GetNsxtDistributedFirewallRuleType)[vs[1].(int)]
	}).(GetNsxtDistributedFirewallRuleTypeOutput)
}

type GetNsxtDynamicSecurityGroupCriteria struct {
	// Up to 4 rules can be used to define single criteria
	Rules []GetNsxtDynamicSecurityGroupCriteriaRule `pulumi:"rules"`
}

// GetNsxtDynamicSecurityGroupCriteriaInput is an input type that accepts GetNsxtDynamicSecurityGroupCriteriaArgs and GetNsxtDynamicSecurityGroupCriteriaOutput values.
// You can construct a concrete instance of `GetNsxtDynamicSecurityGroupCriteriaInput` via:
//
//	GetNsxtDynamicSecurityGroupCriteriaArgs{...}
type GetNsxtDynamicSecurityGroupCriteriaInput interface {
	pulumi.Input

	ToGetNsxtDynamicSecurityGroupCriteriaOutput() GetNsxtDynamicSecurityGroupCriteriaOutput
	ToGetNsxtDynamicSecurityGroupCriteriaOutputWithContext(context.Context) GetNsxtDynamicSecurityGroupCriteriaOutput
}

type GetNsxtDynamicSecurityGroupCriteriaArgs struct {
	// Up to 4 rules can be used to define single criteria
	Rules GetNsxtDynamicSecurityGroupCriteriaRuleArrayInput `pulumi:"rules"`
}

func (GetNsxtDynamicSecurityGroupCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtDynamicSecurityGroupCriteria)(nil)).Elem()
}

func (i GetNsxtDynamicSecurityGroupCriteriaArgs) ToGetNsxtDynamicSecurityGroupCriteriaOutput() GetNsxtDynamicSecurityGroupCriteriaOutput {
	return i.ToGetNsxtDynamicSecurityGroupCriteriaOutputWithContext(context.Background())
}

func (i GetNsxtDynamicSecurityGroupCriteriaArgs) ToGetNsxtDynamicSecurityGroupCriteriaOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtDynamicSecurityGroupCriteriaOutput)
}

// GetNsxtDynamicSecurityGroupCriteriaArrayInput is an input type that accepts GetNsxtDynamicSecurityGroupCriteriaArray and GetNsxtDynamicSecurityGroupCriteriaArrayOutput values.
// You can construct a concrete instance of `GetNsxtDynamicSecurityGroupCriteriaArrayInput` via:
//
//	GetNsxtDynamicSecurityGroupCriteriaArray{ GetNsxtDynamicSecurityGroupCriteriaArgs{...} }
type GetNsxtDynamicSecurityGroupCriteriaArrayInput interface {
	pulumi.Input

	ToGetNsxtDynamicSecurityGroupCriteriaArrayOutput() GetNsxtDynamicSecurityGroupCriteriaArrayOutput
	ToGetNsxtDynamicSecurityGroupCriteriaArrayOutputWithContext(context.Context) GetNsxtDynamicSecurityGroupCriteriaArrayOutput
}

type GetNsxtDynamicSecurityGroupCriteriaArray []GetNsxtDynamicSecurityGroupCriteriaInput

func (GetNsxtDynamicSecurityGroupCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtDynamicSecurityGroupCriteria)(nil)).Elem()
}

func (i GetNsxtDynamicSecurityGroupCriteriaArray) ToGetNsxtDynamicSecurityGroupCriteriaArrayOutput() GetNsxtDynamicSecurityGroupCriteriaArrayOutput {
	return i.ToGetNsxtDynamicSecurityGroupCriteriaArrayOutputWithContext(context.Background())
}

func (i GetNsxtDynamicSecurityGroupCriteriaArray) ToGetNsxtDynamicSecurityGroupCriteriaArrayOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtDynamicSecurityGroupCriteriaArrayOutput)
}

type GetNsxtDynamicSecurityGroupCriteriaOutput struct{ *pulumi.OutputState }

func (GetNsxtDynamicSecurityGroupCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtDynamicSecurityGroupCriteria)(nil)).Elem()
}

func (o GetNsxtDynamicSecurityGroupCriteriaOutput) ToGetNsxtDynamicSecurityGroupCriteriaOutput() GetNsxtDynamicSecurityGroupCriteriaOutput {
	return o
}

func (o GetNsxtDynamicSecurityGroupCriteriaOutput) ToGetNsxtDynamicSecurityGroupCriteriaOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupCriteriaOutput {
	return o
}

// Up to 4 rules can be used to define single criteria
func (o GetNsxtDynamicSecurityGroupCriteriaOutput) Rules() GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput {
	return o.ApplyT(func(v GetNsxtDynamicSecurityGroupCriteria) []GetNsxtDynamicSecurityGroupCriteriaRule { return v.Rules }).(GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput)
}

type GetNsxtDynamicSecurityGroupCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtDynamicSecurityGroupCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtDynamicSecurityGroupCriteria)(nil)).Elem()
}

func (o GetNsxtDynamicSecurityGroupCriteriaArrayOutput) ToGetNsxtDynamicSecurityGroupCriteriaArrayOutput() GetNsxtDynamicSecurityGroupCriteriaArrayOutput {
	return o
}

func (o GetNsxtDynamicSecurityGroupCriteriaArrayOutput) ToGetNsxtDynamicSecurityGroupCriteriaArrayOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupCriteriaArrayOutput {
	return o
}

func (o GetNsxtDynamicSecurityGroupCriteriaArrayOutput) Index(i pulumi.IntInput) GetNsxtDynamicSecurityGroupCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtDynamicSecurityGroupCriteria {
		return vs[0].([]GetNsxtDynamicSecurityGroupCriteria)[vs[1].(int)]
	}).(GetNsxtDynamicSecurityGroupCriteriaOutput)
}

type GetNsxtDynamicSecurityGroupCriteriaRule struct {
	// Operator can be one of 'EQUALS', 'CONTAINS', 'STARTS_WITH', 'ENDS_WITH'
	Operator string `pulumi:"operator"`
	// Type of object matching 'VM_TAG' or 'VM_NAME'
	Type string `pulumi:"type"`
	// Filter value
	Value string `pulumi:"value"`
}

// GetNsxtDynamicSecurityGroupCriteriaRuleInput is an input type that accepts GetNsxtDynamicSecurityGroupCriteriaRuleArgs and GetNsxtDynamicSecurityGroupCriteriaRuleOutput values.
// You can construct a concrete instance of `GetNsxtDynamicSecurityGroupCriteriaRuleInput` via:
//
//	GetNsxtDynamicSecurityGroupCriteriaRuleArgs{...}
type GetNsxtDynamicSecurityGroupCriteriaRuleInput interface {
	pulumi.Input

	ToGetNsxtDynamicSecurityGroupCriteriaRuleOutput() GetNsxtDynamicSecurityGroupCriteriaRuleOutput
	ToGetNsxtDynamicSecurityGroupCriteriaRuleOutputWithContext(context.Context) GetNsxtDynamicSecurityGroupCriteriaRuleOutput
}

type GetNsxtDynamicSecurityGroupCriteriaRuleArgs struct {
	// Operator can be one of 'EQUALS', 'CONTAINS', 'STARTS_WITH', 'ENDS_WITH'
	Operator pulumi.StringInput `pulumi:"operator"`
	// Type of object matching 'VM_TAG' or 'VM_NAME'
	Type pulumi.StringInput `pulumi:"type"`
	// Filter value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxtDynamicSecurityGroupCriteriaRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtDynamicSecurityGroupCriteriaRule)(nil)).Elem()
}

func (i GetNsxtDynamicSecurityGroupCriteriaRuleArgs) ToGetNsxtDynamicSecurityGroupCriteriaRuleOutput() GetNsxtDynamicSecurityGroupCriteriaRuleOutput {
	return i.ToGetNsxtDynamicSecurityGroupCriteriaRuleOutputWithContext(context.Background())
}

func (i GetNsxtDynamicSecurityGroupCriteriaRuleArgs) ToGetNsxtDynamicSecurityGroupCriteriaRuleOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupCriteriaRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtDynamicSecurityGroupCriteriaRuleOutput)
}

// GetNsxtDynamicSecurityGroupCriteriaRuleArrayInput is an input type that accepts GetNsxtDynamicSecurityGroupCriteriaRuleArray and GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput values.
// You can construct a concrete instance of `GetNsxtDynamicSecurityGroupCriteriaRuleArrayInput` via:
//
//	GetNsxtDynamicSecurityGroupCriteriaRuleArray{ GetNsxtDynamicSecurityGroupCriteriaRuleArgs{...} }
type GetNsxtDynamicSecurityGroupCriteriaRuleArrayInput interface {
	pulumi.Input

	ToGetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput() GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput
	ToGetNsxtDynamicSecurityGroupCriteriaRuleArrayOutputWithContext(context.Context) GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput
}

type GetNsxtDynamicSecurityGroupCriteriaRuleArray []GetNsxtDynamicSecurityGroupCriteriaRuleInput

func (GetNsxtDynamicSecurityGroupCriteriaRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtDynamicSecurityGroupCriteriaRule)(nil)).Elem()
}

func (i GetNsxtDynamicSecurityGroupCriteriaRuleArray) ToGetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput() GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput {
	return i.ToGetNsxtDynamicSecurityGroupCriteriaRuleArrayOutputWithContext(context.Background())
}

func (i GetNsxtDynamicSecurityGroupCriteriaRuleArray) ToGetNsxtDynamicSecurityGroupCriteriaRuleArrayOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput)
}

type GetNsxtDynamicSecurityGroupCriteriaRuleOutput struct{ *pulumi.OutputState }

func (GetNsxtDynamicSecurityGroupCriteriaRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtDynamicSecurityGroupCriteriaRule)(nil)).Elem()
}

func (o GetNsxtDynamicSecurityGroupCriteriaRuleOutput) ToGetNsxtDynamicSecurityGroupCriteriaRuleOutput() GetNsxtDynamicSecurityGroupCriteriaRuleOutput {
	return o
}

func (o GetNsxtDynamicSecurityGroupCriteriaRuleOutput) ToGetNsxtDynamicSecurityGroupCriteriaRuleOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupCriteriaRuleOutput {
	return o
}

// Operator can be one of 'EQUALS', 'CONTAINS', 'STARTS_WITH', 'ENDS_WITH'
func (o GetNsxtDynamicSecurityGroupCriteriaRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDynamicSecurityGroupCriteriaRule) string { return v.Operator }).(pulumi.StringOutput)
}

// Type of object matching 'VM_TAG' or 'VM_NAME'
func (o GetNsxtDynamicSecurityGroupCriteriaRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDynamicSecurityGroupCriteriaRule) string { return v.Type }).(pulumi.StringOutput)
}

// Filter value
func (o GetNsxtDynamicSecurityGroupCriteriaRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDynamicSecurityGroupCriteriaRule) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtDynamicSecurityGroupCriteriaRule)(nil)).Elem()
}

func (o GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput) ToGetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput() GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput {
	return o
}

func (o GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput) ToGetNsxtDynamicSecurityGroupCriteriaRuleArrayOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput {
	return o
}

func (o GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput) Index(i pulumi.IntInput) GetNsxtDynamicSecurityGroupCriteriaRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtDynamicSecurityGroupCriteriaRule {
		return vs[0].([]GetNsxtDynamicSecurityGroupCriteriaRule)[vs[1].(int)]
	}).(GetNsxtDynamicSecurityGroupCriteriaRuleOutput)
}

type GetNsxtDynamicSecurityGroupMemberVm struct {
	// Parent vApp name (if exists) for member VM
	VappId string `pulumi:"vappId"`
	// Parent vApp ID (if exists) for member VM
	VappName string `pulumi:"vappName"`
	// Member VM ID
	VmId string `pulumi:"vmId"`
	// Member VM Name
	VmName string `pulumi:"vmName"`
}

// GetNsxtDynamicSecurityGroupMemberVmInput is an input type that accepts GetNsxtDynamicSecurityGroupMemberVmArgs and GetNsxtDynamicSecurityGroupMemberVmOutput values.
// You can construct a concrete instance of `GetNsxtDynamicSecurityGroupMemberVmInput` via:
//
//	GetNsxtDynamicSecurityGroupMemberVmArgs{...}
type GetNsxtDynamicSecurityGroupMemberVmInput interface {
	pulumi.Input

	ToGetNsxtDynamicSecurityGroupMemberVmOutput() GetNsxtDynamicSecurityGroupMemberVmOutput
	ToGetNsxtDynamicSecurityGroupMemberVmOutputWithContext(context.Context) GetNsxtDynamicSecurityGroupMemberVmOutput
}

type GetNsxtDynamicSecurityGroupMemberVmArgs struct {
	// Parent vApp name (if exists) for member VM
	VappId pulumi.StringInput `pulumi:"vappId"`
	// Parent vApp ID (if exists) for member VM
	VappName pulumi.StringInput `pulumi:"vappName"`
	// Member VM ID
	VmId pulumi.StringInput `pulumi:"vmId"`
	// Member VM Name
	VmName pulumi.StringInput `pulumi:"vmName"`
}

func (GetNsxtDynamicSecurityGroupMemberVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtDynamicSecurityGroupMemberVm)(nil)).Elem()
}

func (i GetNsxtDynamicSecurityGroupMemberVmArgs) ToGetNsxtDynamicSecurityGroupMemberVmOutput() GetNsxtDynamicSecurityGroupMemberVmOutput {
	return i.ToGetNsxtDynamicSecurityGroupMemberVmOutputWithContext(context.Background())
}

func (i GetNsxtDynamicSecurityGroupMemberVmArgs) ToGetNsxtDynamicSecurityGroupMemberVmOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupMemberVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtDynamicSecurityGroupMemberVmOutput)
}

// GetNsxtDynamicSecurityGroupMemberVmArrayInput is an input type that accepts GetNsxtDynamicSecurityGroupMemberVmArray and GetNsxtDynamicSecurityGroupMemberVmArrayOutput values.
// You can construct a concrete instance of `GetNsxtDynamicSecurityGroupMemberVmArrayInput` via:
//
//	GetNsxtDynamicSecurityGroupMemberVmArray{ GetNsxtDynamicSecurityGroupMemberVmArgs{...} }
type GetNsxtDynamicSecurityGroupMemberVmArrayInput interface {
	pulumi.Input

	ToGetNsxtDynamicSecurityGroupMemberVmArrayOutput() GetNsxtDynamicSecurityGroupMemberVmArrayOutput
	ToGetNsxtDynamicSecurityGroupMemberVmArrayOutputWithContext(context.Context) GetNsxtDynamicSecurityGroupMemberVmArrayOutput
}

type GetNsxtDynamicSecurityGroupMemberVmArray []GetNsxtDynamicSecurityGroupMemberVmInput

func (GetNsxtDynamicSecurityGroupMemberVmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtDynamicSecurityGroupMemberVm)(nil)).Elem()
}

func (i GetNsxtDynamicSecurityGroupMemberVmArray) ToGetNsxtDynamicSecurityGroupMemberVmArrayOutput() GetNsxtDynamicSecurityGroupMemberVmArrayOutput {
	return i.ToGetNsxtDynamicSecurityGroupMemberVmArrayOutputWithContext(context.Background())
}

func (i GetNsxtDynamicSecurityGroupMemberVmArray) ToGetNsxtDynamicSecurityGroupMemberVmArrayOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupMemberVmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtDynamicSecurityGroupMemberVmArrayOutput)
}

type GetNsxtDynamicSecurityGroupMemberVmOutput struct{ *pulumi.OutputState }

func (GetNsxtDynamicSecurityGroupMemberVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtDynamicSecurityGroupMemberVm)(nil)).Elem()
}

func (o GetNsxtDynamicSecurityGroupMemberVmOutput) ToGetNsxtDynamicSecurityGroupMemberVmOutput() GetNsxtDynamicSecurityGroupMemberVmOutput {
	return o
}

func (o GetNsxtDynamicSecurityGroupMemberVmOutput) ToGetNsxtDynamicSecurityGroupMemberVmOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupMemberVmOutput {
	return o
}

// Parent vApp name (if exists) for member VM
func (o GetNsxtDynamicSecurityGroupMemberVmOutput) VappId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDynamicSecurityGroupMemberVm) string { return v.VappId }).(pulumi.StringOutput)
}

// Parent vApp ID (if exists) for member VM
func (o GetNsxtDynamicSecurityGroupMemberVmOutput) VappName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDynamicSecurityGroupMemberVm) string { return v.VappName }).(pulumi.StringOutput)
}

// Member VM ID
func (o GetNsxtDynamicSecurityGroupMemberVmOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDynamicSecurityGroupMemberVm) string { return v.VmId }).(pulumi.StringOutput)
}

// Member VM Name
func (o GetNsxtDynamicSecurityGroupMemberVmOutput) VmName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtDynamicSecurityGroupMemberVm) string { return v.VmName }).(pulumi.StringOutput)
}

type GetNsxtDynamicSecurityGroupMemberVmArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtDynamicSecurityGroupMemberVmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtDynamicSecurityGroupMemberVm)(nil)).Elem()
}

func (o GetNsxtDynamicSecurityGroupMemberVmArrayOutput) ToGetNsxtDynamicSecurityGroupMemberVmArrayOutput() GetNsxtDynamicSecurityGroupMemberVmArrayOutput {
	return o
}

func (o GetNsxtDynamicSecurityGroupMemberVmArrayOutput) ToGetNsxtDynamicSecurityGroupMemberVmArrayOutputWithContext(ctx context.Context) GetNsxtDynamicSecurityGroupMemberVmArrayOutput {
	return o
}

func (o GetNsxtDynamicSecurityGroupMemberVmArrayOutput) Index(i pulumi.IntInput) GetNsxtDynamicSecurityGroupMemberVmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtDynamicSecurityGroupMemberVm {
		return vs[0].([]GetNsxtDynamicSecurityGroupMemberVm)[vs[1].(int)]
	}).(GetNsxtDynamicSecurityGroupMemberVmOutput)
}

type GetNsxtEdgegatewayBgpIpPrefixListIpPrefix struct {
	// Action 'PERMIT' or 'DENY'
	Action string `pulumi:"action"`
	// Greater than or equal to (ge) subnet mask
	GreaterThanOrEqualTo int `pulumi:"greaterThanOrEqualTo"`
	// Less than or equal to (le) subnet mask
	LessThanOrEqualTo int `pulumi:"lessThanOrEqualTo"`
	// Network in CIDR notation (e.g. '192.168.100.0/24', '2001:db8::/48')
	Network string `pulumi:"network"`
}

// GetNsxtEdgegatewayBgpIpPrefixListIpPrefixInput is an input type that accepts GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArgs and GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayBgpIpPrefixListIpPrefixInput` via:
//
//	GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArgs{...}
type GetNsxtEdgegatewayBgpIpPrefixListIpPrefixInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput() GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput
	ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutputWithContext(context.Context) GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput
}

type GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArgs struct {
	// Action 'PERMIT' or 'DENY'
	Action pulumi.StringInput `pulumi:"action"`
	// Greater than or equal to (ge) subnet mask
	GreaterThanOrEqualTo pulumi.IntInput `pulumi:"greaterThanOrEqualTo"`
	// Less than or equal to (le) subnet mask
	LessThanOrEqualTo pulumi.IntInput `pulumi:"lessThanOrEqualTo"`
	// Network in CIDR notation (e.g. '192.168.100.0/24', '2001:db8::/48')
	Network pulumi.StringInput `pulumi:"network"`
}

func (GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayBgpIpPrefixListIpPrefix)(nil)).Elem()
}

func (i GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArgs) ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput() GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput {
	return i.ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArgs) ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutputWithContext(ctx context.Context) GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput)
}

// GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayInput is an input type that accepts GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArray and GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayInput` via:
//
//	GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArray{ GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArgs{...} }
type GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput() GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput
	ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutputWithContext(context.Context) GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput
}

type GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArray []GetNsxtEdgegatewayBgpIpPrefixListIpPrefixInput

func (GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayBgpIpPrefixListIpPrefix)(nil)).Elem()
}

func (i GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArray) ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput() GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput {
	return i.ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArray) ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput)
}

type GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayBgpIpPrefixListIpPrefix)(nil)).Elem()
}

func (o GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput() GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput {
	return o
}

func (o GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutputWithContext(ctx context.Context) GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput {
	return o
}

// Action 'PERMIT' or 'DENY'
func (o GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayBgpIpPrefixListIpPrefix) string { return v.Action }).(pulumi.StringOutput)
}

// Greater than or equal to (ge) subnet mask
func (o GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) GreaterThanOrEqualTo() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayBgpIpPrefixListIpPrefix) int { return v.GreaterThanOrEqualTo }).(pulumi.IntOutput)
}

// Less than or equal to (le) subnet mask
func (o GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) LessThanOrEqualTo() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayBgpIpPrefixListIpPrefix) int { return v.LessThanOrEqualTo }).(pulumi.IntOutput)
}

// Network in CIDR notation (e.g. '192.168.100.0/24', '2001:db8::/48')
func (o GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayBgpIpPrefixListIpPrefix) string { return v.Network }).(pulumi.StringOutput)
}

type GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayBgpIpPrefixListIpPrefix)(nil)).Elem()
}

func (o GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput) ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput() GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput) ToGetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewayBgpIpPrefixListIpPrefix {
		return vs[0].([]GetNsxtEdgegatewayBgpIpPrefixListIpPrefix)[vs[1].(int)]
	}).(GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput)
}

type GetNsxtEdgegatewayDnsConditionalForwarderZone struct {
	// Set of domain names on which conditional forwarding is based.
	DomainNames []string `pulumi:"domainNames"`
	// Unique ID of the forwarder zone.
	Id string `pulumi:"id"`
	// Name of the forwarder zone.
	Name string `pulumi:"name"`
	// Servers to which DNS requests should be forwarded to.
	UpstreamServers []string `pulumi:"upstreamServers"`
}

// GetNsxtEdgegatewayDnsConditionalForwarderZoneInput is an input type that accepts GetNsxtEdgegatewayDnsConditionalForwarderZoneArgs and GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayDnsConditionalForwarderZoneInput` via:
//
//	GetNsxtEdgegatewayDnsConditionalForwarderZoneArgs{...}
type GetNsxtEdgegatewayDnsConditionalForwarderZoneInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayDnsConditionalForwarderZoneOutput() GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput
	ToGetNsxtEdgegatewayDnsConditionalForwarderZoneOutputWithContext(context.Context) GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput
}

type GetNsxtEdgegatewayDnsConditionalForwarderZoneArgs struct {
	// Set of domain names on which conditional forwarding is based.
	DomainNames pulumi.StringArrayInput `pulumi:"domainNames"`
	// Unique ID of the forwarder zone.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the forwarder zone.
	Name pulumi.StringInput `pulumi:"name"`
	// Servers to which DNS requests should be forwarded to.
	UpstreamServers pulumi.StringArrayInput `pulumi:"upstreamServers"`
}

func (GetNsxtEdgegatewayDnsConditionalForwarderZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayDnsConditionalForwarderZone)(nil)).Elem()
}

func (i GetNsxtEdgegatewayDnsConditionalForwarderZoneArgs) ToGetNsxtEdgegatewayDnsConditionalForwarderZoneOutput() GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput {
	return i.ToGetNsxtEdgegatewayDnsConditionalForwarderZoneOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayDnsConditionalForwarderZoneArgs) ToGetNsxtEdgegatewayDnsConditionalForwarderZoneOutputWithContext(ctx context.Context) GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput)
}

// GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayInput is an input type that accepts GetNsxtEdgegatewayDnsConditionalForwarderZoneArray and GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayInput` via:
//
//	GetNsxtEdgegatewayDnsConditionalForwarderZoneArray{ GetNsxtEdgegatewayDnsConditionalForwarderZoneArgs{...} }
type GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput() GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput
	ToGetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutputWithContext(context.Context) GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput
}

type GetNsxtEdgegatewayDnsConditionalForwarderZoneArray []GetNsxtEdgegatewayDnsConditionalForwarderZoneInput

func (GetNsxtEdgegatewayDnsConditionalForwarderZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayDnsConditionalForwarderZone)(nil)).Elem()
}

func (i GetNsxtEdgegatewayDnsConditionalForwarderZoneArray) ToGetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput() GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput {
	return i.ToGetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayDnsConditionalForwarderZoneArray) ToGetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput)
}

type GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayDnsConditionalForwarderZone)(nil)).Elem()
}

func (o GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput) ToGetNsxtEdgegatewayDnsConditionalForwarderZoneOutput() GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput {
	return o
}

func (o GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput) ToGetNsxtEdgegatewayDnsConditionalForwarderZoneOutputWithContext(ctx context.Context) GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput {
	return o
}

// Set of domain names on which conditional forwarding is based.
func (o GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayDnsConditionalForwarderZone) []string { return v.DomainNames }).(pulumi.StringArrayOutput)
}

// Unique ID of the forwarder zone.
func (o GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayDnsConditionalForwarderZone) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the forwarder zone.
func (o GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayDnsConditionalForwarderZone) string { return v.Name }).(pulumi.StringOutput)
}

// Servers to which DNS requests should be forwarded to.
func (o GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput) UpstreamServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayDnsConditionalForwarderZone) []string { return v.UpstreamServers }).(pulumi.StringArrayOutput)
}

type GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayDnsConditionalForwarderZone)(nil)).Elem()
}

func (o GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput) ToGetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput() GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput) ToGetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewayDnsConditionalForwarderZone {
		return vs[0].([]GetNsxtEdgegatewayDnsConditionalForwarderZone)[vs[1].(int)]
	}).(GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput)
}

type GetNsxtEdgegatewayDnsDefaultForwarderZone struct {
	// Unique ID of the forwarder zone.
	Id string `pulumi:"id"`
	// Name of the forwarder zone.
	Name string `pulumi:"name"`
	// Servers to which DNS requests should be forwarded to.
	UpstreamServers []string `pulumi:"upstreamServers"`
}

// GetNsxtEdgegatewayDnsDefaultForwarderZoneInput is an input type that accepts GetNsxtEdgegatewayDnsDefaultForwarderZoneArgs and GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayDnsDefaultForwarderZoneInput` via:
//
//	GetNsxtEdgegatewayDnsDefaultForwarderZoneArgs{...}
type GetNsxtEdgegatewayDnsDefaultForwarderZoneInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayDnsDefaultForwarderZoneOutput() GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput
	ToGetNsxtEdgegatewayDnsDefaultForwarderZoneOutputWithContext(context.Context) GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput
}

type GetNsxtEdgegatewayDnsDefaultForwarderZoneArgs struct {
	// Unique ID of the forwarder zone.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the forwarder zone.
	Name pulumi.StringInput `pulumi:"name"`
	// Servers to which DNS requests should be forwarded to.
	UpstreamServers pulumi.StringArrayInput `pulumi:"upstreamServers"`
}

func (GetNsxtEdgegatewayDnsDefaultForwarderZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayDnsDefaultForwarderZone)(nil)).Elem()
}

func (i GetNsxtEdgegatewayDnsDefaultForwarderZoneArgs) ToGetNsxtEdgegatewayDnsDefaultForwarderZoneOutput() GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput {
	return i.ToGetNsxtEdgegatewayDnsDefaultForwarderZoneOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayDnsDefaultForwarderZoneArgs) ToGetNsxtEdgegatewayDnsDefaultForwarderZoneOutputWithContext(ctx context.Context) GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput)
}

// GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayInput is an input type that accepts GetNsxtEdgegatewayDnsDefaultForwarderZoneArray and GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayInput` via:
//
//	GetNsxtEdgegatewayDnsDefaultForwarderZoneArray{ GetNsxtEdgegatewayDnsDefaultForwarderZoneArgs{...} }
type GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput() GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput
	ToGetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutputWithContext(context.Context) GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput
}

type GetNsxtEdgegatewayDnsDefaultForwarderZoneArray []GetNsxtEdgegatewayDnsDefaultForwarderZoneInput

func (GetNsxtEdgegatewayDnsDefaultForwarderZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayDnsDefaultForwarderZone)(nil)).Elem()
}

func (i GetNsxtEdgegatewayDnsDefaultForwarderZoneArray) ToGetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput() GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput {
	return i.ToGetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayDnsDefaultForwarderZoneArray) ToGetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput)
}

type GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayDnsDefaultForwarderZone)(nil)).Elem()
}

func (o GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput) ToGetNsxtEdgegatewayDnsDefaultForwarderZoneOutput() GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput {
	return o
}

func (o GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput) ToGetNsxtEdgegatewayDnsDefaultForwarderZoneOutputWithContext(ctx context.Context) GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput {
	return o
}

// Unique ID of the forwarder zone.
func (o GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayDnsDefaultForwarderZone) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the forwarder zone.
func (o GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayDnsDefaultForwarderZone) string { return v.Name }).(pulumi.StringOutput)
}

// Servers to which DNS requests should be forwarded to.
func (o GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput) UpstreamServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayDnsDefaultForwarderZone) []string { return v.UpstreamServers }).(pulumi.StringArrayOutput)
}

type GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayDnsDefaultForwarderZone)(nil)).Elem()
}

func (o GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput) ToGetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput() GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput) ToGetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewayDnsDefaultForwarderZone {
		return vs[0].([]GetNsxtEdgegatewayDnsDefaultForwarderZone)[vs[1].(int)]
	}).(GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput)
}

type GetNsxtEdgegatewayExternalNetwork struct {
	// Number of allocated IPs
	AllocatedIpCount int `pulumi:"allocatedIpCount"`
	// NSX-T Segment backed External Network ID
	ExternalNetworkId string `pulumi:"externalNetworkId"`
	// Gateway IP Address
	Gateway string `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength int `pulumi:"prefixLength"`
	// Primary IP address for the Edge Gateway
	PrimaryIp string `pulumi:"primaryIp"`
}

// GetNsxtEdgegatewayExternalNetworkInput is an input type that accepts GetNsxtEdgegatewayExternalNetworkArgs and GetNsxtEdgegatewayExternalNetworkOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayExternalNetworkInput` via:
//
//	GetNsxtEdgegatewayExternalNetworkArgs{...}
type GetNsxtEdgegatewayExternalNetworkInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayExternalNetworkOutput() GetNsxtEdgegatewayExternalNetworkOutput
	ToGetNsxtEdgegatewayExternalNetworkOutputWithContext(context.Context) GetNsxtEdgegatewayExternalNetworkOutput
}

type GetNsxtEdgegatewayExternalNetworkArgs struct {
	// Number of allocated IPs
	AllocatedIpCount pulumi.IntInput `pulumi:"allocatedIpCount"`
	// NSX-T Segment backed External Network ID
	ExternalNetworkId pulumi.StringInput `pulumi:"externalNetworkId"`
	// Gateway IP Address
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// Primary IP address for the Edge Gateway
	PrimaryIp pulumi.StringInput `pulumi:"primaryIp"`
}

func (GetNsxtEdgegatewayExternalNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayExternalNetwork)(nil)).Elem()
}

func (i GetNsxtEdgegatewayExternalNetworkArgs) ToGetNsxtEdgegatewayExternalNetworkOutput() GetNsxtEdgegatewayExternalNetworkOutput {
	return i.ToGetNsxtEdgegatewayExternalNetworkOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayExternalNetworkArgs) ToGetNsxtEdgegatewayExternalNetworkOutputWithContext(ctx context.Context) GetNsxtEdgegatewayExternalNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayExternalNetworkOutput)
}

// GetNsxtEdgegatewayExternalNetworkArrayInput is an input type that accepts GetNsxtEdgegatewayExternalNetworkArray and GetNsxtEdgegatewayExternalNetworkArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayExternalNetworkArrayInput` via:
//
//	GetNsxtEdgegatewayExternalNetworkArray{ GetNsxtEdgegatewayExternalNetworkArgs{...} }
type GetNsxtEdgegatewayExternalNetworkArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayExternalNetworkArrayOutput() GetNsxtEdgegatewayExternalNetworkArrayOutput
	ToGetNsxtEdgegatewayExternalNetworkArrayOutputWithContext(context.Context) GetNsxtEdgegatewayExternalNetworkArrayOutput
}

type GetNsxtEdgegatewayExternalNetworkArray []GetNsxtEdgegatewayExternalNetworkInput

func (GetNsxtEdgegatewayExternalNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayExternalNetwork)(nil)).Elem()
}

func (i GetNsxtEdgegatewayExternalNetworkArray) ToGetNsxtEdgegatewayExternalNetworkArrayOutput() GetNsxtEdgegatewayExternalNetworkArrayOutput {
	return i.ToGetNsxtEdgegatewayExternalNetworkArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayExternalNetworkArray) ToGetNsxtEdgegatewayExternalNetworkArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayExternalNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayExternalNetworkArrayOutput)
}

type GetNsxtEdgegatewayExternalNetworkOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayExternalNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayExternalNetwork)(nil)).Elem()
}

func (o GetNsxtEdgegatewayExternalNetworkOutput) ToGetNsxtEdgegatewayExternalNetworkOutput() GetNsxtEdgegatewayExternalNetworkOutput {
	return o
}

func (o GetNsxtEdgegatewayExternalNetworkOutput) ToGetNsxtEdgegatewayExternalNetworkOutputWithContext(ctx context.Context) GetNsxtEdgegatewayExternalNetworkOutput {
	return o
}

// Number of allocated IPs
func (o GetNsxtEdgegatewayExternalNetworkOutput) AllocatedIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayExternalNetwork) int { return v.AllocatedIpCount }).(pulumi.IntOutput)
}

// NSX-T Segment backed External Network ID
func (o GetNsxtEdgegatewayExternalNetworkOutput) ExternalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayExternalNetwork) string { return v.ExternalNetworkId }).(pulumi.StringOutput)
}

// Gateway IP Address
func (o GetNsxtEdgegatewayExternalNetworkOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayExternalNetwork) string { return v.Gateway }).(pulumi.StringOutput)
}

// Prefix length for a subnet (e.g. 24)
func (o GetNsxtEdgegatewayExternalNetworkOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayExternalNetwork) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// Primary IP address for the Edge Gateway
func (o GetNsxtEdgegatewayExternalNetworkOutput) PrimaryIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayExternalNetwork) string { return v.PrimaryIp }).(pulumi.StringOutput)
}

type GetNsxtEdgegatewayExternalNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayExternalNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayExternalNetwork)(nil)).Elem()
}

func (o GetNsxtEdgegatewayExternalNetworkArrayOutput) ToGetNsxtEdgegatewayExternalNetworkArrayOutput() GetNsxtEdgegatewayExternalNetworkArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayExternalNetworkArrayOutput) ToGetNsxtEdgegatewayExternalNetworkArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayExternalNetworkArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayExternalNetworkArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewayExternalNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewayExternalNetwork {
		return vs[0].([]GetNsxtEdgegatewayExternalNetwork)[vs[1].(int)]
	}).(GetNsxtEdgegatewayExternalNetworkOutput)
}

type GetNsxtEdgegatewayL2VpnTunnelStretchedNetwork struct {
	// ID of the Org VDC network
	NetworkId string `pulumi:"networkId"`
	// Tunnel ID of the network for the tunnel. Read-only for `SERVER` sessions.
	TunnelId int `pulumi:"tunnelId"`
}

// GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkInput is an input type that accepts GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs and GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkInput` via:
//
//	GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs{...}
type GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput() GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput
	ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutputWithContext(context.Context) GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput
}

type GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs struct {
	// ID of the Org VDC network
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Tunnel ID of the network for the tunnel. Read-only for `SERVER` sessions.
	TunnelId pulumi.IntInput `pulumi:"tunnelId"`
}

func (GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayL2VpnTunnelStretchedNetwork)(nil)).Elem()
}

func (i GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs) ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput() GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput {
	return i.ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs) ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutputWithContext(ctx context.Context) GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput)
}

// GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayInput is an input type that accepts GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArray and GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayInput` via:
//
//	GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArray{ GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs{...} }
type GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput() GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput
	ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutputWithContext(context.Context) GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput
}

type GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArray []GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkInput

func (GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayL2VpnTunnelStretchedNetwork)(nil)).Elem()
}

func (i GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArray) ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput() GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput {
	return i.ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArray) ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput)
}

type GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayL2VpnTunnelStretchedNetwork)(nil)).Elem()
}

func (o GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput) ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput() GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput {
	return o
}

func (o GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput) ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutputWithContext(ctx context.Context) GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput {
	return o
}

// ID of the Org VDC network
func (o GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayL2VpnTunnelStretchedNetwork) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Tunnel ID of the network for the tunnel. Read-only for `SERVER` sessions.
func (o GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput) TunnelId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayL2VpnTunnelStretchedNetwork) int { return v.TunnelId }).(pulumi.IntOutput)
}

type GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayL2VpnTunnelStretchedNetwork)(nil)).Elem()
}

func (o GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput) ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput() GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput) ToGetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewayL2VpnTunnelStretchedNetwork {
		return vs[0].([]GetNsxtEdgegatewayL2VpnTunnelStretchedNetwork)[vs[1].(int)]
	}).(GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput)
}

type GetNsxtEdgegatewayStaticRouteNextHop struct {
	// Admin distance of next hop
	AdminDistance int `pulumi:"adminDistance"`
	// IP Address of next hop
	IpAddress string                                      `pulumi:"ipAddress"`
	Scopes    []GetNsxtEdgegatewayStaticRouteNextHopScope `pulumi:"scopes"`
}

// GetNsxtEdgegatewayStaticRouteNextHopInput is an input type that accepts GetNsxtEdgegatewayStaticRouteNextHopArgs and GetNsxtEdgegatewayStaticRouteNextHopOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayStaticRouteNextHopInput` via:
//
//	GetNsxtEdgegatewayStaticRouteNextHopArgs{...}
type GetNsxtEdgegatewayStaticRouteNextHopInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayStaticRouteNextHopOutput() GetNsxtEdgegatewayStaticRouteNextHopOutput
	ToGetNsxtEdgegatewayStaticRouteNextHopOutputWithContext(context.Context) GetNsxtEdgegatewayStaticRouteNextHopOutput
}

type GetNsxtEdgegatewayStaticRouteNextHopArgs struct {
	// Admin distance of next hop
	AdminDistance pulumi.IntInput `pulumi:"adminDistance"`
	// IP Address of next hop
	IpAddress pulumi.StringInput                                  `pulumi:"ipAddress"`
	Scopes    GetNsxtEdgegatewayStaticRouteNextHopScopeArrayInput `pulumi:"scopes"`
}

func (GetNsxtEdgegatewayStaticRouteNextHopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayStaticRouteNextHop)(nil)).Elem()
}

func (i GetNsxtEdgegatewayStaticRouteNextHopArgs) ToGetNsxtEdgegatewayStaticRouteNextHopOutput() GetNsxtEdgegatewayStaticRouteNextHopOutput {
	return i.ToGetNsxtEdgegatewayStaticRouteNextHopOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayStaticRouteNextHopArgs) ToGetNsxtEdgegatewayStaticRouteNextHopOutputWithContext(ctx context.Context) GetNsxtEdgegatewayStaticRouteNextHopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayStaticRouteNextHopOutput)
}

// GetNsxtEdgegatewayStaticRouteNextHopArrayInput is an input type that accepts GetNsxtEdgegatewayStaticRouteNextHopArray and GetNsxtEdgegatewayStaticRouteNextHopArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayStaticRouteNextHopArrayInput` via:
//
//	GetNsxtEdgegatewayStaticRouteNextHopArray{ GetNsxtEdgegatewayStaticRouteNextHopArgs{...} }
type GetNsxtEdgegatewayStaticRouteNextHopArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayStaticRouteNextHopArrayOutput() GetNsxtEdgegatewayStaticRouteNextHopArrayOutput
	ToGetNsxtEdgegatewayStaticRouteNextHopArrayOutputWithContext(context.Context) GetNsxtEdgegatewayStaticRouteNextHopArrayOutput
}

type GetNsxtEdgegatewayStaticRouteNextHopArray []GetNsxtEdgegatewayStaticRouteNextHopInput

func (GetNsxtEdgegatewayStaticRouteNextHopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayStaticRouteNextHop)(nil)).Elem()
}

func (i GetNsxtEdgegatewayStaticRouteNextHopArray) ToGetNsxtEdgegatewayStaticRouteNextHopArrayOutput() GetNsxtEdgegatewayStaticRouteNextHopArrayOutput {
	return i.ToGetNsxtEdgegatewayStaticRouteNextHopArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayStaticRouteNextHopArray) ToGetNsxtEdgegatewayStaticRouteNextHopArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayStaticRouteNextHopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayStaticRouteNextHopArrayOutput)
}

type GetNsxtEdgegatewayStaticRouteNextHopOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayStaticRouteNextHopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayStaticRouteNextHop)(nil)).Elem()
}

func (o GetNsxtEdgegatewayStaticRouteNextHopOutput) ToGetNsxtEdgegatewayStaticRouteNextHopOutput() GetNsxtEdgegatewayStaticRouteNextHopOutput {
	return o
}

func (o GetNsxtEdgegatewayStaticRouteNextHopOutput) ToGetNsxtEdgegatewayStaticRouteNextHopOutputWithContext(ctx context.Context) GetNsxtEdgegatewayStaticRouteNextHopOutput {
	return o
}

// Admin distance of next hop
func (o GetNsxtEdgegatewayStaticRouteNextHopOutput) AdminDistance() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayStaticRouteNextHop) int { return v.AdminDistance }).(pulumi.IntOutput)
}

// IP Address of next hop
func (o GetNsxtEdgegatewayStaticRouteNextHopOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayStaticRouteNextHop) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetNsxtEdgegatewayStaticRouteNextHopOutput) Scopes() GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayStaticRouteNextHop) []GetNsxtEdgegatewayStaticRouteNextHopScope {
		return v.Scopes
	}).(GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput)
}

type GetNsxtEdgegatewayStaticRouteNextHopArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayStaticRouteNextHopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayStaticRouteNextHop)(nil)).Elem()
}

func (o GetNsxtEdgegatewayStaticRouteNextHopArrayOutput) ToGetNsxtEdgegatewayStaticRouteNextHopArrayOutput() GetNsxtEdgegatewayStaticRouteNextHopArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayStaticRouteNextHopArrayOutput) ToGetNsxtEdgegatewayStaticRouteNextHopArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayStaticRouteNextHopArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayStaticRouteNextHopArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewayStaticRouteNextHopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewayStaticRouteNextHop {
		return vs[0].([]GetNsxtEdgegatewayStaticRouteNextHop)[vs[1].(int)]
	}).(GetNsxtEdgegatewayStaticRouteNextHopOutput)
}

type GetNsxtEdgegatewayStaticRouteNextHopScope struct {
	// ID of Scope element
	Id string `pulumi:"id"`
	// Name of Static Route. **Note** names *can be duplicate* and one can use
	// `networkCidr` to make filtering more precise
	Name string `pulumi:"name"`
	// Scope type - One of 'NETWORK', 'SYSTEM_OWNED'
	Type string `pulumi:"type"`
}

// GetNsxtEdgegatewayStaticRouteNextHopScopeInput is an input type that accepts GetNsxtEdgegatewayStaticRouteNextHopScopeArgs and GetNsxtEdgegatewayStaticRouteNextHopScopeOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayStaticRouteNextHopScopeInput` via:
//
//	GetNsxtEdgegatewayStaticRouteNextHopScopeArgs{...}
type GetNsxtEdgegatewayStaticRouteNextHopScopeInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayStaticRouteNextHopScopeOutput() GetNsxtEdgegatewayStaticRouteNextHopScopeOutput
	ToGetNsxtEdgegatewayStaticRouteNextHopScopeOutputWithContext(context.Context) GetNsxtEdgegatewayStaticRouteNextHopScopeOutput
}

type GetNsxtEdgegatewayStaticRouteNextHopScopeArgs struct {
	// ID of Scope element
	Id pulumi.StringInput `pulumi:"id"`
	// Name of Static Route. **Note** names *can be duplicate* and one can use
	// `networkCidr` to make filtering more precise
	Name pulumi.StringInput `pulumi:"name"`
	// Scope type - One of 'NETWORK', 'SYSTEM_OWNED'
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNsxtEdgegatewayStaticRouteNextHopScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayStaticRouteNextHopScope)(nil)).Elem()
}

func (i GetNsxtEdgegatewayStaticRouteNextHopScopeArgs) ToGetNsxtEdgegatewayStaticRouteNextHopScopeOutput() GetNsxtEdgegatewayStaticRouteNextHopScopeOutput {
	return i.ToGetNsxtEdgegatewayStaticRouteNextHopScopeOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayStaticRouteNextHopScopeArgs) ToGetNsxtEdgegatewayStaticRouteNextHopScopeOutputWithContext(ctx context.Context) GetNsxtEdgegatewayStaticRouteNextHopScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayStaticRouteNextHopScopeOutput)
}

// GetNsxtEdgegatewayStaticRouteNextHopScopeArrayInput is an input type that accepts GetNsxtEdgegatewayStaticRouteNextHopScopeArray and GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewayStaticRouteNextHopScopeArrayInput` via:
//
//	GetNsxtEdgegatewayStaticRouteNextHopScopeArray{ GetNsxtEdgegatewayStaticRouteNextHopScopeArgs{...} }
type GetNsxtEdgegatewayStaticRouteNextHopScopeArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput() GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput
	ToGetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutputWithContext(context.Context) GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput
}

type GetNsxtEdgegatewayStaticRouteNextHopScopeArray []GetNsxtEdgegatewayStaticRouteNextHopScopeInput

func (GetNsxtEdgegatewayStaticRouteNextHopScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayStaticRouteNextHopScope)(nil)).Elem()
}

func (i GetNsxtEdgegatewayStaticRouteNextHopScopeArray) ToGetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput() GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput {
	return i.ToGetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewayStaticRouteNextHopScopeArray) ToGetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput)
}

type GetNsxtEdgegatewayStaticRouteNextHopScopeOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayStaticRouteNextHopScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewayStaticRouteNextHopScope)(nil)).Elem()
}

func (o GetNsxtEdgegatewayStaticRouteNextHopScopeOutput) ToGetNsxtEdgegatewayStaticRouteNextHopScopeOutput() GetNsxtEdgegatewayStaticRouteNextHopScopeOutput {
	return o
}

func (o GetNsxtEdgegatewayStaticRouteNextHopScopeOutput) ToGetNsxtEdgegatewayStaticRouteNextHopScopeOutputWithContext(ctx context.Context) GetNsxtEdgegatewayStaticRouteNextHopScopeOutput {
	return o
}

// ID of Scope element
func (o GetNsxtEdgegatewayStaticRouteNextHopScopeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayStaticRouteNextHopScope) string { return v.Id }).(pulumi.StringOutput)
}

// Name of Static Route. **Note** names *can be duplicate* and one can use
// `networkCidr` to make filtering more precise
func (o GetNsxtEdgegatewayStaticRouteNextHopScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayStaticRouteNextHopScope) string { return v.Name }).(pulumi.StringOutput)
}

// Scope type - One of 'NETWORK', 'SYSTEM_OWNED'
func (o GetNsxtEdgegatewayStaticRouteNextHopScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewayStaticRouteNextHopScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewayStaticRouteNextHopScope)(nil)).Elem()
}

func (o GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput) ToGetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput() GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput) ToGetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput {
	return o
}

func (o GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewayStaticRouteNextHopScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewayStaticRouteNextHopScope {
		return vs[0].([]GetNsxtEdgegatewayStaticRouteNextHopScope)[vs[1].(int)]
	}).(GetNsxtEdgegatewayStaticRouteNextHopScopeOutput)
}

type GetNsxtEdgegatewaySubnet struct {
	// One or more blocks to sub-allocate pools on the edge gateway
	AllocatedIps []GetNsxtEdgegatewaySubnetAllocatedIp `pulumi:"allocatedIps"`
	// Gateway address for a subnet
	Gateway string `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength int `pulumi:"prefixLength"`
	// IP address on the edge gateway
	PrimaryIp string `pulumi:"primaryIp"`
}

// GetNsxtEdgegatewaySubnetInput is an input type that accepts GetNsxtEdgegatewaySubnetArgs and GetNsxtEdgegatewaySubnetOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewaySubnetInput` via:
//
//	GetNsxtEdgegatewaySubnetArgs{...}
type GetNsxtEdgegatewaySubnetInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewaySubnetOutput() GetNsxtEdgegatewaySubnetOutput
	ToGetNsxtEdgegatewaySubnetOutputWithContext(context.Context) GetNsxtEdgegatewaySubnetOutput
}

type GetNsxtEdgegatewaySubnetArgs struct {
	// One or more blocks to sub-allocate pools on the edge gateway
	AllocatedIps GetNsxtEdgegatewaySubnetAllocatedIpArrayInput `pulumi:"allocatedIps"`
	// Gateway address for a subnet
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// IP address on the edge gateway
	PrimaryIp pulumi.StringInput `pulumi:"primaryIp"`
}

func (GetNsxtEdgegatewaySubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewaySubnet)(nil)).Elem()
}

func (i GetNsxtEdgegatewaySubnetArgs) ToGetNsxtEdgegatewaySubnetOutput() GetNsxtEdgegatewaySubnetOutput {
	return i.ToGetNsxtEdgegatewaySubnetOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewaySubnetArgs) ToGetNsxtEdgegatewaySubnetOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewaySubnetOutput)
}

// GetNsxtEdgegatewaySubnetArrayInput is an input type that accepts GetNsxtEdgegatewaySubnetArray and GetNsxtEdgegatewaySubnetArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewaySubnetArrayInput` via:
//
//	GetNsxtEdgegatewaySubnetArray{ GetNsxtEdgegatewaySubnetArgs{...} }
type GetNsxtEdgegatewaySubnetArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewaySubnetArrayOutput() GetNsxtEdgegatewaySubnetArrayOutput
	ToGetNsxtEdgegatewaySubnetArrayOutputWithContext(context.Context) GetNsxtEdgegatewaySubnetArrayOutput
}

type GetNsxtEdgegatewaySubnetArray []GetNsxtEdgegatewaySubnetInput

func (GetNsxtEdgegatewaySubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewaySubnet)(nil)).Elem()
}

func (i GetNsxtEdgegatewaySubnetArray) ToGetNsxtEdgegatewaySubnetArrayOutput() GetNsxtEdgegatewaySubnetArrayOutput {
	return i.ToGetNsxtEdgegatewaySubnetArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewaySubnetArray) ToGetNsxtEdgegatewaySubnetArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewaySubnetArrayOutput)
}

type GetNsxtEdgegatewaySubnetOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewaySubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewaySubnet)(nil)).Elem()
}

func (o GetNsxtEdgegatewaySubnetOutput) ToGetNsxtEdgegatewaySubnetOutput() GetNsxtEdgegatewaySubnetOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetOutput) ToGetNsxtEdgegatewaySubnetOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetOutput {
	return o
}

// One or more blocks to sub-allocate pools on the edge gateway
func (o GetNsxtEdgegatewaySubnetOutput) AllocatedIps() GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnet) []GetNsxtEdgegatewaySubnetAllocatedIp { return v.AllocatedIps }).(GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput)
}

// Gateway address for a subnet
func (o GetNsxtEdgegatewaySubnetOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnet) string { return v.Gateway }).(pulumi.StringOutput)
}

// Prefix length for a subnet (e.g. 24)
func (o GetNsxtEdgegatewaySubnetOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnet) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// IP address on the edge gateway
func (o GetNsxtEdgegatewaySubnetOutput) PrimaryIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnet) string { return v.PrimaryIp }).(pulumi.StringOutput)
}

type GetNsxtEdgegatewaySubnetArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewaySubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewaySubnet)(nil)).Elem()
}

func (o GetNsxtEdgegatewaySubnetArrayOutput) ToGetNsxtEdgegatewaySubnetArrayOutput() GetNsxtEdgegatewaySubnetArrayOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetArrayOutput) ToGetNsxtEdgegatewaySubnetArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetArrayOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewaySubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewaySubnet {
		return vs[0].([]GetNsxtEdgegatewaySubnet)[vs[1].(int)]
	}).(GetNsxtEdgegatewaySubnetOutput)
}

type GetNsxtEdgegatewaySubnetAllocatedIp struct {
	EndAddress   string `pulumi:"endAddress"`
	StartAddress string `pulumi:"startAddress"`
}

// GetNsxtEdgegatewaySubnetAllocatedIpInput is an input type that accepts GetNsxtEdgegatewaySubnetAllocatedIpArgs and GetNsxtEdgegatewaySubnetAllocatedIpOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewaySubnetAllocatedIpInput` via:
//
//	GetNsxtEdgegatewaySubnetAllocatedIpArgs{...}
type GetNsxtEdgegatewaySubnetAllocatedIpInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewaySubnetAllocatedIpOutput() GetNsxtEdgegatewaySubnetAllocatedIpOutput
	ToGetNsxtEdgegatewaySubnetAllocatedIpOutputWithContext(context.Context) GetNsxtEdgegatewaySubnetAllocatedIpOutput
}

type GetNsxtEdgegatewaySubnetAllocatedIpArgs struct {
	EndAddress   pulumi.StringInput `pulumi:"endAddress"`
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNsxtEdgegatewaySubnetAllocatedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewaySubnetAllocatedIp)(nil)).Elem()
}

func (i GetNsxtEdgegatewaySubnetAllocatedIpArgs) ToGetNsxtEdgegatewaySubnetAllocatedIpOutput() GetNsxtEdgegatewaySubnetAllocatedIpOutput {
	return i.ToGetNsxtEdgegatewaySubnetAllocatedIpOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewaySubnetAllocatedIpArgs) ToGetNsxtEdgegatewaySubnetAllocatedIpOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetAllocatedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewaySubnetAllocatedIpOutput)
}

// GetNsxtEdgegatewaySubnetAllocatedIpArrayInput is an input type that accepts GetNsxtEdgegatewaySubnetAllocatedIpArray and GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewaySubnetAllocatedIpArrayInput` via:
//
//	GetNsxtEdgegatewaySubnetAllocatedIpArray{ GetNsxtEdgegatewaySubnetAllocatedIpArgs{...} }
type GetNsxtEdgegatewaySubnetAllocatedIpArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewaySubnetAllocatedIpArrayOutput() GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput
	ToGetNsxtEdgegatewaySubnetAllocatedIpArrayOutputWithContext(context.Context) GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput
}

type GetNsxtEdgegatewaySubnetAllocatedIpArray []GetNsxtEdgegatewaySubnetAllocatedIpInput

func (GetNsxtEdgegatewaySubnetAllocatedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewaySubnetAllocatedIp)(nil)).Elem()
}

func (i GetNsxtEdgegatewaySubnetAllocatedIpArray) ToGetNsxtEdgegatewaySubnetAllocatedIpArrayOutput() GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput {
	return i.ToGetNsxtEdgegatewaySubnetAllocatedIpArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewaySubnetAllocatedIpArray) ToGetNsxtEdgegatewaySubnetAllocatedIpArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput)
}

type GetNsxtEdgegatewaySubnetAllocatedIpOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewaySubnetAllocatedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewaySubnetAllocatedIp)(nil)).Elem()
}

func (o GetNsxtEdgegatewaySubnetAllocatedIpOutput) ToGetNsxtEdgegatewaySubnetAllocatedIpOutput() GetNsxtEdgegatewaySubnetAllocatedIpOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetAllocatedIpOutput) ToGetNsxtEdgegatewaySubnetAllocatedIpOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetAllocatedIpOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetAllocatedIpOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnetAllocatedIp) string { return v.EndAddress }).(pulumi.StringOutput)
}

func (o GetNsxtEdgegatewaySubnetAllocatedIpOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnetAllocatedIp) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewaySubnetAllocatedIp)(nil)).Elem()
}

func (o GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput) ToGetNsxtEdgegatewaySubnetAllocatedIpArrayOutput() GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput) ToGetNsxtEdgegatewaySubnetAllocatedIpArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewaySubnetAllocatedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewaySubnetAllocatedIp {
		return vs[0].([]GetNsxtEdgegatewaySubnetAllocatedIp)[vs[1].(int)]
	}).(GetNsxtEdgegatewaySubnetAllocatedIpOutput)
}

type GetNsxtEdgegatewaySubnetWithIpCount struct {
	// Number of IP addresses to allocate
	AllocatedIpCount int `pulumi:"allocatedIpCount"`
	// Gateway address for a subnet
	Gateway string `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength int `pulumi:"prefixLength"`
	// Primary IP address for the Edge Gateway - will be auto-assigned if not defined
	PrimaryIp string `pulumi:"primaryIp"`
}

// GetNsxtEdgegatewaySubnetWithIpCountInput is an input type that accepts GetNsxtEdgegatewaySubnetWithIpCountArgs and GetNsxtEdgegatewaySubnetWithIpCountOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewaySubnetWithIpCountInput` via:
//
//	GetNsxtEdgegatewaySubnetWithIpCountArgs{...}
type GetNsxtEdgegatewaySubnetWithIpCountInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewaySubnetWithIpCountOutput() GetNsxtEdgegatewaySubnetWithIpCountOutput
	ToGetNsxtEdgegatewaySubnetWithIpCountOutputWithContext(context.Context) GetNsxtEdgegatewaySubnetWithIpCountOutput
}

type GetNsxtEdgegatewaySubnetWithIpCountArgs struct {
	// Number of IP addresses to allocate
	AllocatedIpCount pulumi.IntInput `pulumi:"allocatedIpCount"`
	// Gateway address for a subnet
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// Primary IP address for the Edge Gateway - will be auto-assigned if not defined
	PrimaryIp pulumi.StringInput `pulumi:"primaryIp"`
}

func (GetNsxtEdgegatewaySubnetWithIpCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewaySubnetWithIpCount)(nil)).Elem()
}

func (i GetNsxtEdgegatewaySubnetWithIpCountArgs) ToGetNsxtEdgegatewaySubnetWithIpCountOutput() GetNsxtEdgegatewaySubnetWithIpCountOutput {
	return i.ToGetNsxtEdgegatewaySubnetWithIpCountOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewaySubnetWithIpCountArgs) ToGetNsxtEdgegatewaySubnetWithIpCountOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetWithIpCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewaySubnetWithIpCountOutput)
}

// GetNsxtEdgegatewaySubnetWithIpCountArrayInput is an input type that accepts GetNsxtEdgegatewaySubnetWithIpCountArray and GetNsxtEdgegatewaySubnetWithIpCountArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewaySubnetWithIpCountArrayInput` via:
//
//	GetNsxtEdgegatewaySubnetWithIpCountArray{ GetNsxtEdgegatewaySubnetWithIpCountArgs{...} }
type GetNsxtEdgegatewaySubnetWithIpCountArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewaySubnetWithIpCountArrayOutput() GetNsxtEdgegatewaySubnetWithIpCountArrayOutput
	ToGetNsxtEdgegatewaySubnetWithIpCountArrayOutputWithContext(context.Context) GetNsxtEdgegatewaySubnetWithIpCountArrayOutput
}

type GetNsxtEdgegatewaySubnetWithIpCountArray []GetNsxtEdgegatewaySubnetWithIpCountInput

func (GetNsxtEdgegatewaySubnetWithIpCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewaySubnetWithIpCount)(nil)).Elem()
}

func (i GetNsxtEdgegatewaySubnetWithIpCountArray) ToGetNsxtEdgegatewaySubnetWithIpCountArrayOutput() GetNsxtEdgegatewaySubnetWithIpCountArrayOutput {
	return i.ToGetNsxtEdgegatewaySubnetWithIpCountArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewaySubnetWithIpCountArray) ToGetNsxtEdgegatewaySubnetWithIpCountArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetWithIpCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewaySubnetWithIpCountArrayOutput)
}

type GetNsxtEdgegatewaySubnetWithIpCountOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewaySubnetWithIpCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewaySubnetWithIpCount)(nil)).Elem()
}

func (o GetNsxtEdgegatewaySubnetWithIpCountOutput) ToGetNsxtEdgegatewaySubnetWithIpCountOutput() GetNsxtEdgegatewaySubnetWithIpCountOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetWithIpCountOutput) ToGetNsxtEdgegatewaySubnetWithIpCountOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetWithIpCountOutput {
	return o
}

// Number of IP addresses to allocate
func (o GetNsxtEdgegatewaySubnetWithIpCountOutput) AllocatedIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnetWithIpCount) int { return v.AllocatedIpCount }).(pulumi.IntOutput)
}

// Gateway address for a subnet
func (o GetNsxtEdgegatewaySubnetWithIpCountOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnetWithIpCount) string { return v.Gateway }).(pulumi.StringOutput)
}

// Prefix length for a subnet (e.g. 24)
func (o GetNsxtEdgegatewaySubnetWithIpCountOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnetWithIpCount) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// Primary IP address for the Edge Gateway - will be auto-assigned if not defined
func (o GetNsxtEdgegatewaySubnetWithIpCountOutput) PrimaryIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnetWithIpCount) string { return v.PrimaryIp }).(pulumi.StringOutput)
}

type GetNsxtEdgegatewaySubnetWithIpCountArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewaySubnetWithIpCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewaySubnetWithIpCount)(nil)).Elem()
}

func (o GetNsxtEdgegatewaySubnetWithIpCountArrayOutput) ToGetNsxtEdgegatewaySubnetWithIpCountArrayOutput() GetNsxtEdgegatewaySubnetWithIpCountArrayOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetWithIpCountArrayOutput) ToGetNsxtEdgegatewaySubnetWithIpCountArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetWithIpCountArrayOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetWithIpCountArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewaySubnetWithIpCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewaySubnetWithIpCount {
		return vs[0].([]GetNsxtEdgegatewaySubnetWithIpCount)[vs[1].(int)]
	}).(GetNsxtEdgegatewaySubnetWithIpCountOutput)
}

type GetNsxtEdgegatewaySubnetWithTotalIpCount struct {
	// Gateway address for a subnet
	Gateway string `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength int `pulumi:"prefixLength"`
	// Primary IP address for the Edge Gateway
	PrimaryIp string `pulumi:"primaryIp"`
}

// GetNsxtEdgegatewaySubnetWithTotalIpCountInput is an input type that accepts GetNsxtEdgegatewaySubnetWithTotalIpCountArgs and GetNsxtEdgegatewaySubnetWithTotalIpCountOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewaySubnetWithTotalIpCountInput` via:
//
//	GetNsxtEdgegatewaySubnetWithTotalIpCountArgs{...}
type GetNsxtEdgegatewaySubnetWithTotalIpCountInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewaySubnetWithTotalIpCountOutput() GetNsxtEdgegatewaySubnetWithTotalIpCountOutput
	ToGetNsxtEdgegatewaySubnetWithTotalIpCountOutputWithContext(context.Context) GetNsxtEdgegatewaySubnetWithTotalIpCountOutput
}

type GetNsxtEdgegatewaySubnetWithTotalIpCountArgs struct {
	// Gateway address for a subnet
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Prefix length for a subnet (e.g. 24)
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// Primary IP address for the Edge Gateway
	PrimaryIp pulumi.StringInput `pulumi:"primaryIp"`
}

func (GetNsxtEdgegatewaySubnetWithTotalIpCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewaySubnetWithTotalIpCount)(nil)).Elem()
}

func (i GetNsxtEdgegatewaySubnetWithTotalIpCountArgs) ToGetNsxtEdgegatewaySubnetWithTotalIpCountOutput() GetNsxtEdgegatewaySubnetWithTotalIpCountOutput {
	return i.ToGetNsxtEdgegatewaySubnetWithTotalIpCountOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewaySubnetWithTotalIpCountArgs) ToGetNsxtEdgegatewaySubnetWithTotalIpCountOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetWithTotalIpCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewaySubnetWithTotalIpCountOutput)
}

// GetNsxtEdgegatewaySubnetWithTotalIpCountArrayInput is an input type that accepts GetNsxtEdgegatewaySubnetWithTotalIpCountArray and GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput values.
// You can construct a concrete instance of `GetNsxtEdgegatewaySubnetWithTotalIpCountArrayInput` via:
//
//	GetNsxtEdgegatewaySubnetWithTotalIpCountArray{ GetNsxtEdgegatewaySubnetWithTotalIpCountArgs{...} }
type GetNsxtEdgegatewaySubnetWithTotalIpCountArrayInput interface {
	pulumi.Input

	ToGetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput() GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput
	ToGetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutputWithContext(context.Context) GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput
}

type GetNsxtEdgegatewaySubnetWithTotalIpCountArray []GetNsxtEdgegatewaySubnetWithTotalIpCountInput

func (GetNsxtEdgegatewaySubnetWithTotalIpCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewaySubnetWithTotalIpCount)(nil)).Elem()
}

func (i GetNsxtEdgegatewaySubnetWithTotalIpCountArray) ToGetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput() GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput {
	return i.ToGetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutputWithContext(context.Background())
}

func (i GetNsxtEdgegatewaySubnetWithTotalIpCountArray) ToGetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput)
}

type GetNsxtEdgegatewaySubnetWithTotalIpCountOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewaySubnetWithTotalIpCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtEdgegatewaySubnetWithTotalIpCount)(nil)).Elem()
}

func (o GetNsxtEdgegatewaySubnetWithTotalIpCountOutput) ToGetNsxtEdgegatewaySubnetWithTotalIpCountOutput() GetNsxtEdgegatewaySubnetWithTotalIpCountOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetWithTotalIpCountOutput) ToGetNsxtEdgegatewaySubnetWithTotalIpCountOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetWithTotalIpCountOutput {
	return o
}

// Gateway address for a subnet
func (o GetNsxtEdgegatewaySubnetWithTotalIpCountOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnetWithTotalIpCount) string { return v.Gateway }).(pulumi.StringOutput)
}

// Prefix length for a subnet (e.g. 24)
func (o GetNsxtEdgegatewaySubnetWithTotalIpCountOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnetWithTotalIpCount) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// Primary IP address for the Edge Gateway
func (o GetNsxtEdgegatewaySubnetWithTotalIpCountOutput) PrimaryIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtEdgegatewaySubnetWithTotalIpCount) string { return v.PrimaryIp }).(pulumi.StringOutput)
}

type GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtEdgegatewaySubnetWithTotalIpCount)(nil)).Elem()
}

func (o GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput) ToGetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput() GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput) ToGetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutputWithContext(ctx context.Context) GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput {
	return o
}

func (o GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput) Index(i pulumi.IntInput) GetNsxtEdgegatewaySubnetWithTotalIpCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtEdgegatewaySubnetWithTotalIpCount {
		return vs[0].([]GetNsxtEdgegatewaySubnetWithTotalIpCount)[vs[1].(int)]
	}).(GetNsxtEdgegatewaySubnetWithTotalIpCountOutput)
}

type GetNsxtFirewallRule struct {
	Action string `pulumi:"action"`
	// A set of Application Port Profile IDs. Leaving it empty means 'Any'
	AppPortProfileIds []string `pulumi:"appPortProfileIds"`
	// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	DestinationIds []string `pulumi:"destinationIds"`
	// IN OUT IN_OUT
	Direction string `pulumi:"direction"`
	// Firewall Rule name
	Enabled bool `pulumi:"enabled"`
	// Firewall Rule ID
	Id string `pulumi:"id"`
	// IPV4,  IPV6, IPV4_IPV6
	IpProtocol string `pulumi:"ipProtocol"`
	// Firewall Rule name
	Logging bool `pulumi:"logging"`
	// Firewall Rule name
	Name string `pulumi:"name"`
	// A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	SourceIds []string `pulumi:"sourceIds"`
}

// GetNsxtFirewallRuleInput is an input type that accepts GetNsxtFirewallRuleArgs and GetNsxtFirewallRuleOutput values.
// You can construct a concrete instance of `GetNsxtFirewallRuleInput` via:
//
//	GetNsxtFirewallRuleArgs{...}
type GetNsxtFirewallRuleInput interface {
	pulumi.Input

	ToGetNsxtFirewallRuleOutput() GetNsxtFirewallRuleOutput
	ToGetNsxtFirewallRuleOutputWithContext(context.Context) GetNsxtFirewallRuleOutput
}

type GetNsxtFirewallRuleArgs struct {
	Action pulumi.StringInput `pulumi:"action"`
	// A set of Application Port Profile IDs. Leaving it empty means 'Any'
	AppPortProfileIds pulumi.StringArrayInput `pulumi:"appPortProfileIds"`
	// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	DestinationIds pulumi.StringArrayInput `pulumi:"destinationIds"`
	// IN OUT IN_OUT
	Direction pulumi.StringInput `pulumi:"direction"`
	// Firewall Rule name
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Firewall Rule ID
	Id pulumi.StringInput `pulumi:"id"`
	// IPV4,  IPV6, IPV4_IPV6
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// Firewall Rule name
	Logging pulumi.BoolInput `pulumi:"logging"`
	// Firewall Rule name
	Name pulumi.StringInput `pulumi:"name"`
	// A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
	SourceIds pulumi.StringArrayInput `pulumi:"sourceIds"`
}

func (GetNsxtFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtFirewallRule)(nil)).Elem()
}

func (i GetNsxtFirewallRuleArgs) ToGetNsxtFirewallRuleOutput() GetNsxtFirewallRuleOutput {
	return i.ToGetNsxtFirewallRuleOutputWithContext(context.Background())
}

func (i GetNsxtFirewallRuleArgs) ToGetNsxtFirewallRuleOutputWithContext(ctx context.Context) GetNsxtFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtFirewallRuleOutput)
}

// GetNsxtFirewallRuleArrayInput is an input type that accepts GetNsxtFirewallRuleArray and GetNsxtFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetNsxtFirewallRuleArrayInput` via:
//
//	GetNsxtFirewallRuleArray{ GetNsxtFirewallRuleArgs{...} }
type GetNsxtFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetNsxtFirewallRuleArrayOutput() GetNsxtFirewallRuleArrayOutput
	ToGetNsxtFirewallRuleArrayOutputWithContext(context.Context) GetNsxtFirewallRuleArrayOutput
}

type GetNsxtFirewallRuleArray []GetNsxtFirewallRuleInput

func (GetNsxtFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtFirewallRule)(nil)).Elem()
}

func (i GetNsxtFirewallRuleArray) ToGetNsxtFirewallRuleArrayOutput() GetNsxtFirewallRuleArrayOutput {
	return i.ToGetNsxtFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetNsxtFirewallRuleArray) ToGetNsxtFirewallRuleArrayOutputWithContext(ctx context.Context) GetNsxtFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtFirewallRuleArrayOutput)
}

type GetNsxtFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetNsxtFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtFirewallRule)(nil)).Elem()
}

func (o GetNsxtFirewallRuleOutput) ToGetNsxtFirewallRuleOutput() GetNsxtFirewallRuleOutput {
	return o
}

func (o GetNsxtFirewallRuleOutput) ToGetNsxtFirewallRuleOutputWithContext(ctx context.Context) GetNsxtFirewallRuleOutput {
	return o
}

func (o GetNsxtFirewallRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtFirewallRule) string { return v.Action }).(pulumi.StringOutput)
}

// A set of Application Port Profile IDs. Leaving it empty means 'Any'
func (o GetNsxtFirewallRuleOutput) AppPortProfileIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtFirewallRule) []string { return v.AppPortProfileIds }).(pulumi.StringArrayOutput)
}

// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
func (o GetNsxtFirewallRuleOutput) DestinationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtFirewallRule) []string { return v.DestinationIds }).(pulumi.StringArrayOutput)
}

// IN OUT IN_OUT
func (o GetNsxtFirewallRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtFirewallRule) string { return v.Direction }).(pulumi.StringOutput)
}

// Firewall Rule name
func (o GetNsxtFirewallRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtFirewallRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Firewall Rule ID
func (o GetNsxtFirewallRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtFirewallRule) string { return v.Id }).(pulumi.StringOutput)
}

// IPV4,  IPV6, IPV4_IPV6
func (o GetNsxtFirewallRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtFirewallRule) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// Firewall Rule name
func (o GetNsxtFirewallRuleOutput) Logging() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtFirewallRule) bool { return v.Logging }).(pulumi.BoolOutput)
}

// Firewall Rule name
func (o GetNsxtFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

// A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
func (o GetNsxtFirewallRuleOutput) SourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtFirewallRule) []string { return v.SourceIds }).(pulumi.StringArrayOutput)
}

type GetNsxtFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtFirewallRule)(nil)).Elem()
}

func (o GetNsxtFirewallRuleArrayOutput) ToGetNsxtFirewallRuleArrayOutput() GetNsxtFirewallRuleArrayOutput {
	return o
}

func (o GetNsxtFirewallRuleArrayOutput) ToGetNsxtFirewallRuleArrayOutputWithContext(ctx context.Context) GetNsxtFirewallRuleArrayOutput {
	return o
}

func (o GetNsxtFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetNsxtFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtFirewallRule {
		return vs[0].([]GetNsxtFirewallRule)[vs[1].(int)]
	}).(GetNsxtFirewallRuleOutput)
}

type GetNsxtIpsecVpnTunnelSecurityProfileCustomization struct {
	// Value in seconds of dead probe detection interval. Minimum is 3 seconds and the maximum is 60 seconds
	DpdProbeInternal int `pulumi:"dpdProbeInternal"`
	// Diffie-Hellman groups to be used if Perfect Forward Secrecy is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
	IkeDhGroups []string `pulumi:"ikeDhGroups"`
	// Secure hashing algorithms to use during the IKE negotiation. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	IkeDigestAlgorithms []string `pulumi:"ikeDigestAlgorithms"`
	// Encryption algorithms. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	IkeEncryptionAlgorithms []string `pulumi:"ikeEncryptionAlgorithms"`
	// Security Association life time (in seconds). It is number of seconds before the IPsec tunnel needs to reestablish
	IkeSaLifetime int `pulumi:"ikeSaLifetime"`
	// IKE version one of IKE_V1, IKE_V2, IKE_FLEX
	IkeVersion string `pulumi:"ikeVersion"`
	// Policy for handling defragmentation bit. One of COPY, CLEAR
	TunnelDfPolicy string `pulumi:"tunnelDfPolicy"`
	// Diffie-Hellman groups to be used is PFS is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
	TunnelDhGroups []string `pulumi:"tunnelDhGroups"`
	// Digest algorithms to be used for message digest. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	TunnelDigestAlgorithms []string `pulumi:"tunnelDigestAlgorithms"`
	// Encryption algorithms to use in IPSec tunnel establishment. One of AES_128, AES_256, AES_GCM_128, AES_GCM_192, AES_GCM_256, NO_ENCRYPTION_AUTH_AES_GMAC_128, NO_ENCRYPTION_AUTH_AES_GMAC_192, NO_ENCRYPTION_AUTH_AES_GMAC_256, NO_ENCRYPTION
	TunnelEncryptionAlgorithms []string `pulumi:"tunnelEncryptionAlgorithms"`
	// Perfect Forward Secrecy Enabled or Disabled. Default (enabled)
	TunnelPfsEnabled bool `pulumi:"tunnelPfsEnabled"`
	// Security Association life time (in seconds)
	TunnelSaLifetime int `pulumi:"tunnelSaLifetime"`
}

// GetNsxtIpsecVpnTunnelSecurityProfileCustomizationInput is an input type that accepts GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArgs and GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput values.
// You can construct a concrete instance of `GetNsxtIpsecVpnTunnelSecurityProfileCustomizationInput` via:
//
//	GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArgs{...}
type GetNsxtIpsecVpnTunnelSecurityProfileCustomizationInput interface {
	pulumi.Input

	ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput() GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput
	ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutputWithContext(context.Context) GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput
}

type GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArgs struct {
	// Value in seconds of dead probe detection interval. Minimum is 3 seconds and the maximum is 60 seconds
	DpdProbeInternal pulumi.IntInput `pulumi:"dpdProbeInternal"`
	// Diffie-Hellman groups to be used if Perfect Forward Secrecy is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
	IkeDhGroups pulumi.StringArrayInput `pulumi:"ikeDhGroups"`
	// Secure hashing algorithms to use during the IKE negotiation. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	IkeDigestAlgorithms pulumi.StringArrayInput `pulumi:"ikeDigestAlgorithms"`
	// Encryption algorithms. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	IkeEncryptionAlgorithms pulumi.StringArrayInput `pulumi:"ikeEncryptionAlgorithms"`
	// Security Association life time (in seconds). It is number of seconds before the IPsec tunnel needs to reestablish
	IkeSaLifetime pulumi.IntInput `pulumi:"ikeSaLifetime"`
	// IKE version one of IKE_V1, IKE_V2, IKE_FLEX
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// Policy for handling defragmentation bit. One of COPY, CLEAR
	TunnelDfPolicy pulumi.StringInput `pulumi:"tunnelDfPolicy"`
	// Diffie-Hellman groups to be used is PFS is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
	TunnelDhGroups pulumi.StringArrayInput `pulumi:"tunnelDhGroups"`
	// Digest algorithms to be used for message digest. One of SHA1, SHA2_256, SHA2_384, SHA2_512
	TunnelDigestAlgorithms pulumi.StringArrayInput `pulumi:"tunnelDigestAlgorithms"`
	// Encryption algorithms to use in IPSec tunnel establishment. One of AES_128, AES_256, AES_GCM_128, AES_GCM_192, AES_GCM_256, NO_ENCRYPTION_AUTH_AES_GMAC_128, NO_ENCRYPTION_AUTH_AES_GMAC_192, NO_ENCRYPTION_AUTH_AES_GMAC_256, NO_ENCRYPTION
	TunnelEncryptionAlgorithms pulumi.StringArrayInput `pulumi:"tunnelEncryptionAlgorithms"`
	// Perfect Forward Secrecy Enabled or Disabled. Default (enabled)
	TunnelPfsEnabled pulumi.BoolInput `pulumi:"tunnelPfsEnabled"`
	// Security Association life time (in seconds)
	TunnelSaLifetime pulumi.IntInput `pulumi:"tunnelSaLifetime"`
}

func (GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtIpsecVpnTunnelSecurityProfileCustomization)(nil)).Elem()
}

func (i GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArgs) ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput() GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput {
	return i.ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutputWithContext(context.Background())
}

func (i GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArgs) ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutputWithContext(ctx context.Context) GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput)
}

// GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayInput is an input type that accepts GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArray and GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput values.
// You can construct a concrete instance of `GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayInput` via:
//
//	GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArray{ GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArgs{...} }
type GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayInput interface {
	pulumi.Input

	ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput() GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput
	ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutputWithContext(context.Context) GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput
}

type GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArray []GetNsxtIpsecVpnTunnelSecurityProfileCustomizationInput

func (GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtIpsecVpnTunnelSecurityProfileCustomization)(nil)).Elem()
}

func (i GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArray) ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput() GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput {
	return i.ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutputWithContext(context.Background())
}

func (i GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArray) ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutputWithContext(ctx context.Context) GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput)
}

type GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput struct{ *pulumi.OutputState }

func (GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtIpsecVpnTunnelSecurityProfileCustomization)(nil)).Elem()
}

func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput() GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput {
	return o
}

func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutputWithContext(ctx context.Context) GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput {
	return o
}

// Value in seconds of dead probe detection interval. Minimum is 3 seconds and the maximum is 60 seconds
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) DpdProbeInternal() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) int { return v.DpdProbeInternal }).(pulumi.IntOutput)
}

// Diffie-Hellman groups to be used if Perfect Forward Secrecy is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) IkeDhGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.IkeDhGroups }).(pulumi.StringArrayOutput)
}

// Secure hashing algorithms to use during the IKE negotiation. One of SHA1, SHA2_256, SHA2_384, SHA2_512
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) IkeDigestAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.IkeDigestAlgorithms }).(pulumi.StringArrayOutput)
}

// Encryption algorithms. One of SHA1, SHA2_256, SHA2_384, SHA2_512
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) IkeEncryptionAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.IkeEncryptionAlgorithms }).(pulumi.StringArrayOutput)
}

// Security Association life time (in seconds). It is number of seconds before the IPsec tunnel needs to reestablish
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) IkeSaLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) int { return v.IkeSaLifetime }).(pulumi.IntOutput)
}

// IKE version one of IKE_V1, IKE_V2, IKE_FLEX
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) string { return v.IkeVersion }).(pulumi.StringOutput)
}

// Policy for handling defragmentation bit. One of COPY, CLEAR
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelDfPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) string { return v.TunnelDfPolicy }).(pulumi.StringOutput)
}

// Diffie-Hellman groups to be used is PFS is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelDhGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.TunnelDhGroups }).(pulumi.StringArrayOutput)
}

// Digest algorithms to be used for message digest. One of SHA1, SHA2_256, SHA2_384, SHA2_512
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelDigestAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) []string { return v.TunnelDigestAlgorithms }).(pulumi.StringArrayOutput)
}

// Encryption algorithms to use in IPSec tunnel establishment. One of AES_128, AES_256, AES_GCM_128, AES_GCM_192, AES_GCM_256, NO_ENCRYPTION_AUTH_AES_GMAC_128, NO_ENCRYPTION_AUTH_AES_GMAC_192, NO_ENCRYPTION_AUTH_AES_GMAC_256, NO_ENCRYPTION
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelEncryptionAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) []string {
		return v.TunnelEncryptionAlgorithms
	}).(pulumi.StringArrayOutput)
}

// Perfect Forward Secrecy Enabled or Disabled. Default (enabled)
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelPfsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) bool { return v.TunnelPfsEnabled }).(pulumi.BoolOutput)
}

// Security Association life time (in seconds)
func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput) TunnelSaLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtIpsecVpnTunnelSecurityProfileCustomization) int { return v.TunnelSaLifetime }).(pulumi.IntOutput)
}

type GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtIpsecVpnTunnelSecurityProfileCustomization)(nil)).Elem()
}

func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput) ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput() GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput {
	return o
}

func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput) ToGetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutputWithContext(ctx context.Context) GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput {
	return o
}

func (o GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput) Index(i pulumi.IntInput) GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtIpsecVpnTunnelSecurityProfileCustomization {
		return vs[0].([]GetNsxtIpsecVpnTunnelSecurityProfileCustomization)[vs[1].(int)]
	}).(GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput)
}

type GetNsxtNetworkDhcpBindingDhcpV4Config struct {
	// Gateway IP address to be used by the DHCP client
	GatewayIpAddress string `pulumi:"gatewayIpAddress"`
	// Hostname to be used by the DHCP client
	Hostname string `pulumi:"hostname"`
}

// GetNsxtNetworkDhcpBindingDhcpV4ConfigInput is an input type that accepts GetNsxtNetworkDhcpBindingDhcpV4ConfigArgs and GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput values.
// You can construct a concrete instance of `GetNsxtNetworkDhcpBindingDhcpV4ConfigInput` via:
//
//	GetNsxtNetworkDhcpBindingDhcpV4ConfigArgs{...}
type GetNsxtNetworkDhcpBindingDhcpV4ConfigInput interface {
	pulumi.Input

	ToGetNsxtNetworkDhcpBindingDhcpV4ConfigOutput() GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput
	ToGetNsxtNetworkDhcpBindingDhcpV4ConfigOutputWithContext(context.Context) GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput
}

type GetNsxtNetworkDhcpBindingDhcpV4ConfigArgs struct {
	// Gateway IP address to be used by the DHCP client
	GatewayIpAddress pulumi.StringInput `pulumi:"gatewayIpAddress"`
	// Hostname to be used by the DHCP client
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (GetNsxtNetworkDhcpBindingDhcpV4ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkDhcpBindingDhcpV4Config)(nil)).Elem()
}

func (i GetNsxtNetworkDhcpBindingDhcpV4ConfigArgs) ToGetNsxtNetworkDhcpBindingDhcpV4ConfigOutput() GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput {
	return i.ToGetNsxtNetworkDhcpBindingDhcpV4ConfigOutputWithContext(context.Background())
}

func (i GetNsxtNetworkDhcpBindingDhcpV4ConfigArgs) ToGetNsxtNetworkDhcpBindingDhcpV4ConfigOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput)
}

// GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayInput is an input type that accepts GetNsxtNetworkDhcpBindingDhcpV4ConfigArray and GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput values.
// You can construct a concrete instance of `GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayInput` via:
//
//	GetNsxtNetworkDhcpBindingDhcpV4ConfigArray{ GetNsxtNetworkDhcpBindingDhcpV4ConfigArgs{...} }
type GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayInput interface {
	pulumi.Input

	ToGetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput() GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput
	ToGetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutputWithContext(context.Context) GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput
}

type GetNsxtNetworkDhcpBindingDhcpV4ConfigArray []GetNsxtNetworkDhcpBindingDhcpV4ConfigInput

func (GetNsxtNetworkDhcpBindingDhcpV4ConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtNetworkDhcpBindingDhcpV4Config)(nil)).Elem()
}

func (i GetNsxtNetworkDhcpBindingDhcpV4ConfigArray) ToGetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput() GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput {
	return i.ToGetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutputWithContext(context.Background())
}

func (i GetNsxtNetworkDhcpBindingDhcpV4ConfigArray) ToGetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput)
}

type GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkDhcpBindingDhcpV4Config)(nil)).Elem()
}

func (o GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput) ToGetNsxtNetworkDhcpBindingDhcpV4ConfigOutput() GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput {
	return o
}

func (o GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput) ToGetNsxtNetworkDhcpBindingDhcpV4ConfigOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput {
	return o
}

// Gateway IP address to be used by the DHCP client
func (o GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput) GatewayIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtNetworkDhcpBindingDhcpV4Config) string { return v.GatewayIpAddress }).(pulumi.StringOutput)
}

// Hostname to be used by the DHCP client
func (o GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtNetworkDhcpBindingDhcpV4Config) string { return v.Hostname }).(pulumi.StringOutput)
}

type GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtNetworkDhcpBindingDhcpV4Config)(nil)).Elem()
}

func (o GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput) ToGetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput() GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput {
	return o
}

func (o GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput) ToGetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput {
	return o
}

func (o GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput) Index(i pulumi.IntInput) GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtNetworkDhcpBindingDhcpV4Config {
		return vs[0].([]GetNsxtNetworkDhcpBindingDhcpV4Config)[vs[1].(int)]
	}).(GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput)
}

type GetNsxtNetworkDhcpBindingDhcpV6Config struct {
	// List of DNS servers to be used by the DHCP client
	DnsServers []string `pulumi:"dnsServers"`
	// List of SNTP servers to be used by the DHCP client
	SntpServers []string `pulumi:"sntpServers"`
}

// GetNsxtNetworkDhcpBindingDhcpV6ConfigInput is an input type that accepts GetNsxtNetworkDhcpBindingDhcpV6ConfigArgs and GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput values.
// You can construct a concrete instance of `GetNsxtNetworkDhcpBindingDhcpV6ConfigInput` via:
//
//	GetNsxtNetworkDhcpBindingDhcpV6ConfigArgs{...}
type GetNsxtNetworkDhcpBindingDhcpV6ConfigInput interface {
	pulumi.Input

	ToGetNsxtNetworkDhcpBindingDhcpV6ConfigOutput() GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput
	ToGetNsxtNetworkDhcpBindingDhcpV6ConfigOutputWithContext(context.Context) GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput
}

type GetNsxtNetworkDhcpBindingDhcpV6ConfigArgs struct {
	// List of DNS servers to be used by the DHCP client
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// List of SNTP servers to be used by the DHCP client
	SntpServers pulumi.StringArrayInput `pulumi:"sntpServers"`
}

func (GetNsxtNetworkDhcpBindingDhcpV6ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkDhcpBindingDhcpV6Config)(nil)).Elem()
}

func (i GetNsxtNetworkDhcpBindingDhcpV6ConfigArgs) ToGetNsxtNetworkDhcpBindingDhcpV6ConfigOutput() GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput {
	return i.ToGetNsxtNetworkDhcpBindingDhcpV6ConfigOutputWithContext(context.Background())
}

func (i GetNsxtNetworkDhcpBindingDhcpV6ConfigArgs) ToGetNsxtNetworkDhcpBindingDhcpV6ConfigOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput)
}

// GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayInput is an input type that accepts GetNsxtNetworkDhcpBindingDhcpV6ConfigArray and GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput values.
// You can construct a concrete instance of `GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayInput` via:
//
//	GetNsxtNetworkDhcpBindingDhcpV6ConfigArray{ GetNsxtNetworkDhcpBindingDhcpV6ConfigArgs{...} }
type GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayInput interface {
	pulumi.Input

	ToGetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput() GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput
	ToGetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutputWithContext(context.Context) GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput
}

type GetNsxtNetworkDhcpBindingDhcpV6ConfigArray []GetNsxtNetworkDhcpBindingDhcpV6ConfigInput

func (GetNsxtNetworkDhcpBindingDhcpV6ConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtNetworkDhcpBindingDhcpV6Config)(nil)).Elem()
}

func (i GetNsxtNetworkDhcpBindingDhcpV6ConfigArray) ToGetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput() GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput {
	return i.ToGetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutputWithContext(context.Background())
}

func (i GetNsxtNetworkDhcpBindingDhcpV6ConfigArray) ToGetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput)
}

type GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkDhcpBindingDhcpV6Config)(nil)).Elem()
}

func (o GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput) ToGetNsxtNetworkDhcpBindingDhcpV6ConfigOutput() GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput {
	return o
}

func (o GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput) ToGetNsxtNetworkDhcpBindingDhcpV6ConfigOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput {
	return o
}

// List of DNS servers to be used by the DHCP client
func (o GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtNetworkDhcpBindingDhcpV6Config) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// List of SNTP servers to be used by the DHCP client
func (o GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput) SntpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxtNetworkDhcpBindingDhcpV6Config) []string { return v.SntpServers }).(pulumi.StringArrayOutput)
}

type GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtNetworkDhcpBindingDhcpV6Config)(nil)).Elem()
}

func (o GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput) ToGetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput() GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput {
	return o
}

func (o GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput) ToGetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput {
	return o
}

func (o GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput) Index(i pulumi.IntInput) GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtNetworkDhcpBindingDhcpV6Config {
		return vs[0].([]GetNsxtNetworkDhcpBindingDhcpV6Config)[vs[1].(int)]
	}).(GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput)
}

type GetNsxtNetworkDhcpPool struct {
	// End address of DHCP pool IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of DHCP pool IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetNsxtNetworkDhcpPoolInput is an input type that accepts GetNsxtNetworkDhcpPoolArgs and GetNsxtNetworkDhcpPoolOutput values.
// You can construct a concrete instance of `GetNsxtNetworkDhcpPoolInput` via:
//
//	GetNsxtNetworkDhcpPoolArgs{...}
type GetNsxtNetworkDhcpPoolInput interface {
	pulumi.Input

	ToGetNsxtNetworkDhcpPoolOutput() GetNsxtNetworkDhcpPoolOutput
	ToGetNsxtNetworkDhcpPoolOutputWithContext(context.Context) GetNsxtNetworkDhcpPoolOutput
}

type GetNsxtNetworkDhcpPoolArgs struct {
	// End address of DHCP pool IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of DHCP pool IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNsxtNetworkDhcpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkDhcpPool)(nil)).Elem()
}

func (i GetNsxtNetworkDhcpPoolArgs) ToGetNsxtNetworkDhcpPoolOutput() GetNsxtNetworkDhcpPoolOutput {
	return i.ToGetNsxtNetworkDhcpPoolOutputWithContext(context.Background())
}

func (i GetNsxtNetworkDhcpPoolArgs) ToGetNsxtNetworkDhcpPoolOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkDhcpPoolOutput)
}

// GetNsxtNetworkDhcpPoolArrayInput is an input type that accepts GetNsxtNetworkDhcpPoolArray and GetNsxtNetworkDhcpPoolArrayOutput values.
// You can construct a concrete instance of `GetNsxtNetworkDhcpPoolArrayInput` via:
//
//	GetNsxtNetworkDhcpPoolArray{ GetNsxtNetworkDhcpPoolArgs{...} }
type GetNsxtNetworkDhcpPoolArrayInput interface {
	pulumi.Input

	ToGetNsxtNetworkDhcpPoolArrayOutput() GetNsxtNetworkDhcpPoolArrayOutput
	ToGetNsxtNetworkDhcpPoolArrayOutputWithContext(context.Context) GetNsxtNetworkDhcpPoolArrayOutput
}

type GetNsxtNetworkDhcpPoolArray []GetNsxtNetworkDhcpPoolInput

func (GetNsxtNetworkDhcpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtNetworkDhcpPool)(nil)).Elem()
}

func (i GetNsxtNetworkDhcpPoolArray) ToGetNsxtNetworkDhcpPoolArrayOutput() GetNsxtNetworkDhcpPoolArrayOutput {
	return i.ToGetNsxtNetworkDhcpPoolArrayOutputWithContext(context.Background())
}

func (i GetNsxtNetworkDhcpPoolArray) ToGetNsxtNetworkDhcpPoolArrayOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkDhcpPoolArrayOutput)
}

type GetNsxtNetworkDhcpPoolOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkDhcpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkDhcpPool)(nil)).Elem()
}

func (o GetNsxtNetworkDhcpPoolOutput) ToGetNsxtNetworkDhcpPoolOutput() GetNsxtNetworkDhcpPoolOutput {
	return o
}

func (o GetNsxtNetworkDhcpPoolOutput) ToGetNsxtNetworkDhcpPoolOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpPoolOutput {
	return o
}

// End address of DHCP pool IP range
func (o GetNsxtNetworkDhcpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtNetworkDhcpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of DHCP pool IP range
func (o GetNsxtNetworkDhcpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtNetworkDhcpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNsxtNetworkDhcpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkDhcpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtNetworkDhcpPool)(nil)).Elem()
}

func (o GetNsxtNetworkDhcpPoolArrayOutput) ToGetNsxtNetworkDhcpPoolArrayOutput() GetNsxtNetworkDhcpPoolArrayOutput {
	return o
}

func (o GetNsxtNetworkDhcpPoolArrayOutput) ToGetNsxtNetworkDhcpPoolArrayOutputWithContext(ctx context.Context) GetNsxtNetworkDhcpPoolArrayOutput {
	return o
}

func (o GetNsxtNetworkDhcpPoolArrayOutput) Index(i pulumi.IntInput) GetNsxtNetworkDhcpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtNetworkDhcpPool {
		return vs[0].([]GetNsxtNetworkDhcpPool)[vs[1].(int)]
	}).(GetNsxtNetworkDhcpPoolOutput)
}

type GetNsxtNetworkImportedFilter struct {
	// Search by IP. The value can be a regular expression
	Ip *string `pulumi:"ip"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetNsxtNetworkImportedFilterInput is an input type that accepts GetNsxtNetworkImportedFilterArgs and GetNsxtNetworkImportedFilterOutput values.
// You can construct a concrete instance of `GetNsxtNetworkImportedFilterInput` via:
//
//	GetNsxtNetworkImportedFilterArgs{...}
type GetNsxtNetworkImportedFilterInput interface {
	pulumi.Input

	ToGetNsxtNetworkImportedFilterOutput() GetNsxtNetworkImportedFilterOutput
	ToGetNsxtNetworkImportedFilterOutputWithContext(context.Context) GetNsxtNetworkImportedFilterOutput
}

type GetNsxtNetworkImportedFilterArgs struct {
	// Search by IP. The value can be a regular expression
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetNsxtNetworkImportedFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkImportedFilter)(nil)).Elem()
}

func (i GetNsxtNetworkImportedFilterArgs) ToGetNsxtNetworkImportedFilterOutput() GetNsxtNetworkImportedFilterOutput {
	return i.ToGetNsxtNetworkImportedFilterOutputWithContext(context.Background())
}

func (i GetNsxtNetworkImportedFilterArgs) ToGetNsxtNetworkImportedFilterOutputWithContext(ctx context.Context) GetNsxtNetworkImportedFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkImportedFilterOutput)
}

func (i GetNsxtNetworkImportedFilterArgs) ToGetNsxtNetworkImportedFilterPtrOutput() GetNsxtNetworkImportedFilterPtrOutput {
	return i.ToGetNsxtNetworkImportedFilterPtrOutputWithContext(context.Background())
}

func (i GetNsxtNetworkImportedFilterArgs) ToGetNsxtNetworkImportedFilterPtrOutputWithContext(ctx context.Context) GetNsxtNetworkImportedFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkImportedFilterOutput).ToGetNsxtNetworkImportedFilterPtrOutputWithContext(ctx)
}

// GetNsxtNetworkImportedFilterPtrInput is an input type that accepts GetNsxtNetworkImportedFilterArgs, GetNsxtNetworkImportedFilterPtr and GetNsxtNetworkImportedFilterPtrOutput values.
// You can construct a concrete instance of `GetNsxtNetworkImportedFilterPtrInput` via:
//
//	        GetNsxtNetworkImportedFilterArgs{...}
//
//	or:
//
//	        nil
type GetNsxtNetworkImportedFilterPtrInput interface {
	pulumi.Input

	ToGetNsxtNetworkImportedFilterPtrOutput() GetNsxtNetworkImportedFilterPtrOutput
	ToGetNsxtNetworkImportedFilterPtrOutputWithContext(context.Context) GetNsxtNetworkImportedFilterPtrOutput
}

type getNsxtNetworkImportedFilterPtrType GetNsxtNetworkImportedFilterArgs

func GetNsxtNetworkImportedFilterPtr(v *GetNsxtNetworkImportedFilterArgs) GetNsxtNetworkImportedFilterPtrInput {
	return (*getNsxtNetworkImportedFilterPtrType)(v)
}

func (*getNsxtNetworkImportedFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNsxtNetworkImportedFilter)(nil)).Elem()
}

func (i *getNsxtNetworkImportedFilterPtrType) ToGetNsxtNetworkImportedFilterPtrOutput() GetNsxtNetworkImportedFilterPtrOutput {
	return i.ToGetNsxtNetworkImportedFilterPtrOutputWithContext(context.Background())
}

func (i *getNsxtNetworkImportedFilterPtrType) ToGetNsxtNetworkImportedFilterPtrOutputWithContext(ctx context.Context) GetNsxtNetworkImportedFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkImportedFilterPtrOutput)
}

type GetNsxtNetworkImportedFilterOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkImportedFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkImportedFilter)(nil)).Elem()
}

func (o GetNsxtNetworkImportedFilterOutput) ToGetNsxtNetworkImportedFilterOutput() GetNsxtNetworkImportedFilterOutput {
	return o
}

func (o GetNsxtNetworkImportedFilterOutput) ToGetNsxtNetworkImportedFilterOutputWithContext(ctx context.Context) GetNsxtNetworkImportedFilterOutput {
	return o
}

func (o GetNsxtNetworkImportedFilterOutput) ToGetNsxtNetworkImportedFilterPtrOutput() GetNsxtNetworkImportedFilterPtrOutput {
	return o.ToGetNsxtNetworkImportedFilterPtrOutputWithContext(context.Background())
}

func (o GetNsxtNetworkImportedFilterOutput) ToGetNsxtNetworkImportedFilterPtrOutputWithContext(ctx context.Context) GetNsxtNetworkImportedFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetNsxtNetworkImportedFilter) *GetNsxtNetworkImportedFilter {
		return &v
	}).(GetNsxtNetworkImportedFilterPtrOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNsxtNetworkImportedFilterOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNsxtNetworkImportedFilter) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Search by name with a regular expression
func (o GetNsxtNetworkImportedFilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNsxtNetworkImportedFilter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetNsxtNetworkImportedFilterPtrOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkImportedFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNsxtNetworkImportedFilter)(nil)).Elem()
}

func (o GetNsxtNetworkImportedFilterPtrOutput) ToGetNsxtNetworkImportedFilterPtrOutput() GetNsxtNetworkImportedFilterPtrOutput {
	return o
}

func (o GetNsxtNetworkImportedFilterPtrOutput) ToGetNsxtNetworkImportedFilterPtrOutputWithContext(ctx context.Context) GetNsxtNetworkImportedFilterPtrOutput {
	return o
}

func (o GetNsxtNetworkImportedFilterPtrOutput) Elem() GetNsxtNetworkImportedFilterOutput {
	return o.ApplyT(func(v *GetNsxtNetworkImportedFilter) GetNsxtNetworkImportedFilter {
		if v != nil {
			return *v
		}
		var ret GetNsxtNetworkImportedFilter
		return ret
	}).(GetNsxtNetworkImportedFilterOutput)
}

// Search by IP. The value can be a regular expression
func (o GetNsxtNetworkImportedFilterPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNsxtNetworkImportedFilter) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Search by name with a regular expression
func (o GetNsxtNetworkImportedFilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetNsxtNetworkImportedFilter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetNsxtNetworkImportedSecondaryStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetNsxtNetworkImportedSecondaryStaticIpPoolInput is an input type that accepts GetNsxtNetworkImportedSecondaryStaticIpPoolArgs and GetNsxtNetworkImportedSecondaryStaticIpPoolOutput values.
// You can construct a concrete instance of `GetNsxtNetworkImportedSecondaryStaticIpPoolInput` via:
//
//	GetNsxtNetworkImportedSecondaryStaticIpPoolArgs{...}
type GetNsxtNetworkImportedSecondaryStaticIpPoolInput interface {
	pulumi.Input

	ToGetNsxtNetworkImportedSecondaryStaticIpPoolOutput() GetNsxtNetworkImportedSecondaryStaticIpPoolOutput
	ToGetNsxtNetworkImportedSecondaryStaticIpPoolOutputWithContext(context.Context) GetNsxtNetworkImportedSecondaryStaticIpPoolOutput
}

type GetNsxtNetworkImportedSecondaryStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNsxtNetworkImportedSecondaryStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkImportedSecondaryStaticIpPool)(nil)).Elem()
}

func (i GetNsxtNetworkImportedSecondaryStaticIpPoolArgs) ToGetNsxtNetworkImportedSecondaryStaticIpPoolOutput() GetNsxtNetworkImportedSecondaryStaticIpPoolOutput {
	return i.ToGetNsxtNetworkImportedSecondaryStaticIpPoolOutputWithContext(context.Background())
}

func (i GetNsxtNetworkImportedSecondaryStaticIpPoolArgs) ToGetNsxtNetworkImportedSecondaryStaticIpPoolOutputWithContext(ctx context.Context) GetNsxtNetworkImportedSecondaryStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkImportedSecondaryStaticIpPoolOutput)
}

// GetNsxtNetworkImportedSecondaryStaticIpPoolArrayInput is an input type that accepts GetNsxtNetworkImportedSecondaryStaticIpPoolArray and GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetNsxtNetworkImportedSecondaryStaticIpPoolArrayInput` via:
//
//	GetNsxtNetworkImportedSecondaryStaticIpPoolArray{ GetNsxtNetworkImportedSecondaryStaticIpPoolArgs{...} }
type GetNsxtNetworkImportedSecondaryStaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput() GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput
	ToGetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutputWithContext(context.Context) GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput
}

type GetNsxtNetworkImportedSecondaryStaticIpPoolArray []GetNsxtNetworkImportedSecondaryStaticIpPoolInput

func (GetNsxtNetworkImportedSecondaryStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtNetworkImportedSecondaryStaticIpPool)(nil)).Elem()
}

func (i GetNsxtNetworkImportedSecondaryStaticIpPoolArray) ToGetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput() GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput {
	return i.ToGetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetNsxtNetworkImportedSecondaryStaticIpPoolArray) ToGetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput)
}

type GetNsxtNetworkImportedSecondaryStaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkImportedSecondaryStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkImportedSecondaryStaticIpPool)(nil)).Elem()
}

func (o GetNsxtNetworkImportedSecondaryStaticIpPoolOutput) ToGetNsxtNetworkImportedSecondaryStaticIpPoolOutput() GetNsxtNetworkImportedSecondaryStaticIpPoolOutput {
	return o
}

func (o GetNsxtNetworkImportedSecondaryStaticIpPoolOutput) ToGetNsxtNetworkImportedSecondaryStaticIpPoolOutputWithContext(ctx context.Context) GetNsxtNetworkImportedSecondaryStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o GetNsxtNetworkImportedSecondaryStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtNetworkImportedSecondaryStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o GetNsxtNetworkImportedSecondaryStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtNetworkImportedSecondaryStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtNetworkImportedSecondaryStaticIpPool)(nil)).Elem()
}

func (o GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput) ToGetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput() GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput {
	return o
}

func (o GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput) ToGetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput {
	return o
}

func (o GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetNsxtNetworkImportedSecondaryStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtNetworkImportedSecondaryStaticIpPool {
		return vs[0].([]GetNsxtNetworkImportedSecondaryStaticIpPool)[vs[1].(int)]
	}).(GetNsxtNetworkImportedSecondaryStaticIpPoolOutput)
}

type GetNsxtNetworkImportedStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetNsxtNetworkImportedStaticIpPoolInput is an input type that accepts GetNsxtNetworkImportedStaticIpPoolArgs and GetNsxtNetworkImportedStaticIpPoolOutput values.
// You can construct a concrete instance of `GetNsxtNetworkImportedStaticIpPoolInput` via:
//
//	GetNsxtNetworkImportedStaticIpPoolArgs{...}
type GetNsxtNetworkImportedStaticIpPoolInput interface {
	pulumi.Input

	ToGetNsxtNetworkImportedStaticIpPoolOutput() GetNsxtNetworkImportedStaticIpPoolOutput
	ToGetNsxtNetworkImportedStaticIpPoolOutputWithContext(context.Context) GetNsxtNetworkImportedStaticIpPoolOutput
}

type GetNsxtNetworkImportedStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetNsxtNetworkImportedStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkImportedStaticIpPool)(nil)).Elem()
}

func (i GetNsxtNetworkImportedStaticIpPoolArgs) ToGetNsxtNetworkImportedStaticIpPoolOutput() GetNsxtNetworkImportedStaticIpPoolOutput {
	return i.ToGetNsxtNetworkImportedStaticIpPoolOutputWithContext(context.Background())
}

func (i GetNsxtNetworkImportedStaticIpPoolArgs) ToGetNsxtNetworkImportedStaticIpPoolOutputWithContext(ctx context.Context) GetNsxtNetworkImportedStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkImportedStaticIpPoolOutput)
}

// GetNsxtNetworkImportedStaticIpPoolArrayInput is an input type that accepts GetNsxtNetworkImportedStaticIpPoolArray and GetNsxtNetworkImportedStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetNsxtNetworkImportedStaticIpPoolArrayInput` via:
//
//	GetNsxtNetworkImportedStaticIpPoolArray{ GetNsxtNetworkImportedStaticIpPoolArgs{...} }
type GetNsxtNetworkImportedStaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetNsxtNetworkImportedStaticIpPoolArrayOutput() GetNsxtNetworkImportedStaticIpPoolArrayOutput
	ToGetNsxtNetworkImportedStaticIpPoolArrayOutputWithContext(context.Context) GetNsxtNetworkImportedStaticIpPoolArrayOutput
}

type GetNsxtNetworkImportedStaticIpPoolArray []GetNsxtNetworkImportedStaticIpPoolInput

func (GetNsxtNetworkImportedStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtNetworkImportedStaticIpPool)(nil)).Elem()
}

func (i GetNsxtNetworkImportedStaticIpPoolArray) ToGetNsxtNetworkImportedStaticIpPoolArrayOutput() GetNsxtNetworkImportedStaticIpPoolArrayOutput {
	return i.ToGetNsxtNetworkImportedStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetNsxtNetworkImportedStaticIpPoolArray) ToGetNsxtNetworkImportedStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNsxtNetworkImportedStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtNetworkImportedStaticIpPoolArrayOutput)
}

type GetNsxtNetworkImportedStaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkImportedStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtNetworkImportedStaticIpPool)(nil)).Elem()
}

func (o GetNsxtNetworkImportedStaticIpPoolOutput) ToGetNsxtNetworkImportedStaticIpPoolOutput() GetNsxtNetworkImportedStaticIpPoolOutput {
	return o
}

func (o GetNsxtNetworkImportedStaticIpPoolOutput) ToGetNsxtNetworkImportedStaticIpPoolOutputWithContext(ctx context.Context) GetNsxtNetworkImportedStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o GetNsxtNetworkImportedStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtNetworkImportedStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o GetNsxtNetworkImportedStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtNetworkImportedStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetNsxtNetworkImportedStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtNetworkImportedStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtNetworkImportedStaticIpPool)(nil)).Elem()
}

func (o GetNsxtNetworkImportedStaticIpPoolArrayOutput) ToGetNsxtNetworkImportedStaticIpPoolArrayOutput() GetNsxtNetworkImportedStaticIpPoolArrayOutput {
	return o
}

func (o GetNsxtNetworkImportedStaticIpPoolArrayOutput) ToGetNsxtNetworkImportedStaticIpPoolArrayOutputWithContext(ctx context.Context) GetNsxtNetworkImportedStaticIpPoolArrayOutput {
	return o
}

func (o GetNsxtNetworkImportedStaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetNsxtNetworkImportedStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtNetworkImportedStaticIpPool {
		return vs[0].([]GetNsxtNetworkImportedStaticIpPool)[vs[1].(int)]
	}).(GetNsxtNetworkImportedStaticIpPoolOutput)
}

type GetNsxtSecurityGroupMemberVm struct {
	// Parent vApp name (if exists) for member VM
	VappId string `pulumi:"vappId"`
	// Parent vApp ID (if exists) for member VM
	VappName string `pulumi:"vappName"`
	// Member VM ID
	VmId string `pulumi:"vmId"`
	// Member VM Name
	VmName string `pulumi:"vmName"`
}

// GetNsxtSecurityGroupMemberVmInput is an input type that accepts GetNsxtSecurityGroupMemberVmArgs and GetNsxtSecurityGroupMemberVmOutput values.
// You can construct a concrete instance of `GetNsxtSecurityGroupMemberVmInput` via:
//
//	GetNsxtSecurityGroupMemberVmArgs{...}
type GetNsxtSecurityGroupMemberVmInput interface {
	pulumi.Input

	ToGetNsxtSecurityGroupMemberVmOutput() GetNsxtSecurityGroupMemberVmOutput
	ToGetNsxtSecurityGroupMemberVmOutputWithContext(context.Context) GetNsxtSecurityGroupMemberVmOutput
}

type GetNsxtSecurityGroupMemberVmArgs struct {
	// Parent vApp name (if exists) for member VM
	VappId pulumi.StringInput `pulumi:"vappId"`
	// Parent vApp ID (if exists) for member VM
	VappName pulumi.StringInput `pulumi:"vappName"`
	// Member VM ID
	VmId pulumi.StringInput `pulumi:"vmId"`
	// Member VM Name
	VmName pulumi.StringInput `pulumi:"vmName"`
}

func (GetNsxtSecurityGroupMemberVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtSecurityGroupMemberVm)(nil)).Elem()
}

func (i GetNsxtSecurityGroupMemberVmArgs) ToGetNsxtSecurityGroupMemberVmOutput() GetNsxtSecurityGroupMemberVmOutput {
	return i.ToGetNsxtSecurityGroupMemberVmOutputWithContext(context.Background())
}

func (i GetNsxtSecurityGroupMemberVmArgs) ToGetNsxtSecurityGroupMemberVmOutputWithContext(ctx context.Context) GetNsxtSecurityGroupMemberVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtSecurityGroupMemberVmOutput)
}

// GetNsxtSecurityGroupMemberVmArrayInput is an input type that accepts GetNsxtSecurityGroupMemberVmArray and GetNsxtSecurityGroupMemberVmArrayOutput values.
// You can construct a concrete instance of `GetNsxtSecurityGroupMemberVmArrayInput` via:
//
//	GetNsxtSecurityGroupMemberVmArray{ GetNsxtSecurityGroupMemberVmArgs{...} }
type GetNsxtSecurityGroupMemberVmArrayInput interface {
	pulumi.Input

	ToGetNsxtSecurityGroupMemberVmArrayOutput() GetNsxtSecurityGroupMemberVmArrayOutput
	ToGetNsxtSecurityGroupMemberVmArrayOutputWithContext(context.Context) GetNsxtSecurityGroupMemberVmArrayOutput
}

type GetNsxtSecurityGroupMemberVmArray []GetNsxtSecurityGroupMemberVmInput

func (GetNsxtSecurityGroupMemberVmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtSecurityGroupMemberVm)(nil)).Elem()
}

func (i GetNsxtSecurityGroupMemberVmArray) ToGetNsxtSecurityGroupMemberVmArrayOutput() GetNsxtSecurityGroupMemberVmArrayOutput {
	return i.ToGetNsxtSecurityGroupMemberVmArrayOutputWithContext(context.Background())
}

func (i GetNsxtSecurityGroupMemberVmArray) ToGetNsxtSecurityGroupMemberVmArrayOutputWithContext(ctx context.Context) GetNsxtSecurityGroupMemberVmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxtSecurityGroupMemberVmArrayOutput)
}

type GetNsxtSecurityGroupMemberVmOutput struct{ *pulumi.OutputState }

func (GetNsxtSecurityGroupMemberVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtSecurityGroupMemberVm)(nil)).Elem()
}

func (o GetNsxtSecurityGroupMemberVmOutput) ToGetNsxtSecurityGroupMemberVmOutput() GetNsxtSecurityGroupMemberVmOutput {
	return o
}

func (o GetNsxtSecurityGroupMemberVmOutput) ToGetNsxtSecurityGroupMemberVmOutputWithContext(ctx context.Context) GetNsxtSecurityGroupMemberVmOutput {
	return o
}

// Parent vApp name (if exists) for member VM
func (o GetNsxtSecurityGroupMemberVmOutput) VappId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtSecurityGroupMemberVm) string { return v.VappId }).(pulumi.StringOutput)
}

// Parent vApp ID (if exists) for member VM
func (o GetNsxtSecurityGroupMemberVmOutput) VappName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtSecurityGroupMemberVm) string { return v.VappName }).(pulumi.StringOutput)
}

// Member VM ID
func (o GetNsxtSecurityGroupMemberVmOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtSecurityGroupMemberVm) string { return v.VmId }).(pulumi.StringOutput)
}

// Member VM Name
func (o GetNsxtSecurityGroupMemberVmOutput) VmName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtSecurityGroupMemberVm) string { return v.VmName }).(pulumi.StringOutput)
}

type GetNsxtSecurityGroupMemberVmArrayOutput struct{ *pulumi.OutputState }

func (GetNsxtSecurityGroupMemberVmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxtSecurityGroupMemberVm)(nil)).Elem()
}

func (o GetNsxtSecurityGroupMemberVmArrayOutput) ToGetNsxtSecurityGroupMemberVmArrayOutput() GetNsxtSecurityGroupMemberVmArrayOutput {
	return o
}

func (o GetNsxtSecurityGroupMemberVmArrayOutput) ToGetNsxtSecurityGroupMemberVmArrayOutputWithContext(ctx context.Context) GetNsxtSecurityGroupMemberVmArrayOutput {
	return o
}

func (o GetNsxtSecurityGroupMemberVmArrayOutput) Index(i pulumi.IntInput) GetNsxtSecurityGroupMemberVmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxtSecurityGroupMemberVm {
		return vs[0].([]GetNsxtSecurityGroupMemberVm)[vs[1].(int)]
	}).(GetNsxtSecurityGroupMemberVmOutput)
}

type GetNsxvApplicationFinderObject struct {
	// The name of the object
	Name string `pulumi:"name"`
	// What kind of application we seek. One of `application`, `applicationGroup`
	Type string `pulumi:"type"`
	// The identifier of the object
	Value string `pulumi:"value"`
}

// GetNsxvApplicationFinderObjectInput is an input type that accepts GetNsxvApplicationFinderObjectArgs and GetNsxvApplicationFinderObjectOutput values.
// You can construct a concrete instance of `GetNsxvApplicationFinderObjectInput` via:
//
//	GetNsxvApplicationFinderObjectArgs{...}
type GetNsxvApplicationFinderObjectInput interface {
	pulumi.Input

	ToGetNsxvApplicationFinderObjectOutput() GetNsxvApplicationFinderObjectOutput
	ToGetNsxvApplicationFinderObjectOutputWithContext(context.Context) GetNsxvApplicationFinderObjectOutput
}

type GetNsxvApplicationFinderObjectArgs struct {
	// The name of the object
	Name pulumi.StringInput `pulumi:"name"`
	// What kind of application we seek. One of `application`, `applicationGroup`
	Type pulumi.StringInput `pulumi:"type"`
	// The identifier of the object
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxvApplicationFinderObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvApplicationFinderObject)(nil)).Elem()
}

func (i GetNsxvApplicationFinderObjectArgs) ToGetNsxvApplicationFinderObjectOutput() GetNsxvApplicationFinderObjectOutput {
	return i.ToGetNsxvApplicationFinderObjectOutputWithContext(context.Background())
}

func (i GetNsxvApplicationFinderObjectArgs) ToGetNsxvApplicationFinderObjectOutputWithContext(ctx context.Context) GetNsxvApplicationFinderObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvApplicationFinderObjectOutput)
}

// GetNsxvApplicationFinderObjectArrayInput is an input type that accepts GetNsxvApplicationFinderObjectArray and GetNsxvApplicationFinderObjectArrayOutput values.
// You can construct a concrete instance of `GetNsxvApplicationFinderObjectArrayInput` via:
//
//	GetNsxvApplicationFinderObjectArray{ GetNsxvApplicationFinderObjectArgs{...} }
type GetNsxvApplicationFinderObjectArrayInput interface {
	pulumi.Input

	ToGetNsxvApplicationFinderObjectArrayOutput() GetNsxvApplicationFinderObjectArrayOutput
	ToGetNsxvApplicationFinderObjectArrayOutputWithContext(context.Context) GetNsxvApplicationFinderObjectArrayOutput
}

type GetNsxvApplicationFinderObjectArray []GetNsxvApplicationFinderObjectInput

func (GetNsxvApplicationFinderObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvApplicationFinderObject)(nil)).Elem()
}

func (i GetNsxvApplicationFinderObjectArray) ToGetNsxvApplicationFinderObjectArrayOutput() GetNsxvApplicationFinderObjectArrayOutput {
	return i.ToGetNsxvApplicationFinderObjectArrayOutputWithContext(context.Background())
}

func (i GetNsxvApplicationFinderObjectArray) ToGetNsxvApplicationFinderObjectArrayOutputWithContext(ctx context.Context) GetNsxvApplicationFinderObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvApplicationFinderObjectArrayOutput)
}

type GetNsxvApplicationFinderObjectOutput struct{ *pulumi.OutputState }

func (GetNsxvApplicationFinderObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvApplicationFinderObject)(nil)).Elem()
}

func (o GetNsxvApplicationFinderObjectOutput) ToGetNsxvApplicationFinderObjectOutput() GetNsxvApplicationFinderObjectOutput {
	return o
}

func (o GetNsxvApplicationFinderObjectOutput) ToGetNsxvApplicationFinderObjectOutputWithContext(ctx context.Context) GetNsxvApplicationFinderObjectOutput {
	return o
}

// The name of the object
func (o GetNsxvApplicationFinderObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationFinderObject) string { return v.Name }).(pulumi.StringOutput)
}

// What kind of application we seek. One of `application`, `applicationGroup`
func (o GetNsxvApplicationFinderObjectOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationFinderObject) string { return v.Type }).(pulumi.StringOutput)
}

// The identifier of the object
func (o GetNsxvApplicationFinderObjectOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationFinderObject) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxvApplicationFinderObjectArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvApplicationFinderObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvApplicationFinderObject)(nil)).Elem()
}

func (o GetNsxvApplicationFinderObjectArrayOutput) ToGetNsxvApplicationFinderObjectArrayOutput() GetNsxvApplicationFinderObjectArrayOutput {
	return o
}

func (o GetNsxvApplicationFinderObjectArrayOutput) ToGetNsxvApplicationFinderObjectArrayOutputWithContext(ctx context.Context) GetNsxvApplicationFinderObjectArrayOutput {
	return o
}

func (o GetNsxvApplicationFinderObjectArrayOutput) Index(i pulumi.IntInput) GetNsxvApplicationFinderObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvApplicationFinderObject {
		return vs[0].([]GetNsxvApplicationFinderObject)[vs[1].(int)]
	}).(GetNsxvApplicationFinderObjectOutput)
}

type GetNsxvApplicationGroupApplication struct {
	// The name of the application group
	Name string `pulumi:"name"`
	// The identifier of the application
	Value string `pulumi:"value"`
}

// GetNsxvApplicationGroupApplicationInput is an input type that accepts GetNsxvApplicationGroupApplicationArgs and GetNsxvApplicationGroupApplicationOutput values.
// You can construct a concrete instance of `GetNsxvApplicationGroupApplicationInput` via:
//
//	GetNsxvApplicationGroupApplicationArgs{...}
type GetNsxvApplicationGroupApplicationInput interface {
	pulumi.Input

	ToGetNsxvApplicationGroupApplicationOutput() GetNsxvApplicationGroupApplicationOutput
	ToGetNsxvApplicationGroupApplicationOutputWithContext(context.Context) GetNsxvApplicationGroupApplicationOutput
}

type GetNsxvApplicationGroupApplicationArgs struct {
	// The name of the application group
	Name pulumi.StringInput `pulumi:"name"`
	// The identifier of the application
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxvApplicationGroupApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvApplicationGroupApplication)(nil)).Elem()
}

func (i GetNsxvApplicationGroupApplicationArgs) ToGetNsxvApplicationGroupApplicationOutput() GetNsxvApplicationGroupApplicationOutput {
	return i.ToGetNsxvApplicationGroupApplicationOutputWithContext(context.Background())
}

func (i GetNsxvApplicationGroupApplicationArgs) ToGetNsxvApplicationGroupApplicationOutputWithContext(ctx context.Context) GetNsxvApplicationGroupApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvApplicationGroupApplicationOutput)
}

// GetNsxvApplicationGroupApplicationArrayInput is an input type that accepts GetNsxvApplicationGroupApplicationArray and GetNsxvApplicationGroupApplicationArrayOutput values.
// You can construct a concrete instance of `GetNsxvApplicationGroupApplicationArrayInput` via:
//
//	GetNsxvApplicationGroupApplicationArray{ GetNsxvApplicationGroupApplicationArgs{...} }
type GetNsxvApplicationGroupApplicationArrayInput interface {
	pulumi.Input

	ToGetNsxvApplicationGroupApplicationArrayOutput() GetNsxvApplicationGroupApplicationArrayOutput
	ToGetNsxvApplicationGroupApplicationArrayOutputWithContext(context.Context) GetNsxvApplicationGroupApplicationArrayOutput
}

type GetNsxvApplicationGroupApplicationArray []GetNsxvApplicationGroupApplicationInput

func (GetNsxvApplicationGroupApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvApplicationGroupApplication)(nil)).Elem()
}

func (i GetNsxvApplicationGroupApplicationArray) ToGetNsxvApplicationGroupApplicationArrayOutput() GetNsxvApplicationGroupApplicationArrayOutput {
	return i.ToGetNsxvApplicationGroupApplicationArrayOutputWithContext(context.Background())
}

func (i GetNsxvApplicationGroupApplicationArray) ToGetNsxvApplicationGroupApplicationArrayOutputWithContext(ctx context.Context) GetNsxvApplicationGroupApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvApplicationGroupApplicationArrayOutput)
}

type GetNsxvApplicationGroupApplicationOutput struct{ *pulumi.OutputState }

func (GetNsxvApplicationGroupApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvApplicationGroupApplication)(nil)).Elem()
}

func (o GetNsxvApplicationGroupApplicationOutput) ToGetNsxvApplicationGroupApplicationOutput() GetNsxvApplicationGroupApplicationOutput {
	return o
}

func (o GetNsxvApplicationGroupApplicationOutput) ToGetNsxvApplicationGroupApplicationOutputWithContext(ctx context.Context) GetNsxvApplicationGroupApplicationOutput {
	return o
}

// The name of the application group
func (o GetNsxvApplicationGroupApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationGroupApplication) string { return v.Name }).(pulumi.StringOutput)
}

// The identifier of the application
func (o GetNsxvApplicationGroupApplicationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationGroupApplication) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxvApplicationGroupApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvApplicationGroupApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvApplicationGroupApplication)(nil)).Elem()
}

func (o GetNsxvApplicationGroupApplicationArrayOutput) ToGetNsxvApplicationGroupApplicationArrayOutput() GetNsxvApplicationGroupApplicationArrayOutput {
	return o
}

func (o GetNsxvApplicationGroupApplicationArrayOutput) ToGetNsxvApplicationGroupApplicationArrayOutputWithContext(ctx context.Context) GetNsxvApplicationGroupApplicationArrayOutput {
	return o
}

func (o GetNsxvApplicationGroupApplicationArrayOutput) Index(i pulumi.IntInput) GetNsxvApplicationGroupApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvApplicationGroupApplication {
		return vs[0].([]GetNsxvApplicationGroupApplication)[vs[1].(int)]
	}).(GetNsxvApplicationGroupApplicationOutput)
}

type GetNsxvDhcpRelayRelayAgent struct {
	// Optional gateway IP address of org network which is to be used for relaying DHCP message to specified servers
	GatewayIpAddress string `pulumi:"gatewayIpAddress"`
	// Org network which is to be used for relaying DHCP message to specified servers
	NetworkName string `pulumi:"networkName"`
}

// GetNsxvDhcpRelayRelayAgentInput is an input type that accepts GetNsxvDhcpRelayRelayAgentArgs and GetNsxvDhcpRelayRelayAgentOutput values.
// You can construct a concrete instance of `GetNsxvDhcpRelayRelayAgentInput` via:
//
//	GetNsxvDhcpRelayRelayAgentArgs{...}
type GetNsxvDhcpRelayRelayAgentInput interface {
	pulumi.Input

	ToGetNsxvDhcpRelayRelayAgentOutput() GetNsxvDhcpRelayRelayAgentOutput
	ToGetNsxvDhcpRelayRelayAgentOutputWithContext(context.Context) GetNsxvDhcpRelayRelayAgentOutput
}

type GetNsxvDhcpRelayRelayAgentArgs struct {
	// Optional gateway IP address of org network which is to be used for relaying DHCP message to specified servers
	GatewayIpAddress pulumi.StringInput `pulumi:"gatewayIpAddress"`
	// Org network which is to be used for relaying DHCP message to specified servers
	NetworkName pulumi.StringInput `pulumi:"networkName"`
}

func (GetNsxvDhcpRelayRelayAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDhcpRelayRelayAgent)(nil)).Elem()
}

func (i GetNsxvDhcpRelayRelayAgentArgs) ToGetNsxvDhcpRelayRelayAgentOutput() GetNsxvDhcpRelayRelayAgentOutput {
	return i.ToGetNsxvDhcpRelayRelayAgentOutputWithContext(context.Background())
}

func (i GetNsxvDhcpRelayRelayAgentArgs) ToGetNsxvDhcpRelayRelayAgentOutputWithContext(ctx context.Context) GetNsxvDhcpRelayRelayAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDhcpRelayRelayAgentOutput)
}

// GetNsxvDhcpRelayRelayAgentArrayInput is an input type that accepts GetNsxvDhcpRelayRelayAgentArray and GetNsxvDhcpRelayRelayAgentArrayOutput values.
// You can construct a concrete instance of `GetNsxvDhcpRelayRelayAgentArrayInput` via:
//
//	GetNsxvDhcpRelayRelayAgentArray{ GetNsxvDhcpRelayRelayAgentArgs{...} }
type GetNsxvDhcpRelayRelayAgentArrayInput interface {
	pulumi.Input

	ToGetNsxvDhcpRelayRelayAgentArrayOutput() GetNsxvDhcpRelayRelayAgentArrayOutput
	ToGetNsxvDhcpRelayRelayAgentArrayOutputWithContext(context.Context) GetNsxvDhcpRelayRelayAgentArrayOutput
}

type GetNsxvDhcpRelayRelayAgentArray []GetNsxvDhcpRelayRelayAgentInput

func (GetNsxvDhcpRelayRelayAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDhcpRelayRelayAgent)(nil)).Elem()
}

func (i GetNsxvDhcpRelayRelayAgentArray) ToGetNsxvDhcpRelayRelayAgentArrayOutput() GetNsxvDhcpRelayRelayAgentArrayOutput {
	return i.ToGetNsxvDhcpRelayRelayAgentArrayOutputWithContext(context.Background())
}

func (i GetNsxvDhcpRelayRelayAgentArray) ToGetNsxvDhcpRelayRelayAgentArrayOutputWithContext(ctx context.Context) GetNsxvDhcpRelayRelayAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDhcpRelayRelayAgentArrayOutput)
}

type GetNsxvDhcpRelayRelayAgentOutput struct{ *pulumi.OutputState }

func (GetNsxvDhcpRelayRelayAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDhcpRelayRelayAgent)(nil)).Elem()
}

func (o GetNsxvDhcpRelayRelayAgentOutput) ToGetNsxvDhcpRelayRelayAgentOutput() GetNsxvDhcpRelayRelayAgentOutput {
	return o
}

func (o GetNsxvDhcpRelayRelayAgentOutput) ToGetNsxvDhcpRelayRelayAgentOutputWithContext(ctx context.Context) GetNsxvDhcpRelayRelayAgentOutput {
	return o
}

// Optional gateway IP address of org network which is to be used for relaying DHCP message to specified servers
func (o GetNsxvDhcpRelayRelayAgentOutput) GatewayIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDhcpRelayRelayAgent) string { return v.GatewayIpAddress }).(pulumi.StringOutput)
}

// Org network which is to be used for relaying DHCP message to specified servers
func (o GetNsxvDhcpRelayRelayAgentOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDhcpRelayRelayAgent) string { return v.NetworkName }).(pulumi.StringOutput)
}

type GetNsxvDhcpRelayRelayAgentArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvDhcpRelayRelayAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDhcpRelayRelayAgent)(nil)).Elem()
}

func (o GetNsxvDhcpRelayRelayAgentArrayOutput) ToGetNsxvDhcpRelayRelayAgentArrayOutput() GetNsxvDhcpRelayRelayAgentArrayOutput {
	return o
}

func (o GetNsxvDhcpRelayRelayAgentArrayOutput) ToGetNsxvDhcpRelayRelayAgentArrayOutputWithContext(ctx context.Context) GetNsxvDhcpRelayRelayAgentArrayOutput {
	return o
}

func (o GetNsxvDhcpRelayRelayAgentArrayOutput) Index(i pulumi.IntInput) GetNsxvDhcpRelayRelayAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvDhcpRelayRelayAgent {
		return vs[0].([]GetNsxvDhcpRelayRelayAgent)[vs[1].(int)]
	}).(GetNsxvDhcpRelayRelayAgentOutput)
}

type GetNsxvDistributedFirewallRule struct {
	// Action of the rule (allow, deny)
	Action string `pulumi:"action"`
	// Application definitions for this rule. An empty value means 'any'
	Applications []GetNsxvDistributedFirewallRuleApplication `pulumi:"applications"`
	// List of elements to which this rule applies
	AppliedTos []GetNsxvDistributedFirewallRuleAppliedTo `pulumi:"appliedTos"`
	// List of destination traffic for this rule. An empty value means 'any'
	Destinations []GetNsxvDistributedFirewallRuleDestination `pulumi:"destinations"`
	// Direction of the rule (in, out, inout)
	Direction string `pulumi:"direction"`
	// Whether the rule is enabled
	Enabled bool `pulumi:"enabled"`
	// If true, the content of the destination elements is reversed
	ExcludeDestination bool `pulumi:"excludeDestination"`
	// If true, the content of the source elements is reversed
	ExcludeSource bool `pulumi:"excludeSource"`
	// Firewall Rule ID
	Id int `pulumi:"id"`
	// Whether the rule traffic is logged
	Logged bool `pulumi:"logged"`
	// Firewall Rule name
	Name string `pulumi:"name"`
	// Packet type of the rule (any, ipv4, ipv6)
	PacketType string `pulumi:"packetType"`
	// List of source traffic for this rule. An empty value means 'any'
	Sources []GetNsxvDistributedFirewallRuleSource `pulumi:"sources"`
}

// GetNsxvDistributedFirewallRuleInput is an input type that accepts GetNsxvDistributedFirewallRuleArgs and GetNsxvDistributedFirewallRuleOutput values.
// You can construct a concrete instance of `GetNsxvDistributedFirewallRuleInput` via:
//
//	GetNsxvDistributedFirewallRuleArgs{...}
type GetNsxvDistributedFirewallRuleInput interface {
	pulumi.Input

	ToGetNsxvDistributedFirewallRuleOutput() GetNsxvDistributedFirewallRuleOutput
	ToGetNsxvDistributedFirewallRuleOutputWithContext(context.Context) GetNsxvDistributedFirewallRuleOutput
}

type GetNsxvDistributedFirewallRuleArgs struct {
	// Action of the rule (allow, deny)
	Action pulumi.StringInput `pulumi:"action"`
	// Application definitions for this rule. An empty value means 'any'
	Applications GetNsxvDistributedFirewallRuleApplicationArrayInput `pulumi:"applications"`
	// List of elements to which this rule applies
	AppliedTos GetNsxvDistributedFirewallRuleAppliedToArrayInput `pulumi:"appliedTos"`
	// List of destination traffic for this rule. An empty value means 'any'
	Destinations GetNsxvDistributedFirewallRuleDestinationArrayInput `pulumi:"destinations"`
	// Direction of the rule (in, out, inout)
	Direction pulumi.StringInput `pulumi:"direction"`
	// Whether the rule is enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// If true, the content of the destination elements is reversed
	ExcludeDestination pulumi.BoolInput `pulumi:"excludeDestination"`
	// If true, the content of the source elements is reversed
	ExcludeSource pulumi.BoolInput `pulumi:"excludeSource"`
	// Firewall Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Whether the rule traffic is logged
	Logged pulumi.BoolInput `pulumi:"logged"`
	// Firewall Rule name
	Name pulumi.StringInput `pulumi:"name"`
	// Packet type of the rule (any, ipv4, ipv6)
	PacketType pulumi.StringInput `pulumi:"packetType"`
	// List of source traffic for this rule. An empty value means 'any'
	Sources GetNsxvDistributedFirewallRuleSourceArrayInput `pulumi:"sources"`
}

func (GetNsxvDistributedFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDistributedFirewallRule)(nil)).Elem()
}

func (i GetNsxvDistributedFirewallRuleArgs) ToGetNsxvDistributedFirewallRuleOutput() GetNsxvDistributedFirewallRuleOutput {
	return i.ToGetNsxvDistributedFirewallRuleOutputWithContext(context.Background())
}

func (i GetNsxvDistributedFirewallRuleArgs) ToGetNsxvDistributedFirewallRuleOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDistributedFirewallRuleOutput)
}

// GetNsxvDistributedFirewallRuleArrayInput is an input type that accepts GetNsxvDistributedFirewallRuleArray and GetNsxvDistributedFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetNsxvDistributedFirewallRuleArrayInput` via:
//
//	GetNsxvDistributedFirewallRuleArray{ GetNsxvDistributedFirewallRuleArgs{...} }
type GetNsxvDistributedFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetNsxvDistributedFirewallRuleArrayOutput() GetNsxvDistributedFirewallRuleArrayOutput
	ToGetNsxvDistributedFirewallRuleArrayOutputWithContext(context.Context) GetNsxvDistributedFirewallRuleArrayOutput
}

type GetNsxvDistributedFirewallRuleArray []GetNsxvDistributedFirewallRuleInput

func (GetNsxvDistributedFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDistributedFirewallRule)(nil)).Elem()
}

func (i GetNsxvDistributedFirewallRuleArray) ToGetNsxvDistributedFirewallRuleArrayOutput() GetNsxvDistributedFirewallRuleArrayOutput {
	return i.ToGetNsxvDistributedFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetNsxvDistributedFirewallRuleArray) ToGetNsxvDistributedFirewallRuleArrayOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDistributedFirewallRuleArrayOutput)
}

type GetNsxvDistributedFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetNsxvDistributedFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDistributedFirewallRule)(nil)).Elem()
}

func (o GetNsxvDistributedFirewallRuleOutput) ToGetNsxvDistributedFirewallRuleOutput() GetNsxvDistributedFirewallRuleOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleOutput) ToGetNsxvDistributedFirewallRuleOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleOutput {
	return o
}

// Action of the rule (allow, deny)
func (o GetNsxvDistributedFirewallRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) string { return v.Action }).(pulumi.StringOutput)
}

// Application definitions for this rule. An empty value means 'any'
func (o GetNsxvDistributedFirewallRuleOutput) Applications() GetNsxvDistributedFirewallRuleApplicationArrayOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) []GetNsxvDistributedFirewallRuleApplication {
		return v.Applications
	}).(GetNsxvDistributedFirewallRuleApplicationArrayOutput)
}

// List of elements to which this rule applies
func (o GetNsxvDistributedFirewallRuleOutput) AppliedTos() GetNsxvDistributedFirewallRuleAppliedToArrayOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) []GetNsxvDistributedFirewallRuleAppliedTo { return v.AppliedTos }).(GetNsxvDistributedFirewallRuleAppliedToArrayOutput)
}

// List of destination traffic for this rule. An empty value means 'any'
func (o GetNsxvDistributedFirewallRuleOutput) Destinations() GetNsxvDistributedFirewallRuleDestinationArrayOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) []GetNsxvDistributedFirewallRuleDestination {
		return v.Destinations
	}).(GetNsxvDistributedFirewallRuleDestinationArrayOutput)
}

// Direction of the rule (in, out, inout)
func (o GetNsxvDistributedFirewallRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) string { return v.Direction }).(pulumi.StringOutput)
}

// Whether the rule is enabled
func (o GetNsxvDistributedFirewallRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// If true, the content of the destination elements is reversed
func (o GetNsxvDistributedFirewallRuleOutput) ExcludeDestination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) bool { return v.ExcludeDestination }).(pulumi.BoolOutput)
}

// If true, the content of the source elements is reversed
func (o GetNsxvDistributedFirewallRuleOutput) ExcludeSource() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) bool { return v.ExcludeSource }).(pulumi.BoolOutput)
}

// Firewall Rule ID
func (o GetNsxvDistributedFirewallRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) int { return v.Id }).(pulumi.IntOutput)
}

// Whether the rule traffic is logged
func (o GetNsxvDistributedFirewallRuleOutput) Logged() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) bool { return v.Logged }).(pulumi.BoolOutput)
}

// Firewall Rule name
func (o GetNsxvDistributedFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

// Packet type of the rule (any, ipv4, ipv6)
func (o GetNsxvDistributedFirewallRuleOutput) PacketType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) string { return v.PacketType }).(pulumi.StringOutput)
}

// List of source traffic for this rule. An empty value means 'any'
func (o GetNsxvDistributedFirewallRuleOutput) Sources() GetNsxvDistributedFirewallRuleSourceArrayOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRule) []GetNsxvDistributedFirewallRuleSource { return v.Sources }).(GetNsxvDistributedFirewallRuleSourceArrayOutput)
}

type GetNsxvDistributedFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvDistributedFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDistributedFirewallRule)(nil)).Elem()
}

func (o GetNsxvDistributedFirewallRuleArrayOutput) ToGetNsxvDistributedFirewallRuleArrayOutput() GetNsxvDistributedFirewallRuleArrayOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleArrayOutput) ToGetNsxvDistributedFirewallRuleArrayOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleArrayOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetNsxvDistributedFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvDistributedFirewallRule {
		return vs[0].([]GetNsxvDistributedFirewallRule)[vs[1].(int)]
	}).(GetNsxvDistributedFirewallRuleOutput)
}

type GetNsxvDistributedFirewallRuleApplication struct {
	// Destination port for this application. Leaving it empty means 'any' port
	DestinationPort string `pulumi:"destinationPort"`
	// Name of application (Application, ApplicationGroup)
	Name string `pulumi:"name"`
	// Protocol of the application (one of TCP, UDP, ICMP) (When not using name/value)
	Protocol string `pulumi:"protocol"`
	// Source port for this application. Leaving it empty means 'any' port
	SourcePort string `pulumi:"sourcePort"`
	// Type of application
	Type string `pulumi:"type"`
	// Value of the application
	Value string `pulumi:"value"`
}

// GetNsxvDistributedFirewallRuleApplicationInput is an input type that accepts GetNsxvDistributedFirewallRuleApplicationArgs and GetNsxvDistributedFirewallRuleApplicationOutput values.
// You can construct a concrete instance of `GetNsxvDistributedFirewallRuleApplicationInput` via:
//
//	GetNsxvDistributedFirewallRuleApplicationArgs{...}
type GetNsxvDistributedFirewallRuleApplicationInput interface {
	pulumi.Input

	ToGetNsxvDistributedFirewallRuleApplicationOutput() GetNsxvDistributedFirewallRuleApplicationOutput
	ToGetNsxvDistributedFirewallRuleApplicationOutputWithContext(context.Context) GetNsxvDistributedFirewallRuleApplicationOutput
}

type GetNsxvDistributedFirewallRuleApplicationArgs struct {
	// Destination port for this application. Leaving it empty means 'any' port
	DestinationPort pulumi.StringInput `pulumi:"destinationPort"`
	// Name of application (Application, ApplicationGroup)
	Name pulumi.StringInput `pulumi:"name"`
	// Protocol of the application (one of TCP, UDP, ICMP) (When not using name/value)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Source port for this application. Leaving it empty means 'any' port
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
	// Type of application
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the application
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxvDistributedFirewallRuleApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDistributedFirewallRuleApplication)(nil)).Elem()
}

func (i GetNsxvDistributedFirewallRuleApplicationArgs) ToGetNsxvDistributedFirewallRuleApplicationOutput() GetNsxvDistributedFirewallRuleApplicationOutput {
	return i.ToGetNsxvDistributedFirewallRuleApplicationOutputWithContext(context.Background())
}

func (i GetNsxvDistributedFirewallRuleApplicationArgs) ToGetNsxvDistributedFirewallRuleApplicationOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDistributedFirewallRuleApplicationOutput)
}

// GetNsxvDistributedFirewallRuleApplicationArrayInput is an input type that accepts GetNsxvDistributedFirewallRuleApplicationArray and GetNsxvDistributedFirewallRuleApplicationArrayOutput values.
// You can construct a concrete instance of `GetNsxvDistributedFirewallRuleApplicationArrayInput` via:
//
//	GetNsxvDistributedFirewallRuleApplicationArray{ GetNsxvDistributedFirewallRuleApplicationArgs{...} }
type GetNsxvDistributedFirewallRuleApplicationArrayInput interface {
	pulumi.Input

	ToGetNsxvDistributedFirewallRuleApplicationArrayOutput() GetNsxvDistributedFirewallRuleApplicationArrayOutput
	ToGetNsxvDistributedFirewallRuleApplicationArrayOutputWithContext(context.Context) GetNsxvDistributedFirewallRuleApplicationArrayOutput
}

type GetNsxvDistributedFirewallRuleApplicationArray []GetNsxvDistributedFirewallRuleApplicationInput

func (GetNsxvDistributedFirewallRuleApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDistributedFirewallRuleApplication)(nil)).Elem()
}

func (i GetNsxvDistributedFirewallRuleApplicationArray) ToGetNsxvDistributedFirewallRuleApplicationArrayOutput() GetNsxvDistributedFirewallRuleApplicationArrayOutput {
	return i.ToGetNsxvDistributedFirewallRuleApplicationArrayOutputWithContext(context.Background())
}

func (i GetNsxvDistributedFirewallRuleApplicationArray) ToGetNsxvDistributedFirewallRuleApplicationArrayOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDistributedFirewallRuleApplicationArrayOutput)
}

type GetNsxvDistributedFirewallRuleApplicationOutput struct{ *pulumi.OutputState }

func (GetNsxvDistributedFirewallRuleApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDistributedFirewallRuleApplication)(nil)).Elem()
}

func (o GetNsxvDistributedFirewallRuleApplicationOutput) ToGetNsxvDistributedFirewallRuleApplicationOutput() GetNsxvDistributedFirewallRuleApplicationOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleApplicationOutput) ToGetNsxvDistributedFirewallRuleApplicationOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleApplicationOutput {
	return o
}

// Destination port for this application. Leaving it empty means 'any' port
func (o GetNsxvDistributedFirewallRuleApplicationOutput) DestinationPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleApplication) string { return v.DestinationPort }).(pulumi.StringOutput)
}

// Name of application (Application, ApplicationGroup)
func (o GetNsxvDistributedFirewallRuleApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleApplication) string { return v.Name }).(pulumi.StringOutput)
}

// Protocol of the application (one of TCP, UDP, ICMP) (When not using name/value)
func (o GetNsxvDistributedFirewallRuleApplicationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleApplication) string { return v.Protocol }).(pulumi.StringOutput)
}

// Source port for this application. Leaving it empty means 'any' port
func (o GetNsxvDistributedFirewallRuleApplicationOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleApplication) string { return v.SourcePort }).(pulumi.StringOutput)
}

// Type of application
func (o GetNsxvDistributedFirewallRuleApplicationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleApplication) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the application
func (o GetNsxvDistributedFirewallRuleApplicationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleApplication) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxvDistributedFirewallRuleApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvDistributedFirewallRuleApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDistributedFirewallRuleApplication)(nil)).Elem()
}

func (o GetNsxvDistributedFirewallRuleApplicationArrayOutput) ToGetNsxvDistributedFirewallRuleApplicationArrayOutput() GetNsxvDistributedFirewallRuleApplicationArrayOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleApplicationArrayOutput) ToGetNsxvDistributedFirewallRuleApplicationArrayOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleApplicationArrayOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleApplicationArrayOutput) Index(i pulumi.IntInput) GetNsxvDistributedFirewallRuleApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvDistributedFirewallRuleApplication {
		return vs[0].([]GetNsxvDistributedFirewallRuleApplication)[vs[1].(int)]
	}).(GetNsxvDistributedFirewallRuleApplicationOutput)
}

type GetNsxvDistributedFirewallRuleAppliedTo struct {
	// Name of the applied-to entity
	Name string `pulumi:"name"`
	// Type of the applied-to entity (one of Network, Edge, VirtualMachine, IPSet, VDC, Ipv4Address)
	Type string `pulumi:"type"`
	// Value of the applied-to entity
	Value string `pulumi:"value"`
}

// GetNsxvDistributedFirewallRuleAppliedToInput is an input type that accepts GetNsxvDistributedFirewallRuleAppliedToArgs and GetNsxvDistributedFirewallRuleAppliedToOutput values.
// You can construct a concrete instance of `GetNsxvDistributedFirewallRuleAppliedToInput` via:
//
//	GetNsxvDistributedFirewallRuleAppliedToArgs{...}
type GetNsxvDistributedFirewallRuleAppliedToInput interface {
	pulumi.Input

	ToGetNsxvDistributedFirewallRuleAppliedToOutput() GetNsxvDistributedFirewallRuleAppliedToOutput
	ToGetNsxvDistributedFirewallRuleAppliedToOutputWithContext(context.Context) GetNsxvDistributedFirewallRuleAppliedToOutput
}

type GetNsxvDistributedFirewallRuleAppliedToArgs struct {
	// Name of the applied-to entity
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the applied-to entity (one of Network, Edge, VirtualMachine, IPSet, VDC, Ipv4Address)
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the applied-to entity
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxvDistributedFirewallRuleAppliedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDistributedFirewallRuleAppliedTo)(nil)).Elem()
}

func (i GetNsxvDistributedFirewallRuleAppliedToArgs) ToGetNsxvDistributedFirewallRuleAppliedToOutput() GetNsxvDistributedFirewallRuleAppliedToOutput {
	return i.ToGetNsxvDistributedFirewallRuleAppliedToOutputWithContext(context.Background())
}

func (i GetNsxvDistributedFirewallRuleAppliedToArgs) ToGetNsxvDistributedFirewallRuleAppliedToOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleAppliedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDistributedFirewallRuleAppliedToOutput)
}

// GetNsxvDistributedFirewallRuleAppliedToArrayInput is an input type that accepts GetNsxvDistributedFirewallRuleAppliedToArray and GetNsxvDistributedFirewallRuleAppliedToArrayOutput values.
// You can construct a concrete instance of `GetNsxvDistributedFirewallRuleAppliedToArrayInput` via:
//
//	GetNsxvDistributedFirewallRuleAppliedToArray{ GetNsxvDistributedFirewallRuleAppliedToArgs{...} }
type GetNsxvDistributedFirewallRuleAppliedToArrayInput interface {
	pulumi.Input

	ToGetNsxvDistributedFirewallRuleAppliedToArrayOutput() GetNsxvDistributedFirewallRuleAppliedToArrayOutput
	ToGetNsxvDistributedFirewallRuleAppliedToArrayOutputWithContext(context.Context) GetNsxvDistributedFirewallRuleAppliedToArrayOutput
}

type GetNsxvDistributedFirewallRuleAppliedToArray []GetNsxvDistributedFirewallRuleAppliedToInput

func (GetNsxvDistributedFirewallRuleAppliedToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDistributedFirewallRuleAppliedTo)(nil)).Elem()
}

func (i GetNsxvDistributedFirewallRuleAppliedToArray) ToGetNsxvDistributedFirewallRuleAppliedToArrayOutput() GetNsxvDistributedFirewallRuleAppliedToArrayOutput {
	return i.ToGetNsxvDistributedFirewallRuleAppliedToArrayOutputWithContext(context.Background())
}

func (i GetNsxvDistributedFirewallRuleAppliedToArray) ToGetNsxvDistributedFirewallRuleAppliedToArrayOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleAppliedToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDistributedFirewallRuleAppliedToArrayOutput)
}

type GetNsxvDistributedFirewallRuleAppliedToOutput struct{ *pulumi.OutputState }

func (GetNsxvDistributedFirewallRuleAppliedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDistributedFirewallRuleAppliedTo)(nil)).Elem()
}

func (o GetNsxvDistributedFirewallRuleAppliedToOutput) ToGetNsxvDistributedFirewallRuleAppliedToOutput() GetNsxvDistributedFirewallRuleAppliedToOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleAppliedToOutput) ToGetNsxvDistributedFirewallRuleAppliedToOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleAppliedToOutput {
	return o
}

// Name of the applied-to entity
func (o GetNsxvDistributedFirewallRuleAppliedToOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleAppliedTo) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the applied-to entity (one of Network, Edge, VirtualMachine, IPSet, VDC, Ipv4Address)
func (o GetNsxvDistributedFirewallRuleAppliedToOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleAppliedTo) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the applied-to entity
func (o GetNsxvDistributedFirewallRuleAppliedToOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleAppliedTo) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxvDistributedFirewallRuleAppliedToArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvDistributedFirewallRuleAppliedToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDistributedFirewallRuleAppliedTo)(nil)).Elem()
}

func (o GetNsxvDistributedFirewallRuleAppliedToArrayOutput) ToGetNsxvDistributedFirewallRuleAppliedToArrayOutput() GetNsxvDistributedFirewallRuleAppliedToArrayOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleAppliedToArrayOutput) ToGetNsxvDistributedFirewallRuleAppliedToArrayOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleAppliedToArrayOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleAppliedToArrayOutput) Index(i pulumi.IntInput) GetNsxvDistributedFirewallRuleAppliedToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvDistributedFirewallRuleAppliedTo {
		return vs[0].([]GetNsxvDistributedFirewallRuleAppliedTo)[vs[1].(int)]
	}).(GetNsxvDistributedFirewallRuleAppliedToOutput)
}

type GetNsxvDistributedFirewallRuleDestination struct {
	// Name of the destination entity
	Name string `pulumi:"name"`
	// Type of the destination entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
	Type string `pulumi:"type"`
	// Value of the destination entity
	Value string `pulumi:"value"`
}

// GetNsxvDistributedFirewallRuleDestinationInput is an input type that accepts GetNsxvDistributedFirewallRuleDestinationArgs and GetNsxvDistributedFirewallRuleDestinationOutput values.
// You can construct a concrete instance of `GetNsxvDistributedFirewallRuleDestinationInput` via:
//
//	GetNsxvDistributedFirewallRuleDestinationArgs{...}
type GetNsxvDistributedFirewallRuleDestinationInput interface {
	pulumi.Input

	ToGetNsxvDistributedFirewallRuleDestinationOutput() GetNsxvDistributedFirewallRuleDestinationOutput
	ToGetNsxvDistributedFirewallRuleDestinationOutputWithContext(context.Context) GetNsxvDistributedFirewallRuleDestinationOutput
}

type GetNsxvDistributedFirewallRuleDestinationArgs struct {
	// Name of the destination entity
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the destination entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the destination entity
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxvDistributedFirewallRuleDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDistributedFirewallRuleDestination)(nil)).Elem()
}

func (i GetNsxvDistributedFirewallRuleDestinationArgs) ToGetNsxvDistributedFirewallRuleDestinationOutput() GetNsxvDistributedFirewallRuleDestinationOutput {
	return i.ToGetNsxvDistributedFirewallRuleDestinationOutputWithContext(context.Background())
}

func (i GetNsxvDistributedFirewallRuleDestinationArgs) ToGetNsxvDistributedFirewallRuleDestinationOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDistributedFirewallRuleDestinationOutput)
}

// GetNsxvDistributedFirewallRuleDestinationArrayInput is an input type that accepts GetNsxvDistributedFirewallRuleDestinationArray and GetNsxvDistributedFirewallRuleDestinationArrayOutput values.
// You can construct a concrete instance of `GetNsxvDistributedFirewallRuleDestinationArrayInput` via:
//
//	GetNsxvDistributedFirewallRuleDestinationArray{ GetNsxvDistributedFirewallRuleDestinationArgs{...} }
type GetNsxvDistributedFirewallRuleDestinationArrayInput interface {
	pulumi.Input

	ToGetNsxvDistributedFirewallRuleDestinationArrayOutput() GetNsxvDistributedFirewallRuleDestinationArrayOutput
	ToGetNsxvDistributedFirewallRuleDestinationArrayOutputWithContext(context.Context) GetNsxvDistributedFirewallRuleDestinationArrayOutput
}

type GetNsxvDistributedFirewallRuleDestinationArray []GetNsxvDistributedFirewallRuleDestinationInput

func (GetNsxvDistributedFirewallRuleDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDistributedFirewallRuleDestination)(nil)).Elem()
}

func (i GetNsxvDistributedFirewallRuleDestinationArray) ToGetNsxvDistributedFirewallRuleDestinationArrayOutput() GetNsxvDistributedFirewallRuleDestinationArrayOutput {
	return i.ToGetNsxvDistributedFirewallRuleDestinationArrayOutputWithContext(context.Background())
}

func (i GetNsxvDistributedFirewallRuleDestinationArray) ToGetNsxvDistributedFirewallRuleDestinationArrayOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDistributedFirewallRuleDestinationArrayOutput)
}

type GetNsxvDistributedFirewallRuleDestinationOutput struct{ *pulumi.OutputState }

func (GetNsxvDistributedFirewallRuleDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDistributedFirewallRuleDestination)(nil)).Elem()
}

func (o GetNsxvDistributedFirewallRuleDestinationOutput) ToGetNsxvDistributedFirewallRuleDestinationOutput() GetNsxvDistributedFirewallRuleDestinationOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleDestinationOutput) ToGetNsxvDistributedFirewallRuleDestinationOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleDestinationOutput {
	return o
}

// Name of the destination entity
func (o GetNsxvDistributedFirewallRuleDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleDestination) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the destination entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
func (o GetNsxvDistributedFirewallRuleDestinationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleDestination) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the destination entity
func (o GetNsxvDistributedFirewallRuleDestinationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleDestination) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxvDistributedFirewallRuleDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvDistributedFirewallRuleDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDistributedFirewallRuleDestination)(nil)).Elem()
}

func (o GetNsxvDistributedFirewallRuleDestinationArrayOutput) ToGetNsxvDistributedFirewallRuleDestinationArrayOutput() GetNsxvDistributedFirewallRuleDestinationArrayOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleDestinationArrayOutput) ToGetNsxvDistributedFirewallRuleDestinationArrayOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleDestinationArrayOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleDestinationArrayOutput) Index(i pulumi.IntInput) GetNsxvDistributedFirewallRuleDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvDistributedFirewallRuleDestination {
		return vs[0].([]GetNsxvDistributedFirewallRuleDestination)[vs[1].(int)]
	}).(GetNsxvDistributedFirewallRuleDestinationOutput)
}

type GetNsxvDistributedFirewallRuleSource struct {
	// Name of the source entity
	Name string `pulumi:"name"`
	// Type of the source entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
	Type string `pulumi:"type"`
	// Value of the source entity
	Value string `pulumi:"value"`
}

// GetNsxvDistributedFirewallRuleSourceInput is an input type that accepts GetNsxvDistributedFirewallRuleSourceArgs and GetNsxvDistributedFirewallRuleSourceOutput values.
// You can construct a concrete instance of `GetNsxvDistributedFirewallRuleSourceInput` via:
//
//	GetNsxvDistributedFirewallRuleSourceArgs{...}
type GetNsxvDistributedFirewallRuleSourceInput interface {
	pulumi.Input

	ToGetNsxvDistributedFirewallRuleSourceOutput() GetNsxvDistributedFirewallRuleSourceOutput
	ToGetNsxvDistributedFirewallRuleSourceOutputWithContext(context.Context) GetNsxvDistributedFirewallRuleSourceOutput
}

type GetNsxvDistributedFirewallRuleSourceArgs struct {
	// Name of the source entity
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the source entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the source entity
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNsxvDistributedFirewallRuleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDistributedFirewallRuleSource)(nil)).Elem()
}

func (i GetNsxvDistributedFirewallRuleSourceArgs) ToGetNsxvDistributedFirewallRuleSourceOutput() GetNsxvDistributedFirewallRuleSourceOutput {
	return i.ToGetNsxvDistributedFirewallRuleSourceOutputWithContext(context.Background())
}

func (i GetNsxvDistributedFirewallRuleSourceArgs) ToGetNsxvDistributedFirewallRuleSourceOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDistributedFirewallRuleSourceOutput)
}

// GetNsxvDistributedFirewallRuleSourceArrayInput is an input type that accepts GetNsxvDistributedFirewallRuleSourceArray and GetNsxvDistributedFirewallRuleSourceArrayOutput values.
// You can construct a concrete instance of `GetNsxvDistributedFirewallRuleSourceArrayInput` via:
//
//	GetNsxvDistributedFirewallRuleSourceArray{ GetNsxvDistributedFirewallRuleSourceArgs{...} }
type GetNsxvDistributedFirewallRuleSourceArrayInput interface {
	pulumi.Input

	ToGetNsxvDistributedFirewallRuleSourceArrayOutput() GetNsxvDistributedFirewallRuleSourceArrayOutput
	ToGetNsxvDistributedFirewallRuleSourceArrayOutputWithContext(context.Context) GetNsxvDistributedFirewallRuleSourceArrayOutput
}

type GetNsxvDistributedFirewallRuleSourceArray []GetNsxvDistributedFirewallRuleSourceInput

func (GetNsxvDistributedFirewallRuleSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDistributedFirewallRuleSource)(nil)).Elem()
}

func (i GetNsxvDistributedFirewallRuleSourceArray) ToGetNsxvDistributedFirewallRuleSourceArrayOutput() GetNsxvDistributedFirewallRuleSourceArrayOutput {
	return i.ToGetNsxvDistributedFirewallRuleSourceArrayOutputWithContext(context.Background())
}

func (i GetNsxvDistributedFirewallRuleSourceArray) ToGetNsxvDistributedFirewallRuleSourceArrayOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvDistributedFirewallRuleSourceArrayOutput)
}

type GetNsxvDistributedFirewallRuleSourceOutput struct{ *pulumi.OutputState }

func (GetNsxvDistributedFirewallRuleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvDistributedFirewallRuleSource)(nil)).Elem()
}

func (o GetNsxvDistributedFirewallRuleSourceOutput) ToGetNsxvDistributedFirewallRuleSourceOutput() GetNsxvDistributedFirewallRuleSourceOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleSourceOutput) ToGetNsxvDistributedFirewallRuleSourceOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleSourceOutput {
	return o
}

// Name of the source entity
func (o GetNsxvDistributedFirewallRuleSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleSource) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the source entity (one of Network, Edge, VirtualMachine, IpSet, VDC, Ipv4Address)
func (o GetNsxvDistributedFirewallRuleSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleSource) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the source entity
func (o GetNsxvDistributedFirewallRuleSourceOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvDistributedFirewallRuleSource) string { return v.Value }).(pulumi.StringOutput)
}

type GetNsxvDistributedFirewallRuleSourceArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvDistributedFirewallRuleSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvDistributedFirewallRuleSource)(nil)).Elem()
}

func (o GetNsxvDistributedFirewallRuleSourceArrayOutput) ToGetNsxvDistributedFirewallRuleSourceArrayOutput() GetNsxvDistributedFirewallRuleSourceArrayOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleSourceArrayOutput) ToGetNsxvDistributedFirewallRuleSourceArrayOutputWithContext(ctx context.Context) GetNsxvDistributedFirewallRuleSourceArrayOutput {
	return o
}

func (o GetNsxvDistributedFirewallRuleSourceArrayOutput) Index(i pulumi.IntInput) GetNsxvDistributedFirewallRuleSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvDistributedFirewallRuleSource {
		return vs[0].([]GetNsxvDistributedFirewallRuleSource)[vs[1].(int)]
	}).(GetNsxvDistributedFirewallRuleSourceOutput)
}

type GetNsxvFirewallRuleDestination struct {
	// Rule is applied to traffic going to any destinations except for the excluded destination. Default 'false'
	Exclude bool `pulumi:"exclude"`
	// 'vse', 'internal', 'external' or network name
	GatewayInterfaces []string `pulumi:"gatewayInterfaces"`
	// IP address, CIDR, an IP range, or the keyword 'any'
	IpAddresses []string `pulumi:"ipAddresses"`
	// Set of IP set names
	IpSets []string `pulumi:"ipSets"`
	// Set of org network names
	OrgNetworks []string `pulumi:"orgNetworks"`
	// Set of VM IDs
	VmIds []string `pulumi:"vmIds"`
}

// GetNsxvFirewallRuleDestinationInput is an input type that accepts GetNsxvFirewallRuleDestinationArgs and GetNsxvFirewallRuleDestinationOutput values.
// You can construct a concrete instance of `GetNsxvFirewallRuleDestinationInput` via:
//
//	GetNsxvFirewallRuleDestinationArgs{...}
type GetNsxvFirewallRuleDestinationInput interface {
	pulumi.Input

	ToGetNsxvFirewallRuleDestinationOutput() GetNsxvFirewallRuleDestinationOutput
	ToGetNsxvFirewallRuleDestinationOutputWithContext(context.Context) GetNsxvFirewallRuleDestinationOutput
}

type GetNsxvFirewallRuleDestinationArgs struct {
	// Rule is applied to traffic going to any destinations except for the excluded destination. Default 'false'
	Exclude pulumi.BoolInput `pulumi:"exclude"`
	// 'vse', 'internal', 'external' or network name
	GatewayInterfaces pulumi.StringArrayInput `pulumi:"gatewayInterfaces"`
	// IP address, CIDR, an IP range, or the keyword 'any'
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// Set of IP set names
	IpSets pulumi.StringArrayInput `pulumi:"ipSets"`
	// Set of org network names
	OrgNetworks pulumi.StringArrayInput `pulumi:"orgNetworks"`
	// Set of VM IDs
	VmIds pulumi.StringArrayInput `pulumi:"vmIds"`
}

func (GetNsxvFirewallRuleDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvFirewallRuleDestination)(nil)).Elem()
}

func (i GetNsxvFirewallRuleDestinationArgs) ToGetNsxvFirewallRuleDestinationOutput() GetNsxvFirewallRuleDestinationOutput {
	return i.ToGetNsxvFirewallRuleDestinationOutputWithContext(context.Background())
}

func (i GetNsxvFirewallRuleDestinationArgs) ToGetNsxvFirewallRuleDestinationOutputWithContext(ctx context.Context) GetNsxvFirewallRuleDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvFirewallRuleDestinationOutput)
}

// GetNsxvFirewallRuleDestinationArrayInput is an input type that accepts GetNsxvFirewallRuleDestinationArray and GetNsxvFirewallRuleDestinationArrayOutput values.
// You can construct a concrete instance of `GetNsxvFirewallRuleDestinationArrayInput` via:
//
//	GetNsxvFirewallRuleDestinationArray{ GetNsxvFirewallRuleDestinationArgs{...} }
type GetNsxvFirewallRuleDestinationArrayInput interface {
	pulumi.Input

	ToGetNsxvFirewallRuleDestinationArrayOutput() GetNsxvFirewallRuleDestinationArrayOutput
	ToGetNsxvFirewallRuleDestinationArrayOutputWithContext(context.Context) GetNsxvFirewallRuleDestinationArrayOutput
}

type GetNsxvFirewallRuleDestinationArray []GetNsxvFirewallRuleDestinationInput

func (GetNsxvFirewallRuleDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvFirewallRuleDestination)(nil)).Elem()
}

func (i GetNsxvFirewallRuleDestinationArray) ToGetNsxvFirewallRuleDestinationArrayOutput() GetNsxvFirewallRuleDestinationArrayOutput {
	return i.ToGetNsxvFirewallRuleDestinationArrayOutputWithContext(context.Background())
}

func (i GetNsxvFirewallRuleDestinationArray) ToGetNsxvFirewallRuleDestinationArrayOutputWithContext(ctx context.Context) GetNsxvFirewallRuleDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvFirewallRuleDestinationArrayOutput)
}

type GetNsxvFirewallRuleDestinationOutput struct{ *pulumi.OutputState }

func (GetNsxvFirewallRuleDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvFirewallRuleDestination)(nil)).Elem()
}

func (o GetNsxvFirewallRuleDestinationOutput) ToGetNsxvFirewallRuleDestinationOutput() GetNsxvFirewallRuleDestinationOutput {
	return o
}

func (o GetNsxvFirewallRuleDestinationOutput) ToGetNsxvFirewallRuleDestinationOutputWithContext(ctx context.Context) GetNsxvFirewallRuleDestinationOutput {
	return o
}

// Rule is applied to traffic going to any destinations except for the excluded destination. Default 'false'
func (o GetNsxvFirewallRuleDestinationOutput) Exclude() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleDestination) bool { return v.Exclude }).(pulumi.BoolOutput)
}

// 'vse', 'internal', 'external' or network name
func (o GetNsxvFirewallRuleDestinationOutput) GatewayInterfaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleDestination) []string { return v.GatewayInterfaces }).(pulumi.StringArrayOutput)
}

// IP address, CIDR, an IP range, or the keyword 'any'
func (o GetNsxvFirewallRuleDestinationOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleDestination) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Set of IP set names
func (o GetNsxvFirewallRuleDestinationOutput) IpSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleDestination) []string { return v.IpSets }).(pulumi.StringArrayOutput)
}

// Set of org network names
func (o GetNsxvFirewallRuleDestinationOutput) OrgNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleDestination) []string { return v.OrgNetworks }).(pulumi.StringArrayOutput)
}

// Set of VM IDs
func (o GetNsxvFirewallRuleDestinationOutput) VmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleDestination) []string { return v.VmIds }).(pulumi.StringArrayOutput)
}

type GetNsxvFirewallRuleDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvFirewallRuleDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvFirewallRuleDestination)(nil)).Elem()
}

func (o GetNsxvFirewallRuleDestinationArrayOutput) ToGetNsxvFirewallRuleDestinationArrayOutput() GetNsxvFirewallRuleDestinationArrayOutput {
	return o
}

func (o GetNsxvFirewallRuleDestinationArrayOutput) ToGetNsxvFirewallRuleDestinationArrayOutputWithContext(ctx context.Context) GetNsxvFirewallRuleDestinationArrayOutput {
	return o
}

func (o GetNsxvFirewallRuleDestinationArrayOutput) Index(i pulumi.IntInput) GetNsxvFirewallRuleDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvFirewallRuleDestination {
		return vs[0].([]GetNsxvFirewallRuleDestination)[vs[1].(int)]
	}).(GetNsxvFirewallRuleDestinationOutput)
}

type GetNsxvFirewallRuleService struct {
	Port       string `pulumi:"port"`
	Protocol   string `pulumi:"protocol"`
	SourcePort string `pulumi:"sourcePort"`
}

// GetNsxvFirewallRuleServiceInput is an input type that accepts GetNsxvFirewallRuleServiceArgs and GetNsxvFirewallRuleServiceOutput values.
// You can construct a concrete instance of `GetNsxvFirewallRuleServiceInput` via:
//
//	GetNsxvFirewallRuleServiceArgs{...}
type GetNsxvFirewallRuleServiceInput interface {
	pulumi.Input

	ToGetNsxvFirewallRuleServiceOutput() GetNsxvFirewallRuleServiceOutput
	ToGetNsxvFirewallRuleServiceOutputWithContext(context.Context) GetNsxvFirewallRuleServiceOutput
}

type GetNsxvFirewallRuleServiceArgs struct {
	Port       pulumi.StringInput `pulumi:"port"`
	Protocol   pulumi.StringInput `pulumi:"protocol"`
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
}

func (GetNsxvFirewallRuleServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvFirewallRuleService)(nil)).Elem()
}

func (i GetNsxvFirewallRuleServiceArgs) ToGetNsxvFirewallRuleServiceOutput() GetNsxvFirewallRuleServiceOutput {
	return i.ToGetNsxvFirewallRuleServiceOutputWithContext(context.Background())
}

func (i GetNsxvFirewallRuleServiceArgs) ToGetNsxvFirewallRuleServiceOutputWithContext(ctx context.Context) GetNsxvFirewallRuleServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvFirewallRuleServiceOutput)
}

// GetNsxvFirewallRuleServiceArrayInput is an input type that accepts GetNsxvFirewallRuleServiceArray and GetNsxvFirewallRuleServiceArrayOutput values.
// You can construct a concrete instance of `GetNsxvFirewallRuleServiceArrayInput` via:
//
//	GetNsxvFirewallRuleServiceArray{ GetNsxvFirewallRuleServiceArgs{...} }
type GetNsxvFirewallRuleServiceArrayInput interface {
	pulumi.Input

	ToGetNsxvFirewallRuleServiceArrayOutput() GetNsxvFirewallRuleServiceArrayOutput
	ToGetNsxvFirewallRuleServiceArrayOutputWithContext(context.Context) GetNsxvFirewallRuleServiceArrayOutput
}

type GetNsxvFirewallRuleServiceArray []GetNsxvFirewallRuleServiceInput

func (GetNsxvFirewallRuleServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvFirewallRuleService)(nil)).Elem()
}

func (i GetNsxvFirewallRuleServiceArray) ToGetNsxvFirewallRuleServiceArrayOutput() GetNsxvFirewallRuleServiceArrayOutput {
	return i.ToGetNsxvFirewallRuleServiceArrayOutputWithContext(context.Background())
}

func (i GetNsxvFirewallRuleServiceArray) ToGetNsxvFirewallRuleServiceArrayOutputWithContext(ctx context.Context) GetNsxvFirewallRuleServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvFirewallRuleServiceArrayOutput)
}

type GetNsxvFirewallRuleServiceOutput struct{ *pulumi.OutputState }

func (GetNsxvFirewallRuleServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvFirewallRuleService)(nil)).Elem()
}

func (o GetNsxvFirewallRuleServiceOutput) ToGetNsxvFirewallRuleServiceOutput() GetNsxvFirewallRuleServiceOutput {
	return o
}

func (o GetNsxvFirewallRuleServiceOutput) ToGetNsxvFirewallRuleServiceOutputWithContext(ctx context.Context) GetNsxvFirewallRuleServiceOutput {
	return o
}

func (o GetNsxvFirewallRuleServiceOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleService) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetNsxvFirewallRuleServiceOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleService) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetNsxvFirewallRuleServiceOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleService) string { return v.SourcePort }).(pulumi.StringOutput)
}

type GetNsxvFirewallRuleServiceArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvFirewallRuleServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvFirewallRuleService)(nil)).Elem()
}

func (o GetNsxvFirewallRuleServiceArrayOutput) ToGetNsxvFirewallRuleServiceArrayOutput() GetNsxvFirewallRuleServiceArrayOutput {
	return o
}

func (o GetNsxvFirewallRuleServiceArrayOutput) ToGetNsxvFirewallRuleServiceArrayOutputWithContext(ctx context.Context) GetNsxvFirewallRuleServiceArrayOutput {
	return o
}

func (o GetNsxvFirewallRuleServiceArrayOutput) Index(i pulumi.IntInput) GetNsxvFirewallRuleServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvFirewallRuleService {
		return vs[0].([]GetNsxvFirewallRuleService)[vs[1].(int)]
	}).(GetNsxvFirewallRuleServiceOutput)
}

type GetNsxvFirewallRuleSource struct {
	// Rule is applied to traffic coming from all sources except for the excluded source. Default 'false'
	Exclude bool `pulumi:"exclude"`
	// 'vse', 'internal', 'external' or network name
	GatewayInterfaces []string `pulumi:"gatewayInterfaces"`
	// IP address, CIDR, an IP range, or the keyword 'any'
	IpAddresses []string `pulumi:"ipAddresses"`
	// Set of IP set names
	IpSets []string `pulumi:"ipSets"`
	// Set of org network names
	OrgNetworks []string `pulumi:"orgNetworks"`
	// Set of VM IDs
	VmIds []string `pulumi:"vmIds"`
}

// GetNsxvFirewallRuleSourceInput is an input type that accepts GetNsxvFirewallRuleSourceArgs and GetNsxvFirewallRuleSourceOutput values.
// You can construct a concrete instance of `GetNsxvFirewallRuleSourceInput` via:
//
//	GetNsxvFirewallRuleSourceArgs{...}
type GetNsxvFirewallRuleSourceInput interface {
	pulumi.Input

	ToGetNsxvFirewallRuleSourceOutput() GetNsxvFirewallRuleSourceOutput
	ToGetNsxvFirewallRuleSourceOutputWithContext(context.Context) GetNsxvFirewallRuleSourceOutput
}

type GetNsxvFirewallRuleSourceArgs struct {
	// Rule is applied to traffic coming from all sources except for the excluded source. Default 'false'
	Exclude pulumi.BoolInput `pulumi:"exclude"`
	// 'vse', 'internal', 'external' or network name
	GatewayInterfaces pulumi.StringArrayInput `pulumi:"gatewayInterfaces"`
	// IP address, CIDR, an IP range, or the keyword 'any'
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// Set of IP set names
	IpSets pulumi.StringArrayInput `pulumi:"ipSets"`
	// Set of org network names
	OrgNetworks pulumi.StringArrayInput `pulumi:"orgNetworks"`
	// Set of VM IDs
	VmIds pulumi.StringArrayInput `pulumi:"vmIds"`
}

func (GetNsxvFirewallRuleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvFirewallRuleSource)(nil)).Elem()
}

func (i GetNsxvFirewallRuleSourceArgs) ToGetNsxvFirewallRuleSourceOutput() GetNsxvFirewallRuleSourceOutput {
	return i.ToGetNsxvFirewallRuleSourceOutputWithContext(context.Background())
}

func (i GetNsxvFirewallRuleSourceArgs) ToGetNsxvFirewallRuleSourceOutputWithContext(ctx context.Context) GetNsxvFirewallRuleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvFirewallRuleSourceOutput)
}

// GetNsxvFirewallRuleSourceArrayInput is an input type that accepts GetNsxvFirewallRuleSourceArray and GetNsxvFirewallRuleSourceArrayOutput values.
// You can construct a concrete instance of `GetNsxvFirewallRuleSourceArrayInput` via:
//
//	GetNsxvFirewallRuleSourceArray{ GetNsxvFirewallRuleSourceArgs{...} }
type GetNsxvFirewallRuleSourceArrayInput interface {
	pulumi.Input

	ToGetNsxvFirewallRuleSourceArrayOutput() GetNsxvFirewallRuleSourceArrayOutput
	ToGetNsxvFirewallRuleSourceArrayOutputWithContext(context.Context) GetNsxvFirewallRuleSourceArrayOutput
}

type GetNsxvFirewallRuleSourceArray []GetNsxvFirewallRuleSourceInput

func (GetNsxvFirewallRuleSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvFirewallRuleSource)(nil)).Elem()
}

func (i GetNsxvFirewallRuleSourceArray) ToGetNsxvFirewallRuleSourceArrayOutput() GetNsxvFirewallRuleSourceArrayOutput {
	return i.ToGetNsxvFirewallRuleSourceArrayOutputWithContext(context.Background())
}

func (i GetNsxvFirewallRuleSourceArray) ToGetNsxvFirewallRuleSourceArrayOutputWithContext(ctx context.Context) GetNsxvFirewallRuleSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsxvFirewallRuleSourceArrayOutput)
}

type GetNsxvFirewallRuleSourceOutput struct{ *pulumi.OutputState }

func (GetNsxvFirewallRuleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvFirewallRuleSource)(nil)).Elem()
}

func (o GetNsxvFirewallRuleSourceOutput) ToGetNsxvFirewallRuleSourceOutput() GetNsxvFirewallRuleSourceOutput {
	return o
}

func (o GetNsxvFirewallRuleSourceOutput) ToGetNsxvFirewallRuleSourceOutputWithContext(ctx context.Context) GetNsxvFirewallRuleSourceOutput {
	return o
}

// Rule is applied to traffic coming from all sources except for the excluded source. Default 'false'
func (o GetNsxvFirewallRuleSourceOutput) Exclude() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleSource) bool { return v.Exclude }).(pulumi.BoolOutput)
}

// 'vse', 'internal', 'external' or network name
func (o GetNsxvFirewallRuleSourceOutput) GatewayInterfaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleSource) []string { return v.GatewayInterfaces }).(pulumi.StringArrayOutput)
}

// IP address, CIDR, an IP range, or the keyword 'any'
func (o GetNsxvFirewallRuleSourceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleSource) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Set of IP set names
func (o GetNsxvFirewallRuleSourceOutput) IpSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleSource) []string { return v.IpSets }).(pulumi.StringArrayOutput)
}

// Set of org network names
func (o GetNsxvFirewallRuleSourceOutput) OrgNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleSource) []string { return v.OrgNetworks }).(pulumi.StringArrayOutput)
}

// Set of VM IDs
func (o GetNsxvFirewallRuleSourceOutput) VmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNsxvFirewallRuleSource) []string { return v.VmIds }).(pulumi.StringArrayOutput)
}

type GetNsxvFirewallRuleSourceArrayOutput struct{ *pulumi.OutputState }

func (GetNsxvFirewallRuleSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsxvFirewallRuleSource)(nil)).Elem()
}

func (o GetNsxvFirewallRuleSourceArrayOutput) ToGetNsxvFirewallRuleSourceArrayOutput() GetNsxvFirewallRuleSourceArrayOutput {
	return o
}

func (o GetNsxvFirewallRuleSourceArrayOutput) ToGetNsxvFirewallRuleSourceArrayOutputWithContext(ctx context.Context) GetNsxvFirewallRuleSourceArrayOutput {
	return o
}

func (o GetNsxvFirewallRuleSourceArrayOutput) Index(i pulumi.IntInput) GetNsxvFirewallRuleSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsxvFirewallRuleSource {
		return vs[0].([]GetNsxvFirewallRuleSource)[vs[1].(int)]
	}).(GetNsxvFirewallRuleSourceOutput)
}

type GetOrgAccountLockout struct {
	// Whether account lockout is enabled or not
	Enabled bool `pulumi:"enabled"`
	// Number of login attempts that will trigger an account lockout for the given user
	InvalidLoginsBeforeLockout int `pulumi:"invalidLoginsBeforeLockout"`
	// Once a user is locked out, they will not be able to log back in for this time period
	LockoutIntervalMinutes int `pulumi:"lockoutIntervalMinutes"`
}

// GetOrgAccountLockoutInput is an input type that accepts GetOrgAccountLockoutArgs and GetOrgAccountLockoutOutput values.
// You can construct a concrete instance of `GetOrgAccountLockoutInput` via:
//
//	GetOrgAccountLockoutArgs{...}
type GetOrgAccountLockoutInput interface {
	pulumi.Input

	ToGetOrgAccountLockoutOutput() GetOrgAccountLockoutOutput
	ToGetOrgAccountLockoutOutputWithContext(context.Context) GetOrgAccountLockoutOutput
}

type GetOrgAccountLockoutArgs struct {
	// Whether account lockout is enabled or not
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Number of login attempts that will trigger an account lockout for the given user
	InvalidLoginsBeforeLockout pulumi.IntInput `pulumi:"invalidLoginsBeforeLockout"`
	// Once a user is locked out, they will not be able to log back in for this time period
	LockoutIntervalMinutes pulumi.IntInput `pulumi:"lockoutIntervalMinutes"`
}

func (GetOrgAccountLockoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgAccountLockout)(nil)).Elem()
}

func (i GetOrgAccountLockoutArgs) ToGetOrgAccountLockoutOutput() GetOrgAccountLockoutOutput {
	return i.ToGetOrgAccountLockoutOutputWithContext(context.Background())
}

func (i GetOrgAccountLockoutArgs) ToGetOrgAccountLockoutOutputWithContext(ctx context.Context) GetOrgAccountLockoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgAccountLockoutOutput)
}

// GetOrgAccountLockoutArrayInput is an input type that accepts GetOrgAccountLockoutArray and GetOrgAccountLockoutArrayOutput values.
// You can construct a concrete instance of `GetOrgAccountLockoutArrayInput` via:
//
//	GetOrgAccountLockoutArray{ GetOrgAccountLockoutArgs{...} }
type GetOrgAccountLockoutArrayInput interface {
	pulumi.Input

	ToGetOrgAccountLockoutArrayOutput() GetOrgAccountLockoutArrayOutput
	ToGetOrgAccountLockoutArrayOutputWithContext(context.Context) GetOrgAccountLockoutArrayOutput
}

type GetOrgAccountLockoutArray []GetOrgAccountLockoutInput

func (GetOrgAccountLockoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgAccountLockout)(nil)).Elem()
}

func (i GetOrgAccountLockoutArray) ToGetOrgAccountLockoutArrayOutput() GetOrgAccountLockoutArrayOutput {
	return i.ToGetOrgAccountLockoutArrayOutputWithContext(context.Background())
}

func (i GetOrgAccountLockoutArray) ToGetOrgAccountLockoutArrayOutputWithContext(ctx context.Context) GetOrgAccountLockoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgAccountLockoutArrayOutput)
}

type GetOrgAccountLockoutOutput struct{ *pulumi.OutputState }

func (GetOrgAccountLockoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgAccountLockout)(nil)).Elem()
}

func (o GetOrgAccountLockoutOutput) ToGetOrgAccountLockoutOutput() GetOrgAccountLockoutOutput {
	return o
}

func (o GetOrgAccountLockoutOutput) ToGetOrgAccountLockoutOutputWithContext(ctx context.Context) GetOrgAccountLockoutOutput {
	return o
}

// Whether account lockout is enabled or not
func (o GetOrgAccountLockoutOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgAccountLockout) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Number of login attempts that will trigger an account lockout for the given user
func (o GetOrgAccountLockoutOutput) InvalidLoginsBeforeLockout() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgAccountLockout) int { return v.InvalidLoginsBeforeLockout }).(pulumi.IntOutput)
}

// Once a user is locked out, they will not be able to log back in for this time period
func (o GetOrgAccountLockoutOutput) LockoutIntervalMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgAccountLockout) int { return v.LockoutIntervalMinutes }).(pulumi.IntOutput)
}

type GetOrgAccountLockoutArrayOutput struct{ *pulumi.OutputState }

func (GetOrgAccountLockoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgAccountLockout)(nil)).Elem()
}

func (o GetOrgAccountLockoutArrayOutput) ToGetOrgAccountLockoutArrayOutput() GetOrgAccountLockoutArrayOutput {
	return o
}

func (o GetOrgAccountLockoutArrayOutput) ToGetOrgAccountLockoutArrayOutputWithContext(ctx context.Context) GetOrgAccountLockoutArrayOutput {
	return o
}

func (o GetOrgAccountLockoutArrayOutput) Index(i pulumi.IntInput) GetOrgAccountLockoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgAccountLockout {
		return vs[0].([]GetOrgAccountLockout)[vs[1].(int)]
	}).(GetOrgAccountLockoutOutput)
}

type GetOrgLdapCustomSetting struct {
	// authentication method: one of SIMPLE, MD5DIGEST, NTLM
	AuthenticationMethod string `pulumi:"authenticationMethod"`
	// LDAP search base
	BaseDistinguishedName string `pulumi:"baseDistinguishedName"`
	// type of connector: one of OPEN_LDAP, ACTIVE_DIRECTORY
	ConnectorType string `pulumi:"connectorType"`
	// Custom settings when `ldapMode` is CUSTOM
	GroupAttributes []GetOrgLdapCustomSettingGroupAttribute `pulumi:"groupAttributes"`
	// True if the LDAP service requires an SSL connection
	IsSsl bool `pulumi:"isSsl"`
	// Password for the user identified by UserName. This value is never returned by GET. It is inspected on create and modify. On modify, the absence of this element indicates that the password should not be changed
	Password string `pulumi:"password"`
	// Port number for LDAP service
	Port int `pulumi:"port"`
	// host name or IP of the LDAP server
	Server string `pulumi:"server"`
	// Custom settings when `ldapMode` is CUSTOM
	UserAttributes []GetOrgLdapCustomSettingUserAttribute `pulumi:"userAttributes"`
	// Username to use when logging in to LDAP, specified using LDAP attribute=value pairs (for example: cn="ldap-admin", c="example", dc="com")
	Username string `pulumi:"username"`
}

// GetOrgLdapCustomSettingInput is an input type that accepts GetOrgLdapCustomSettingArgs and GetOrgLdapCustomSettingOutput values.
// You can construct a concrete instance of `GetOrgLdapCustomSettingInput` via:
//
//	GetOrgLdapCustomSettingArgs{...}
type GetOrgLdapCustomSettingInput interface {
	pulumi.Input

	ToGetOrgLdapCustomSettingOutput() GetOrgLdapCustomSettingOutput
	ToGetOrgLdapCustomSettingOutputWithContext(context.Context) GetOrgLdapCustomSettingOutput
}

type GetOrgLdapCustomSettingArgs struct {
	// authentication method: one of SIMPLE, MD5DIGEST, NTLM
	AuthenticationMethod pulumi.StringInput `pulumi:"authenticationMethod"`
	// LDAP search base
	BaseDistinguishedName pulumi.StringInput `pulumi:"baseDistinguishedName"`
	// type of connector: one of OPEN_LDAP, ACTIVE_DIRECTORY
	ConnectorType pulumi.StringInput `pulumi:"connectorType"`
	// Custom settings when `ldapMode` is CUSTOM
	GroupAttributes GetOrgLdapCustomSettingGroupAttributeArrayInput `pulumi:"groupAttributes"`
	// True if the LDAP service requires an SSL connection
	IsSsl pulumi.BoolInput `pulumi:"isSsl"`
	// Password for the user identified by UserName. This value is never returned by GET. It is inspected on create and modify. On modify, the absence of this element indicates that the password should not be changed
	Password pulumi.StringInput `pulumi:"password"`
	// Port number for LDAP service
	Port pulumi.IntInput `pulumi:"port"`
	// host name or IP of the LDAP server
	Server pulumi.StringInput `pulumi:"server"`
	// Custom settings when `ldapMode` is CUSTOM
	UserAttributes GetOrgLdapCustomSettingUserAttributeArrayInput `pulumi:"userAttributes"`
	// Username to use when logging in to LDAP, specified using LDAP attribute=value pairs (for example: cn="ldap-admin", c="example", dc="com")
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetOrgLdapCustomSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgLdapCustomSetting)(nil)).Elem()
}

func (i GetOrgLdapCustomSettingArgs) ToGetOrgLdapCustomSettingOutput() GetOrgLdapCustomSettingOutput {
	return i.ToGetOrgLdapCustomSettingOutputWithContext(context.Background())
}

func (i GetOrgLdapCustomSettingArgs) ToGetOrgLdapCustomSettingOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgLdapCustomSettingOutput)
}

// GetOrgLdapCustomSettingArrayInput is an input type that accepts GetOrgLdapCustomSettingArray and GetOrgLdapCustomSettingArrayOutput values.
// You can construct a concrete instance of `GetOrgLdapCustomSettingArrayInput` via:
//
//	GetOrgLdapCustomSettingArray{ GetOrgLdapCustomSettingArgs{...} }
type GetOrgLdapCustomSettingArrayInput interface {
	pulumi.Input

	ToGetOrgLdapCustomSettingArrayOutput() GetOrgLdapCustomSettingArrayOutput
	ToGetOrgLdapCustomSettingArrayOutputWithContext(context.Context) GetOrgLdapCustomSettingArrayOutput
}

type GetOrgLdapCustomSettingArray []GetOrgLdapCustomSettingInput

func (GetOrgLdapCustomSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgLdapCustomSetting)(nil)).Elem()
}

func (i GetOrgLdapCustomSettingArray) ToGetOrgLdapCustomSettingArrayOutput() GetOrgLdapCustomSettingArrayOutput {
	return i.ToGetOrgLdapCustomSettingArrayOutputWithContext(context.Background())
}

func (i GetOrgLdapCustomSettingArray) ToGetOrgLdapCustomSettingArrayOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgLdapCustomSettingArrayOutput)
}

type GetOrgLdapCustomSettingOutput struct{ *pulumi.OutputState }

func (GetOrgLdapCustomSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgLdapCustomSetting)(nil)).Elem()
}

func (o GetOrgLdapCustomSettingOutput) ToGetOrgLdapCustomSettingOutput() GetOrgLdapCustomSettingOutput {
	return o
}

func (o GetOrgLdapCustomSettingOutput) ToGetOrgLdapCustomSettingOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingOutput {
	return o
}

// authentication method: one of SIMPLE, MD5DIGEST, NTLM
func (o GetOrgLdapCustomSettingOutput) AuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSetting) string { return v.AuthenticationMethod }).(pulumi.StringOutput)
}

// LDAP search base
func (o GetOrgLdapCustomSettingOutput) BaseDistinguishedName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSetting) string { return v.BaseDistinguishedName }).(pulumi.StringOutput)
}

// type of connector: one of OPEN_LDAP, ACTIVE_DIRECTORY
func (o GetOrgLdapCustomSettingOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSetting) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// Custom settings when `ldapMode` is CUSTOM
func (o GetOrgLdapCustomSettingOutput) GroupAttributes() GetOrgLdapCustomSettingGroupAttributeArrayOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSetting) []GetOrgLdapCustomSettingGroupAttribute { return v.GroupAttributes }).(GetOrgLdapCustomSettingGroupAttributeArrayOutput)
}

// True if the LDAP service requires an SSL connection
func (o GetOrgLdapCustomSettingOutput) IsSsl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSetting) bool { return v.IsSsl }).(pulumi.BoolOutput)
}

// Password for the user identified by UserName. This value is never returned by GET. It is inspected on create and modify. On modify, the absence of this element indicates that the password should not be changed
func (o GetOrgLdapCustomSettingOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSetting) string { return v.Password }).(pulumi.StringOutput)
}

// Port number for LDAP service
func (o GetOrgLdapCustomSettingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSetting) int { return v.Port }).(pulumi.IntOutput)
}

// host name or IP of the LDAP server
func (o GetOrgLdapCustomSettingOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSetting) string { return v.Server }).(pulumi.StringOutput)
}

// Custom settings when `ldapMode` is CUSTOM
func (o GetOrgLdapCustomSettingOutput) UserAttributes() GetOrgLdapCustomSettingUserAttributeArrayOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSetting) []GetOrgLdapCustomSettingUserAttribute { return v.UserAttributes }).(GetOrgLdapCustomSettingUserAttributeArrayOutput)
}

// Username to use when logging in to LDAP, specified using LDAP attribute=value pairs (for example: cn="ldap-admin", c="example", dc="com")
func (o GetOrgLdapCustomSettingOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSetting) string { return v.Username }).(pulumi.StringOutput)
}

type GetOrgLdapCustomSettingArrayOutput struct{ *pulumi.OutputState }

func (GetOrgLdapCustomSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgLdapCustomSetting)(nil)).Elem()
}

func (o GetOrgLdapCustomSettingArrayOutput) ToGetOrgLdapCustomSettingArrayOutput() GetOrgLdapCustomSettingArrayOutput {
	return o
}

func (o GetOrgLdapCustomSettingArrayOutput) ToGetOrgLdapCustomSettingArrayOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingArrayOutput {
	return o
}

func (o GetOrgLdapCustomSettingArrayOutput) Index(i pulumi.IntInput) GetOrgLdapCustomSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgLdapCustomSetting {
		return vs[0].([]GetOrgLdapCustomSetting)[vs[1].(int)]
	}).(GetOrgLdapCustomSettingOutput)
}

type GetOrgLdapCustomSettingGroupAttribute struct {
	// LDAP group attribute used to identify a group member
	GroupBackLinkIdentifier string `pulumi:"groupBackLinkIdentifier"`
	// LDAP attribute that identifies a group as a member of another group. For example, dn
	GroupMembershipIdentifier string `pulumi:"groupMembershipIdentifier"`
	// LDAP attribute to use when getting the members of a group. For example, member
	Membership string `pulumi:"membership"`
	// LDAP attribute to use for the group name. For example, cn
	Name string `pulumi:"name"`
	// LDAP objectClass of which imported groups are members. For example, group
	ObjectClass string `pulumi:"objectClass"`
	// LDAP attribute to use as the unique identifier for a group. For example, objectGuid
	UniqueIdentifier string `pulumi:"uniqueIdentifier"`
}

// GetOrgLdapCustomSettingGroupAttributeInput is an input type that accepts GetOrgLdapCustomSettingGroupAttributeArgs and GetOrgLdapCustomSettingGroupAttributeOutput values.
// You can construct a concrete instance of `GetOrgLdapCustomSettingGroupAttributeInput` via:
//
//	GetOrgLdapCustomSettingGroupAttributeArgs{...}
type GetOrgLdapCustomSettingGroupAttributeInput interface {
	pulumi.Input

	ToGetOrgLdapCustomSettingGroupAttributeOutput() GetOrgLdapCustomSettingGroupAttributeOutput
	ToGetOrgLdapCustomSettingGroupAttributeOutputWithContext(context.Context) GetOrgLdapCustomSettingGroupAttributeOutput
}

type GetOrgLdapCustomSettingGroupAttributeArgs struct {
	// LDAP group attribute used to identify a group member
	GroupBackLinkIdentifier pulumi.StringInput `pulumi:"groupBackLinkIdentifier"`
	// LDAP attribute that identifies a group as a member of another group. For example, dn
	GroupMembershipIdentifier pulumi.StringInput `pulumi:"groupMembershipIdentifier"`
	// LDAP attribute to use when getting the members of a group. For example, member
	Membership pulumi.StringInput `pulumi:"membership"`
	// LDAP attribute to use for the group name. For example, cn
	Name pulumi.StringInput `pulumi:"name"`
	// LDAP objectClass of which imported groups are members. For example, group
	ObjectClass pulumi.StringInput `pulumi:"objectClass"`
	// LDAP attribute to use as the unique identifier for a group. For example, objectGuid
	UniqueIdentifier pulumi.StringInput `pulumi:"uniqueIdentifier"`
}

func (GetOrgLdapCustomSettingGroupAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgLdapCustomSettingGroupAttribute)(nil)).Elem()
}

func (i GetOrgLdapCustomSettingGroupAttributeArgs) ToGetOrgLdapCustomSettingGroupAttributeOutput() GetOrgLdapCustomSettingGroupAttributeOutput {
	return i.ToGetOrgLdapCustomSettingGroupAttributeOutputWithContext(context.Background())
}

func (i GetOrgLdapCustomSettingGroupAttributeArgs) ToGetOrgLdapCustomSettingGroupAttributeOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingGroupAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgLdapCustomSettingGroupAttributeOutput)
}

// GetOrgLdapCustomSettingGroupAttributeArrayInput is an input type that accepts GetOrgLdapCustomSettingGroupAttributeArray and GetOrgLdapCustomSettingGroupAttributeArrayOutput values.
// You can construct a concrete instance of `GetOrgLdapCustomSettingGroupAttributeArrayInput` via:
//
//	GetOrgLdapCustomSettingGroupAttributeArray{ GetOrgLdapCustomSettingGroupAttributeArgs{...} }
type GetOrgLdapCustomSettingGroupAttributeArrayInput interface {
	pulumi.Input

	ToGetOrgLdapCustomSettingGroupAttributeArrayOutput() GetOrgLdapCustomSettingGroupAttributeArrayOutput
	ToGetOrgLdapCustomSettingGroupAttributeArrayOutputWithContext(context.Context) GetOrgLdapCustomSettingGroupAttributeArrayOutput
}

type GetOrgLdapCustomSettingGroupAttributeArray []GetOrgLdapCustomSettingGroupAttributeInput

func (GetOrgLdapCustomSettingGroupAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgLdapCustomSettingGroupAttribute)(nil)).Elem()
}

func (i GetOrgLdapCustomSettingGroupAttributeArray) ToGetOrgLdapCustomSettingGroupAttributeArrayOutput() GetOrgLdapCustomSettingGroupAttributeArrayOutput {
	return i.ToGetOrgLdapCustomSettingGroupAttributeArrayOutputWithContext(context.Background())
}

func (i GetOrgLdapCustomSettingGroupAttributeArray) ToGetOrgLdapCustomSettingGroupAttributeArrayOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingGroupAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgLdapCustomSettingGroupAttributeArrayOutput)
}

type GetOrgLdapCustomSettingGroupAttributeOutput struct{ *pulumi.OutputState }

func (GetOrgLdapCustomSettingGroupAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgLdapCustomSettingGroupAttribute)(nil)).Elem()
}

func (o GetOrgLdapCustomSettingGroupAttributeOutput) ToGetOrgLdapCustomSettingGroupAttributeOutput() GetOrgLdapCustomSettingGroupAttributeOutput {
	return o
}

func (o GetOrgLdapCustomSettingGroupAttributeOutput) ToGetOrgLdapCustomSettingGroupAttributeOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingGroupAttributeOutput {
	return o
}

// LDAP group attribute used to identify a group member
func (o GetOrgLdapCustomSettingGroupAttributeOutput) GroupBackLinkIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingGroupAttribute) string { return v.GroupBackLinkIdentifier }).(pulumi.StringOutput)
}

// LDAP attribute that identifies a group as a member of another group. For example, dn
func (o GetOrgLdapCustomSettingGroupAttributeOutput) GroupMembershipIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingGroupAttribute) string { return v.GroupMembershipIdentifier }).(pulumi.StringOutput)
}

// LDAP attribute to use when getting the members of a group. For example, member
func (o GetOrgLdapCustomSettingGroupAttributeOutput) Membership() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingGroupAttribute) string { return v.Membership }).(pulumi.StringOutput)
}

// LDAP attribute to use for the group name. For example, cn
func (o GetOrgLdapCustomSettingGroupAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingGroupAttribute) string { return v.Name }).(pulumi.StringOutput)
}

// LDAP objectClass of which imported groups are members. For example, group
func (o GetOrgLdapCustomSettingGroupAttributeOutput) ObjectClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingGroupAttribute) string { return v.ObjectClass }).(pulumi.StringOutput)
}

// LDAP attribute to use as the unique identifier for a group. For example, objectGuid
func (o GetOrgLdapCustomSettingGroupAttributeOutput) UniqueIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingGroupAttribute) string { return v.UniqueIdentifier }).(pulumi.StringOutput)
}

type GetOrgLdapCustomSettingGroupAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetOrgLdapCustomSettingGroupAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgLdapCustomSettingGroupAttribute)(nil)).Elem()
}

func (o GetOrgLdapCustomSettingGroupAttributeArrayOutput) ToGetOrgLdapCustomSettingGroupAttributeArrayOutput() GetOrgLdapCustomSettingGroupAttributeArrayOutput {
	return o
}

func (o GetOrgLdapCustomSettingGroupAttributeArrayOutput) ToGetOrgLdapCustomSettingGroupAttributeArrayOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingGroupAttributeArrayOutput {
	return o
}

func (o GetOrgLdapCustomSettingGroupAttributeArrayOutput) Index(i pulumi.IntInput) GetOrgLdapCustomSettingGroupAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgLdapCustomSettingGroupAttribute {
		return vs[0].([]GetOrgLdapCustomSettingGroupAttribute)[vs[1].(int)]
	}).(GetOrgLdapCustomSettingGroupAttributeOutput)
}

type GetOrgLdapCustomSettingUserAttribute struct {
	// LDAP attribute to use for the user's full name. For example, displayName
	DisplayName string `pulumi:"displayName"`
	// LDAP attribute to use for the user's email address. For example, mail
	Email string `pulumi:"email"`
	// LDAP attribute to use for the user's given name. For example, givenName
	GivenName string `pulumi:"givenName"`
	// LDAP attribute that returns the identifiers of all the groups of which the user is a member
	GroupBackLinkIdentifier string `pulumi:"groupBackLinkIdentifier"`
	// LDAP attribute that identifies a user as a member of a group. For example, dn
	GroupMembershipIdentifier string `pulumi:"groupMembershipIdentifier"`
	// LDAP objectClass of which imported users are members. For example, user or person
	ObjectClass string `pulumi:"objectClass"`
	// LDAP attribute to use for the user's surname. For example, sn
	Surname string `pulumi:"surname"`
	// LDAP attribute to use for the user's telephone number. For example, telephoneNumber
	Telephone string `pulumi:"telephone"`
	// LDAP attribute to use as the unique identifier for a user. For example, objectGuid
	UniqueIdentifier string `pulumi:"uniqueIdentifier"`
	// LDAP attribute to use when looking up a user name to import. For example, userPrincipalName or samAccountName
	Username string `pulumi:"username"`
}

// GetOrgLdapCustomSettingUserAttributeInput is an input type that accepts GetOrgLdapCustomSettingUserAttributeArgs and GetOrgLdapCustomSettingUserAttributeOutput values.
// You can construct a concrete instance of `GetOrgLdapCustomSettingUserAttributeInput` via:
//
//	GetOrgLdapCustomSettingUserAttributeArgs{...}
type GetOrgLdapCustomSettingUserAttributeInput interface {
	pulumi.Input

	ToGetOrgLdapCustomSettingUserAttributeOutput() GetOrgLdapCustomSettingUserAttributeOutput
	ToGetOrgLdapCustomSettingUserAttributeOutputWithContext(context.Context) GetOrgLdapCustomSettingUserAttributeOutput
}

type GetOrgLdapCustomSettingUserAttributeArgs struct {
	// LDAP attribute to use for the user's full name. For example, displayName
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// LDAP attribute to use for the user's email address. For example, mail
	Email pulumi.StringInput `pulumi:"email"`
	// LDAP attribute to use for the user's given name. For example, givenName
	GivenName pulumi.StringInput `pulumi:"givenName"`
	// LDAP attribute that returns the identifiers of all the groups of which the user is a member
	GroupBackLinkIdentifier pulumi.StringInput `pulumi:"groupBackLinkIdentifier"`
	// LDAP attribute that identifies a user as a member of a group. For example, dn
	GroupMembershipIdentifier pulumi.StringInput `pulumi:"groupMembershipIdentifier"`
	// LDAP objectClass of which imported users are members. For example, user or person
	ObjectClass pulumi.StringInput `pulumi:"objectClass"`
	// LDAP attribute to use for the user's surname. For example, sn
	Surname pulumi.StringInput `pulumi:"surname"`
	// LDAP attribute to use for the user's telephone number. For example, telephoneNumber
	Telephone pulumi.StringInput `pulumi:"telephone"`
	// LDAP attribute to use as the unique identifier for a user. For example, objectGuid
	UniqueIdentifier pulumi.StringInput `pulumi:"uniqueIdentifier"`
	// LDAP attribute to use when looking up a user name to import. For example, userPrincipalName or samAccountName
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetOrgLdapCustomSettingUserAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgLdapCustomSettingUserAttribute)(nil)).Elem()
}

func (i GetOrgLdapCustomSettingUserAttributeArgs) ToGetOrgLdapCustomSettingUserAttributeOutput() GetOrgLdapCustomSettingUserAttributeOutput {
	return i.ToGetOrgLdapCustomSettingUserAttributeOutputWithContext(context.Background())
}

func (i GetOrgLdapCustomSettingUserAttributeArgs) ToGetOrgLdapCustomSettingUserAttributeOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingUserAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgLdapCustomSettingUserAttributeOutput)
}

// GetOrgLdapCustomSettingUserAttributeArrayInput is an input type that accepts GetOrgLdapCustomSettingUserAttributeArray and GetOrgLdapCustomSettingUserAttributeArrayOutput values.
// You can construct a concrete instance of `GetOrgLdapCustomSettingUserAttributeArrayInput` via:
//
//	GetOrgLdapCustomSettingUserAttributeArray{ GetOrgLdapCustomSettingUserAttributeArgs{...} }
type GetOrgLdapCustomSettingUserAttributeArrayInput interface {
	pulumi.Input

	ToGetOrgLdapCustomSettingUserAttributeArrayOutput() GetOrgLdapCustomSettingUserAttributeArrayOutput
	ToGetOrgLdapCustomSettingUserAttributeArrayOutputWithContext(context.Context) GetOrgLdapCustomSettingUserAttributeArrayOutput
}

type GetOrgLdapCustomSettingUserAttributeArray []GetOrgLdapCustomSettingUserAttributeInput

func (GetOrgLdapCustomSettingUserAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgLdapCustomSettingUserAttribute)(nil)).Elem()
}

func (i GetOrgLdapCustomSettingUserAttributeArray) ToGetOrgLdapCustomSettingUserAttributeArrayOutput() GetOrgLdapCustomSettingUserAttributeArrayOutput {
	return i.ToGetOrgLdapCustomSettingUserAttributeArrayOutputWithContext(context.Background())
}

func (i GetOrgLdapCustomSettingUserAttributeArray) ToGetOrgLdapCustomSettingUserAttributeArrayOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingUserAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgLdapCustomSettingUserAttributeArrayOutput)
}

type GetOrgLdapCustomSettingUserAttributeOutput struct{ *pulumi.OutputState }

func (GetOrgLdapCustomSettingUserAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgLdapCustomSettingUserAttribute)(nil)).Elem()
}

func (o GetOrgLdapCustomSettingUserAttributeOutput) ToGetOrgLdapCustomSettingUserAttributeOutput() GetOrgLdapCustomSettingUserAttributeOutput {
	return o
}

func (o GetOrgLdapCustomSettingUserAttributeOutput) ToGetOrgLdapCustomSettingUserAttributeOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingUserAttributeOutput {
	return o
}

// LDAP attribute to use for the user's full name. For example, displayName
func (o GetOrgLdapCustomSettingUserAttributeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingUserAttribute) string { return v.DisplayName }).(pulumi.StringOutput)
}

// LDAP attribute to use for the user's email address. For example, mail
func (o GetOrgLdapCustomSettingUserAttributeOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingUserAttribute) string { return v.Email }).(pulumi.StringOutput)
}

// LDAP attribute to use for the user's given name. For example, givenName
func (o GetOrgLdapCustomSettingUserAttributeOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingUserAttribute) string { return v.GivenName }).(pulumi.StringOutput)
}

// LDAP attribute that returns the identifiers of all the groups of which the user is a member
func (o GetOrgLdapCustomSettingUserAttributeOutput) GroupBackLinkIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingUserAttribute) string { return v.GroupBackLinkIdentifier }).(pulumi.StringOutput)
}

// LDAP attribute that identifies a user as a member of a group. For example, dn
func (o GetOrgLdapCustomSettingUserAttributeOutput) GroupMembershipIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingUserAttribute) string { return v.GroupMembershipIdentifier }).(pulumi.StringOutput)
}

// LDAP objectClass of which imported users are members. For example, user or person
func (o GetOrgLdapCustomSettingUserAttributeOutput) ObjectClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingUserAttribute) string { return v.ObjectClass }).(pulumi.StringOutput)
}

// LDAP attribute to use for the user's surname. For example, sn
func (o GetOrgLdapCustomSettingUserAttributeOutput) Surname() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingUserAttribute) string { return v.Surname }).(pulumi.StringOutput)
}

// LDAP attribute to use for the user's telephone number. For example, telephoneNumber
func (o GetOrgLdapCustomSettingUserAttributeOutput) Telephone() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingUserAttribute) string { return v.Telephone }).(pulumi.StringOutput)
}

// LDAP attribute to use as the unique identifier for a user. For example, objectGuid
func (o GetOrgLdapCustomSettingUserAttributeOutput) UniqueIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingUserAttribute) string { return v.UniqueIdentifier }).(pulumi.StringOutput)
}

// LDAP attribute to use when looking up a user name to import. For example, userPrincipalName or samAccountName
func (o GetOrgLdapCustomSettingUserAttributeOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgLdapCustomSettingUserAttribute) string { return v.Username }).(pulumi.StringOutput)
}

type GetOrgLdapCustomSettingUserAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetOrgLdapCustomSettingUserAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgLdapCustomSettingUserAttribute)(nil)).Elem()
}

func (o GetOrgLdapCustomSettingUserAttributeArrayOutput) ToGetOrgLdapCustomSettingUserAttributeArrayOutput() GetOrgLdapCustomSettingUserAttributeArrayOutput {
	return o
}

func (o GetOrgLdapCustomSettingUserAttributeArrayOutput) ToGetOrgLdapCustomSettingUserAttributeArrayOutputWithContext(ctx context.Context) GetOrgLdapCustomSettingUserAttributeArrayOutput {
	return o
}

func (o GetOrgLdapCustomSettingUserAttributeArrayOutput) Index(i pulumi.IntInput) GetOrgLdapCustomSettingUserAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgLdapCustomSettingUserAttribute {
		return vs[0].([]GetOrgLdapCustomSettingUserAttribute)[vs[1].(int)]
	}).(GetOrgLdapCustomSettingUserAttributeOutput)
}

type GetOrgMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetOrgMetadataEntryInput is an input type that accepts GetOrgMetadataEntryArgs and GetOrgMetadataEntryOutput values.
// You can construct a concrete instance of `GetOrgMetadataEntryInput` via:
//
//	GetOrgMetadataEntryArgs{...}
type GetOrgMetadataEntryInput interface {
	pulumi.Input

	ToGetOrgMetadataEntryOutput() GetOrgMetadataEntryOutput
	ToGetOrgMetadataEntryOutputWithContext(context.Context) GetOrgMetadataEntryOutput
}

type GetOrgMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetOrgMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgMetadataEntry)(nil)).Elem()
}

func (i GetOrgMetadataEntryArgs) ToGetOrgMetadataEntryOutput() GetOrgMetadataEntryOutput {
	return i.ToGetOrgMetadataEntryOutputWithContext(context.Background())
}

func (i GetOrgMetadataEntryArgs) ToGetOrgMetadataEntryOutputWithContext(ctx context.Context) GetOrgMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgMetadataEntryOutput)
}

// GetOrgMetadataEntryArrayInput is an input type that accepts GetOrgMetadataEntryArray and GetOrgMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetOrgMetadataEntryArrayInput` via:
//
//	GetOrgMetadataEntryArray{ GetOrgMetadataEntryArgs{...} }
type GetOrgMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetOrgMetadataEntryArrayOutput() GetOrgMetadataEntryArrayOutput
	ToGetOrgMetadataEntryArrayOutputWithContext(context.Context) GetOrgMetadataEntryArrayOutput
}

type GetOrgMetadataEntryArray []GetOrgMetadataEntryInput

func (GetOrgMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgMetadataEntry)(nil)).Elem()
}

func (i GetOrgMetadataEntryArray) ToGetOrgMetadataEntryArrayOutput() GetOrgMetadataEntryArrayOutput {
	return i.ToGetOrgMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetOrgMetadataEntryArray) ToGetOrgMetadataEntryArrayOutputWithContext(ctx context.Context) GetOrgMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgMetadataEntryArrayOutput)
}

type GetOrgMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetOrgMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgMetadataEntry)(nil)).Elem()
}

func (o GetOrgMetadataEntryOutput) ToGetOrgMetadataEntryOutput() GetOrgMetadataEntryOutput {
	return o
}

func (o GetOrgMetadataEntryOutput) ToGetOrgMetadataEntryOutputWithContext(ctx context.Context) GetOrgMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetOrgMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetOrgMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetOrgMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetOrgMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetOrgMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetOrgMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetOrgMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgMetadataEntry)(nil)).Elem()
}

func (o GetOrgMetadataEntryArrayOutput) ToGetOrgMetadataEntryArrayOutput() GetOrgMetadataEntryArrayOutput {
	return o
}

func (o GetOrgMetadataEntryArrayOutput) ToGetOrgMetadataEntryArrayOutputWithContext(ctx context.Context) GetOrgMetadataEntryArrayOutput {
	return o
}

func (o GetOrgMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetOrgMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgMetadataEntry {
		return vs[0].([]GetOrgMetadataEntry)[vs[1].(int)]
	}).(GetOrgMetadataEntryOutput)
}

type GetOrgOidcClaimsMapping struct {
	// Email claim mapping
	Email string `pulumi:"email"`
	// First name claim mapping
	FirstName string `pulumi:"firstName"`
	// Full name claim mapping
	FullName string `pulumi:"fullName"`
	// Groups claim mapping
	Groups string `pulumi:"groups"`
	// Last name claim mapping
	LastName string `pulumi:"lastName"`
	// Roles claim mapping
	Roles string `pulumi:"roles"`
	// Subject claim mapping
	Subject string `pulumi:"subject"`
}

// GetOrgOidcClaimsMappingInput is an input type that accepts GetOrgOidcClaimsMappingArgs and GetOrgOidcClaimsMappingOutput values.
// You can construct a concrete instance of `GetOrgOidcClaimsMappingInput` via:
//
//	GetOrgOidcClaimsMappingArgs{...}
type GetOrgOidcClaimsMappingInput interface {
	pulumi.Input

	ToGetOrgOidcClaimsMappingOutput() GetOrgOidcClaimsMappingOutput
	ToGetOrgOidcClaimsMappingOutputWithContext(context.Context) GetOrgOidcClaimsMappingOutput
}

type GetOrgOidcClaimsMappingArgs struct {
	// Email claim mapping
	Email pulumi.StringInput `pulumi:"email"`
	// First name claim mapping
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// Full name claim mapping
	FullName pulumi.StringInput `pulumi:"fullName"`
	// Groups claim mapping
	Groups pulumi.StringInput `pulumi:"groups"`
	// Last name claim mapping
	LastName pulumi.StringInput `pulumi:"lastName"`
	// Roles claim mapping
	Roles pulumi.StringInput `pulumi:"roles"`
	// Subject claim mapping
	Subject pulumi.StringInput `pulumi:"subject"`
}

func (GetOrgOidcClaimsMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgOidcClaimsMapping)(nil)).Elem()
}

func (i GetOrgOidcClaimsMappingArgs) ToGetOrgOidcClaimsMappingOutput() GetOrgOidcClaimsMappingOutput {
	return i.ToGetOrgOidcClaimsMappingOutputWithContext(context.Background())
}

func (i GetOrgOidcClaimsMappingArgs) ToGetOrgOidcClaimsMappingOutputWithContext(ctx context.Context) GetOrgOidcClaimsMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgOidcClaimsMappingOutput)
}

// GetOrgOidcClaimsMappingArrayInput is an input type that accepts GetOrgOidcClaimsMappingArray and GetOrgOidcClaimsMappingArrayOutput values.
// You can construct a concrete instance of `GetOrgOidcClaimsMappingArrayInput` via:
//
//	GetOrgOidcClaimsMappingArray{ GetOrgOidcClaimsMappingArgs{...} }
type GetOrgOidcClaimsMappingArrayInput interface {
	pulumi.Input

	ToGetOrgOidcClaimsMappingArrayOutput() GetOrgOidcClaimsMappingArrayOutput
	ToGetOrgOidcClaimsMappingArrayOutputWithContext(context.Context) GetOrgOidcClaimsMappingArrayOutput
}

type GetOrgOidcClaimsMappingArray []GetOrgOidcClaimsMappingInput

func (GetOrgOidcClaimsMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgOidcClaimsMapping)(nil)).Elem()
}

func (i GetOrgOidcClaimsMappingArray) ToGetOrgOidcClaimsMappingArrayOutput() GetOrgOidcClaimsMappingArrayOutput {
	return i.ToGetOrgOidcClaimsMappingArrayOutputWithContext(context.Background())
}

func (i GetOrgOidcClaimsMappingArray) ToGetOrgOidcClaimsMappingArrayOutputWithContext(ctx context.Context) GetOrgOidcClaimsMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgOidcClaimsMappingArrayOutput)
}

type GetOrgOidcClaimsMappingOutput struct{ *pulumi.OutputState }

func (GetOrgOidcClaimsMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgOidcClaimsMapping)(nil)).Elem()
}

func (o GetOrgOidcClaimsMappingOutput) ToGetOrgOidcClaimsMappingOutput() GetOrgOidcClaimsMappingOutput {
	return o
}

func (o GetOrgOidcClaimsMappingOutput) ToGetOrgOidcClaimsMappingOutputWithContext(ctx context.Context) GetOrgOidcClaimsMappingOutput {
	return o
}

// Email claim mapping
func (o GetOrgOidcClaimsMappingOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcClaimsMapping) string { return v.Email }).(pulumi.StringOutput)
}

// First name claim mapping
func (o GetOrgOidcClaimsMappingOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcClaimsMapping) string { return v.FirstName }).(pulumi.StringOutput)
}

// Full name claim mapping
func (o GetOrgOidcClaimsMappingOutput) FullName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcClaimsMapping) string { return v.FullName }).(pulumi.StringOutput)
}

// Groups claim mapping
func (o GetOrgOidcClaimsMappingOutput) Groups() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcClaimsMapping) string { return v.Groups }).(pulumi.StringOutput)
}

// Last name claim mapping
func (o GetOrgOidcClaimsMappingOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcClaimsMapping) string { return v.LastName }).(pulumi.StringOutput)
}

// Roles claim mapping
func (o GetOrgOidcClaimsMappingOutput) Roles() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcClaimsMapping) string { return v.Roles }).(pulumi.StringOutput)
}

// Subject claim mapping
func (o GetOrgOidcClaimsMappingOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcClaimsMapping) string { return v.Subject }).(pulumi.StringOutput)
}

type GetOrgOidcClaimsMappingArrayOutput struct{ *pulumi.OutputState }

func (GetOrgOidcClaimsMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgOidcClaimsMapping)(nil)).Elem()
}

func (o GetOrgOidcClaimsMappingArrayOutput) ToGetOrgOidcClaimsMappingArrayOutput() GetOrgOidcClaimsMappingArrayOutput {
	return o
}

func (o GetOrgOidcClaimsMappingArrayOutput) ToGetOrgOidcClaimsMappingArrayOutputWithContext(ctx context.Context) GetOrgOidcClaimsMappingArrayOutput {
	return o
}

func (o GetOrgOidcClaimsMappingArrayOutput) Index(i pulumi.IntInput) GetOrgOidcClaimsMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgOidcClaimsMapping {
		return vs[0].([]GetOrgOidcClaimsMapping)[vs[1].(int)]
	}).(GetOrgOidcClaimsMappingOutput)
}

type GetOrgOidcKey struct {
	// Algorithm of the key
	Algorithm string `pulumi:"algorithm"`
	// The certificate contents
	Certificate string `pulumi:"certificate"`
	// Expiration date for the certificate
	ExpirationDate string `pulumi:"expirationDate"`
	// ID of the key
	Id string `pulumi:"id"`
}

// GetOrgOidcKeyInput is an input type that accepts GetOrgOidcKeyArgs and GetOrgOidcKeyOutput values.
// You can construct a concrete instance of `GetOrgOidcKeyInput` via:
//
//	GetOrgOidcKeyArgs{...}
type GetOrgOidcKeyInput interface {
	pulumi.Input

	ToGetOrgOidcKeyOutput() GetOrgOidcKeyOutput
	ToGetOrgOidcKeyOutputWithContext(context.Context) GetOrgOidcKeyOutput
}

type GetOrgOidcKeyArgs struct {
	// Algorithm of the key
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The certificate contents
	Certificate pulumi.StringInput `pulumi:"certificate"`
	// Expiration date for the certificate
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// ID of the key
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetOrgOidcKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgOidcKey)(nil)).Elem()
}

func (i GetOrgOidcKeyArgs) ToGetOrgOidcKeyOutput() GetOrgOidcKeyOutput {
	return i.ToGetOrgOidcKeyOutputWithContext(context.Background())
}

func (i GetOrgOidcKeyArgs) ToGetOrgOidcKeyOutputWithContext(ctx context.Context) GetOrgOidcKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgOidcKeyOutput)
}

// GetOrgOidcKeyArrayInput is an input type that accepts GetOrgOidcKeyArray and GetOrgOidcKeyArrayOutput values.
// You can construct a concrete instance of `GetOrgOidcKeyArrayInput` via:
//
//	GetOrgOidcKeyArray{ GetOrgOidcKeyArgs{...} }
type GetOrgOidcKeyArrayInput interface {
	pulumi.Input

	ToGetOrgOidcKeyArrayOutput() GetOrgOidcKeyArrayOutput
	ToGetOrgOidcKeyArrayOutputWithContext(context.Context) GetOrgOidcKeyArrayOutput
}

type GetOrgOidcKeyArray []GetOrgOidcKeyInput

func (GetOrgOidcKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgOidcKey)(nil)).Elem()
}

func (i GetOrgOidcKeyArray) ToGetOrgOidcKeyArrayOutput() GetOrgOidcKeyArrayOutput {
	return i.ToGetOrgOidcKeyArrayOutputWithContext(context.Background())
}

func (i GetOrgOidcKeyArray) ToGetOrgOidcKeyArrayOutputWithContext(ctx context.Context) GetOrgOidcKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgOidcKeyArrayOutput)
}

type GetOrgOidcKeyOutput struct{ *pulumi.OutputState }

func (GetOrgOidcKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgOidcKey)(nil)).Elem()
}

func (o GetOrgOidcKeyOutput) ToGetOrgOidcKeyOutput() GetOrgOidcKeyOutput {
	return o
}

func (o GetOrgOidcKeyOutput) ToGetOrgOidcKeyOutputWithContext(ctx context.Context) GetOrgOidcKeyOutput {
	return o
}

// Algorithm of the key
func (o GetOrgOidcKeyOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcKey) string { return v.Algorithm }).(pulumi.StringOutput)
}

// The certificate contents
func (o GetOrgOidcKeyOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcKey) string { return v.Certificate }).(pulumi.StringOutput)
}

// Expiration date for the certificate
func (o GetOrgOidcKeyOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcKey) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// ID of the key
func (o GetOrgOidcKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgOidcKey) string { return v.Id }).(pulumi.StringOutput)
}

type GetOrgOidcKeyArrayOutput struct{ *pulumi.OutputState }

func (GetOrgOidcKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgOidcKey)(nil)).Elem()
}

func (o GetOrgOidcKeyArrayOutput) ToGetOrgOidcKeyArrayOutput() GetOrgOidcKeyArrayOutput {
	return o
}

func (o GetOrgOidcKeyArrayOutput) ToGetOrgOidcKeyArrayOutputWithContext(ctx context.Context) GetOrgOidcKeyArrayOutput {
	return o
}

func (o GetOrgOidcKeyArrayOutput) Index(i pulumi.IntInput) GetOrgOidcKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgOidcKey {
		return vs[0].([]GetOrgOidcKey)[vs[1].(int)]
	}).(GetOrgOidcKeyOutput)
}

type GetOrgVappLease struct {
	// If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted.
	DeleteOnStorageLeaseExpiration bool `pulumi:"deleteOnStorageLeaseExpiration"`
	// How long vApps can run before they are automatically stopped (in seconds)
	MaximumRuntimeLeaseInSec int `pulumi:"maximumRuntimeLeaseInSec"`
	// How long stopped vApps are available before being automatically cleaned up (in seconds)
	MaximumStorageLeaseInSec int `pulumi:"maximumStorageLeaseInSec"`
	// When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires
	PowerOffOnRuntimeLeaseExpiration bool `pulumi:"powerOffOnRuntimeLeaseExpiration"`
}

// GetOrgVappLeaseInput is an input type that accepts GetOrgVappLeaseArgs and GetOrgVappLeaseOutput values.
// You can construct a concrete instance of `GetOrgVappLeaseInput` via:
//
//	GetOrgVappLeaseArgs{...}
type GetOrgVappLeaseInput interface {
	pulumi.Input

	ToGetOrgVappLeaseOutput() GetOrgVappLeaseOutput
	ToGetOrgVappLeaseOutputWithContext(context.Context) GetOrgVappLeaseOutput
}

type GetOrgVappLeaseArgs struct {
	// If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted.
	DeleteOnStorageLeaseExpiration pulumi.BoolInput `pulumi:"deleteOnStorageLeaseExpiration"`
	// How long vApps can run before they are automatically stopped (in seconds)
	MaximumRuntimeLeaseInSec pulumi.IntInput `pulumi:"maximumRuntimeLeaseInSec"`
	// How long stopped vApps are available before being automatically cleaned up (in seconds)
	MaximumStorageLeaseInSec pulumi.IntInput `pulumi:"maximumStorageLeaseInSec"`
	// When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires
	PowerOffOnRuntimeLeaseExpiration pulumi.BoolInput `pulumi:"powerOffOnRuntimeLeaseExpiration"`
}

func (GetOrgVappLeaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVappLease)(nil)).Elem()
}

func (i GetOrgVappLeaseArgs) ToGetOrgVappLeaseOutput() GetOrgVappLeaseOutput {
	return i.ToGetOrgVappLeaseOutputWithContext(context.Background())
}

func (i GetOrgVappLeaseArgs) ToGetOrgVappLeaseOutputWithContext(ctx context.Context) GetOrgVappLeaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVappLeaseOutput)
}

// GetOrgVappLeaseArrayInput is an input type that accepts GetOrgVappLeaseArray and GetOrgVappLeaseArrayOutput values.
// You can construct a concrete instance of `GetOrgVappLeaseArrayInput` via:
//
//	GetOrgVappLeaseArray{ GetOrgVappLeaseArgs{...} }
type GetOrgVappLeaseArrayInput interface {
	pulumi.Input

	ToGetOrgVappLeaseArrayOutput() GetOrgVappLeaseArrayOutput
	ToGetOrgVappLeaseArrayOutputWithContext(context.Context) GetOrgVappLeaseArrayOutput
}

type GetOrgVappLeaseArray []GetOrgVappLeaseInput

func (GetOrgVappLeaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVappLease)(nil)).Elem()
}

func (i GetOrgVappLeaseArray) ToGetOrgVappLeaseArrayOutput() GetOrgVappLeaseArrayOutput {
	return i.ToGetOrgVappLeaseArrayOutputWithContext(context.Background())
}

func (i GetOrgVappLeaseArray) ToGetOrgVappLeaseArrayOutputWithContext(ctx context.Context) GetOrgVappLeaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVappLeaseArrayOutput)
}

type GetOrgVappLeaseOutput struct{ *pulumi.OutputState }

func (GetOrgVappLeaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVappLease)(nil)).Elem()
}

func (o GetOrgVappLeaseOutput) ToGetOrgVappLeaseOutput() GetOrgVappLeaseOutput {
	return o
}

func (o GetOrgVappLeaseOutput) ToGetOrgVappLeaseOutputWithContext(ctx context.Context) GetOrgVappLeaseOutput {
	return o
}

// If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted.
func (o GetOrgVappLeaseOutput) DeleteOnStorageLeaseExpiration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgVappLease) bool { return v.DeleteOnStorageLeaseExpiration }).(pulumi.BoolOutput)
}

// How long vApps can run before they are automatically stopped (in seconds)
func (o GetOrgVappLeaseOutput) MaximumRuntimeLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVappLease) int { return v.MaximumRuntimeLeaseInSec }).(pulumi.IntOutput)
}

// How long stopped vApps are available before being automatically cleaned up (in seconds)
func (o GetOrgVappLeaseOutput) MaximumStorageLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVappLease) int { return v.MaximumStorageLeaseInSec }).(pulumi.IntOutput)
}

// When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires
func (o GetOrgVappLeaseOutput) PowerOffOnRuntimeLeaseExpiration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgVappLease) bool { return v.PowerOffOnRuntimeLeaseExpiration }).(pulumi.BoolOutput)
}

type GetOrgVappLeaseArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVappLeaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVappLease)(nil)).Elem()
}

func (o GetOrgVappLeaseArrayOutput) ToGetOrgVappLeaseArrayOutput() GetOrgVappLeaseArrayOutput {
	return o
}

func (o GetOrgVappLeaseArrayOutput) ToGetOrgVappLeaseArrayOutputWithContext(ctx context.Context) GetOrgVappLeaseArrayOutput {
	return o
}

func (o GetOrgVappLeaseArrayOutput) Index(i pulumi.IntInput) GetOrgVappLeaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVappLease {
		return vs[0].([]GetOrgVappLease)[vs[1].(int)]
	}).(GetOrgVappLeaseOutput)
}

type GetOrgVappTemplateLease struct {
	// If true, storage for a vAppTemplate is deleted when the vAppTemplate lease expires. If false, the storage is flagged for deletion, but not deleted
	DeleteOnStorageLeaseExpiration bool `pulumi:"deleteOnStorageLeaseExpiration"`
	// How long vApp templates are available before being automatically cleaned up (in seconds)
	MaximumStorageLeaseInSec int `pulumi:"maximumStorageLeaseInSec"`
}

// GetOrgVappTemplateLeaseInput is an input type that accepts GetOrgVappTemplateLeaseArgs and GetOrgVappTemplateLeaseOutput values.
// You can construct a concrete instance of `GetOrgVappTemplateLeaseInput` via:
//
//	GetOrgVappTemplateLeaseArgs{...}
type GetOrgVappTemplateLeaseInput interface {
	pulumi.Input

	ToGetOrgVappTemplateLeaseOutput() GetOrgVappTemplateLeaseOutput
	ToGetOrgVappTemplateLeaseOutputWithContext(context.Context) GetOrgVappTemplateLeaseOutput
}

type GetOrgVappTemplateLeaseArgs struct {
	// If true, storage for a vAppTemplate is deleted when the vAppTemplate lease expires. If false, the storage is flagged for deletion, but not deleted
	DeleteOnStorageLeaseExpiration pulumi.BoolInput `pulumi:"deleteOnStorageLeaseExpiration"`
	// How long vApp templates are available before being automatically cleaned up (in seconds)
	MaximumStorageLeaseInSec pulumi.IntInput `pulumi:"maximumStorageLeaseInSec"`
}

func (GetOrgVappTemplateLeaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVappTemplateLease)(nil)).Elem()
}

func (i GetOrgVappTemplateLeaseArgs) ToGetOrgVappTemplateLeaseOutput() GetOrgVappTemplateLeaseOutput {
	return i.ToGetOrgVappTemplateLeaseOutputWithContext(context.Background())
}

func (i GetOrgVappTemplateLeaseArgs) ToGetOrgVappTemplateLeaseOutputWithContext(ctx context.Context) GetOrgVappTemplateLeaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVappTemplateLeaseOutput)
}

// GetOrgVappTemplateLeaseArrayInput is an input type that accepts GetOrgVappTemplateLeaseArray and GetOrgVappTemplateLeaseArrayOutput values.
// You can construct a concrete instance of `GetOrgVappTemplateLeaseArrayInput` via:
//
//	GetOrgVappTemplateLeaseArray{ GetOrgVappTemplateLeaseArgs{...} }
type GetOrgVappTemplateLeaseArrayInput interface {
	pulumi.Input

	ToGetOrgVappTemplateLeaseArrayOutput() GetOrgVappTemplateLeaseArrayOutput
	ToGetOrgVappTemplateLeaseArrayOutputWithContext(context.Context) GetOrgVappTemplateLeaseArrayOutput
}

type GetOrgVappTemplateLeaseArray []GetOrgVappTemplateLeaseInput

func (GetOrgVappTemplateLeaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVappTemplateLease)(nil)).Elem()
}

func (i GetOrgVappTemplateLeaseArray) ToGetOrgVappTemplateLeaseArrayOutput() GetOrgVappTemplateLeaseArrayOutput {
	return i.ToGetOrgVappTemplateLeaseArrayOutputWithContext(context.Background())
}

func (i GetOrgVappTemplateLeaseArray) ToGetOrgVappTemplateLeaseArrayOutputWithContext(ctx context.Context) GetOrgVappTemplateLeaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVappTemplateLeaseArrayOutput)
}

type GetOrgVappTemplateLeaseOutput struct{ *pulumi.OutputState }

func (GetOrgVappTemplateLeaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVappTemplateLease)(nil)).Elem()
}

func (o GetOrgVappTemplateLeaseOutput) ToGetOrgVappTemplateLeaseOutput() GetOrgVappTemplateLeaseOutput {
	return o
}

func (o GetOrgVappTemplateLeaseOutput) ToGetOrgVappTemplateLeaseOutputWithContext(ctx context.Context) GetOrgVappTemplateLeaseOutput {
	return o
}

// If true, storage for a vAppTemplate is deleted when the vAppTemplate lease expires. If false, the storage is flagged for deletion, but not deleted
func (o GetOrgVappTemplateLeaseOutput) DeleteOnStorageLeaseExpiration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgVappTemplateLease) bool { return v.DeleteOnStorageLeaseExpiration }).(pulumi.BoolOutput)
}

// How long vApp templates are available before being automatically cleaned up (in seconds)
func (o GetOrgVappTemplateLeaseOutput) MaximumStorageLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVappTemplateLease) int { return v.MaximumStorageLeaseInSec }).(pulumi.IntOutput)
}

type GetOrgVappTemplateLeaseArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVappTemplateLeaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVappTemplateLease)(nil)).Elem()
}

func (o GetOrgVappTemplateLeaseArrayOutput) ToGetOrgVappTemplateLeaseArrayOutput() GetOrgVappTemplateLeaseArrayOutput {
	return o
}

func (o GetOrgVappTemplateLeaseArrayOutput) ToGetOrgVappTemplateLeaseArrayOutputWithContext(ctx context.Context) GetOrgVappTemplateLeaseArrayOutput {
	return o
}

func (o GetOrgVappTemplateLeaseArrayOutput) Index(i pulumi.IntInput) GetOrgVappTemplateLeaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVappTemplateLease {
		return vs[0].([]GetOrgVappTemplateLease)[vs[1].(int)]
	}).(GetOrgVappTemplateLeaseOutput)
}

type GetOrgVdcComputeCapacity struct {
	Cpus     []GetOrgVdcComputeCapacityCpus   `pulumi:"cpus"`
	Memories []GetOrgVdcComputeCapacityMemory `pulumi:"memories"`
}

// GetOrgVdcComputeCapacityInput is an input type that accepts GetOrgVdcComputeCapacityArgs and GetOrgVdcComputeCapacityOutput values.
// You can construct a concrete instance of `GetOrgVdcComputeCapacityInput` via:
//
//	GetOrgVdcComputeCapacityArgs{...}
type GetOrgVdcComputeCapacityInput interface {
	pulumi.Input

	ToGetOrgVdcComputeCapacityOutput() GetOrgVdcComputeCapacityOutput
	ToGetOrgVdcComputeCapacityOutputWithContext(context.Context) GetOrgVdcComputeCapacityOutput
}

type GetOrgVdcComputeCapacityArgs struct {
	Cpus     GetOrgVdcComputeCapacityCpusArrayInput   `pulumi:"cpus"`
	Memories GetOrgVdcComputeCapacityMemoryArrayInput `pulumi:"memories"`
}

func (GetOrgVdcComputeCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcComputeCapacity)(nil)).Elem()
}

func (i GetOrgVdcComputeCapacityArgs) ToGetOrgVdcComputeCapacityOutput() GetOrgVdcComputeCapacityOutput {
	return i.ToGetOrgVdcComputeCapacityOutputWithContext(context.Background())
}

func (i GetOrgVdcComputeCapacityArgs) ToGetOrgVdcComputeCapacityOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcComputeCapacityOutput)
}

// GetOrgVdcComputeCapacityArrayInput is an input type that accepts GetOrgVdcComputeCapacityArray and GetOrgVdcComputeCapacityArrayOutput values.
// You can construct a concrete instance of `GetOrgVdcComputeCapacityArrayInput` via:
//
//	GetOrgVdcComputeCapacityArray{ GetOrgVdcComputeCapacityArgs{...} }
type GetOrgVdcComputeCapacityArrayInput interface {
	pulumi.Input

	ToGetOrgVdcComputeCapacityArrayOutput() GetOrgVdcComputeCapacityArrayOutput
	ToGetOrgVdcComputeCapacityArrayOutputWithContext(context.Context) GetOrgVdcComputeCapacityArrayOutput
}

type GetOrgVdcComputeCapacityArray []GetOrgVdcComputeCapacityInput

func (GetOrgVdcComputeCapacityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcComputeCapacity)(nil)).Elem()
}

func (i GetOrgVdcComputeCapacityArray) ToGetOrgVdcComputeCapacityArrayOutput() GetOrgVdcComputeCapacityArrayOutput {
	return i.ToGetOrgVdcComputeCapacityArrayOutputWithContext(context.Background())
}

func (i GetOrgVdcComputeCapacityArray) ToGetOrgVdcComputeCapacityArrayOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcComputeCapacityArrayOutput)
}

type GetOrgVdcComputeCapacityOutput struct{ *pulumi.OutputState }

func (GetOrgVdcComputeCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcComputeCapacity)(nil)).Elem()
}

func (o GetOrgVdcComputeCapacityOutput) ToGetOrgVdcComputeCapacityOutput() GetOrgVdcComputeCapacityOutput {
	return o
}

func (o GetOrgVdcComputeCapacityOutput) ToGetOrgVdcComputeCapacityOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityOutput {
	return o
}

func (o GetOrgVdcComputeCapacityOutput) Cpus() GetOrgVdcComputeCapacityCpusArrayOutput {
	return o.ApplyT(func(v GetOrgVdcComputeCapacity) []GetOrgVdcComputeCapacityCpus { return v.Cpus }).(GetOrgVdcComputeCapacityCpusArrayOutput)
}

func (o GetOrgVdcComputeCapacityOutput) Memories() GetOrgVdcComputeCapacityMemoryArrayOutput {
	return o.ApplyT(func(v GetOrgVdcComputeCapacity) []GetOrgVdcComputeCapacityMemory { return v.Memories }).(GetOrgVdcComputeCapacityMemoryArrayOutput)
}

type GetOrgVdcComputeCapacityArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcComputeCapacityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcComputeCapacity)(nil)).Elem()
}

func (o GetOrgVdcComputeCapacityArrayOutput) ToGetOrgVdcComputeCapacityArrayOutput() GetOrgVdcComputeCapacityArrayOutput {
	return o
}

func (o GetOrgVdcComputeCapacityArrayOutput) ToGetOrgVdcComputeCapacityArrayOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityArrayOutput {
	return o
}

func (o GetOrgVdcComputeCapacityArrayOutput) Index(i pulumi.IntInput) GetOrgVdcComputeCapacityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVdcComputeCapacity {
		return vs[0].([]GetOrgVdcComputeCapacity)[vs[1].(int)]
	}).(GetOrgVdcComputeCapacityOutput)
}

type GetOrgVdcComputeCapacityCpus struct {
	// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
	Allocated int `pulumi:"allocated"`
	// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
	Limit    int `pulumi:"limit"`
	Reserved int `pulumi:"reserved"`
	Used     int `pulumi:"used"`
}

// GetOrgVdcComputeCapacityCpusInput is an input type that accepts GetOrgVdcComputeCapacityCpusArgs and GetOrgVdcComputeCapacityCpusOutput values.
// You can construct a concrete instance of `GetOrgVdcComputeCapacityCpusInput` via:
//
//	GetOrgVdcComputeCapacityCpusArgs{...}
type GetOrgVdcComputeCapacityCpusInput interface {
	pulumi.Input

	ToGetOrgVdcComputeCapacityCpusOutput() GetOrgVdcComputeCapacityCpusOutput
	ToGetOrgVdcComputeCapacityCpusOutputWithContext(context.Context) GetOrgVdcComputeCapacityCpusOutput
}

type GetOrgVdcComputeCapacityCpusArgs struct {
	// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
	Allocated pulumi.IntInput `pulumi:"allocated"`
	// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
	Limit    pulumi.IntInput `pulumi:"limit"`
	Reserved pulumi.IntInput `pulumi:"reserved"`
	Used     pulumi.IntInput `pulumi:"used"`
}

func (GetOrgVdcComputeCapacityCpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcComputeCapacityCpus)(nil)).Elem()
}

func (i GetOrgVdcComputeCapacityCpusArgs) ToGetOrgVdcComputeCapacityCpusOutput() GetOrgVdcComputeCapacityCpusOutput {
	return i.ToGetOrgVdcComputeCapacityCpusOutputWithContext(context.Background())
}

func (i GetOrgVdcComputeCapacityCpusArgs) ToGetOrgVdcComputeCapacityCpusOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityCpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcComputeCapacityCpusOutput)
}

// GetOrgVdcComputeCapacityCpusArrayInput is an input type that accepts GetOrgVdcComputeCapacityCpusArray and GetOrgVdcComputeCapacityCpusArrayOutput values.
// You can construct a concrete instance of `GetOrgVdcComputeCapacityCpusArrayInput` via:
//
//	GetOrgVdcComputeCapacityCpusArray{ GetOrgVdcComputeCapacityCpusArgs{...} }
type GetOrgVdcComputeCapacityCpusArrayInput interface {
	pulumi.Input

	ToGetOrgVdcComputeCapacityCpusArrayOutput() GetOrgVdcComputeCapacityCpusArrayOutput
	ToGetOrgVdcComputeCapacityCpusArrayOutputWithContext(context.Context) GetOrgVdcComputeCapacityCpusArrayOutput
}

type GetOrgVdcComputeCapacityCpusArray []GetOrgVdcComputeCapacityCpusInput

func (GetOrgVdcComputeCapacityCpusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcComputeCapacityCpus)(nil)).Elem()
}

func (i GetOrgVdcComputeCapacityCpusArray) ToGetOrgVdcComputeCapacityCpusArrayOutput() GetOrgVdcComputeCapacityCpusArrayOutput {
	return i.ToGetOrgVdcComputeCapacityCpusArrayOutputWithContext(context.Background())
}

func (i GetOrgVdcComputeCapacityCpusArray) ToGetOrgVdcComputeCapacityCpusArrayOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityCpusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcComputeCapacityCpusArrayOutput)
}

type GetOrgVdcComputeCapacityCpusOutput struct{ *pulumi.OutputState }

func (GetOrgVdcComputeCapacityCpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcComputeCapacityCpus)(nil)).Elem()
}

func (o GetOrgVdcComputeCapacityCpusOutput) ToGetOrgVdcComputeCapacityCpusOutput() GetOrgVdcComputeCapacityCpusOutput {
	return o
}

func (o GetOrgVdcComputeCapacityCpusOutput) ToGetOrgVdcComputeCapacityCpusOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityCpusOutput {
	return o
}

// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
func (o GetOrgVdcComputeCapacityCpusOutput) Allocated() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcComputeCapacityCpus) int { return v.Allocated }).(pulumi.IntOutput)
}

// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
func (o GetOrgVdcComputeCapacityCpusOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcComputeCapacityCpus) int { return v.Limit }).(pulumi.IntOutput)
}

func (o GetOrgVdcComputeCapacityCpusOutput) Reserved() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcComputeCapacityCpus) int { return v.Reserved }).(pulumi.IntOutput)
}

func (o GetOrgVdcComputeCapacityCpusOutput) Used() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcComputeCapacityCpus) int { return v.Used }).(pulumi.IntOutput)
}

type GetOrgVdcComputeCapacityCpusArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcComputeCapacityCpusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcComputeCapacityCpus)(nil)).Elem()
}

func (o GetOrgVdcComputeCapacityCpusArrayOutput) ToGetOrgVdcComputeCapacityCpusArrayOutput() GetOrgVdcComputeCapacityCpusArrayOutput {
	return o
}

func (o GetOrgVdcComputeCapacityCpusArrayOutput) ToGetOrgVdcComputeCapacityCpusArrayOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityCpusArrayOutput {
	return o
}

func (o GetOrgVdcComputeCapacityCpusArrayOutput) Index(i pulumi.IntInput) GetOrgVdcComputeCapacityCpusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVdcComputeCapacityCpus {
		return vs[0].([]GetOrgVdcComputeCapacityCpus)[vs[1].(int)]
	}).(GetOrgVdcComputeCapacityCpusOutput)
}

type GetOrgVdcComputeCapacityMemory struct {
	// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
	Allocated int `pulumi:"allocated"`
	// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
	Limit    int `pulumi:"limit"`
	Reserved int `pulumi:"reserved"`
	Used     int `pulumi:"used"`
}

// GetOrgVdcComputeCapacityMemoryInput is an input type that accepts GetOrgVdcComputeCapacityMemoryArgs and GetOrgVdcComputeCapacityMemoryOutput values.
// You can construct a concrete instance of `GetOrgVdcComputeCapacityMemoryInput` via:
//
//	GetOrgVdcComputeCapacityMemoryArgs{...}
type GetOrgVdcComputeCapacityMemoryInput interface {
	pulumi.Input

	ToGetOrgVdcComputeCapacityMemoryOutput() GetOrgVdcComputeCapacityMemoryOutput
	ToGetOrgVdcComputeCapacityMemoryOutputWithContext(context.Context) GetOrgVdcComputeCapacityMemoryOutput
}

type GetOrgVdcComputeCapacityMemoryArgs struct {
	// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
	Allocated pulumi.IntInput `pulumi:"allocated"`
	// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
	Limit    pulumi.IntInput `pulumi:"limit"`
	Reserved pulumi.IntInput `pulumi:"reserved"`
	Used     pulumi.IntInput `pulumi:"used"`
}

func (GetOrgVdcComputeCapacityMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcComputeCapacityMemory)(nil)).Elem()
}

func (i GetOrgVdcComputeCapacityMemoryArgs) ToGetOrgVdcComputeCapacityMemoryOutput() GetOrgVdcComputeCapacityMemoryOutput {
	return i.ToGetOrgVdcComputeCapacityMemoryOutputWithContext(context.Background())
}

func (i GetOrgVdcComputeCapacityMemoryArgs) ToGetOrgVdcComputeCapacityMemoryOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcComputeCapacityMemoryOutput)
}

// GetOrgVdcComputeCapacityMemoryArrayInput is an input type that accepts GetOrgVdcComputeCapacityMemoryArray and GetOrgVdcComputeCapacityMemoryArrayOutput values.
// You can construct a concrete instance of `GetOrgVdcComputeCapacityMemoryArrayInput` via:
//
//	GetOrgVdcComputeCapacityMemoryArray{ GetOrgVdcComputeCapacityMemoryArgs{...} }
type GetOrgVdcComputeCapacityMemoryArrayInput interface {
	pulumi.Input

	ToGetOrgVdcComputeCapacityMemoryArrayOutput() GetOrgVdcComputeCapacityMemoryArrayOutput
	ToGetOrgVdcComputeCapacityMemoryArrayOutputWithContext(context.Context) GetOrgVdcComputeCapacityMemoryArrayOutput
}

type GetOrgVdcComputeCapacityMemoryArray []GetOrgVdcComputeCapacityMemoryInput

func (GetOrgVdcComputeCapacityMemoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcComputeCapacityMemory)(nil)).Elem()
}

func (i GetOrgVdcComputeCapacityMemoryArray) ToGetOrgVdcComputeCapacityMemoryArrayOutput() GetOrgVdcComputeCapacityMemoryArrayOutput {
	return i.ToGetOrgVdcComputeCapacityMemoryArrayOutputWithContext(context.Background())
}

func (i GetOrgVdcComputeCapacityMemoryArray) ToGetOrgVdcComputeCapacityMemoryArrayOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityMemoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcComputeCapacityMemoryArrayOutput)
}

type GetOrgVdcComputeCapacityMemoryOutput struct{ *pulumi.OutputState }

func (GetOrgVdcComputeCapacityMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcComputeCapacityMemory)(nil)).Elem()
}

func (o GetOrgVdcComputeCapacityMemoryOutput) ToGetOrgVdcComputeCapacityMemoryOutput() GetOrgVdcComputeCapacityMemoryOutput {
	return o
}

func (o GetOrgVdcComputeCapacityMemoryOutput) ToGetOrgVdcComputeCapacityMemoryOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityMemoryOutput {
	return o
}

// Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).
func (o GetOrgVdcComputeCapacityMemoryOutput) Allocated() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcComputeCapacityMemory) int { return v.Allocated }).(pulumi.IntOutput)
}

// Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).
func (o GetOrgVdcComputeCapacityMemoryOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcComputeCapacityMemory) int { return v.Limit }).(pulumi.IntOutput)
}

func (o GetOrgVdcComputeCapacityMemoryOutput) Reserved() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcComputeCapacityMemory) int { return v.Reserved }).(pulumi.IntOutput)
}

func (o GetOrgVdcComputeCapacityMemoryOutput) Used() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcComputeCapacityMemory) int { return v.Used }).(pulumi.IntOutput)
}

type GetOrgVdcComputeCapacityMemoryArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcComputeCapacityMemoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcComputeCapacityMemory)(nil)).Elem()
}

func (o GetOrgVdcComputeCapacityMemoryArrayOutput) ToGetOrgVdcComputeCapacityMemoryArrayOutput() GetOrgVdcComputeCapacityMemoryArrayOutput {
	return o
}

func (o GetOrgVdcComputeCapacityMemoryArrayOutput) ToGetOrgVdcComputeCapacityMemoryArrayOutputWithContext(ctx context.Context) GetOrgVdcComputeCapacityMemoryArrayOutput {
	return o
}

func (o GetOrgVdcComputeCapacityMemoryArrayOutput) Index(i pulumi.IntInput) GetOrgVdcComputeCapacityMemoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVdcComputeCapacityMemory {
		return vs[0].([]GetOrgVdcComputeCapacityMemory)[vs[1].(int)]
	}).(GetOrgVdcComputeCapacityMemoryOutput)
}

type GetOrgVdcMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetOrgVdcMetadataEntryInput is an input type that accepts GetOrgVdcMetadataEntryArgs and GetOrgVdcMetadataEntryOutput values.
// You can construct a concrete instance of `GetOrgVdcMetadataEntryInput` via:
//
//	GetOrgVdcMetadataEntryArgs{...}
type GetOrgVdcMetadataEntryInput interface {
	pulumi.Input

	ToGetOrgVdcMetadataEntryOutput() GetOrgVdcMetadataEntryOutput
	ToGetOrgVdcMetadataEntryOutputWithContext(context.Context) GetOrgVdcMetadataEntryOutput
}

type GetOrgVdcMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetOrgVdcMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcMetadataEntry)(nil)).Elem()
}

func (i GetOrgVdcMetadataEntryArgs) ToGetOrgVdcMetadataEntryOutput() GetOrgVdcMetadataEntryOutput {
	return i.ToGetOrgVdcMetadataEntryOutputWithContext(context.Background())
}

func (i GetOrgVdcMetadataEntryArgs) ToGetOrgVdcMetadataEntryOutputWithContext(ctx context.Context) GetOrgVdcMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcMetadataEntryOutput)
}

// GetOrgVdcMetadataEntryArrayInput is an input type that accepts GetOrgVdcMetadataEntryArray and GetOrgVdcMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetOrgVdcMetadataEntryArrayInput` via:
//
//	GetOrgVdcMetadataEntryArray{ GetOrgVdcMetadataEntryArgs{...} }
type GetOrgVdcMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetOrgVdcMetadataEntryArrayOutput() GetOrgVdcMetadataEntryArrayOutput
	ToGetOrgVdcMetadataEntryArrayOutputWithContext(context.Context) GetOrgVdcMetadataEntryArrayOutput
}

type GetOrgVdcMetadataEntryArray []GetOrgVdcMetadataEntryInput

func (GetOrgVdcMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcMetadataEntry)(nil)).Elem()
}

func (i GetOrgVdcMetadataEntryArray) ToGetOrgVdcMetadataEntryArrayOutput() GetOrgVdcMetadataEntryArrayOutput {
	return i.ToGetOrgVdcMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetOrgVdcMetadataEntryArray) ToGetOrgVdcMetadataEntryArrayOutputWithContext(ctx context.Context) GetOrgVdcMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcMetadataEntryArrayOutput)
}

type GetOrgVdcMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetOrgVdcMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcMetadataEntry)(nil)).Elem()
}

func (o GetOrgVdcMetadataEntryOutput) ToGetOrgVdcMetadataEntryOutput() GetOrgVdcMetadataEntryOutput {
	return o
}

func (o GetOrgVdcMetadataEntryOutput) ToGetOrgVdcMetadataEntryOutputWithContext(ctx context.Context) GetOrgVdcMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetOrgVdcMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgVdcMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetOrgVdcMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetOrgVdcMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetOrgVdcMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetOrgVdcMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetOrgVdcMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcMetadataEntry)(nil)).Elem()
}

func (o GetOrgVdcMetadataEntryArrayOutput) ToGetOrgVdcMetadataEntryArrayOutput() GetOrgVdcMetadataEntryArrayOutput {
	return o
}

func (o GetOrgVdcMetadataEntryArrayOutput) ToGetOrgVdcMetadataEntryArrayOutputWithContext(ctx context.Context) GetOrgVdcMetadataEntryArrayOutput {
	return o
}

func (o GetOrgVdcMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetOrgVdcMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVdcMetadataEntry {
		return vs[0].([]GetOrgVdcMetadataEntry)[vs[1].(int)]
	}).(GetOrgVdcMetadataEntryOutput)
}

type GetOrgVdcStorageProfile struct {
	// True if this is default storage profile for this VDC. The default storage profile is used when an object that can specify a storage profile is created with no storage profile specified.
	Default bool `pulumi:"default"`
	// True if this storage profile is enabled for use in the VDC.
	Enabled bool `pulumi:"enabled"`
	// Maximum number of MB allocated for this storage profile. A value of 0 specifies unlimited MB.
	Limit int `pulumi:"limit"`
	// Organization VDC name
	Name string `pulumi:"name"`
	// Storage used in MB
	StorageUsedInMb int `pulumi:"storageUsedInMb"`
}

// GetOrgVdcStorageProfileInput is an input type that accepts GetOrgVdcStorageProfileArgs and GetOrgVdcStorageProfileOutput values.
// You can construct a concrete instance of `GetOrgVdcStorageProfileInput` via:
//
//	GetOrgVdcStorageProfileArgs{...}
type GetOrgVdcStorageProfileInput interface {
	pulumi.Input

	ToGetOrgVdcStorageProfileOutput() GetOrgVdcStorageProfileOutput
	ToGetOrgVdcStorageProfileOutputWithContext(context.Context) GetOrgVdcStorageProfileOutput
}

type GetOrgVdcStorageProfileArgs struct {
	// True if this is default storage profile for this VDC. The default storage profile is used when an object that can specify a storage profile is created with no storage profile specified.
	Default pulumi.BoolInput `pulumi:"default"`
	// True if this storage profile is enabled for use in the VDC.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Maximum number of MB allocated for this storage profile. A value of 0 specifies unlimited MB.
	Limit pulumi.IntInput `pulumi:"limit"`
	// Organization VDC name
	Name pulumi.StringInput `pulumi:"name"`
	// Storage used in MB
	StorageUsedInMb pulumi.IntInput `pulumi:"storageUsedInMb"`
}

func (GetOrgVdcStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcStorageProfile)(nil)).Elem()
}

func (i GetOrgVdcStorageProfileArgs) ToGetOrgVdcStorageProfileOutput() GetOrgVdcStorageProfileOutput {
	return i.ToGetOrgVdcStorageProfileOutputWithContext(context.Background())
}

func (i GetOrgVdcStorageProfileArgs) ToGetOrgVdcStorageProfileOutputWithContext(ctx context.Context) GetOrgVdcStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcStorageProfileOutput)
}

// GetOrgVdcStorageProfileArrayInput is an input type that accepts GetOrgVdcStorageProfileArray and GetOrgVdcStorageProfileArrayOutput values.
// You can construct a concrete instance of `GetOrgVdcStorageProfileArrayInput` via:
//
//	GetOrgVdcStorageProfileArray{ GetOrgVdcStorageProfileArgs{...} }
type GetOrgVdcStorageProfileArrayInput interface {
	pulumi.Input

	ToGetOrgVdcStorageProfileArrayOutput() GetOrgVdcStorageProfileArrayOutput
	ToGetOrgVdcStorageProfileArrayOutputWithContext(context.Context) GetOrgVdcStorageProfileArrayOutput
}

type GetOrgVdcStorageProfileArray []GetOrgVdcStorageProfileInput

func (GetOrgVdcStorageProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcStorageProfile)(nil)).Elem()
}

func (i GetOrgVdcStorageProfileArray) ToGetOrgVdcStorageProfileArrayOutput() GetOrgVdcStorageProfileArrayOutput {
	return i.ToGetOrgVdcStorageProfileArrayOutputWithContext(context.Background())
}

func (i GetOrgVdcStorageProfileArray) ToGetOrgVdcStorageProfileArrayOutputWithContext(ctx context.Context) GetOrgVdcStorageProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcStorageProfileArrayOutput)
}

type GetOrgVdcStorageProfileOutput struct{ *pulumi.OutputState }

func (GetOrgVdcStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcStorageProfile)(nil)).Elem()
}

func (o GetOrgVdcStorageProfileOutput) ToGetOrgVdcStorageProfileOutput() GetOrgVdcStorageProfileOutput {
	return o
}

func (o GetOrgVdcStorageProfileOutput) ToGetOrgVdcStorageProfileOutputWithContext(ctx context.Context) GetOrgVdcStorageProfileOutput {
	return o
}

// True if this is default storage profile for this VDC. The default storage profile is used when an object that can specify a storage profile is created with no storage profile specified.
func (o GetOrgVdcStorageProfileOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgVdcStorageProfile) bool { return v.Default }).(pulumi.BoolOutput)
}

// True if this storage profile is enabled for use in the VDC.
func (o GetOrgVdcStorageProfileOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgVdcStorageProfile) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Maximum number of MB allocated for this storage profile. A value of 0 specifies unlimited MB.
func (o GetOrgVdcStorageProfileOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcStorageProfile) int { return v.Limit }).(pulumi.IntOutput)
}

// Organization VDC name
func (o GetOrgVdcStorageProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcStorageProfile) string { return v.Name }).(pulumi.StringOutput)
}

// Storage used in MB
func (o GetOrgVdcStorageProfileOutput) StorageUsedInMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcStorageProfile) int { return v.StorageUsedInMb }).(pulumi.IntOutput)
}

type GetOrgVdcStorageProfileArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcStorageProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcStorageProfile)(nil)).Elem()
}

func (o GetOrgVdcStorageProfileArrayOutput) ToGetOrgVdcStorageProfileArrayOutput() GetOrgVdcStorageProfileArrayOutput {
	return o
}

func (o GetOrgVdcStorageProfileArrayOutput) ToGetOrgVdcStorageProfileArrayOutputWithContext(ctx context.Context) GetOrgVdcStorageProfileArrayOutput {
	return o
}

func (o GetOrgVdcStorageProfileArrayOutput) Index(i pulumi.IntInput) GetOrgVdcStorageProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVdcStorageProfile {
		return vs[0].([]GetOrgVdcStorageProfile)[vs[1].(int)]
	}).(GetOrgVdcStorageProfileOutput)
}

type GetOrgVdcTemplateComputeConfiguration struct {
	// The maximum amount of CPU, in MHz, available to the VMs running within the VDC that is instantiated from this template
	CpuAllocated int `pulumi:"cpuAllocated"`
	// The percentage of the CPU guaranteed to be available to VMs running within the VDC instantiated from this template
	CpuGuaranteed int `pulumi:"cpuGuaranteed"`
	// The limit amount of CPU, in MHz, of the VDC that is instantiated from this template. 0 means unlimited
	CpuLimit int `pulumi:"cpuLimit"`
	// Specifies the clock frequency, in MHz, for any virtual CPU that is allocated to a VM
	CpuSpeed int `pulumi:"cpuSpeed"`
	// True if compute capacity can grow or shrink based on demand
	Elasticity bool `pulumi:"elasticity"`
	// True if the instantiated VDC includes memory overhead into its accounting for admission control
	IncludeVmMemoryOverhead bool `pulumi:"includeVmMemoryOverhead"`
	// The maximum amount of Memory, in MB, available to the VMs running within the VDC that is instantiated from this template
	MemoryAllocated int `pulumi:"memoryAllocated"`
	// The percentage of the Memory guaranteed to be available to VMs running within the VDC instantiated from this template
	MemoryGuaranteed int `pulumi:"memoryGuaranteed"`
	// The limit amount of Memory, in MB, of the VDC that is instantiated from this template. 0 means unlimited
	MemoryLimit int `pulumi:"memoryLimit"`
}

// GetOrgVdcTemplateComputeConfigurationInput is an input type that accepts GetOrgVdcTemplateComputeConfigurationArgs and GetOrgVdcTemplateComputeConfigurationOutput values.
// You can construct a concrete instance of `GetOrgVdcTemplateComputeConfigurationInput` via:
//
//	GetOrgVdcTemplateComputeConfigurationArgs{...}
type GetOrgVdcTemplateComputeConfigurationInput interface {
	pulumi.Input

	ToGetOrgVdcTemplateComputeConfigurationOutput() GetOrgVdcTemplateComputeConfigurationOutput
	ToGetOrgVdcTemplateComputeConfigurationOutputWithContext(context.Context) GetOrgVdcTemplateComputeConfigurationOutput
}

type GetOrgVdcTemplateComputeConfigurationArgs struct {
	// The maximum amount of CPU, in MHz, available to the VMs running within the VDC that is instantiated from this template
	CpuAllocated pulumi.IntInput `pulumi:"cpuAllocated"`
	// The percentage of the CPU guaranteed to be available to VMs running within the VDC instantiated from this template
	CpuGuaranteed pulumi.IntInput `pulumi:"cpuGuaranteed"`
	// The limit amount of CPU, in MHz, of the VDC that is instantiated from this template. 0 means unlimited
	CpuLimit pulumi.IntInput `pulumi:"cpuLimit"`
	// Specifies the clock frequency, in MHz, for any virtual CPU that is allocated to a VM
	CpuSpeed pulumi.IntInput `pulumi:"cpuSpeed"`
	// True if compute capacity can grow or shrink based on demand
	Elasticity pulumi.BoolInput `pulumi:"elasticity"`
	// True if the instantiated VDC includes memory overhead into its accounting for admission control
	IncludeVmMemoryOverhead pulumi.BoolInput `pulumi:"includeVmMemoryOverhead"`
	// The maximum amount of Memory, in MB, available to the VMs running within the VDC that is instantiated from this template
	MemoryAllocated pulumi.IntInput `pulumi:"memoryAllocated"`
	// The percentage of the Memory guaranteed to be available to VMs running within the VDC instantiated from this template
	MemoryGuaranteed pulumi.IntInput `pulumi:"memoryGuaranteed"`
	// The limit amount of Memory, in MB, of the VDC that is instantiated from this template. 0 means unlimited
	MemoryLimit pulumi.IntInput `pulumi:"memoryLimit"`
}

func (GetOrgVdcTemplateComputeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcTemplateComputeConfiguration)(nil)).Elem()
}

func (i GetOrgVdcTemplateComputeConfigurationArgs) ToGetOrgVdcTemplateComputeConfigurationOutput() GetOrgVdcTemplateComputeConfigurationOutput {
	return i.ToGetOrgVdcTemplateComputeConfigurationOutputWithContext(context.Background())
}

func (i GetOrgVdcTemplateComputeConfigurationArgs) ToGetOrgVdcTemplateComputeConfigurationOutputWithContext(ctx context.Context) GetOrgVdcTemplateComputeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcTemplateComputeConfigurationOutput)
}

// GetOrgVdcTemplateComputeConfigurationArrayInput is an input type that accepts GetOrgVdcTemplateComputeConfigurationArray and GetOrgVdcTemplateComputeConfigurationArrayOutput values.
// You can construct a concrete instance of `GetOrgVdcTemplateComputeConfigurationArrayInput` via:
//
//	GetOrgVdcTemplateComputeConfigurationArray{ GetOrgVdcTemplateComputeConfigurationArgs{...} }
type GetOrgVdcTemplateComputeConfigurationArrayInput interface {
	pulumi.Input

	ToGetOrgVdcTemplateComputeConfigurationArrayOutput() GetOrgVdcTemplateComputeConfigurationArrayOutput
	ToGetOrgVdcTemplateComputeConfigurationArrayOutputWithContext(context.Context) GetOrgVdcTemplateComputeConfigurationArrayOutput
}

type GetOrgVdcTemplateComputeConfigurationArray []GetOrgVdcTemplateComputeConfigurationInput

func (GetOrgVdcTemplateComputeConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcTemplateComputeConfiguration)(nil)).Elem()
}

func (i GetOrgVdcTemplateComputeConfigurationArray) ToGetOrgVdcTemplateComputeConfigurationArrayOutput() GetOrgVdcTemplateComputeConfigurationArrayOutput {
	return i.ToGetOrgVdcTemplateComputeConfigurationArrayOutputWithContext(context.Background())
}

func (i GetOrgVdcTemplateComputeConfigurationArray) ToGetOrgVdcTemplateComputeConfigurationArrayOutputWithContext(ctx context.Context) GetOrgVdcTemplateComputeConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcTemplateComputeConfigurationArrayOutput)
}

type GetOrgVdcTemplateComputeConfigurationOutput struct{ *pulumi.OutputState }

func (GetOrgVdcTemplateComputeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcTemplateComputeConfiguration)(nil)).Elem()
}

func (o GetOrgVdcTemplateComputeConfigurationOutput) ToGetOrgVdcTemplateComputeConfigurationOutput() GetOrgVdcTemplateComputeConfigurationOutput {
	return o
}

func (o GetOrgVdcTemplateComputeConfigurationOutput) ToGetOrgVdcTemplateComputeConfigurationOutputWithContext(ctx context.Context) GetOrgVdcTemplateComputeConfigurationOutput {
	return o
}

// The maximum amount of CPU, in MHz, available to the VMs running within the VDC that is instantiated from this template
func (o GetOrgVdcTemplateComputeConfigurationOutput) CpuAllocated() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateComputeConfiguration) int { return v.CpuAllocated }).(pulumi.IntOutput)
}

// The percentage of the CPU guaranteed to be available to VMs running within the VDC instantiated from this template
func (o GetOrgVdcTemplateComputeConfigurationOutput) CpuGuaranteed() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateComputeConfiguration) int { return v.CpuGuaranteed }).(pulumi.IntOutput)
}

// The limit amount of CPU, in MHz, of the VDC that is instantiated from this template. 0 means unlimited
func (o GetOrgVdcTemplateComputeConfigurationOutput) CpuLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateComputeConfiguration) int { return v.CpuLimit }).(pulumi.IntOutput)
}

// Specifies the clock frequency, in MHz, for any virtual CPU that is allocated to a VM
func (o GetOrgVdcTemplateComputeConfigurationOutput) CpuSpeed() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateComputeConfiguration) int { return v.CpuSpeed }).(pulumi.IntOutput)
}

// True if compute capacity can grow or shrink based on demand
func (o GetOrgVdcTemplateComputeConfigurationOutput) Elasticity() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateComputeConfiguration) bool { return v.Elasticity }).(pulumi.BoolOutput)
}

// True if the instantiated VDC includes memory overhead into its accounting for admission control
func (o GetOrgVdcTemplateComputeConfigurationOutput) IncludeVmMemoryOverhead() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateComputeConfiguration) bool { return v.IncludeVmMemoryOverhead }).(pulumi.BoolOutput)
}

// The maximum amount of Memory, in MB, available to the VMs running within the VDC that is instantiated from this template
func (o GetOrgVdcTemplateComputeConfigurationOutput) MemoryAllocated() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateComputeConfiguration) int { return v.MemoryAllocated }).(pulumi.IntOutput)
}

// The percentage of the Memory guaranteed to be available to VMs running within the VDC instantiated from this template
func (o GetOrgVdcTemplateComputeConfigurationOutput) MemoryGuaranteed() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateComputeConfiguration) int { return v.MemoryGuaranteed }).(pulumi.IntOutput)
}

// The limit amount of Memory, in MB, of the VDC that is instantiated from this template. 0 means unlimited
func (o GetOrgVdcTemplateComputeConfigurationOutput) MemoryLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateComputeConfiguration) int { return v.MemoryLimit }).(pulumi.IntOutput)
}

type GetOrgVdcTemplateComputeConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcTemplateComputeConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcTemplateComputeConfiguration)(nil)).Elem()
}

func (o GetOrgVdcTemplateComputeConfigurationArrayOutput) ToGetOrgVdcTemplateComputeConfigurationArrayOutput() GetOrgVdcTemplateComputeConfigurationArrayOutput {
	return o
}

func (o GetOrgVdcTemplateComputeConfigurationArrayOutput) ToGetOrgVdcTemplateComputeConfigurationArrayOutputWithContext(ctx context.Context) GetOrgVdcTemplateComputeConfigurationArrayOutput {
	return o
}

func (o GetOrgVdcTemplateComputeConfigurationArrayOutput) Index(i pulumi.IntInput) GetOrgVdcTemplateComputeConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVdcTemplateComputeConfiguration {
		return vs[0].([]GetOrgVdcTemplateComputeConfiguration)[vs[1].(int)]
	}).(GetOrgVdcTemplateComputeConfigurationOutput)
}

type GetOrgVdcTemplateEdgeGateway struct {
	// Description of the Edge Gateway
	Description string `pulumi:"description"`
	// Storage used in MB
	IpAllocationCount int `pulumi:"ipAllocationCount"`
	// Name of the existing Organization VDC Template to read
	Name string `pulumi:"name"`
	// Description of the routed network to create with the Edge Gateway
	RoutedNetworkDescription string `pulumi:"routedNetworkDescription"`
	// CIDR of the Edge Gateway for the routed network created with the Edge Gateway
	RoutedNetworkGatewayCidr string `pulumi:"routedNetworkGatewayCidr"`
	// Name of the routed network to create with the Edge Gateway
	RoutedNetworkName string `pulumi:"routedNetworkName"`
	// IP ranges used for the network created with the Edge Gateway. Only required if the 'edge_gateway' block is used
	StaticIpPools []GetOrgVdcTemplateEdgeGatewayStaticIpPool `pulumi:"staticIpPools"`
}

// GetOrgVdcTemplateEdgeGatewayInput is an input type that accepts GetOrgVdcTemplateEdgeGatewayArgs and GetOrgVdcTemplateEdgeGatewayOutput values.
// You can construct a concrete instance of `GetOrgVdcTemplateEdgeGatewayInput` via:
//
//	GetOrgVdcTemplateEdgeGatewayArgs{...}
type GetOrgVdcTemplateEdgeGatewayInput interface {
	pulumi.Input

	ToGetOrgVdcTemplateEdgeGatewayOutput() GetOrgVdcTemplateEdgeGatewayOutput
	ToGetOrgVdcTemplateEdgeGatewayOutputWithContext(context.Context) GetOrgVdcTemplateEdgeGatewayOutput
}

type GetOrgVdcTemplateEdgeGatewayArgs struct {
	// Description of the Edge Gateway
	Description pulumi.StringInput `pulumi:"description"`
	// Storage used in MB
	IpAllocationCount pulumi.IntInput `pulumi:"ipAllocationCount"`
	// Name of the existing Organization VDC Template to read
	Name pulumi.StringInput `pulumi:"name"`
	// Description of the routed network to create with the Edge Gateway
	RoutedNetworkDescription pulumi.StringInput `pulumi:"routedNetworkDescription"`
	// CIDR of the Edge Gateway for the routed network created with the Edge Gateway
	RoutedNetworkGatewayCidr pulumi.StringInput `pulumi:"routedNetworkGatewayCidr"`
	// Name of the routed network to create with the Edge Gateway
	RoutedNetworkName pulumi.StringInput `pulumi:"routedNetworkName"`
	// IP ranges used for the network created with the Edge Gateway. Only required if the 'edge_gateway' block is used
	StaticIpPools GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayInput `pulumi:"staticIpPools"`
}

func (GetOrgVdcTemplateEdgeGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcTemplateEdgeGateway)(nil)).Elem()
}

func (i GetOrgVdcTemplateEdgeGatewayArgs) ToGetOrgVdcTemplateEdgeGatewayOutput() GetOrgVdcTemplateEdgeGatewayOutput {
	return i.ToGetOrgVdcTemplateEdgeGatewayOutputWithContext(context.Background())
}

func (i GetOrgVdcTemplateEdgeGatewayArgs) ToGetOrgVdcTemplateEdgeGatewayOutputWithContext(ctx context.Context) GetOrgVdcTemplateEdgeGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcTemplateEdgeGatewayOutput)
}

// GetOrgVdcTemplateEdgeGatewayArrayInput is an input type that accepts GetOrgVdcTemplateEdgeGatewayArray and GetOrgVdcTemplateEdgeGatewayArrayOutput values.
// You can construct a concrete instance of `GetOrgVdcTemplateEdgeGatewayArrayInput` via:
//
//	GetOrgVdcTemplateEdgeGatewayArray{ GetOrgVdcTemplateEdgeGatewayArgs{...} }
type GetOrgVdcTemplateEdgeGatewayArrayInput interface {
	pulumi.Input

	ToGetOrgVdcTemplateEdgeGatewayArrayOutput() GetOrgVdcTemplateEdgeGatewayArrayOutput
	ToGetOrgVdcTemplateEdgeGatewayArrayOutputWithContext(context.Context) GetOrgVdcTemplateEdgeGatewayArrayOutput
}

type GetOrgVdcTemplateEdgeGatewayArray []GetOrgVdcTemplateEdgeGatewayInput

func (GetOrgVdcTemplateEdgeGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcTemplateEdgeGateway)(nil)).Elem()
}

func (i GetOrgVdcTemplateEdgeGatewayArray) ToGetOrgVdcTemplateEdgeGatewayArrayOutput() GetOrgVdcTemplateEdgeGatewayArrayOutput {
	return i.ToGetOrgVdcTemplateEdgeGatewayArrayOutputWithContext(context.Background())
}

func (i GetOrgVdcTemplateEdgeGatewayArray) ToGetOrgVdcTemplateEdgeGatewayArrayOutputWithContext(ctx context.Context) GetOrgVdcTemplateEdgeGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcTemplateEdgeGatewayArrayOutput)
}

type GetOrgVdcTemplateEdgeGatewayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcTemplateEdgeGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcTemplateEdgeGateway)(nil)).Elem()
}

func (o GetOrgVdcTemplateEdgeGatewayOutput) ToGetOrgVdcTemplateEdgeGatewayOutput() GetOrgVdcTemplateEdgeGatewayOutput {
	return o
}

func (o GetOrgVdcTemplateEdgeGatewayOutput) ToGetOrgVdcTemplateEdgeGatewayOutputWithContext(ctx context.Context) GetOrgVdcTemplateEdgeGatewayOutput {
	return o
}

// Description of the Edge Gateway
func (o GetOrgVdcTemplateEdgeGatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateEdgeGateway) string { return v.Description }).(pulumi.StringOutput)
}

// Storage used in MB
func (o GetOrgVdcTemplateEdgeGatewayOutput) IpAllocationCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateEdgeGateway) int { return v.IpAllocationCount }).(pulumi.IntOutput)
}

// Name of the existing Organization VDC Template to read
func (o GetOrgVdcTemplateEdgeGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateEdgeGateway) string { return v.Name }).(pulumi.StringOutput)
}

// Description of the routed network to create with the Edge Gateway
func (o GetOrgVdcTemplateEdgeGatewayOutput) RoutedNetworkDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateEdgeGateway) string { return v.RoutedNetworkDescription }).(pulumi.StringOutput)
}

// CIDR of the Edge Gateway for the routed network created with the Edge Gateway
func (o GetOrgVdcTemplateEdgeGatewayOutput) RoutedNetworkGatewayCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateEdgeGateway) string { return v.RoutedNetworkGatewayCidr }).(pulumi.StringOutput)
}

// Name of the routed network to create with the Edge Gateway
func (o GetOrgVdcTemplateEdgeGatewayOutput) RoutedNetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateEdgeGateway) string { return v.RoutedNetworkName }).(pulumi.StringOutput)
}

// IP ranges used for the network created with the Edge Gateway. Only required if the 'edge_gateway' block is used
func (o GetOrgVdcTemplateEdgeGatewayOutput) StaticIpPools() GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateEdgeGateway) []GetOrgVdcTemplateEdgeGatewayStaticIpPool {
		return v.StaticIpPools
	}).(GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput)
}

type GetOrgVdcTemplateEdgeGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcTemplateEdgeGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcTemplateEdgeGateway)(nil)).Elem()
}

func (o GetOrgVdcTemplateEdgeGatewayArrayOutput) ToGetOrgVdcTemplateEdgeGatewayArrayOutput() GetOrgVdcTemplateEdgeGatewayArrayOutput {
	return o
}

func (o GetOrgVdcTemplateEdgeGatewayArrayOutput) ToGetOrgVdcTemplateEdgeGatewayArrayOutputWithContext(ctx context.Context) GetOrgVdcTemplateEdgeGatewayArrayOutput {
	return o
}

func (o GetOrgVdcTemplateEdgeGatewayArrayOutput) Index(i pulumi.IntInput) GetOrgVdcTemplateEdgeGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVdcTemplateEdgeGateway {
		return vs[0].([]GetOrgVdcTemplateEdgeGateway)[vs[1].(int)]
	}).(GetOrgVdcTemplateEdgeGatewayOutput)
}

type GetOrgVdcTemplateEdgeGatewayStaticIpPool struct {
	// End address of the IP range
	EndAddress string `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress string `pulumi:"startAddress"`
}

// GetOrgVdcTemplateEdgeGatewayStaticIpPoolInput is an input type that accepts GetOrgVdcTemplateEdgeGatewayStaticIpPoolArgs and GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput values.
// You can construct a concrete instance of `GetOrgVdcTemplateEdgeGatewayStaticIpPoolInput` via:
//
//	GetOrgVdcTemplateEdgeGatewayStaticIpPoolArgs{...}
type GetOrgVdcTemplateEdgeGatewayStaticIpPoolInput interface {
	pulumi.Input

	ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput() GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput
	ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolOutputWithContext(context.Context) GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput
}

type GetOrgVdcTemplateEdgeGatewayStaticIpPoolArgs struct {
	// End address of the IP range
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start address of the IP range
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetOrgVdcTemplateEdgeGatewayStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcTemplateEdgeGatewayStaticIpPool)(nil)).Elem()
}

func (i GetOrgVdcTemplateEdgeGatewayStaticIpPoolArgs) ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput() GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput {
	return i.ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolOutputWithContext(context.Background())
}

func (i GetOrgVdcTemplateEdgeGatewayStaticIpPoolArgs) ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolOutputWithContext(ctx context.Context) GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput)
}

// GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayInput is an input type that accepts GetOrgVdcTemplateEdgeGatewayStaticIpPoolArray and GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayInput` via:
//
//	GetOrgVdcTemplateEdgeGatewayStaticIpPoolArray{ GetOrgVdcTemplateEdgeGatewayStaticIpPoolArgs{...} }
type GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput() GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput
	ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutputWithContext(context.Context) GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput
}

type GetOrgVdcTemplateEdgeGatewayStaticIpPoolArray []GetOrgVdcTemplateEdgeGatewayStaticIpPoolInput

func (GetOrgVdcTemplateEdgeGatewayStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcTemplateEdgeGatewayStaticIpPool)(nil)).Elem()
}

func (i GetOrgVdcTemplateEdgeGatewayStaticIpPoolArray) ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput() GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput {
	return i.ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetOrgVdcTemplateEdgeGatewayStaticIpPoolArray) ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutputWithContext(ctx context.Context) GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput)
}

type GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcTemplateEdgeGatewayStaticIpPool)(nil)).Elem()
}

func (o GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput) ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput() GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput {
	return o
}

func (o GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput) ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolOutputWithContext(ctx context.Context) GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput {
	return o
}

// End address of the IP range
func (o GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateEdgeGatewayStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start address of the IP range
func (o GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateEdgeGatewayStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcTemplateEdgeGatewayStaticIpPool)(nil)).Elem()
}

func (o GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput) ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput() GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput {
	return o
}

func (o GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput) ToGetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutputWithContext(ctx context.Context) GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput {
	return o
}

func (o GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVdcTemplateEdgeGatewayStaticIpPool {
		return vs[0].([]GetOrgVdcTemplateEdgeGatewayStaticIpPool)[vs[1].(int)]
	}).(GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput)
}

type GetOrgVdcTemplateProviderVdc struct {
	// ID of the External network that the VDCs instantiated from this template use
	ExternalNetworkId string `pulumi:"externalNetworkId"`
	// ID of the Edge Cluster that the VDCs instantiated from this template use with the NSX-T Gateway
	GatewayEdgeClusterId string `pulumi:"gatewayEdgeClusterId"`
	// ID of Provider VDC
	Id string `pulumi:"id"`
	// ID of the Edge Cluster that the VDCs instantiated from this template use for services
	ServicesEdgeClusterId string `pulumi:"servicesEdgeClusterId"`
}

// GetOrgVdcTemplateProviderVdcInput is an input type that accepts GetOrgVdcTemplateProviderVdcArgs and GetOrgVdcTemplateProviderVdcOutput values.
// You can construct a concrete instance of `GetOrgVdcTemplateProviderVdcInput` via:
//
//	GetOrgVdcTemplateProviderVdcArgs{...}
type GetOrgVdcTemplateProviderVdcInput interface {
	pulumi.Input

	ToGetOrgVdcTemplateProviderVdcOutput() GetOrgVdcTemplateProviderVdcOutput
	ToGetOrgVdcTemplateProviderVdcOutputWithContext(context.Context) GetOrgVdcTemplateProviderVdcOutput
}

type GetOrgVdcTemplateProviderVdcArgs struct {
	// ID of the External network that the VDCs instantiated from this template use
	ExternalNetworkId pulumi.StringInput `pulumi:"externalNetworkId"`
	// ID of the Edge Cluster that the VDCs instantiated from this template use with the NSX-T Gateway
	GatewayEdgeClusterId pulumi.StringInput `pulumi:"gatewayEdgeClusterId"`
	// ID of Provider VDC
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the Edge Cluster that the VDCs instantiated from this template use for services
	ServicesEdgeClusterId pulumi.StringInput `pulumi:"servicesEdgeClusterId"`
}

func (GetOrgVdcTemplateProviderVdcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcTemplateProviderVdc)(nil)).Elem()
}

func (i GetOrgVdcTemplateProviderVdcArgs) ToGetOrgVdcTemplateProviderVdcOutput() GetOrgVdcTemplateProviderVdcOutput {
	return i.ToGetOrgVdcTemplateProviderVdcOutputWithContext(context.Background())
}

func (i GetOrgVdcTemplateProviderVdcArgs) ToGetOrgVdcTemplateProviderVdcOutputWithContext(ctx context.Context) GetOrgVdcTemplateProviderVdcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcTemplateProviderVdcOutput)
}

// GetOrgVdcTemplateProviderVdcArrayInput is an input type that accepts GetOrgVdcTemplateProviderVdcArray and GetOrgVdcTemplateProviderVdcArrayOutput values.
// You can construct a concrete instance of `GetOrgVdcTemplateProviderVdcArrayInput` via:
//
//	GetOrgVdcTemplateProviderVdcArray{ GetOrgVdcTemplateProviderVdcArgs{...} }
type GetOrgVdcTemplateProviderVdcArrayInput interface {
	pulumi.Input

	ToGetOrgVdcTemplateProviderVdcArrayOutput() GetOrgVdcTemplateProviderVdcArrayOutput
	ToGetOrgVdcTemplateProviderVdcArrayOutputWithContext(context.Context) GetOrgVdcTemplateProviderVdcArrayOutput
}

type GetOrgVdcTemplateProviderVdcArray []GetOrgVdcTemplateProviderVdcInput

func (GetOrgVdcTemplateProviderVdcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcTemplateProviderVdc)(nil)).Elem()
}

func (i GetOrgVdcTemplateProviderVdcArray) ToGetOrgVdcTemplateProviderVdcArrayOutput() GetOrgVdcTemplateProviderVdcArrayOutput {
	return i.ToGetOrgVdcTemplateProviderVdcArrayOutputWithContext(context.Background())
}

func (i GetOrgVdcTemplateProviderVdcArray) ToGetOrgVdcTemplateProviderVdcArrayOutputWithContext(ctx context.Context) GetOrgVdcTemplateProviderVdcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcTemplateProviderVdcArrayOutput)
}

type GetOrgVdcTemplateProviderVdcOutput struct{ *pulumi.OutputState }

func (GetOrgVdcTemplateProviderVdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcTemplateProviderVdc)(nil)).Elem()
}

func (o GetOrgVdcTemplateProviderVdcOutput) ToGetOrgVdcTemplateProviderVdcOutput() GetOrgVdcTemplateProviderVdcOutput {
	return o
}

func (o GetOrgVdcTemplateProviderVdcOutput) ToGetOrgVdcTemplateProviderVdcOutputWithContext(ctx context.Context) GetOrgVdcTemplateProviderVdcOutput {
	return o
}

// ID of the External network that the VDCs instantiated from this template use
func (o GetOrgVdcTemplateProviderVdcOutput) ExternalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateProviderVdc) string { return v.ExternalNetworkId }).(pulumi.StringOutput)
}

// ID of the Edge Cluster that the VDCs instantiated from this template use with the NSX-T Gateway
func (o GetOrgVdcTemplateProviderVdcOutput) GatewayEdgeClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateProviderVdc) string { return v.GatewayEdgeClusterId }).(pulumi.StringOutput)
}

// ID of Provider VDC
func (o GetOrgVdcTemplateProviderVdcOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateProviderVdc) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the Edge Cluster that the VDCs instantiated from this template use for services
func (o GetOrgVdcTemplateProviderVdcOutput) ServicesEdgeClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateProviderVdc) string { return v.ServicesEdgeClusterId }).(pulumi.StringOutput)
}

type GetOrgVdcTemplateProviderVdcArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcTemplateProviderVdcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcTemplateProviderVdc)(nil)).Elem()
}

func (o GetOrgVdcTemplateProviderVdcArrayOutput) ToGetOrgVdcTemplateProviderVdcArrayOutput() GetOrgVdcTemplateProviderVdcArrayOutput {
	return o
}

func (o GetOrgVdcTemplateProviderVdcArrayOutput) ToGetOrgVdcTemplateProviderVdcArrayOutputWithContext(ctx context.Context) GetOrgVdcTemplateProviderVdcArrayOutput {
	return o
}

func (o GetOrgVdcTemplateProviderVdcArrayOutput) Index(i pulumi.IntInput) GetOrgVdcTemplateProviderVdcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVdcTemplateProviderVdc {
		return vs[0].([]GetOrgVdcTemplateProviderVdc)[vs[1].(int)]
	}).(GetOrgVdcTemplateProviderVdcOutput)
}

type GetOrgVdcTemplateStorageProfile struct {
	// True if this is default storage profile for the VDCs instantiated from this template
	Default bool `pulumi:"default"`
	// Storage limit of the VDCs instantiated from this template, in Megabytes. 0 means unlimited
	Limit int `pulumi:"limit"`
	// Name of the existing Organization VDC Template to read
	Name string `pulumi:"name"`
}

// GetOrgVdcTemplateStorageProfileInput is an input type that accepts GetOrgVdcTemplateStorageProfileArgs and GetOrgVdcTemplateStorageProfileOutput values.
// You can construct a concrete instance of `GetOrgVdcTemplateStorageProfileInput` via:
//
//	GetOrgVdcTemplateStorageProfileArgs{...}
type GetOrgVdcTemplateStorageProfileInput interface {
	pulumi.Input

	ToGetOrgVdcTemplateStorageProfileOutput() GetOrgVdcTemplateStorageProfileOutput
	ToGetOrgVdcTemplateStorageProfileOutputWithContext(context.Context) GetOrgVdcTemplateStorageProfileOutput
}

type GetOrgVdcTemplateStorageProfileArgs struct {
	// True if this is default storage profile for the VDCs instantiated from this template
	Default pulumi.BoolInput `pulumi:"default"`
	// Storage limit of the VDCs instantiated from this template, in Megabytes. 0 means unlimited
	Limit pulumi.IntInput `pulumi:"limit"`
	// Name of the existing Organization VDC Template to read
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetOrgVdcTemplateStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcTemplateStorageProfile)(nil)).Elem()
}

func (i GetOrgVdcTemplateStorageProfileArgs) ToGetOrgVdcTemplateStorageProfileOutput() GetOrgVdcTemplateStorageProfileOutput {
	return i.ToGetOrgVdcTemplateStorageProfileOutputWithContext(context.Background())
}

func (i GetOrgVdcTemplateStorageProfileArgs) ToGetOrgVdcTemplateStorageProfileOutputWithContext(ctx context.Context) GetOrgVdcTemplateStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcTemplateStorageProfileOutput)
}

// GetOrgVdcTemplateStorageProfileArrayInput is an input type that accepts GetOrgVdcTemplateStorageProfileArray and GetOrgVdcTemplateStorageProfileArrayOutput values.
// You can construct a concrete instance of `GetOrgVdcTemplateStorageProfileArrayInput` via:
//
//	GetOrgVdcTemplateStorageProfileArray{ GetOrgVdcTemplateStorageProfileArgs{...} }
type GetOrgVdcTemplateStorageProfileArrayInput interface {
	pulumi.Input

	ToGetOrgVdcTemplateStorageProfileArrayOutput() GetOrgVdcTemplateStorageProfileArrayOutput
	ToGetOrgVdcTemplateStorageProfileArrayOutputWithContext(context.Context) GetOrgVdcTemplateStorageProfileArrayOutput
}

type GetOrgVdcTemplateStorageProfileArray []GetOrgVdcTemplateStorageProfileInput

func (GetOrgVdcTemplateStorageProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcTemplateStorageProfile)(nil)).Elem()
}

func (i GetOrgVdcTemplateStorageProfileArray) ToGetOrgVdcTemplateStorageProfileArrayOutput() GetOrgVdcTemplateStorageProfileArrayOutput {
	return i.ToGetOrgVdcTemplateStorageProfileArrayOutputWithContext(context.Background())
}

func (i GetOrgVdcTemplateStorageProfileArray) ToGetOrgVdcTemplateStorageProfileArrayOutputWithContext(ctx context.Context) GetOrgVdcTemplateStorageProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgVdcTemplateStorageProfileArrayOutput)
}

type GetOrgVdcTemplateStorageProfileOutput struct{ *pulumi.OutputState }

func (GetOrgVdcTemplateStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgVdcTemplateStorageProfile)(nil)).Elem()
}

func (o GetOrgVdcTemplateStorageProfileOutput) ToGetOrgVdcTemplateStorageProfileOutput() GetOrgVdcTemplateStorageProfileOutput {
	return o
}

func (o GetOrgVdcTemplateStorageProfileOutput) ToGetOrgVdcTemplateStorageProfileOutputWithContext(ctx context.Context) GetOrgVdcTemplateStorageProfileOutput {
	return o
}

// True if this is default storage profile for the VDCs instantiated from this template
func (o GetOrgVdcTemplateStorageProfileOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateStorageProfile) bool { return v.Default }).(pulumi.BoolOutput)
}

// Storage limit of the VDCs instantiated from this template, in Megabytes. 0 means unlimited
func (o GetOrgVdcTemplateStorageProfileOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateStorageProfile) int { return v.Limit }).(pulumi.IntOutput)
}

// Name of the existing Organization VDC Template to read
func (o GetOrgVdcTemplateStorageProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgVdcTemplateStorageProfile) string { return v.Name }).(pulumi.StringOutput)
}

type GetOrgVdcTemplateStorageProfileArrayOutput struct{ *pulumi.OutputState }

func (GetOrgVdcTemplateStorageProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgVdcTemplateStorageProfile)(nil)).Elem()
}

func (o GetOrgVdcTemplateStorageProfileArrayOutput) ToGetOrgVdcTemplateStorageProfileArrayOutput() GetOrgVdcTemplateStorageProfileArrayOutput {
	return o
}

func (o GetOrgVdcTemplateStorageProfileArrayOutput) ToGetOrgVdcTemplateStorageProfileArrayOutputWithContext(ctx context.Context) GetOrgVdcTemplateStorageProfileArrayOutput {
	return o
}

func (o GetOrgVdcTemplateStorageProfileArrayOutput) Index(i pulumi.IntInput) GetOrgVdcTemplateStorageProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgVdcTemplateStorageProfile {
		return vs[0].([]GetOrgVdcTemplateStorageProfile)[vs[1].(int)]
	}).(GetOrgVdcTemplateStorageProfileOutput)
}

type GetProviderVdcComputeCapacity struct {
	// Single-element list with an indicator of CPU capacity available in the Provider VDC
	Cpus []GetProviderVdcComputeCapacityCpus `pulumi:"cpus"`
	// True if compute capacity can grow or shrink based on demand
	IsElastic bool `pulumi:"isElastic"`
	// True if compute capacity is highly available
	IsHa bool `pulumi:"isHa"`
	// Single-element list with an indicator of Memory capacity available in the Provider VDC
	Memories []GetProviderVdcComputeCapacityMemory `pulumi:"memories"`
}

// GetProviderVdcComputeCapacityInput is an input type that accepts GetProviderVdcComputeCapacityArgs and GetProviderVdcComputeCapacityOutput values.
// You can construct a concrete instance of `GetProviderVdcComputeCapacityInput` via:
//
//	GetProviderVdcComputeCapacityArgs{...}
type GetProviderVdcComputeCapacityInput interface {
	pulumi.Input

	ToGetProviderVdcComputeCapacityOutput() GetProviderVdcComputeCapacityOutput
	ToGetProviderVdcComputeCapacityOutputWithContext(context.Context) GetProviderVdcComputeCapacityOutput
}

type GetProviderVdcComputeCapacityArgs struct {
	// Single-element list with an indicator of CPU capacity available in the Provider VDC
	Cpus GetProviderVdcComputeCapacityCpusArrayInput `pulumi:"cpus"`
	// True if compute capacity can grow or shrink based on demand
	IsElastic pulumi.BoolInput `pulumi:"isElastic"`
	// True if compute capacity is highly available
	IsHa pulumi.BoolInput `pulumi:"isHa"`
	// Single-element list with an indicator of Memory capacity available in the Provider VDC
	Memories GetProviderVdcComputeCapacityMemoryArrayInput `pulumi:"memories"`
}

func (GetProviderVdcComputeCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProviderVdcComputeCapacity)(nil)).Elem()
}

func (i GetProviderVdcComputeCapacityArgs) ToGetProviderVdcComputeCapacityOutput() GetProviderVdcComputeCapacityOutput {
	return i.ToGetProviderVdcComputeCapacityOutputWithContext(context.Background())
}

func (i GetProviderVdcComputeCapacityArgs) ToGetProviderVdcComputeCapacityOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProviderVdcComputeCapacityOutput)
}

// GetProviderVdcComputeCapacityArrayInput is an input type that accepts GetProviderVdcComputeCapacityArray and GetProviderVdcComputeCapacityArrayOutput values.
// You can construct a concrete instance of `GetProviderVdcComputeCapacityArrayInput` via:
//
//	GetProviderVdcComputeCapacityArray{ GetProviderVdcComputeCapacityArgs{...} }
type GetProviderVdcComputeCapacityArrayInput interface {
	pulumi.Input

	ToGetProviderVdcComputeCapacityArrayOutput() GetProviderVdcComputeCapacityArrayOutput
	ToGetProviderVdcComputeCapacityArrayOutputWithContext(context.Context) GetProviderVdcComputeCapacityArrayOutput
}

type GetProviderVdcComputeCapacityArray []GetProviderVdcComputeCapacityInput

func (GetProviderVdcComputeCapacityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProviderVdcComputeCapacity)(nil)).Elem()
}

func (i GetProviderVdcComputeCapacityArray) ToGetProviderVdcComputeCapacityArrayOutput() GetProviderVdcComputeCapacityArrayOutput {
	return i.ToGetProviderVdcComputeCapacityArrayOutputWithContext(context.Background())
}

func (i GetProviderVdcComputeCapacityArray) ToGetProviderVdcComputeCapacityArrayOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProviderVdcComputeCapacityArrayOutput)
}

type GetProviderVdcComputeCapacityOutput struct{ *pulumi.OutputState }

func (GetProviderVdcComputeCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProviderVdcComputeCapacity)(nil)).Elem()
}

func (o GetProviderVdcComputeCapacityOutput) ToGetProviderVdcComputeCapacityOutput() GetProviderVdcComputeCapacityOutput {
	return o
}

func (o GetProviderVdcComputeCapacityOutput) ToGetProviderVdcComputeCapacityOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityOutput {
	return o
}

// Single-element list with an indicator of CPU capacity available in the Provider VDC
func (o GetProviderVdcComputeCapacityOutput) Cpus() GetProviderVdcComputeCapacityCpusArrayOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacity) []GetProviderVdcComputeCapacityCpus { return v.Cpus }).(GetProviderVdcComputeCapacityCpusArrayOutput)
}

// True if compute capacity can grow or shrink based on demand
func (o GetProviderVdcComputeCapacityOutput) IsElastic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacity) bool { return v.IsElastic }).(pulumi.BoolOutput)
}

// True if compute capacity is highly available
func (o GetProviderVdcComputeCapacityOutput) IsHa() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacity) bool { return v.IsHa }).(pulumi.BoolOutput)
}

// Single-element list with an indicator of Memory capacity available in the Provider VDC
func (o GetProviderVdcComputeCapacityOutput) Memories() GetProviderVdcComputeCapacityMemoryArrayOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacity) []GetProviderVdcComputeCapacityMemory { return v.Memories }).(GetProviderVdcComputeCapacityMemoryArrayOutput)
}

type GetProviderVdcComputeCapacityArrayOutput struct{ *pulumi.OutputState }

func (GetProviderVdcComputeCapacityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProviderVdcComputeCapacity)(nil)).Elem()
}

func (o GetProviderVdcComputeCapacityArrayOutput) ToGetProviderVdcComputeCapacityArrayOutput() GetProviderVdcComputeCapacityArrayOutput {
	return o
}

func (o GetProviderVdcComputeCapacityArrayOutput) ToGetProviderVdcComputeCapacityArrayOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityArrayOutput {
	return o
}

func (o GetProviderVdcComputeCapacityArrayOutput) Index(i pulumi.IntInput) GetProviderVdcComputeCapacityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProviderVdcComputeCapacity {
		return vs[0].([]GetProviderVdcComputeCapacity)[vs[1].(int)]
	}).(GetProviderVdcComputeCapacityOutput)
}

type GetProviderVdcComputeCapacityCpus struct {
	// Allocated CPU for this Provider VDC
	Allocation int `pulumi:"allocation"`
	// CPU overhead for this Provider VDC
	Overhead int `pulumi:"overhead"`
	// Reserved CPU for this Provider VDC
	Reserved int `pulumi:"reserved"`
	// Total CPU for this Provider VDC
	Total int `pulumi:"total"`
	// Units for the CPU of this Provider VDC
	Units string `pulumi:"units"`
	// Used CPU in this Provider VDC
	Used int `pulumi:"used"`
}

// GetProviderVdcComputeCapacityCpusInput is an input type that accepts GetProviderVdcComputeCapacityCpusArgs and GetProviderVdcComputeCapacityCpusOutput values.
// You can construct a concrete instance of `GetProviderVdcComputeCapacityCpusInput` via:
//
//	GetProviderVdcComputeCapacityCpusArgs{...}
type GetProviderVdcComputeCapacityCpusInput interface {
	pulumi.Input

	ToGetProviderVdcComputeCapacityCpusOutput() GetProviderVdcComputeCapacityCpusOutput
	ToGetProviderVdcComputeCapacityCpusOutputWithContext(context.Context) GetProviderVdcComputeCapacityCpusOutput
}

type GetProviderVdcComputeCapacityCpusArgs struct {
	// Allocated CPU for this Provider VDC
	Allocation pulumi.IntInput `pulumi:"allocation"`
	// CPU overhead for this Provider VDC
	Overhead pulumi.IntInput `pulumi:"overhead"`
	// Reserved CPU for this Provider VDC
	Reserved pulumi.IntInput `pulumi:"reserved"`
	// Total CPU for this Provider VDC
	Total pulumi.IntInput `pulumi:"total"`
	// Units for the CPU of this Provider VDC
	Units pulumi.StringInput `pulumi:"units"`
	// Used CPU in this Provider VDC
	Used pulumi.IntInput `pulumi:"used"`
}

func (GetProviderVdcComputeCapacityCpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProviderVdcComputeCapacityCpus)(nil)).Elem()
}

func (i GetProviderVdcComputeCapacityCpusArgs) ToGetProviderVdcComputeCapacityCpusOutput() GetProviderVdcComputeCapacityCpusOutput {
	return i.ToGetProviderVdcComputeCapacityCpusOutputWithContext(context.Background())
}

func (i GetProviderVdcComputeCapacityCpusArgs) ToGetProviderVdcComputeCapacityCpusOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityCpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProviderVdcComputeCapacityCpusOutput)
}

// GetProviderVdcComputeCapacityCpusArrayInput is an input type that accepts GetProviderVdcComputeCapacityCpusArray and GetProviderVdcComputeCapacityCpusArrayOutput values.
// You can construct a concrete instance of `GetProviderVdcComputeCapacityCpusArrayInput` via:
//
//	GetProviderVdcComputeCapacityCpusArray{ GetProviderVdcComputeCapacityCpusArgs{...} }
type GetProviderVdcComputeCapacityCpusArrayInput interface {
	pulumi.Input

	ToGetProviderVdcComputeCapacityCpusArrayOutput() GetProviderVdcComputeCapacityCpusArrayOutput
	ToGetProviderVdcComputeCapacityCpusArrayOutputWithContext(context.Context) GetProviderVdcComputeCapacityCpusArrayOutput
}

type GetProviderVdcComputeCapacityCpusArray []GetProviderVdcComputeCapacityCpusInput

func (GetProviderVdcComputeCapacityCpusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProviderVdcComputeCapacityCpus)(nil)).Elem()
}

func (i GetProviderVdcComputeCapacityCpusArray) ToGetProviderVdcComputeCapacityCpusArrayOutput() GetProviderVdcComputeCapacityCpusArrayOutput {
	return i.ToGetProviderVdcComputeCapacityCpusArrayOutputWithContext(context.Background())
}

func (i GetProviderVdcComputeCapacityCpusArray) ToGetProviderVdcComputeCapacityCpusArrayOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityCpusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProviderVdcComputeCapacityCpusArrayOutput)
}

type GetProviderVdcComputeCapacityCpusOutput struct{ *pulumi.OutputState }

func (GetProviderVdcComputeCapacityCpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProviderVdcComputeCapacityCpus)(nil)).Elem()
}

func (o GetProviderVdcComputeCapacityCpusOutput) ToGetProviderVdcComputeCapacityCpusOutput() GetProviderVdcComputeCapacityCpusOutput {
	return o
}

func (o GetProviderVdcComputeCapacityCpusOutput) ToGetProviderVdcComputeCapacityCpusOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityCpusOutput {
	return o
}

// Allocated CPU for this Provider VDC
func (o GetProviderVdcComputeCapacityCpusOutput) Allocation() pulumi.IntOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityCpus) int { return v.Allocation }).(pulumi.IntOutput)
}

// CPU overhead for this Provider VDC
func (o GetProviderVdcComputeCapacityCpusOutput) Overhead() pulumi.IntOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityCpus) int { return v.Overhead }).(pulumi.IntOutput)
}

// Reserved CPU for this Provider VDC
func (o GetProviderVdcComputeCapacityCpusOutput) Reserved() pulumi.IntOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityCpus) int { return v.Reserved }).(pulumi.IntOutput)
}

// Total CPU for this Provider VDC
func (o GetProviderVdcComputeCapacityCpusOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityCpus) int { return v.Total }).(pulumi.IntOutput)
}

// Units for the CPU of this Provider VDC
func (o GetProviderVdcComputeCapacityCpusOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityCpus) string { return v.Units }).(pulumi.StringOutput)
}

// Used CPU in this Provider VDC
func (o GetProviderVdcComputeCapacityCpusOutput) Used() pulumi.IntOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityCpus) int { return v.Used }).(pulumi.IntOutput)
}

type GetProviderVdcComputeCapacityCpusArrayOutput struct{ *pulumi.OutputState }

func (GetProviderVdcComputeCapacityCpusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProviderVdcComputeCapacityCpus)(nil)).Elem()
}

func (o GetProviderVdcComputeCapacityCpusArrayOutput) ToGetProviderVdcComputeCapacityCpusArrayOutput() GetProviderVdcComputeCapacityCpusArrayOutput {
	return o
}

func (o GetProviderVdcComputeCapacityCpusArrayOutput) ToGetProviderVdcComputeCapacityCpusArrayOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityCpusArrayOutput {
	return o
}

func (o GetProviderVdcComputeCapacityCpusArrayOutput) Index(i pulumi.IntInput) GetProviderVdcComputeCapacityCpusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProviderVdcComputeCapacityCpus {
		return vs[0].([]GetProviderVdcComputeCapacityCpus)[vs[1].(int)]
	}).(GetProviderVdcComputeCapacityCpusOutput)
}

type GetProviderVdcComputeCapacityMemory struct {
	// Allocated Memory for this Provider VDC
	Allocation int `pulumi:"allocation"`
	// Memory overhead for this Provider VDC
	Overhead int `pulumi:"overhead"`
	// Reserved Memory for this Provider VDC
	Reserved int `pulumi:"reserved"`
	// Total Memory for this Provider VDC
	Total int `pulumi:"total"`
	// Units for the Memory of this Provider VDC
	Units string `pulumi:"units"`
	// Used Memory in this Provider VDC
	Used int `pulumi:"used"`
}

// GetProviderVdcComputeCapacityMemoryInput is an input type that accepts GetProviderVdcComputeCapacityMemoryArgs and GetProviderVdcComputeCapacityMemoryOutput values.
// You can construct a concrete instance of `GetProviderVdcComputeCapacityMemoryInput` via:
//
//	GetProviderVdcComputeCapacityMemoryArgs{...}
type GetProviderVdcComputeCapacityMemoryInput interface {
	pulumi.Input

	ToGetProviderVdcComputeCapacityMemoryOutput() GetProviderVdcComputeCapacityMemoryOutput
	ToGetProviderVdcComputeCapacityMemoryOutputWithContext(context.Context) GetProviderVdcComputeCapacityMemoryOutput
}

type GetProviderVdcComputeCapacityMemoryArgs struct {
	// Allocated Memory for this Provider VDC
	Allocation pulumi.IntInput `pulumi:"allocation"`
	// Memory overhead for this Provider VDC
	Overhead pulumi.IntInput `pulumi:"overhead"`
	// Reserved Memory for this Provider VDC
	Reserved pulumi.IntInput `pulumi:"reserved"`
	// Total Memory for this Provider VDC
	Total pulumi.IntInput `pulumi:"total"`
	// Units for the Memory of this Provider VDC
	Units pulumi.StringInput `pulumi:"units"`
	// Used Memory in this Provider VDC
	Used pulumi.IntInput `pulumi:"used"`
}

func (GetProviderVdcComputeCapacityMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProviderVdcComputeCapacityMemory)(nil)).Elem()
}

func (i GetProviderVdcComputeCapacityMemoryArgs) ToGetProviderVdcComputeCapacityMemoryOutput() GetProviderVdcComputeCapacityMemoryOutput {
	return i.ToGetProviderVdcComputeCapacityMemoryOutputWithContext(context.Background())
}

func (i GetProviderVdcComputeCapacityMemoryArgs) ToGetProviderVdcComputeCapacityMemoryOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProviderVdcComputeCapacityMemoryOutput)
}

// GetProviderVdcComputeCapacityMemoryArrayInput is an input type that accepts GetProviderVdcComputeCapacityMemoryArray and GetProviderVdcComputeCapacityMemoryArrayOutput values.
// You can construct a concrete instance of `GetProviderVdcComputeCapacityMemoryArrayInput` via:
//
//	GetProviderVdcComputeCapacityMemoryArray{ GetProviderVdcComputeCapacityMemoryArgs{...} }
type GetProviderVdcComputeCapacityMemoryArrayInput interface {
	pulumi.Input

	ToGetProviderVdcComputeCapacityMemoryArrayOutput() GetProviderVdcComputeCapacityMemoryArrayOutput
	ToGetProviderVdcComputeCapacityMemoryArrayOutputWithContext(context.Context) GetProviderVdcComputeCapacityMemoryArrayOutput
}

type GetProviderVdcComputeCapacityMemoryArray []GetProviderVdcComputeCapacityMemoryInput

func (GetProviderVdcComputeCapacityMemoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProviderVdcComputeCapacityMemory)(nil)).Elem()
}

func (i GetProviderVdcComputeCapacityMemoryArray) ToGetProviderVdcComputeCapacityMemoryArrayOutput() GetProviderVdcComputeCapacityMemoryArrayOutput {
	return i.ToGetProviderVdcComputeCapacityMemoryArrayOutputWithContext(context.Background())
}

func (i GetProviderVdcComputeCapacityMemoryArray) ToGetProviderVdcComputeCapacityMemoryArrayOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityMemoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProviderVdcComputeCapacityMemoryArrayOutput)
}

type GetProviderVdcComputeCapacityMemoryOutput struct{ *pulumi.OutputState }

func (GetProviderVdcComputeCapacityMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProviderVdcComputeCapacityMemory)(nil)).Elem()
}

func (o GetProviderVdcComputeCapacityMemoryOutput) ToGetProviderVdcComputeCapacityMemoryOutput() GetProviderVdcComputeCapacityMemoryOutput {
	return o
}

func (o GetProviderVdcComputeCapacityMemoryOutput) ToGetProviderVdcComputeCapacityMemoryOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityMemoryOutput {
	return o
}

// Allocated Memory for this Provider VDC
func (o GetProviderVdcComputeCapacityMemoryOutput) Allocation() pulumi.IntOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityMemory) int { return v.Allocation }).(pulumi.IntOutput)
}

// Memory overhead for this Provider VDC
func (o GetProviderVdcComputeCapacityMemoryOutput) Overhead() pulumi.IntOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityMemory) int { return v.Overhead }).(pulumi.IntOutput)
}

// Reserved Memory for this Provider VDC
func (o GetProviderVdcComputeCapacityMemoryOutput) Reserved() pulumi.IntOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityMemory) int { return v.Reserved }).(pulumi.IntOutput)
}

// Total Memory for this Provider VDC
func (o GetProviderVdcComputeCapacityMemoryOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityMemory) int { return v.Total }).(pulumi.IntOutput)
}

// Units for the Memory of this Provider VDC
func (o GetProviderVdcComputeCapacityMemoryOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityMemory) string { return v.Units }).(pulumi.StringOutput)
}

// Used Memory in this Provider VDC
func (o GetProviderVdcComputeCapacityMemoryOutput) Used() pulumi.IntOutput {
	return o.ApplyT(func(v GetProviderVdcComputeCapacityMemory) int { return v.Used }).(pulumi.IntOutput)
}

type GetProviderVdcComputeCapacityMemoryArrayOutput struct{ *pulumi.OutputState }

func (GetProviderVdcComputeCapacityMemoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProviderVdcComputeCapacityMemory)(nil)).Elem()
}

func (o GetProviderVdcComputeCapacityMemoryArrayOutput) ToGetProviderVdcComputeCapacityMemoryArrayOutput() GetProviderVdcComputeCapacityMemoryArrayOutput {
	return o
}

func (o GetProviderVdcComputeCapacityMemoryArrayOutput) ToGetProviderVdcComputeCapacityMemoryArrayOutputWithContext(ctx context.Context) GetProviderVdcComputeCapacityMemoryArrayOutput {
	return o
}

func (o GetProviderVdcComputeCapacityMemoryArrayOutput) Index(i pulumi.IntInput) GetProviderVdcComputeCapacityMemoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProviderVdcComputeCapacityMemory {
		return vs[0].([]GetProviderVdcComputeCapacityMemory)[vs[1].(int)]
	}).(GetProviderVdcComputeCapacityMemoryOutput)
}

type GetProviderVdcMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetProviderVdcMetadataEntryInput is an input type that accepts GetProviderVdcMetadataEntryArgs and GetProviderVdcMetadataEntryOutput values.
// You can construct a concrete instance of `GetProviderVdcMetadataEntryInput` via:
//
//	GetProviderVdcMetadataEntryArgs{...}
type GetProviderVdcMetadataEntryInput interface {
	pulumi.Input

	ToGetProviderVdcMetadataEntryOutput() GetProviderVdcMetadataEntryOutput
	ToGetProviderVdcMetadataEntryOutputWithContext(context.Context) GetProviderVdcMetadataEntryOutput
}

type GetProviderVdcMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProviderVdcMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProviderVdcMetadataEntry)(nil)).Elem()
}

func (i GetProviderVdcMetadataEntryArgs) ToGetProviderVdcMetadataEntryOutput() GetProviderVdcMetadataEntryOutput {
	return i.ToGetProviderVdcMetadataEntryOutputWithContext(context.Background())
}

func (i GetProviderVdcMetadataEntryArgs) ToGetProviderVdcMetadataEntryOutputWithContext(ctx context.Context) GetProviderVdcMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProviderVdcMetadataEntryOutput)
}

// GetProviderVdcMetadataEntryArrayInput is an input type that accepts GetProviderVdcMetadataEntryArray and GetProviderVdcMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetProviderVdcMetadataEntryArrayInput` via:
//
//	GetProviderVdcMetadataEntryArray{ GetProviderVdcMetadataEntryArgs{...} }
type GetProviderVdcMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetProviderVdcMetadataEntryArrayOutput() GetProviderVdcMetadataEntryArrayOutput
	ToGetProviderVdcMetadataEntryArrayOutputWithContext(context.Context) GetProviderVdcMetadataEntryArrayOutput
}

type GetProviderVdcMetadataEntryArray []GetProviderVdcMetadataEntryInput

func (GetProviderVdcMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProviderVdcMetadataEntry)(nil)).Elem()
}

func (i GetProviderVdcMetadataEntryArray) ToGetProviderVdcMetadataEntryArrayOutput() GetProviderVdcMetadataEntryArrayOutput {
	return i.ToGetProviderVdcMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetProviderVdcMetadataEntryArray) ToGetProviderVdcMetadataEntryArrayOutputWithContext(ctx context.Context) GetProviderVdcMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProviderVdcMetadataEntryArrayOutput)
}

type GetProviderVdcMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetProviderVdcMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProviderVdcMetadataEntry)(nil)).Elem()
}

func (o GetProviderVdcMetadataEntryOutput) ToGetProviderVdcMetadataEntryOutput() GetProviderVdcMetadataEntryOutput {
	return o
}

func (o GetProviderVdcMetadataEntryOutput) ToGetProviderVdcMetadataEntryOutputWithContext(ctx context.Context) GetProviderVdcMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetProviderVdcMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProviderVdcMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetProviderVdcMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProviderVdcMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetProviderVdcMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetProviderVdcMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetProviderVdcMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetProviderVdcMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetProviderVdcMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProviderVdcMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetProviderVdcMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetProviderVdcMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProviderVdcMetadataEntry)(nil)).Elem()
}

func (o GetProviderVdcMetadataEntryArrayOutput) ToGetProviderVdcMetadataEntryArrayOutput() GetProviderVdcMetadataEntryArrayOutput {
	return o
}

func (o GetProviderVdcMetadataEntryArrayOutput) ToGetProviderVdcMetadataEntryArrayOutputWithContext(ctx context.Context) GetProviderVdcMetadataEntryArrayOutput {
	return o
}

func (o GetProviderVdcMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetProviderVdcMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProviderVdcMetadataEntry {
		return vs[0].([]GetProviderVdcMetadataEntry)[vs[1].(int)]
	}).(GetProviderVdcMetadataEntryOutput)
}

type GetRdeMetadataEntry struct {
	// Only meaningful for providers. Allows them to share entries with their tenants. One of: `TENANT`, `PROVIDER`
	Domain string `pulumi:"domain"`
	// ID of the metadata entry
	Id string `pulumi:"id"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Namespace of the metadata entry
	Namespace string `pulumi:"namespace"`
	// Persistent metadata entries can be copied over on some entity operation
	Persistent bool `pulumi:"persistent"`
	// True if the metadata entry is read only
	Readonly bool `pulumi:"readonly"`
	// Type of this metadata entry. One of: 'StringEntry', 'NumberEntry', 'BoolEntry'
	Type string `pulumi:"type"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetRdeMetadataEntryInput is an input type that accepts GetRdeMetadataEntryArgs and GetRdeMetadataEntryOutput values.
// You can construct a concrete instance of `GetRdeMetadataEntryInput` via:
//
//	GetRdeMetadataEntryArgs{...}
type GetRdeMetadataEntryInput interface {
	pulumi.Input

	ToGetRdeMetadataEntryOutput() GetRdeMetadataEntryOutput
	ToGetRdeMetadataEntryOutputWithContext(context.Context) GetRdeMetadataEntryOutput
}

type GetRdeMetadataEntryArgs struct {
	// Only meaningful for providers. Allows them to share entries with their tenants. One of: `TENANT`, `PROVIDER`
	Domain pulumi.StringInput `pulumi:"domain"`
	// ID of the metadata entry
	Id pulumi.StringInput `pulumi:"id"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Namespace of the metadata entry
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Persistent metadata entries can be copied over on some entity operation
	Persistent pulumi.BoolInput `pulumi:"persistent"`
	// True if the metadata entry is read only
	Readonly pulumi.BoolInput `pulumi:"readonly"`
	// Type of this metadata entry. One of: 'StringEntry', 'NumberEntry', 'BoolEntry'
	Type pulumi.StringInput `pulumi:"type"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRdeMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdeMetadataEntry)(nil)).Elem()
}

func (i GetRdeMetadataEntryArgs) ToGetRdeMetadataEntryOutput() GetRdeMetadataEntryOutput {
	return i.ToGetRdeMetadataEntryOutputWithContext(context.Background())
}

func (i GetRdeMetadataEntryArgs) ToGetRdeMetadataEntryOutputWithContext(ctx context.Context) GetRdeMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdeMetadataEntryOutput)
}

// GetRdeMetadataEntryArrayInput is an input type that accepts GetRdeMetadataEntryArray and GetRdeMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetRdeMetadataEntryArrayInput` via:
//
//	GetRdeMetadataEntryArray{ GetRdeMetadataEntryArgs{...} }
type GetRdeMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetRdeMetadataEntryArrayOutput() GetRdeMetadataEntryArrayOutput
	ToGetRdeMetadataEntryArrayOutputWithContext(context.Context) GetRdeMetadataEntryArrayOutput
}

type GetRdeMetadataEntryArray []GetRdeMetadataEntryInput

func (GetRdeMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdeMetadataEntry)(nil)).Elem()
}

func (i GetRdeMetadataEntryArray) ToGetRdeMetadataEntryArrayOutput() GetRdeMetadataEntryArrayOutput {
	return i.ToGetRdeMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetRdeMetadataEntryArray) ToGetRdeMetadataEntryArrayOutputWithContext(ctx context.Context) GetRdeMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdeMetadataEntryArrayOutput)
}

type GetRdeMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetRdeMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdeMetadataEntry)(nil)).Elem()
}

func (o GetRdeMetadataEntryOutput) ToGetRdeMetadataEntryOutput() GetRdeMetadataEntryOutput {
	return o
}

func (o GetRdeMetadataEntryOutput) ToGetRdeMetadataEntryOutputWithContext(ctx context.Context) GetRdeMetadataEntryOutput {
	return o
}

// Only meaningful for providers. Allows them to share entries with their tenants. One of: `TENANT`, `PROVIDER`
func (o GetRdeMetadataEntryOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdeMetadataEntry) string { return v.Domain }).(pulumi.StringOutput)
}

// ID of the metadata entry
func (o GetRdeMetadataEntryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdeMetadataEntry) string { return v.Id }).(pulumi.StringOutput)
}

// Key of this metadata entry
func (o GetRdeMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdeMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Namespace of the metadata entry
func (o GetRdeMetadataEntryOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdeMetadataEntry) string { return v.Namespace }).(pulumi.StringOutput)
}

// Persistent metadata entries can be copied over on some entity operation
func (o GetRdeMetadataEntryOutput) Persistent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdeMetadataEntry) bool { return v.Persistent }).(pulumi.BoolOutput)
}

// True if the metadata entry is read only
func (o GetRdeMetadataEntryOutput) Readonly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRdeMetadataEntry) bool { return v.Readonly }).(pulumi.BoolOutput)
}

// Type of this metadata entry. One of: 'StringEntry', 'NumberEntry', 'BoolEntry'
func (o GetRdeMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdeMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetRdeMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdeMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetRdeMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetRdeMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdeMetadataEntry)(nil)).Elem()
}

func (o GetRdeMetadataEntryArrayOutput) ToGetRdeMetadataEntryArrayOutput() GetRdeMetadataEntryArrayOutput {
	return o
}

func (o GetRdeMetadataEntryArrayOutput) ToGetRdeMetadataEntryArrayOutputWithContext(ctx context.Context) GetRdeMetadataEntryArrayOutput {
	return o
}

func (o GetRdeMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetRdeMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdeMetadataEntry {
		return vs[0].([]GetRdeMetadataEntry)[vs[1].(int)]
	}).(GetRdeMetadataEntryOutput)
}

type GetRdeTypeHook struct {
	// Existing Behavior that will be automatically invoked when the RDE of this RDE Type triggers the event
	BehaviorId string `pulumi:"behaviorId"`
	// Event that will invoke the Behavior, one of PostCreate, PostUpdate, PreDelete, PostDelete
	Event string `pulumi:"event"`
}

// GetRdeTypeHookInput is an input type that accepts GetRdeTypeHookArgs and GetRdeTypeHookOutput values.
// You can construct a concrete instance of `GetRdeTypeHookInput` via:
//
//	GetRdeTypeHookArgs{...}
type GetRdeTypeHookInput interface {
	pulumi.Input

	ToGetRdeTypeHookOutput() GetRdeTypeHookOutput
	ToGetRdeTypeHookOutputWithContext(context.Context) GetRdeTypeHookOutput
}

type GetRdeTypeHookArgs struct {
	// Existing Behavior that will be automatically invoked when the RDE of this RDE Type triggers the event
	BehaviorId pulumi.StringInput `pulumi:"behaviorId"`
	// Event that will invoke the Behavior, one of PostCreate, PostUpdate, PreDelete, PostDelete
	Event pulumi.StringInput `pulumi:"event"`
}

func (GetRdeTypeHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdeTypeHook)(nil)).Elem()
}

func (i GetRdeTypeHookArgs) ToGetRdeTypeHookOutput() GetRdeTypeHookOutput {
	return i.ToGetRdeTypeHookOutputWithContext(context.Background())
}

func (i GetRdeTypeHookArgs) ToGetRdeTypeHookOutputWithContext(ctx context.Context) GetRdeTypeHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdeTypeHookOutput)
}

// GetRdeTypeHookArrayInput is an input type that accepts GetRdeTypeHookArray and GetRdeTypeHookArrayOutput values.
// You can construct a concrete instance of `GetRdeTypeHookArrayInput` via:
//
//	GetRdeTypeHookArray{ GetRdeTypeHookArgs{...} }
type GetRdeTypeHookArrayInput interface {
	pulumi.Input

	ToGetRdeTypeHookArrayOutput() GetRdeTypeHookArrayOutput
	ToGetRdeTypeHookArrayOutputWithContext(context.Context) GetRdeTypeHookArrayOutput
}

type GetRdeTypeHookArray []GetRdeTypeHookInput

func (GetRdeTypeHookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdeTypeHook)(nil)).Elem()
}

func (i GetRdeTypeHookArray) ToGetRdeTypeHookArrayOutput() GetRdeTypeHookArrayOutput {
	return i.ToGetRdeTypeHookArrayOutputWithContext(context.Background())
}

func (i GetRdeTypeHookArray) ToGetRdeTypeHookArrayOutputWithContext(ctx context.Context) GetRdeTypeHookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdeTypeHookArrayOutput)
}

type GetRdeTypeHookOutput struct{ *pulumi.OutputState }

func (GetRdeTypeHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdeTypeHook)(nil)).Elem()
}

func (o GetRdeTypeHookOutput) ToGetRdeTypeHookOutput() GetRdeTypeHookOutput {
	return o
}

func (o GetRdeTypeHookOutput) ToGetRdeTypeHookOutputWithContext(ctx context.Context) GetRdeTypeHookOutput {
	return o
}

// Existing Behavior that will be automatically invoked when the RDE of this RDE Type triggers the event
func (o GetRdeTypeHookOutput) BehaviorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdeTypeHook) string { return v.BehaviorId }).(pulumi.StringOutput)
}

// Event that will invoke the Behavior, one of PostCreate, PostUpdate, PreDelete, PostDelete
func (o GetRdeTypeHookOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdeTypeHook) string { return v.Event }).(pulumi.StringOutput)
}

type GetRdeTypeHookArrayOutput struct{ *pulumi.OutputState }

func (GetRdeTypeHookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdeTypeHook)(nil)).Elem()
}

func (o GetRdeTypeHookArrayOutput) ToGetRdeTypeHookArrayOutput() GetRdeTypeHookArrayOutput {
	return o
}

func (o GetRdeTypeHookArrayOutput) ToGetRdeTypeHookArrayOutputWithContext(ctx context.Context) GetRdeTypeHookArrayOutput {
	return o
}

func (o GetRdeTypeHookArrayOutput) Index(i pulumi.IntInput) GetRdeTypeHookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdeTypeHook {
		return vs[0].([]GetRdeTypeHook)[vs[1].(int)]
	}).(GetRdeTypeHookOutput)
}

type GetResourceSchemaAttribute struct {
	// whether the attribute is computed
	Computed bool `pulumi:"computed"`
	// an optional description of the attribute
	Description string `pulumi:"description"`
	// An unique name to identify the data source
	Name string `pulumi:"name"`
	// whether the attribute is optional
	Optional bool `pulumi:"optional"`
	// whether the attribute is required
	Required bool `pulumi:"required"`
	// whether the attribute is sensitive
	Sensitive bool `pulumi:"sensitive"`
	// attribute type
	Type string `pulumi:"type"`
}

// GetResourceSchemaAttributeInput is an input type that accepts GetResourceSchemaAttributeArgs and GetResourceSchemaAttributeOutput values.
// You can construct a concrete instance of `GetResourceSchemaAttributeInput` via:
//
//	GetResourceSchemaAttributeArgs{...}
type GetResourceSchemaAttributeInput interface {
	pulumi.Input

	ToGetResourceSchemaAttributeOutput() GetResourceSchemaAttributeOutput
	ToGetResourceSchemaAttributeOutputWithContext(context.Context) GetResourceSchemaAttributeOutput
}

type GetResourceSchemaAttributeArgs struct {
	// whether the attribute is computed
	Computed pulumi.BoolInput `pulumi:"computed"`
	// an optional description of the attribute
	Description pulumi.StringInput `pulumi:"description"`
	// An unique name to identify the data source
	Name pulumi.StringInput `pulumi:"name"`
	// whether the attribute is optional
	Optional pulumi.BoolInput `pulumi:"optional"`
	// whether the attribute is required
	Required pulumi.BoolInput `pulumi:"required"`
	// whether the attribute is sensitive
	Sensitive pulumi.BoolInput `pulumi:"sensitive"`
	// attribute type
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResourceSchemaAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceSchemaAttribute)(nil)).Elem()
}

func (i GetResourceSchemaAttributeArgs) ToGetResourceSchemaAttributeOutput() GetResourceSchemaAttributeOutput {
	return i.ToGetResourceSchemaAttributeOutputWithContext(context.Background())
}

func (i GetResourceSchemaAttributeArgs) ToGetResourceSchemaAttributeOutputWithContext(ctx context.Context) GetResourceSchemaAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceSchemaAttributeOutput)
}

// GetResourceSchemaAttributeArrayInput is an input type that accepts GetResourceSchemaAttributeArray and GetResourceSchemaAttributeArrayOutput values.
// You can construct a concrete instance of `GetResourceSchemaAttributeArrayInput` via:
//
//	GetResourceSchemaAttributeArray{ GetResourceSchemaAttributeArgs{...} }
type GetResourceSchemaAttributeArrayInput interface {
	pulumi.Input

	ToGetResourceSchemaAttributeArrayOutput() GetResourceSchemaAttributeArrayOutput
	ToGetResourceSchemaAttributeArrayOutputWithContext(context.Context) GetResourceSchemaAttributeArrayOutput
}

type GetResourceSchemaAttributeArray []GetResourceSchemaAttributeInput

func (GetResourceSchemaAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceSchemaAttribute)(nil)).Elem()
}

func (i GetResourceSchemaAttributeArray) ToGetResourceSchemaAttributeArrayOutput() GetResourceSchemaAttributeArrayOutput {
	return i.ToGetResourceSchemaAttributeArrayOutputWithContext(context.Background())
}

func (i GetResourceSchemaAttributeArray) ToGetResourceSchemaAttributeArrayOutputWithContext(ctx context.Context) GetResourceSchemaAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceSchemaAttributeArrayOutput)
}

type GetResourceSchemaAttributeOutput struct{ *pulumi.OutputState }

func (GetResourceSchemaAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceSchemaAttribute)(nil)).Elem()
}

func (o GetResourceSchemaAttributeOutput) ToGetResourceSchemaAttributeOutput() GetResourceSchemaAttributeOutput {
	return o
}

func (o GetResourceSchemaAttributeOutput) ToGetResourceSchemaAttributeOutputWithContext(ctx context.Context) GetResourceSchemaAttributeOutput {
	return o
}

// whether the attribute is computed
func (o GetResourceSchemaAttributeOutput) Computed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceSchemaAttribute) bool { return v.Computed }).(pulumi.BoolOutput)
}

// an optional description of the attribute
func (o GetResourceSchemaAttributeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceSchemaAttribute) string { return v.Description }).(pulumi.StringOutput)
}

// An unique name to identify the data source
func (o GetResourceSchemaAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceSchemaAttribute) string { return v.Name }).(pulumi.StringOutput)
}

// whether the attribute is optional
func (o GetResourceSchemaAttributeOutput) Optional() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceSchemaAttribute) bool { return v.Optional }).(pulumi.BoolOutput)
}

// whether the attribute is required
func (o GetResourceSchemaAttributeOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceSchemaAttribute) bool { return v.Required }).(pulumi.BoolOutput)
}

// whether the attribute is sensitive
func (o GetResourceSchemaAttributeOutput) Sensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceSchemaAttribute) bool { return v.Sensitive }).(pulumi.BoolOutput)
}

// attribute type
func (o GetResourceSchemaAttributeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceSchemaAttribute) string { return v.Type }).(pulumi.StringOutput)
}

type GetResourceSchemaAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetResourceSchemaAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceSchemaAttribute)(nil)).Elem()
}

func (o GetResourceSchemaAttributeArrayOutput) ToGetResourceSchemaAttributeArrayOutput() GetResourceSchemaAttributeArrayOutput {
	return o
}

func (o GetResourceSchemaAttributeArrayOutput) ToGetResourceSchemaAttributeArrayOutputWithContext(ctx context.Context) GetResourceSchemaAttributeArrayOutput {
	return o
}

func (o GetResourceSchemaAttributeArrayOutput) Index(i pulumi.IntInput) GetResourceSchemaAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceSchemaAttribute {
		return vs[0].([]GetResourceSchemaAttribute)[vs[1].(int)]
	}).(GetResourceSchemaAttributeOutput)
}

type GetResourceSchemaBlockAttribute struct {
	// (Computed) Same composition of the simple `attributes` above.
	Attributes []GetResourceSchemaBlockAttributeAttribute `pulumi:"attributes"`
	// An unique name to identify the data source
	Name string `pulumi:"name"`
	// How the block is nested
	NestingMode string `pulumi:"nestingMode"`
}

// GetResourceSchemaBlockAttributeInput is an input type that accepts GetResourceSchemaBlockAttributeArgs and GetResourceSchemaBlockAttributeOutput values.
// You can construct a concrete instance of `GetResourceSchemaBlockAttributeInput` via:
//
//	GetResourceSchemaBlockAttributeArgs{...}
type GetResourceSchemaBlockAttributeInput interface {
	pulumi.Input

	ToGetResourceSchemaBlockAttributeOutput() GetResourceSchemaBlockAttributeOutput
	ToGetResourceSchemaBlockAttributeOutputWithContext(context.Context) GetResourceSchemaBlockAttributeOutput
}

type GetResourceSchemaBlockAttributeArgs struct {
	// (Computed) Same composition of the simple `attributes` above.
	Attributes GetResourceSchemaBlockAttributeAttributeArrayInput `pulumi:"attributes"`
	// An unique name to identify the data source
	Name pulumi.StringInput `pulumi:"name"`
	// How the block is nested
	NestingMode pulumi.StringInput `pulumi:"nestingMode"`
}

func (GetResourceSchemaBlockAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceSchemaBlockAttribute)(nil)).Elem()
}

func (i GetResourceSchemaBlockAttributeArgs) ToGetResourceSchemaBlockAttributeOutput() GetResourceSchemaBlockAttributeOutput {
	return i.ToGetResourceSchemaBlockAttributeOutputWithContext(context.Background())
}

func (i GetResourceSchemaBlockAttributeArgs) ToGetResourceSchemaBlockAttributeOutputWithContext(ctx context.Context) GetResourceSchemaBlockAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceSchemaBlockAttributeOutput)
}

// GetResourceSchemaBlockAttributeArrayInput is an input type that accepts GetResourceSchemaBlockAttributeArray and GetResourceSchemaBlockAttributeArrayOutput values.
// You can construct a concrete instance of `GetResourceSchemaBlockAttributeArrayInput` via:
//
//	GetResourceSchemaBlockAttributeArray{ GetResourceSchemaBlockAttributeArgs{...} }
type GetResourceSchemaBlockAttributeArrayInput interface {
	pulumi.Input

	ToGetResourceSchemaBlockAttributeArrayOutput() GetResourceSchemaBlockAttributeArrayOutput
	ToGetResourceSchemaBlockAttributeArrayOutputWithContext(context.Context) GetResourceSchemaBlockAttributeArrayOutput
}

type GetResourceSchemaBlockAttributeArray []GetResourceSchemaBlockAttributeInput

func (GetResourceSchemaBlockAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceSchemaBlockAttribute)(nil)).Elem()
}

func (i GetResourceSchemaBlockAttributeArray) ToGetResourceSchemaBlockAttributeArrayOutput() GetResourceSchemaBlockAttributeArrayOutput {
	return i.ToGetResourceSchemaBlockAttributeArrayOutputWithContext(context.Background())
}

func (i GetResourceSchemaBlockAttributeArray) ToGetResourceSchemaBlockAttributeArrayOutputWithContext(ctx context.Context) GetResourceSchemaBlockAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceSchemaBlockAttributeArrayOutput)
}

type GetResourceSchemaBlockAttributeOutput struct{ *pulumi.OutputState }

func (GetResourceSchemaBlockAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceSchemaBlockAttribute)(nil)).Elem()
}

func (o GetResourceSchemaBlockAttributeOutput) ToGetResourceSchemaBlockAttributeOutput() GetResourceSchemaBlockAttributeOutput {
	return o
}

func (o GetResourceSchemaBlockAttributeOutput) ToGetResourceSchemaBlockAttributeOutputWithContext(ctx context.Context) GetResourceSchemaBlockAttributeOutput {
	return o
}

// (Computed) Same composition of the simple `attributes` above.
func (o GetResourceSchemaBlockAttributeOutput) Attributes() GetResourceSchemaBlockAttributeAttributeArrayOutput {
	return o.ApplyT(func(v GetResourceSchemaBlockAttribute) []GetResourceSchemaBlockAttributeAttribute {
		return v.Attributes
	}).(GetResourceSchemaBlockAttributeAttributeArrayOutput)
}

// An unique name to identify the data source
func (o GetResourceSchemaBlockAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceSchemaBlockAttribute) string { return v.Name }).(pulumi.StringOutput)
}

// How the block is nested
func (o GetResourceSchemaBlockAttributeOutput) NestingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceSchemaBlockAttribute) string { return v.NestingMode }).(pulumi.StringOutput)
}

type GetResourceSchemaBlockAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetResourceSchemaBlockAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceSchemaBlockAttribute)(nil)).Elem()
}

func (o GetResourceSchemaBlockAttributeArrayOutput) ToGetResourceSchemaBlockAttributeArrayOutput() GetResourceSchemaBlockAttributeArrayOutput {
	return o
}

func (o GetResourceSchemaBlockAttributeArrayOutput) ToGetResourceSchemaBlockAttributeArrayOutputWithContext(ctx context.Context) GetResourceSchemaBlockAttributeArrayOutput {
	return o
}

func (o GetResourceSchemaBlockAttributeArrayOutput) Index(i pulumi.IntInput) GetResourceSchemaBlockAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceSchemaBlockAttribute {
		return vs[0].([]GetResourceSchemaBlockAttribute)[vs[1].(int)]
	}).(GetResourceSchemaBlockAttributeOutput)
}

type GetResourceSchemaBlockAttributeAttribute struct {
	// whether the attribute is computed
	Computed bool `pulumi:"computed"`
	// an optional description of the attribute
	Description string `pulumi:"description"`
	// An unique name to identify the data source
	Name string `pulumi:"name"`
	// whether the attribute is optional
	Optional bool `pulumi:"optional"`
	// whether the attribute is required
	Required bool `pulumi:"required"`
	// whether the attribute is sensitive
	Sensitive bool `pulumi:"sensitive"`
	// attribute type
	Type string `pulumi:"type"`
}

// GetResourceSchemaBlockAttributeAttributeInput is an input type that accepts GetResourceSchemaBlockAttributeAttributeArgs and GetResourceSchemaBlockAttributeAttributeOutput values.
// You can construct a concrete instance of `GetResourceSchemaBlockAttributeAttributeInput` via:
//
//	GetResourceSchemaBlockAttributeAttributeArgs{...}
type GetResourceSchemaBlockAttributeAttributeInput interface {
	pulumi.Input

	ToGetResourceSchemaBlockAttributeAttributeOutput() GetResourceSchemaBlockAttributeAttributeOutput
	ToGetResourceSchemaBlockAttributeAttributeOutputWithContext(context.Context) GetResourceSchemaBlockAttributeAttributeOutput
}

type GetResourceSchemaBlockAttributeAttributeArgs struct {
	// whether the attribute is computed
	Computed pulumi.BoolInput `pulumi:"computed"`
	// an optional description of the attribute
	Description pulumi.StringInput `pulumi:"description"`
	// An unique name to identify the data source
	Name pulumi.StringInput `pulumi:"name"`
	// whether the attribute is optional
	Optional pulumi.BoolInput `pulumi:"optional"`
	// whether the attribute is required
	Required pulumi.BoolInput `pulumi:"required"`
	// whether the attribute is sensitive
	Sensitive pulumi.BoolInput `pulumi:"sensitive"`
	// attribute type
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResourceSchemaBlockAttributeAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceSchemaBlockAttributeAttribute)(nil)).Elem()
}

func (i GetResourceSchemaBlockAttributeAttributeArgs) ToGetResourceSchemaBlockAttributeAttributeOutput() GetResourceSchemaBlockAttributeAttributeOutput {
	return i.ToGetResourceSchemaBlockAttributeAttributeOutputWithContext(context.Background())
}

func (i GetResourceSchemaBlockAttributeAttributeArgs) ToGetResourceSchemaBlockAttributeAttributeOutputWithContext(ctx context.Context) GetResourceSchemaBlockAttributeAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceSchemaBlockAttributeAttributeOutput)
}

// GetResourceSchemaBlockAttributeAttributeArrayInput is an input type that accepts GetResourceSchemaBlockAttributeAttributeArray and GetResourceSchemaBlockAttributeAttributeArrayOutput values.
// You can construct a concrete instance of `GetResourceSchemaBlockAttributeAttributeArrayInput` via:
//
//	GetResourceSchemaBlockAttributeAttributeArray{ GetResourceSchemaBlockAttributeAttributeArgs{...} }
type GetResourceSchemaBlockAttributeAttributeArrayInput interface {
	pulumi.Input

	ToGetResourceSchemaBlockAttributeAttributeArrayOutput() GetResourceSchemaBlockAttributeAttributeArrayOutput
	ToGetResourceSchemaBlockAttributeAttributeArrayOutputWithContext(context.Context) GetResourceSchemaBlockAttributeAttributeArrayOutput
}

type GetResourceSchemaBlockAttributeAttributeArray []GetResourceSchemaBlockAttributeAttributeInput

func (GetResourceSchemaBlockAttributeAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceSchemaBlockAttributeAttribute)(nil)).Elem()
}

func (i GetResourceSchemaBlockAttributeAttributeArray) ToGetResourceSchemaBlockAttributeAttributeArrayOutput() GetResourceSchemaBlockAttributeAttributeArrayOutput {
	return i.ToGetResourceSchemaBlockAttributeAttributeArrayOutputWithContext(context.Background())
}

func (i GetResourceSchemaBlockAttributeAttributeArray) ToGetResourceSchemaBlockAttributeAttributeArrayOutputWithContext(ctx context.Context) GetResourceSchemaBlockAttributeAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceSchemaBlockAttributeAttributeArrayOutput)
}

type GetResourceSchemaBlockAttributeAttributeOutput struct{ *pulumi.OutputState }

func (GetResourceSchemaBlockAttributeAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceSchemaBlockAttributeAttribute)(nil)).Elem()
}

func (o GetResourceSchemaBlockAttributeAttributeOutput) ToGetResourceSchemaBlockAttributeAttributeOutput() GetResourceSchemaBlockAttributeAttributeOutput {
	return o
}

func (o GetResourceSchemaBlockAttributeAttributeOutput) ToGetResourceSchemaBlockAttributeAttributeOutputWithContext(ctx context.Context) GetResourceSchemaBlockAttributeAttributeOutput {
	return o
}

// whether the attribute is computed
func (o GetResourceSchemaBlockAttributeAttributeOutput) Computed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceSchemaBlockAttributeAttribute) bool { return v.Computed }).(pulumi.BoolOutput)
}

// an optional description of the attribute
func (o GetResourceSchemaBlockAttributeAttributeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceSchemaBlockAttributeAttribute) string { return v.Description }).(pulumi.StringOutput)
}

// An unique name to identify the data source
func (o GetResourceSchemaBlockAttributeAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceSchemaBlockAttributeAttribute) string { return v.Name }).(pulumi.StringOutput)
}

// whether the attribute is optional
func (o GetResourceSchemaBlockAttributeAttributeOutput) Optional() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceSchemaBlockAttributeAttribute) bool { return v.Optional }).(pulumi.BoolOutput)
}

// whether the attribute is required
func (o GetResourceSchemaBlockAttributeAttributeOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceSchemaBlockAttributeAttribute) bool { return v.Required }).(pulumi.BoolOutput)
}

// whether the attribute is sensitive
func (o GetResourceSchemaBlockAttributeAttributeOutput) Sensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceSchemaBlockAttributeAttribute) bool { return v.Sensitive }).(pulumi.BoolOutput)
}

// attribute type
func (o GetResourceSchemaBlockAttributeAttributeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceSchemaBlockAttributeAttribute) string { return v.Type }).(pulumi.StringOutput)
}

type GetResourceSchemaBlockAttributeAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetResourceSchemaBlockAttributeAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceSchemaBlockAttributeAttribute)(nil)).Elem()
}

func (o GetResourceSchemaBlockAttributeAttributeArrayOutput) ToGetResourceSchemaBlockAttributeAttributeArrayOutput() GetResourceSchemaBlockAttributeAttributeArrayOutput {
	return o
}

func (o GetResourceSchemaBlockAttributeAttributeArrayOutput) ToGetResourceSchemaBlockAttributeAttributeArrayOutputWithContext(ctx context.Context) GetResourceSchemaBlockAttributeAttributeArrayOutput {
	return o
}

func (o GetResourceSchemaBlockAttributeAttributeArrayOutput) Index(i pulumi.IntInput) GetResourceSchemaBlockAttributeAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceSchemaBlockAttributeAttribute {
		return vs[0].([]GetResourceSchemaBlockAttributeAttribute)[vs[1].(int)]
	}).(GetResourceSchemaBlockAttributeAttributeOutput)
}

type GetRightImpliedRight struct {
	// ID of the implied right
	Id string `pulumi:"id"`
	// The name of the right.
	Name string `pulumi:"name"`
}

// GetRightImpliedRightInput is an input type that accepts GetRightImpliedRightArgs and GetRightImpliedRightOutput values.
// You can construct a concrete instance of `GetRightImpliedRightInput` via:
//
//	GetRightImpliedRightArgs{...}
type GetRightImpliedRightInput interface {
	pulumi.Input

	ToGetRightImpliedRightOutput() GetRightImpliedRightOutput
	ToGetRightImpliedRightOutputWithContext(context.Context) GetRightImpliedRightOutput
}

type GetRightImpliedRightArgs struct {
	// ID of the implied right
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the right.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRightImpliedRightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRightImpliedRight)(nil)).Elem()
}

func (i GetRightImpliedRightArgs) ToGetRightImpliedRightOutput() GetRightImpliedRightOutput {
	return i.ToGetRightImpliedRightOutputWithContext(context.Background())
}

func (i GetRightImpliedRightArgs) ToGetRightImpliedRightOutputWithContext(ctx context.Context) GetRightImpliedRightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRightImpliedRightOutput)
}

// GetRightImpliedRightArrayInput is an input type that accepts GetRightImpliedRightArray and GetRightImpliedRightArrayOutput values.
// You can construct a concrete instance of `GetRightImpliedRightArrayInput` via:
//
//	GetRightImpliedRightArray{ GetRightImpliedRightArgs{...} }
type GetRightImpliedRightArrayInput interface {
	pulumi.Input

	ToGetRightImpliedRightArrayOutput() GetRightImpliedRightArrayOutput
	ToGetRightImpliedRightArrayOutputWithContext(context.Context) GetRightImpliedRightArrayOutput
}

type GetRightImpliedRightArray []GetRightImpliedRightInput

func (GetRightImpliedRightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRightImpliedRight)(nil)).Elem()
}

func (i GetRightImpliedRightArray) ToGetRightImpliedRightArrayOutput() GetRightImpliedRightArrayOutput {
	return i.ToGetRightImpliedRightArrayOutputWithContext(context.Background())
}

func (i GetRightImpliedRightArray) ToGetRightImpliedRightArrayOutputWithContext(ctx context.Context) GetRightImpliedRightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRightImpliedRightArrayOutput)
}

type GetRightImpliedRightOutput struct{ *pulumi.OutputState }

func (GetRightImpliedRightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRightImpliedRight)(nil)).Elem()
}

func (o GetRightImpliedRightOutput) ToGetRightImpliedRightOutput() GetRightImpliedRightOutput {
	return o
}

func (o GetRightImpliedRightOutput) ToGetRightImpliedRightOutputWithContext(ctx context.Context) GetRightImpliedRightOutput {
	return o
}

// ID of the implied right
func (o GetRightImpliedRightOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRightImpliedRight) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the right.
func (o GetRightImpliedRightOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRightImpliedRight) string { return v.Name }).(pulumi.StringOutput)
}

type GetRightImpliedRightArrayOutput struct{ *pulumi.OutputState }

func (GetRightImpliedRightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRightImpliedRight)(nil)).Elem()
}

func (o GetRightImpliedRightArrayOutput) ToGetRightImpliedRightArrayOutput() GetRightImpliedRightArrayOutput {
	return o
}

func (o GetRightImpliedRightArrayOutput) ToGetRightImpliedRightArrayOutputWithContext(ctx context.Context) GetRightImpliedRightArrayOutput {
	return o
}

func (o GetRightImpliedRightArrayOutput) Index(i pulumi.IntInput) GetRightImpliedRightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRightImpliedRight {
		return vs[0].([]GetRightImpliedRight)[vs[1].(int)]
	}).(GetRightImpliedRightOutput)
}

type GetSolutionLandingZoneCatalog struct {
	// Capability set for catalog
	Capabilities []string `pulumi:"capabilities"`
	// ID of catalog
	Id string `pulumi:"id"`
	// Catalog Name
	Name string `pulumi:"name"`
}

// GetSolutionLandingZoneCatalogInput is an input type that accepts GetSolutionLandingZoneCatalogArgs and GetSolutionLandingZoneCatalogOutput values.
// You can construct a concrete instance of `GetSolutionLandingZoneCatalogInput` via:
//
//	GetSolutionLandingZoneCatalogArgs{...}
type GetSolutionLandingZoneCatalogInput interface {
	pulumi.Input

	ToGetSolutionLandingZoneCatalogOutput() GetSolutionLandingZoneCatalogOutput
	ToGetSolutionLandingZoneCatalogOutputWithContext(context.Context) GetSolutionLandingZoneCatalogOutput
}

type GetSolutionLandingZoneCatalogArgs struct {
	// Capability set for catalog
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// ID of catalog
	Id pulumi.StringInput `pulumi:"id"`
	// Catalog Name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSolutionLandingZoneCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionLandingZoneCatalog)(nil)).Elem()
}

func (i GetSolutionLandingZoneCatalogArgs) ToGetSolutionLandingZoneCatalogOutput() GetSolutionLandingZoneCatalogOutput {
	return i.ToGetSolutionLandingZoneCatalogOutputWithContext(context.Background())
}

func (i GetSolutionLandingZoneCatalogArgs) ToGetSolutionLandingZoneCatalogOutputWithContext(ctx context.Context) GetSolutionLandingZoneCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSolutionLandingZoneCatalogOutput)
}

// GetSolutionLandingZoneCatalogArrayInput is an input type that accepts GetSolutionLandingZoneCatalogArray and GetSolutionLandingZoneCatalogArrayOutput values.
// You can construct a concrete instance of `GetSolutionLandingZoneCatalogArrayInput` via:
//
//	GetSolutionLandingZoneCatalogArray{ GetSolutionLandingZoneCatalogArgs{...} }
type GetSolutionLandingZoneCatalogArrayInput interface {
	pulumi.Input

	ToGetSolutionLandingZoneCatalogArrayOutput() GetSolutionLandingZoneCatalogArrayOutput
	ToGetSolutionLandingZoneCatalogArrayOutputWithContext(context.Context) GetSolutionLandingZoneCatalogArrayOutput
}

type GetSolutionLandingZoneCatalogArray []GetSolutionLandingZoneCatalogInput

func (GetSolutionLandingZoneCatalogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSolutionLandingZoneCatalog)(nil)).Elem()
}

func (i GetSolutionLandingZoneCatalogArray) ToGetSolutionLandingZoneCatalogArrayOutput() GetSolutionLandingZoneCatalogArrayOutput {
	return i.ToGetSolutionLandingZoneCatalogArrayOutputWithContext(context.Background())
}

func (i GetSolutionLandingZoneCatalogArray) ToGetSolutionLandingZoneCatalogArrayOutputWithContext(ctx context.Context) GetSolutionLandingZoneCatalogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSolutionLandingZoneCatalogArrayOutput)
}

type GetSolutionLandingZoneCatalogOutput struct{ *pulumi.OutputState }

func (GetSolutionLandingZoneCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionLandingZoneCatalog)(nil)).Elem()
}

func (o GetSolutionLandingZoneCatalogOutput) ToGetSolutionLandingZoneCatalogOutput() GetSolutionLandingZoneCatalogOutput {
	return o
}

func (o GetSolutionLandingZoneCatalogOutput) ToGetSolutionLandingZoneCatalogOutputWithContext(ctx context.Context) GetSolutionLandingZoneCatalogOutput {
	return o
}

// Capability set for catalog
func (o GetSolutionLandingZoneCatalogOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneCatalog) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// ID of catalog
func (o GetSolutionLandingZoneCatalogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneCatalog) string { return v.Id }).(pulumi.StringOutput)
}

// Catalog Name
func (o GetSolutionLandingZoneCatalogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneCatalog) string { return v.Name }).(pulumi.StringOutput)
}

type GetSolutionLandingZoneCatalogArrayOutput struct{ *pulumi.OutputState }

func (GetSolutionLandingZoneCatalogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSolutionLandingZoneCatalog)(nil)).Elem()
}

func (o GetSolutionLandingZoneCatalogArrayOutput) ToGetSolutionLandingZoneCatalogArrayOutput() GetSolutionLandingZoneCatalogArrayOutput {
	return o
}

func (o GetSolutionLandingZoneCatalogArrayOutput) ToGetSolutionLandingZoneCatalogArrayOutputWithContext(ctx context.Context) GetSolutionLandingZoneCatalogArrayOutput {
	return o
}

func (o GetSolutionLandingZoneCatalogArrayOutput) Index(i pulumi.IntInput) GetSolutionLandingZoneCatalogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSolutionLandingZoneCatalog {
		return vs[0].([]GetSolutionLandingZoneCatalog)[vs[1].(int)]
	}).(GetSolutionLandingZoneCatalogOutput)
}

type GetSolutionLandingZoneVdc struct {
	// Set of capabilities of the VDC
	Capabilities []string `pulumi:"capabilities"`
	// Details of Compute Policy element
	ComputePolicies []GetSolutionLandingZoneVdcComputePolicy `pulumi:"computePolicies"`
	// VDC ID
	Id string `pulumi:"id"`
	// Defines if this VDC should be treated as the default one
	IsDefault bool `pulumi:"isDefault"`
	// VDC Name
	Name string `pulumi:"name"`
	// Details of Org VDC Network element
	OrgVdcNetworks []GetSolutionLandingZoneVdcOrgVdcNetwork `pulumi:"orgVdcNetworks"`
	// Details of Storage Policy element
	StoragePolicies []GetSolutionLandingZoneVdcStoragePolicy `pulumi:"storagePolicies"`
}

// GetSolutionLandingZoneVdcInput is an input type that accepts GetSolutionLandingZoneVdcArgs and GetSolutionLandingZoneVdcOutput values.
// You can construct a concrete instance of `GetSolutionLandingZoneVdcInput` via:
//
//	GetSolutionLandingZoneVdcArgs{...}
type GetSolutionLandingZoneVdcInput interface {
	pulumi.Input

	ToGetSolutionLandingZoneVdcOutput() GetSolutionLandingZoneVdcOutput
	ToGetSolutionLandingZoneVdcOutputWithContext(context.Context) GetSolutionLandingZoneVdcOutput
}

type GetSolutionLandingZoneVdcArgs struct {
	// Set of capabilities of the VDC
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// Details of Compute Policy element
	ComputePolicies GetSolutionLandingZoneVdcComputePolicyArrayInput `pulumi:"computePolicies"`
	// VDC ID
	Id pulumi.StringInput `pulumi:"id"`
	// Defines if this VDC should be treated as the default one
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// VDC Name
	Name pulumi.StringInput `pulumi:"name"`
	// Details of Org VDC Network element
	OrgVdcNetworks GetSolutionLandingZoneVdcOrgVdcNetworkArrayInput `pulumi:"orgVdcNetworks"`
	// Details of Storage Policy element
	StoragePolicies GetSolutionLandingZoneVdcStoragePolicyArrayInput `pulumi:"storagePolicies"`
}

func (GetSolutionLandingZoneVdcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionLandingZoneVdc)(nil)).Elem()
}

func (i GetSolutionLandingZoneVdcArgs) ToGetSolutionLandingZoneVdcOutput() GetSolutionLandingZoneVdcOutput {
	return i.ToGetSolutionLandingZoneVdcOutputWithContext(context.Background())
}

func (i GetSolutionLandingZoneVdcArgs) ToGetSolutionLandingZoneVdcOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSolutionLandingZoneVdcOutput)
}

// GetSolutionLandingZoneVdcArrayInput is an input type that accepts GetSolutionLandingZoneVdcArray and GetSolutionLandingZoneVdcArrayOutput values.
// You can construct a concrete instance of `GetSolutionLandingZoneVdcArrayInput` via:
//
//	GetSolutionLandingZoneVdcArray{ GetSolutionLandingZoneVdcArgs{...} }
type GetSolutionLandingZoneVdcArrayInput interface {
	pulumi.Input

	ToGetSolutionLandingZoneVdcArrayOutput() GetSolutionLandingZoneVdcArrayOutput
	ToGetSolutionLandingZoneVdcArrayOutputWithContext(context.Context) GetSolutionLandingZoneVdcArrayOutput
}

type GetSolutionLandingZoneVdcArray []GetSolutionLandingZoneVdcInput

func (GetSolutionLandingZoneVdcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSolutionLandingZoneVdc)(nil)).Elem()
}

func (i GetSolutionLandingZoneVdcArray) ToGetSolutionLandingZoneVdcArrayOutput() GetSolutionLandingZoneVdcArrayOutput {
	return i.ToGetSolutionLandingZoneVdcArrayOutputWithContext(context.Background())
}

func (i GetSolutionLandingZoneVdcArray) ToGetSolutionLandingZoneVdcArrayOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSolutionLandingZoneVdcArrayOutput)
}

type GetSolutionLandingZoneVdcOutput struct{ *pulumi.OutputState }

func (GetSolutionLandingZoneVdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionLandingZoneVdc)(nil)).Elem()
}

func (o GetSolutionLandingZoneVdcOutput) ToGetSolutionLandingZoneVdcOutput() GetSolutionLandingZoneVdcOutput {
	return o
}

func (o GetSolutionLandingZoneVdcOutput) ToGetSolutionLandingZoneVdcOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcOutput {
	return o
}

// Set of capabilities of the VDC
func (o GetSolutionLandingZoneVdcOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdc) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// Details of Compute Policy element
func (o GetSolutionLandingZoneVdcOutput) ComputePolicies() GetSolutionLandingZoneVdcComputePolicyArrayOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdc) []GetSolutionLandingZoneVdcComputePolicy { return v.ComputePolicies }).(GetSolutionLandingZoneVdcComputePolicyArrayOutput)
}

// VDC ID
func (o GetSolutionLandingZoneVdcOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdc) string { return v.Id }).(pulumi.StringOutput)
}

// Defines if this VDC should be treated as the default one
func (o GetSolutionLandingZoneVdcOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdc) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// VDC Name
func (o GetSolutionLandingZoneVdcOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdc) string { return v.Name }).(pulumi.StringOutput)
}

// Details of Org VDC Network element
func (o GetSolutionLandingZoneVdcOutput) OrgVdcNetworks() GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdc) []GetSolutionLandingZoneVdcOrgVdcNetwork { return v.OrgVdcNetworks }).(GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput)
}

// Details of Storage Policy element
func (o GetSolutionLandingZoneVdcOutput) StoragePolicies() GetSolutionLandingZoneVdcStoragePolicyArrayOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdc) []GetSolutionLandingZoneVdcStoragePolicy { return v.StoragePolicies }).(GetSolutionLandingZoneVdcStoragePolicyArrayOutput)
}

type GetSolutionLandingZoneVdcArrayOutput struct{ *pulumi.OutputState }

func (GetSolutionLandingZoneVdcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSolutionLandingZoneVdc)(nil)).Elem()
}

func (o GetSolutionLandingZoneVdcArrayOutput) ToGetSolutionLandingZoneVdcArrayOutput() GetSolutionLandingZoneVdcArrayOutput {
	return o
}

func (o GetSolutionLandingZoneVdcArrayOutput) ToGetSolutionLandingZoneVdcArrayOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcArrayOutput {
	return o
}

func (o GetSolutionLandingZoneVdcArrayOutput) Index(i pulumi.IntInput) GetSolutionLandingZoneVdcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSolutionLandingZoneVdc {
		return vs[0].([]GetSolutionLandingZoneVdc)[vs[1].(int)]
	}).(GetSolutionLandingZoneVdcOutput)
}

type GetSolutionLandingZoneVdcComputePolicy struct {
	// Set of capabilities for Compute Policy
	Capabilities []string `pulumi:"capabilities"`
	// ID of Compute Policy
	Id string `pulumi:"id"`
	// Boolean value that marks if this Compute Policy should be default
	IsDefault bool `pulumi:"isDefault"`
	// Name of Compute Policy
	Name string `pulumi:"name"`
}

// GetSolutionLandingZoneVdcComputePolicyInput is an input type that accepts GetSolutionLandingZoneVdcComputePolicyArgs and GetSolutionLandingZoneVdcComputePolicyOutput values.
// You can construct a concrete instance of `GetSolutionLandingZoneVdcComputePolicyInput` via:
//
//	GetSolutionLandingZoneVdcComputePolicyArgs{...}
type GetSolutionLandingZoneVdcComputePolicyInput interface {
	pulumi.Input

	ToGetSolutionLandingZoneVdcComputePolicyOutput() GetSolutionLandingZoneVdcComputePolicyOutput
	ToGetSolutionLandingZoneVdcComputePolicyOutputWithContext(context.Context) GetSolutionLandingZoneVdcComputePolicyOutput
}

type GetSolutionLandingZoneVdcComputePolicyArgs struct {
	// Set of capabilities for Compute Policy
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// ID of Compute Policy
	Id pulumi.StringInput `pulumi:"id"`
	// Boolean value that marks if this Compute Policy should be default
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Name of Compute Policy
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSolutionLandingZoneVdcComputePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionLandingZoneVdcComputePolicy)(nil)).Elem()
}

func (i GetSolutionLandingZoneVdcComputePolicyArgs) ToGetSolutionLandingZoneVdcComputePolicyOutput() GetSolutionLandingZoneVdcComputePolicyOutput {
	return i.ToGetSolutionLandingZoneVdcComputePolicyOutputWithContext(context.Background())
}

func (i GetSolutionLandingZoneVdcComputePolicyArgs) ToGetSolutionLandingZoneVdcComputePolicyOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcComputePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSolutionLandingZoneVdcComputePolicyOutput)
}

// GetSolutionLandingZoneVdcComputePolicyArrayInput is an input type that accepts GetSolutionLandingZoneVdcComputePolicyArray and GetSolutionLandingZoneVdcComputePolicyArrayOutput values.
// You can construct a concrete instance of `GetSolutionLandingZoneVdcComputePolicyArrayInput` via:
//
//	GetSolutionLandingZoneVdcComputePolicyArray{ GetSolutionLandingZoneVdcComputePolicyArgs{...} }
type GetSolutionLandingZoneVdcComputePolicyArrayInput interface {
	pulumi.Input

	ToGetSolutionLandingZoneVdcComputePolicyArrayOutput() GetSolutionLandingZoneVdcComputePolicyArrayOutput
	ToGetSolutionLandingZoneVdcComputePolicyArrayOutputWithContext(context.Context) GetSolutionLandingZoneVdcComputePolicyArrayOutput
}

type GetSolutionLandingZoneVdcComputePolicyArray []GetSolutionLandingZoneVdcComputePolicyInput

func (GetSolutionLandingZoneVdcComputePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSolutionLandingZoneVdcComputePolicy)(nil)).Elem()
}

func (i GetSolutionLandingZoneVdcComputePolicyArray) ToGetSolutionLandingZoneVdcComputePolicyArrayOutput() GetSolutionLandingZoneVdcComputePolicyArrayOutput {
	return i.ToGetSolutionLandingZoneVdcComputePolicyArrayOutputWithContext(context.Background())
}

func (i GetSolutionLandingZoneVdcComputePolicyArray) ToGetSolutionLandingZoneVdcComputePolicyArrayOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcComputePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSolutionLandingZoneVdcComputePolicyArrayOutput)
}

type GetSolutionLandingZoneVdcComputePolicyOutput struct{ *pulumi.OutputState }

func (GetSolutionLandingZoneVdcComputePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionLandingZoneVdcComputePolicy)(nil)).Elem()
}

func (o GetSolutionLandingZoneVdcComputePolicyOutput) ToGetSolutionLandingZoneVdcComputePolicyOutput() GetSolutionLandingZoneVdcComputePolicyOutput {
	return o
}

func (o GetSolutionLandingZoneVdcComputePolicyOutput) ToGetSolutionLandingZoneVdcComputePolicyOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcComputePolicyOutput {
	return o
}

// Set of capabilities for Compute Policy
func (o GetSolutionLandingZoneVdcComputePolicyOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcComputePolicy) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// ID of Compute Policy
func (o GetSolutionLandingZoneVdcComputePolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcComputePolicy) string { return v.Id }).(pulumi.StringOutput)
}

// Boolean value that marks if this Compute Policy should be default
func (o GetSolutionLandingZoneVdcComputePolicyOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcComputePolicy) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Name of Compute Policy
func (o GetSolutionLandingZoneVdcComputePolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcComputePolicy) string { return v.Name }).(pulumi.StringOutput)
}

type GetSolutionLandingZoneVdcComputePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetSolutionLandingZoneVdcComputePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSolutionLandingZoneVdcComputePolicy)(nil)).Elem()
}

func (o GetSolutionLandingZoneVdcComputePolicyArrayOutput) ToGetSolutionLandingZoneVdcComputePolicyArrayOutput() GetSolutionLandingZoneVdcComputePolicyArrayOutput {
	return o
}

func (o GetSolutionLandingZoneVdcComputePolicyArrayOutput) ToGetSolutionLandingZoneVdcComputePolicyArrayOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcComputePolicyArrayOutput {
	return o
}

func (o GetSolutionLandingZoneVdcComputePolicyArrayOutput) Index(i pulumi.IntInput) GetSolutionLandingZoneVdcComputePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSolutionLandingZoneVdcComputePolicy {
		return vs[0].([]GetSolutionLandingZoneVdcComputePolicy)[vs[1].(int)]
	}).(GetSolutionLandingZoneVdcComputePolicyOutput)
}

type GetSolutionLandingZoneVdcOrgVdcNetwork struct {
	// Set of capabilities for Org VDC Network
	Capabilities []string `pulumi:"capabilities"`
	// ID of Org VDC Network
	Id string `pulumi:"id"`
	// Boolean value that marks if this Org VDC Network should be default
	IsDefault bool `pulumi:"isDefault"`
	// Name of Org VDC Network
	Name string `pulumi:"name"`
}

// GetSolutionLandingZoneVdcOrgVdcNetworkInput is an input type that accepts GetSolutionLandingZoneVdcOrgVdcNetworkArgs and GetSolutionLandingZoneVdcOrgVdcNetworkOutput values.
// You can construct a concrete instance of `GetSolutionLandingZoneVdcOrgVdcNetworkInput` via:
//
//	GetSolutionLandingZoneVdcOrgVdcNetworkArgs{...}
type GetSolutionLandingZoneVdcOrgVdcNetworkInput interface {
	pulumi.Input

	ToGetSolutionLandingZoneVdcOrgVdcNetworkOutput() GetSolutionLandingZoneVdcOrgVdcNetworkOutput
	ToGetSolutionLandingZoneVdcOrgVdcNetworkOutputWithContext(context.Context) GetSolutionLandingZoneVdcOrgVdcNetworkOutput
}

type GetSolutionLandingZoneVdcOrgVdcNetworkArgs struct {
	// Set of capabilities for Org VDC Network
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// ID of Org VDC Network
	Id pulumi.StringInput `pulumi:"id"`
	// Boolean value that marks if this Org VDC Network should be default
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Name of Org VDC Network
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSolutionLandingZoneVdcOrgVdcNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionLandingZoneVdcOrgVdcNetwork)(nil)).Elem()
}

func (i GetSolutionLandingZoneVdcOrgVdcNetworkArgs) ToGetSolutionLandingZoneVdcOrgVdcNetworkOutput() GetSolutionLandingZoneVdcOrgVdcNetworkOutput {
	return i.ToGetSolutionLandingZoneVdcOrgVdcNetworkOutputWithContext(context.Background())
}

func (i GetSolutionLandingZoneVdcOrgVdcNetworkArgs) ToGetSolutionLandingZoneVdcOrgVdcNetworkOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcOrgVdcNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSolutionLandingZoneVdcOrgVdcNetworkOutput)
}

// GetSolutionLandingZoneVdcOrgVdcNetworkArrayInput is an input type that accepts GetSolutionLandingZoneVdcOrgVdcNetworkArray and GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput values.
// You can construct a concrete instance of `GetSolutionLandingZoneVdcOrgVdcNetworkArrayInput` via:
//
//	GetSolutionLandingZoneVdcOrgVdcNetworkArray{ GetSolutionLandingZoneVdcOrgVdcNetworkArgs{...} }
type GetSolutionLandingZoneVdcOrgVdcNetworkArrayInput interface {
	pulumi.Input

	ToGetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput() GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput
	ToGetSolutionLandingZoneVdcOrgVdcNetworkArrayOutputWithContext(context.Context) GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput
}

type GetSolutionLandingZoneVdcOrgVdcNetworkArray []GetSolutionLandingZoneVdcOrgVdcNetworkInput

func (GetSolutionLandingZoneVdcOrgVdcNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSolutionLandingZoneVdcOrgVdcNetwork)(nil)).Elem()
}

func (i GetSolutionLandingZoneVdcOrgVdcNetworkArray) ToGetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput() GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput {
	return i.ToGetSolutionLandingZoneVdcOrgVdcNetworkArrayOutputWithContext(context.Background())
}

func (i GetSolutionLandingZoneVdcOrgVdcNetworkArray) ToGetSolutionLandingZoneVdcOrgVdcNetworkArrayOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput)
}

type GetSolutionLandingZoneVdcOrgVdcNetworkOutput struct{ *pulumi.OutputState }

func (GetSolutionLandingZoneVdcOrgVdcNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionLandingZoneVdcOrgVdcNetwork)(nil)).Elem()
}

func (o GetSolutionLandingZoneVdcOrgVdcNetworkOutput) ToGetSolutionLandingZoneVdcOrgVdcNetworkOutput() GetSolutionLandingZoneVdcOrgVdcNetworkOutput {
	return o
}

func (o GetSolutionLandingZoneVdcOrgVdcNetworkOutput) ToGetSolutionLandingZoneVdcOrgVdcNetworkOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcOrgVdcNetworkOutput {
	return o
}

// Set of capabilities for Org VDC Network
func (o GetSolutionLandingZoneVdcOrgVdcNetworkOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcOrgVdcNetwork) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// ID of Org VDC Network
func (o GetSolutionLandingZoneVdcOrgVdcNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcOrgVdcNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Boolean value that marks if this Org VDC Network should be default
func (o GetSolutionLandingZoneVdcOrgVdcNetworkOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcOrgVdcNetwork) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Name of Org VDC Network
func (o GetSolutionLandingZoneVdcOrgVdcNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcOrgVdcNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSolutionLandingZoneVdcOrgVdcNetwork)(nil)).Elem()
}

func (o GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput) ToGetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput() GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput {
	return o
}

func (o GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput) ToGetSolutionLandingZoneVdcOrgVdcNetworkArrayOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput {
	return o
}

func (o GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput) Index(i pulumi.IntInput) GetSolutionLandingZoneVdcOrgVdcNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSolutionLandingZoneVdcOrgVdcNetwork {
		return vs[0].([]GetSolutionLandingZoneVdcOrgVdcNetwork)[vs[1].(int)]
	}).(GetSolutionLandingZoneVdcOrgVdcNetworkOutput)
}

type GetSolutionLandingZoneVdcStoragePolicy struct {
	// Set of capabilities for Storage Policy
	Capabilities []string `pulumi:"capabilities"`
	// ID of Storage Policy
	Id string `pulumi:"id"`
	// Boolean value that marks if this Storage Policy should be default
	IsDefault bool `pulumi:"isDefault"`
	// Name of Storage Policy
	Name string `pulumi:"name"`
}

// GetSolutionLandingZoneVdcStoragePolicyInput is an input type that accepts GetSolutionLandingZoneVdcStoragePolicyArgs and GetSolutionLandingZoneVdcStoragePolicyOutput values.
// You can construct a concrete instance of `GetSolutionLandingZoneVdcStoragePolicyInput` via:
//
//	GetSolutionLandingZoneVdcStoragePolicyArgs{...}
type GetSolutionLandingZoneVdcStoragePolicyInput interface {
	pulumi.Input

	ToGetSolutionLandingZoneVdcStoragePolicyOutput() GetSolutionLandingZoneVdcStoragePolicyOutput
	ToGetSolutionLandingZoneVdcStoragePolicyOutputWithContext(context.Context) GetSolutionLandingZoneVdcStoragePolicyOutput
}

type GetSolutionLandingZoneVdcStoragePolicyArgs struct {
	// Set of capabilities for Storage Policy
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// ID of Storage Policy
	Id pulumi.StringInput `pulumi:"id"`
	// Boolean value that marks if this Storage Policy should be default
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Name of Storage Policy
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSolutionLandingZoneVdcStoragePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionLandingZoneVdcStoragePolicy)(nil)).Elem()
}

func (i GetSolutionLandingZoneVdcStoragePolicyArgs) ToGetSolutionLandingZoneVdcStoragePolicyOutput() GetSolutionLandingZoneVdcStoragePolicyOutput {
	return i.ToGetSolutionLandingZoneVdcStoragePolicyOutputWithContext(context.Background())
}

func (i GetSolutionLandingZoneVdcStoragePolicyArgs) ToGetSolutionLandingZoneVdcStoragePolicyOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcStoragePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSolutionLandingZoneVdcStoragePolicyOutput)
}

// GetSolutionLandingZoneVdcStoragePolicyArrayInput is an input type that accepts GetSolutionLandingZoneVdcStoragePolicyArray and GetSolutionLandingZoneVdcStoragePolicyArrayOutput values.
// You can construct a concrete instance of `GetSolutionLandingZoneVdcStoragePolicyArrayInput` via:
//
//	GetSolutionLandingZoneVdcStoragePolicyArray{ GetSolutionLandingZoneVdcStoragePolicyArgs{...} }
type GetSolutionLandingZoneVdcStoragePolicyArrayInput interface {
	pulumi.Input

	ToGetSolutionLandingZoneVdcStoragePolicyArrayOutput() GetSolutionLandingZoneVdcStoragePolicyArrayOutput
	ToGetSolutionLandingZoneVdcStoragePolicyArrayOutputWithContext(context.Context) GetSolutionLandingZoneVdcStoragePolicyArrayOutput
}

type GetSolutionLandingZoneVdcStoragePolicyArray []GetSolutionLandingZoneVdcStoragePolicyInput

func (GetSolutionLandingZoneVdcStoragePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSolutionLandingZoneVdcStoragePolicy)(nil)).Elem()
}

func (i GetSolutionLandingZoneVdcStoragePolicyArray) ToGetSolutionLandingZoneVdcStoragePolicyArrayOutput() GetSolutionLandingZoneVdcStoragePolicyArrayOutput {
	return i.ToGetSolutionLandingZoneVdcStoragePolicyArrayOutputWithContext(context.Background())
}

func (i GetSolutionLandingZoneVdcStoragePolicyArray) ToGetSolutionLandingZoneVdcStoragePolicyArrayOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcStoragePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSolutionLandingZoneVdcStoragePolicyArrayOutput)
}

type GetSolutionLandingZoneVdcStoragePolicyOutput struct{ *pulumi.OutputState }

func (GetSolutionLandingZoneVdcStoragePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionLandingZoneVdcStoragePolicy)(nil)).Elem()
}

func (o GetSolutionLandingZoneVdcStoragePolicyOutput) ToGetSolutionLandingZoneVdcStoragePolicyOutput() GetSolutionLandingZoneVdcStoragePolicyOutput {
	return o
}

func (o GetSolutionLandingZoneVdcStoragePolicyOutput) ToGetSolutionLandingZoneVdcStoragePolicyOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcStoragePolicyOutput {
	return o
}

// Set of capabilities for Storage Policy
func (o GetSolutionLandingZoneVdcStoragePolicyOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcStoragePolicy) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// ID of Storage Policy
func (o GetSolutionLandingZoneVdcStoragePolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcStoragePolicy) string { return v.Id }).(pulumi.StringOutput)
}

// Boolean value that marks if this Storage Policy should be default
func (o GetSolutionLandingZoneVdcStoragePolicyOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcStoragePolicy) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Name of Storage Policy
func (o GetSolutionLandingZoneVdcStoragePolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionLandingZoneVdcStoragePolicy) string { return v.Name }).(pulumi.StringOutput)
}

type GetSolutionLandingZoneVdcStoragePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetSolutionLandingZoneVdcStoragePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSolutionLandingZoneVdcStoragePolicy)(nil)).Elem()
}

func (o GetSolutionLandingZoneVdcStoragePolicyArrayOutput) ToGetSolutionLandingZoneVdcStoragePolicyArrayOutput() GetSolutionLandingZoneVdcStoragePolicyArrayOutput {
	return o
}

func (o GetSolutionLandingZoneVdcStoragePolicyArrayOutput) ToGetSolutionLandingZoneVdcStoragePolicyArrayOutputWithContext(ctx context.Context) GetSolutionLandingZoneVdcStoragePolicyArrayOutput {
	return o
}

func (o GetSolutionLandingZoneVdcStoragePolicyArrayOutput) Index(i pulumi.IntInput) GetSolutionLandingZoneVdcStoragePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSolutionLandingZoneVdcStoragePolicy {
		return vs[0].([]GetSolutionLandingZoneVdcStoragePolicy)[vs[1].(int)]
	}).(GetSolutionLandingZoneVdcStoragePolicyOutput)
}

type GetStorageProfileIopsSetting struct {
	// Value of 0 for disk IOPS means that no IOPS would be reserved or provisioned for that virtual disk
	DefaultDiskIops int `pulumi:"defaultDiskIops"`
	// The maximum disk IOPs per GB value that this storage profile is permitted to deliver. A value of 0 means there is no per GB IOPS restriction
	DiskIopsPerGbMax int `pulumi:"diskIopsPerGbMax"`
	// Maximum number of IOPs that can be allocated for this profile. `0` means `maximum possible`
	IopsLimit int `pulumi:"iopsLimit"`
	// True if this storage profile is IOPS-based placement enabled
	IopsLimitingEnabled bool `pulumi:"iopsLimitingEnabled"`
	// The maximum IOPS value that this storage profile is permitted to deliver. Value of 0 means this max setting is disabled and there is no max disk IOPS restriction
	MaximumDiskIops int `pulumi:"maximumDiskIops"`
}

// GetStorageProfileIopsSettingInput is an input type that accepts GetStorageProfileIopsSettingArgs and GetStorageProfileIopsSettingOutput values.
// You can construct a concrete instance of `GetStorageProfileIopsSettingInput` via:
//
//	GetStorageProfileIopsSettingArgs{...}
type GetStorageProfileIopsSettingInput interface {
	pulumi.Input

	ToGetStorageProfileIopsSettingOutput() GetStorageProfileIopsSettingOutput
	ToGetStorageProfileIopsSettingOutputWithContext(context.Context) GetStorageProfileIopsSettingOutput
}

type GetStorageProfileIopsSettingArgs struct {
	// Value of 0 for disk IOPS means that no IOPS would be reserved or provisioned for that virtual disk
	DefaultDiskIops pulumi.IntInput `pulumi:"defaultDiskIops"`
	// The maximum disk IOPs per GB value that this storage profile is permitted to deliver. A value of 0 means there is no per GB IOPS restriction
	DiskIopsPerGbMax pulumi.IntInput `pulumi:"diskIopsPerGbMax"`
	// Maximum number of IOPs that can be allocated for this profile. `0` means `maximum possible`
	IopsLimit pulumi.IntInput `pulumi:"iopsLimit"`
	// True if this storage profile is IOPS-based placement enabled
	IopsLimitingEnabled pulumi.BoolInput `pulumi:"iopsLimitingEnabled"`
	// The maximum IOPS value that this storage profile is permitted to deliver. Value of 0 means this max setting is disabled and there is no max disk IOPS restriction
	MaximumDiskIops pulumi.IntInput `pulumi:"maximumDiskIops"`
}

func (GetStorageProfileIopsSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageProfileIopsSetting)(nil)).Elem()
}

func (i GetStorageProfileIopsSettingArgs) ToGetStorageProfileIopsSettingOutput() GetStorageProfileIopsSettingOutput {
	return i.ToGetStorageProfileIopsSettingOutputWithContext(context.Background())
}

func (i GetStorageProfileIopsSettingArgs) ToGetStorageProfileIopsSettingOutputWithContext(ctx context.Context) GetStorageProfileIopsSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageProfileIopsSettingOutput)
}

// GetStorageProfileIopsSettingArrayInput is an input type that accepts GetStorageProfileIopsSettingArray and GetStorageProfileIopsSettingArrayOutput values.
// You can construct a concrete instance of `GetStorageProfileIopsSettingArrayInput` via:
//
//	GetStorageProfileIopsSettingArray{ GetStorageProfileIopsSettingArgs{...} }
type GetStorageProfileIopsSettingArrayInput interface {
	pulumi.Input

	ToGetStorageProfileIopsSettingArrayOutput() GetStorageProfileIopsSettingArrayOutput
	ToGetStorageProfileIopsSettingArrayOutputWithContext(context.Context) GetStorageProfileIopsSettingArrayOutput
}

type GetStorageProfileIopsSettingArray []GetStorageProfileIopsSettingInput

func (GetStorageProfileIopsSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageProfileIopsSetting)(nil)).Elem()
}

func (i GetStorageProfileIopsSettingArray) ToGetStorageProfileIopsSettingArrayOutput() GetStorageProfileIopsSettingArrayOutput {
	return i.ToGetStorageProfileIopsSettingArrayOutputWithContext(context.Background())
}

func (i GetStorageProfileIopsSettingArray) ToGetStorageProfileIopsSettingArrayOutputWithContext(ctx context.Context) GetStorageProfileIopsSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageProfileIopsSettingArrayOutput)
}

type GetStorageProfileIopsSettingOutput struct{ *pulumi.OutputState }

func (GetStorageProfileIopsSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageProfileIopsSetting)(nil)).Elem()
}

func (o GetStorageProfileIopsSettingOutput) ToGetStorageProfileIopsSettingOutput() GetStorageProfileIopsSettingOutput {
	return o
}

func (o GetStorageProfileIopsSettingOutput) ToGetStorageProfileIopsSettingOutputWithContext(ctx context.Context) GetStorageProfileIopsSettingOutput {
	return o
}

// Value of 0 for disk IOPS means that no IOPS would be reserved or provisioned for that virtual disk
func (o GetStorageProfileIopsSettingOutput) DefaultDiskIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetStorageProfileIopsSetting) int { return v.DefaultDiskIops }).(pulumi.IntOutput)
}

// The maximum disk IOPs per GB value that this storage profile is permitted to deliver. A value of 0 means there is no per GB IOPS restriction
func (o GetStorageProfileIopsSettingOutput) DiskIopsPerGbMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetStorageProfileIopsSetting) int { return v.DiskIopsPerGbMax }).(pulumi.IntOutput)
}

// Maximum number of IOPs that can be allocated for this profile. `0` means `maximum possible`
func (o GetStorageProfileIopsSettingOutput) IopsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetStorageProfileIopsSetting) int { return v.IopsLimit }).(pulumi.IntOutput)
}

// True if this storage profile is IOPS-based placement enabled
func (o GetStorageProfileIopsSettingOutput) IopsLimitingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStorageProfileIopsSetting) bool { return v.IopsLimitingEnabled }).(pulumi.BoolOutput)
}

// The maximum IOPS value that this storage profile is permitted to deliver. Value of 0 means this max setting is disabled and there is no max disk IOPS restriction
func (o GetStorageProfileIopsSettingOutput) MaximumDiskIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetStorageProfileIopsSetting) int { return v.MaximumDiskIops }).(pulumi.IntOutput)
}

type GetStorageProfileIopsSettingArrayOutput struct{ *pulumi.OutputState }

func (GetStorageProfileIopsSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageProfileIopsSetting)(nil)).Elem()
}

func (o GetStorageProfileIopsSettingArrayOutput) ToGetStorageProfileIopsSettingArrayOutput() GetStorageProfileIopsSettingArrayOutput {
	return o
}

func (o GetStorageProfileIopsSettingArrayOutput) ToGetStorageProfileIopsSettingArrayOutputWithContext(ctx context.Context) GetStorageProfileIopsSettingArrayOutput {
	return o
}

func (o GetStorageProfileIopsSettingArrayOutput) Index(i pulumi.IntInput) GetStorageProfileIopsSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageProfileIopsSetting {
		return vs[0].([]GetStorageProfileIopsSetting)[vs[1].(int)]
	}).(GetStorageProfileIopsSettingOutput)
}

type GetStorageProfileMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetStorageProfileMetadataEntryInput is an input type that accepts GetStorageProfileMetadataEntryArgs and GetStorageProfileMetadataEntryOutput values.
// You can construct a concrete instance of `GetStorageProfileMetadataEntryInput` via:
//
//	GetStorageProfileMetadataEntryArgs{...}
type GetStorageProfileMetadataEntryInput interface {
	pulumi.Input

	ToGetStorageProfileMetadataEntryOutput() GetStorageProfileMetadataEntryOutput
	ToGetStorageProfileMetadataEntryOutputWithContext(context.Context) GetStorageProfileMetadataEntryOutput
}

type GetStorageProfileMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetStorageProfileMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageProfileMetadataEntry)(nil)).Elem()
}

func (i GetStorageProfileMetadataEntryArgs) ToGetStorageProfileMetadataEntryOutput() GetStorageProfileMetadataEntryOutput {
	return i.ToGetStorageProfileMetadataEntryOutputWithContext(context.Background())
}

func (i GetStorageProfileMetadataEntryArgs) ToGetStorageProfileMetadataEntryOutputWithContext(ctx context.Context) GetStorageProfileMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageProfileMetadataEntryOutput)
}

// GetStorageProfileMetadataEntryArrayInput is an input type that accepts GetStorageProfileMetadataEntryArray and GetStorageProfileMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetStorageProfileMetadataEntryArrayInput` via:
//
//	GetStorageProfileMetadataEntryArray{ GetStorageProfileMetadataEntryArgs{...} }
type GetStorageProfileMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetStorageProfileMetadataEntryArrayOutput() GetStorageProfileMetadataEntryArrayOutput
	ToGetStorageProfileMetadataEntryArrayOutputWithContext(context.Context) GetStorageProfileMetadataEntryArrayOutput
}

type GetStorageProfileMetadataEntryArray []GetStorageProfileMetadataEntryInput

func (GetStorageProfileMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageProfileMetadataEntry)(nil)).Elem()
}

func (i GetStorageProfileMetadataEntryArray) ToGetStorageProfileMetadataEntryArrayOutput() GetStorageProfileMetadataEntryArrayOutput {
	return i.ToGetStorageProfileMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetStorageProfileMetadataEntryArray) ToGetStorageProfileMetadataEntryArrayOutputWithContext(ctx context.Context) GetStorageProfileMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageProfileMetadataEntryArrayOutput)
}

type GetStorageProfileMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetStorageProfileMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageProfileMetadataEntry)(nil)).Elem()
}

func (o GetStorageProfileMetadataEntryOutput) ToGetStorageProfileMetadataEntryOutput() GetStorageProfileMetadataEntryOutput {
	return o
}

func (o GetStorageProfileMetadataEntryOutput) ToGetStorageProfileMetadataEntryOutputWithContext(ctx context.Context) GetStorageProfileMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetStorageProfileMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStorageProfileMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetStorageProfileMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageProfileMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetStorageProfileMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageProfileMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetStorageProfileMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageProfileMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetStorageProfileMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageProfileMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetStorageProfileMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetStorageProfileMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageProfileMetadataEntry)(nil)).Elem()
}

func (o GetStorageProfileMetadataEntryArrayOutput) ToGetStorageProfileMetadataEntryArrayOutput() GetStorageProfileMetadataEntryArrayOutput {
	return o
}

func (o GetStorageProfileMetadataEntryArrayOutput) ToGetStorageProfileMetadataEntryArrayOutputWithContext(ctx context.Context) GetStorageProfileMetadataEntryArrayOutput {
	return o
}

func (o GetStorageProfileMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetStorageProfileMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageProfileMetadataEntry {
		return vs[0].([]GetStorageProfileMetadataEntry)[vs[1].(int)]
	}).(GetStorageProfileMetadataEntryOutput)
}

type GetSubscribedCatalogFilter struct {
	// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
	Date *string `pulumi:"date"`
	// Retrieves the oldest item
	Earliest *bool `pulumi:"earliest"`
	// Retrieves the newest item
	Latest *bool `pulumi:"latest"`
	// Optional metadata of the catalog. This is inherited from the publishing catalog
	Metadatas []GetSubscribedCatalogFilterMetadata `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex *string `pulumi:"nameRegex"`
}

// GetSubscribedCatalogFilterInput is an input type that accepts GetSubscribedCatalogFilterArgs and GetSubscribedCatalogFilterOutput values.
// You can construct a concrete instance of `GetSubscribedCatalogFilterInput` via:
//
//	GetSubscribedCatalogFilterArgs{...}
type GetSubscribedCatalogFilterInput interface {
	pulumi.Input

	ToGetSubscribedCatalogFilterOutput() GetSubscribedCatalogFilterOutput
	ToGetSubscribedCatalogFilterOutputWithContext(context.Context) GetSubscribedCatalogFilterOutput
}

type GetSubscribedCatalogFilterArgs struct {
	// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Retrieves the oldest item
	Earliest pulumi.BoolPtrInput `pulumi:"earliest"`
	// Retrieves the newest item
	Latest pulumi.BoolPtrInput `pulumi:"latest"`
	// Optional metadata of the catalog. This is inherited from the publishing catalog
	Metadatas GetSubscribedCatalogFilterMetadataArrayInput `pulumi:"metadatas"`
	// Search by name with a regular expression
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetSubscribedCatalogFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribedCatalogFilter)(nil)).Elem()
}

func (i GetSubscribedCatalogFilterArgs) ToGetSubscribedCatalogFilterOutput() GetSubscribedCatalogFilterOutput {
	return i.ToGetSubscribedCatalogFilterOutputWithContext(context.Background())
}

func (i GetSubscribedCatalogFilterArgs) ToGetSubscribedCatalogFilterOutputWithContext(ctx context.Context) GetSubscribedCatalogFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscribedCatalogFilterOutput)
}

func (i GetSubscribedCatalogFilterArgs) ToGetSubscribedCatalogFilterPtrOutput() GetSubscribedCatalogFilterPtrOutput {
	return i.ToGetSubscribedCatalogFilterPtrOutputWithContext(context.Background())
}

func (i GetSubscribedCatalogFilterArgs) ToGetSubscribedCatalogFilterPtrOutputWithContext(ctx context.Context) GetSubscribedCatalogFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscribedCatalogFilterOutput).ToGetSubscribedCatalogFilterPtrOutputWithContext(ctx)
}

// GetSubscribedCatalogFilterPtrInput is an input type that accepts GetSubscribedCatalogFilterArgs, GetSubscribedCatalogFilterPtr and GetSubscribedCatalogFilterPtrOutput values.
// You can construct a concrete instance of `GetSubscribedCatalogFilterPtrInput` via:
//
//	        GetSubscribedCatalogFilterArgs{...}
//
//	or:
//
//	        nil
type GetSubscribedCatalogFilterPtrInput interface {
	pulumi.Input

	ToGetSubscribedCatalogFilterPtrOutput() GetSubscribedCatalogFilterPtrOutput
	ToGetSubscribedCatalogFilterPtrOutputWithContext(context.Context) GetSubscribedCatalogFilterPtrOutput
}

type getSubscribedCatalogFilterPtrType GetSubscribedCatalogFilterArgs

func GetSubscribedCatalogFilterPtr(v *GetSubscribedCatalogFilterArgs) GetSubscribedCatalogFilterPtrInput {
	return (*getSubscribedCatalogFilterPtrType)(v)
}

func (*getSubscribedCatalogFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubscribedCatalogFilter)(nil)).Elem()
}

func (i *getSubscribedCatalogFilterPtrType) ToGetSubscribedCatalogFilterPtrOutput() GetSubscribedCatalogFilterPtrOutput {
	return i.ToGetSubscribedCatalogFilterPtrOutputWithContext(context.Background())
}

func (i *getSubscribedCatalogFilterPtrType) ToGetSubscribedCatalogFilterPtrOutputWithContext(ctx context.Context) GetSubscribedCatalogFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscribedCatalogFilterPtrOutput)
}

type GetSubscribedCatalogFilterOutput struct{ *pulumi.OutputState }

func (GetSubscribedCatalogFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribedCatalogFilter)(nil)).Elem()
}

func (o GetSubscribedCatalogFilterOutput) ToGetSubscribedCatalogFilterOutput() GetSubscribedCatalogFilterOutput {
	return o
}

func (o GetSubscribedCatalogFilterOutput) ToGetSubscribedCatalogFilterOutputWithContext(ctx context.Context) GetSubscribedCatalogFilterOutput {
	return o
}

func (o GetSubscribedCatalogFilterOutput) ToGetSubscribedCatalogFilterPtrOutput() GetSubscribedCatalogFilterPtrOutput {
	return o.ToGetSubscribedCatalogFilterPtrOutputWithContext(context.Background())
}

func (o GetSubscribedCatalogFilterOutput) ToGetSubscribedCatalogFilterPtrOutputWithContext(ctx context.Context) GetSubscribedCatalogFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSubscribedCatalogFilter) *GetSubscribedCatalogFilter {
		return &v
	}).(GetSubscribedCatalogFilterPtrOutput)
}

// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
func (o GetSubscribedCatalogFilterOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscribedCatalogFilter) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Retrieves the oldest item
func (o GetSubscribedCatalogFilterOutput) Earliest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscribedCatalogFilter) *bool { return v.Earliest }).(pulumi.BoolPtrOutput)
}

// Retrieves the newest item
func (o GetSubscribedCatalogFilterOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscribedCatalogFilter) *bool { return v.Latest }).(pulumi.BoolPtrOutput)
}

// Optional metadata of the catalog. This is inherited from the publishing catalog
func (o GetSubscribedCatalogFilterOutput) Metadatas() GetSubscribedCatalogFilterMetadataArrayOutput {
	return o.ApplyT(func(v GetSubscribedCatalogFilter) []GetSubscribedCatalogFilterMetadata { return v.Metadatas }).(GetSubscribedCatalogFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetSubscribedCatalogFilterOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscribedCatalogFilter) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

type GetSubscribedCatalogFilterPtrOutput struct{ *pulumi.OutputState }

func (GetSubscribedCatalogFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubscribedCatalogFilter)(nil)).Elem()
}

func (o GetSubscribedCatalogFilterPtrOutput) ToGetSubscribedCatalogFilterPtrOutput() GetSubscribedCatalogFilterPtrOutput {
	return o
}

func (o GetSubscribedCatalogFilterPtrOutput) ToGetSubscribedCatalogFilterPtrOutputWithContext(ctx context.Context) GetSubscribedCatalogFilterPtrOutput {
	return o
}

func (o GetSubscribedCatalogFilterPtrOutput) Elem() GetSubscribedCatalogFilterOutput {
	return o.ApplyT(func(v *GetSubscribedCatalogFilter) GetSubscribedCatalogFilter {
		if v != nil {
			return *v
		}
		var ret GetSubscribedCatalogFilter
		return ret
	}).(GetSubscribedCatalogFilterOutput)
}

// Search by date comparison ({>|>=|<|<=|==} yyyy-mm-dd[ hh[:mm[:ss]]])
func (o GetSubscribedCatalogFilterPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubscribedCatalogFilter) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// Retrieves the oldest item
func (o GetSubscribedCatalogFilterPtrOutput) Earliest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSubscribedCatalogFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Earliest
	}).(pulumi.BoolPtrOutput)
}

// Retrieves the newest item
func (o GetSubscribedCatalogFilterPtrOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSubscribedCatalogFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Latest
	}).(pulumi.BoolPtrOutput)
}

// Optional metadata of the catalog. This is inherited from the publishing catalog
func (o GetSubscribedCatalogFilterPtrOutput) Metadatas() GetSubscribedCatalogFilterMetadataArrayOutput {
	return o.ApplyT(func(v *GetSubscribedCatalogFilter) []GetSubscribedCatalogFilterMetadata {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(GetSubscribedCatalogFilterMetadataArrayOutput)
}

// Search by name with a regular expression
func (o GetSubscribedCatalogFilterPtrOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubscribedCatalogFilter) *string {
		if v == nil {
			return nil
		}
		return v.NameRegex
	}).(pulumi.StringPtrOutput)
}

type GetSubscribedCatalogFilterMetadata struct {
	// True if is a metadata@SYSTEM key
	IsSystem *bool `pulumi:"isSystem"`
	// Metadata key (field name)
	Key string `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type *string `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch *bool `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value string `pulumi:"value"`
}

// GetSubscribedCatalogFilterMetadataInput is an input type that accepts GetSubscribedCatalogFilterMetadataArgs and GetSubscribedCatalogFilterMetadataOutput values.
// You can construct a concrete instance of `GetSubscribedCatalogFilterMetadataInput` via:
//
//	GetSubscribedCatalogFilterMetadataArgs{...}
type GetSubscribedCatalogFilterMetadataInput interface {
	pulumi.Input

	ToGetSubscribedCatalogFilterMetadataOutput() GetSubscribedCatalogFilterMetadataOutput
	ToGetSubscribedCatalogFilterMetadataOutputWithContext(context.Context) GetSubscribedCatalogFilterMetadataOutput
}

type GetSubscribedCatalogFilterMetadataArgs struct {
	// True if is a metadata@SYSTEM key
	IsSystem pulumi.BoolPtrInput `pulumi:"isSystem"`
	// Metadata key (field name)
	Key pulumi.StringInput `pulumi:"key"`
	// Type of metadata value (needed only if "useApiSearch" is true)
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If true, will search the vCD using native metadata query (without regular expressions)
	UseApiSearch pulumi.BoolPtrInput `pulumi:"useApiSearch"`
	// Metadata value (can be a regular expression if "useApiSearch" is false)
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSubscribedCatalogFilterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribedCatalogFilterMetadata)(nil)).Elem()
}

func (i GetSubscribedCatalogFilterMetadataArgs) ToGetSubscribedCatalogFilterMetadataOutput() GetSubscribedCatalogFilterMetadataOutput {
	return i.ToGetSubscribedCatalogFilterMetadataOutputWithContext(context.Background())
}

func (i GetSubscribedCatalogFilterMetadataArgs) ToGetSubscribedCatalogFilterMetadataOutputWithContext(ctx context.Context) GetSubscribedCatalogFilterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscribedCatalogFilterMetadataOutput)
}

// GetSubscribedCatalogFilterMetadataArrayInput is an input type that accepts GetSubscribedCatalogFilterMetadataArray and GetSubscribedCatalogFilterMetadataArrayOutput values.
// You can construct a concrete instance of `GetSubscribedCatalogFilterMetadataArrayInput` via:
//
//	GetSubscribedCatalogFilterMetadataArray{ GetSubscribedCatalogFilterMetadataArgs{...} }
type GetSubscribedCatalogFilterMetadataArrayInput interface {
	pulumi.Input

	ToGetSubscribedCatalogFilterMetadataArrayOutput() GetSubscribedCatalogFilterMetadataArrayOutput
	ToGetSubscribedCatalogFilterMetadataArrayOutputWithContext(context.Context) GetSubscribedCatalogFilterMetadataArrayOutput
}

type GetSubscribedCatalogFilterMetadataArray []GetSubscribedCatalogFilterMetadataInput

func (GetSubscribedCatalogFilterMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscribedCatalogFilterMetadata)(nil)).Elem()
}

func (i GetSubscribedCatalogFilterMetadataArray) ToGetSubscribedCatalogFilterMetadataArrayOutput() GetSubscribedCatalogFilterMetadataArrayOutput {
	return i.ToGetSubscribedCatalogFilterMetadataArrayOutputWithContext(context.Background())
}

func (i GetSubscribedCatalogFilterMetadataArray) ToGetSubscribedCatalogFilterMetadataArrayOutputWithContext(ctx context.Context) GetSubscribedCatalogFilterMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscribedCatalogFilterMetadataArrayOutput)
}

type GetSubscribedCatalogFilterMetadataOutput struct{ *pulumi.OutputState }

func (GetSubscribedCatalogFilterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribedCatalogFilterMetadata)(nil)).Elem()
}

func (o GetSubscribedCatalogFilterMetadataOutput) ToGetSubscribedCatalogFilterMetadataOutput() GetSubscribedCatalogFilterMetadataOutput {
	return o
}

func (o GetSubscribedCatalogFilterMetadataOutput) ToGetSubscribedCatalogFilterMetadataOutputWithContext(ctx context.Context) GetSubscribedCatalogFilterMetadataOutput {
	return o
}

// True if is a metadata@SYSTEM key
func (o GetSubscribedCatalogFilterMetadataOutput) IsSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscribedCatalogFilterMetadata) *bool { return v.IsSystem }).(pulumi.BoolPtrOutput)
}

// Metadata key (field name)
func (o GetSubscribedCatalogFilterMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribedCatalogFilterMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// Type of metadata value (needed only if "useApiSearch" is true)
func (o GetSubscribedCatalogFilterMetadataOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscribedCatalogFilterMetadata) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If true, will search the vCD using native metadata query (without regular expressions)
func (o GetSubscribedCatalogFilterMetadataOutput) UseApiSearch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscribedCatalogFilterMetadata) *bool { return v.UseApiSearch }).(pulumi.BoolPtrOutput)
}

// Metadata value (can be a regular expression if "useApiSearch" is false)
func (o GetSubscribedCatalogFilterMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribedCatalogFilterMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type GetSubscribedCatalogFilterMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetSubscribedCatalogFilterMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscribedCatalogFilterMetadata)(nil)).Elem()
}

func (o GetSubscribedCatalogFilterMetadataArrayOutput) ToGetSubscribedCatalogFilterMetadataArrayOutput() GetSubscribedCatalogFilterMetadataArrayOutput {
	return o
}

func (o GetSubscribedCatalogFilterMetadataArrayOutput) ToGetSubscribedCatalogFilterMetadataArrayOutputWithContext(ctx context.Context) GetSubscribedCatalogFilterMetadataArrayOutput {
	return o
}

func (o GetSubscribedCatalogFilterMetadataArrayOutput) Index(i pulumi.IntInput) GetSubscribedCatalogFilterMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscribedCatalogFilterMetadata {
		return vs[0].([]GetSubscribedCatalogFilterMetadata)[vs[1].(int)]
	}).(GetSubscribedCatalogFilterMetadataOutput)
}

type GetVappLease struct {
	// How long any of the VMs in the vApp can run before the vApp is automatically powered off or suspended. 0 means never expires.
	RuntimeLeaseInSec int `pulumi:"runtimeLeaseInSec"`
	// How long the vApp is available before being automatically deleted or marked as expired. 0 means never expires.
	StorageLeaseInSec int `pulumi:"storageLeaseInSec"`
}

// GetVappLeaseInput is an input type that accepts GetVappLeaseArgs and GetVappLeaseOutput values.
// You can construct a concrete instance of `GetVappLeaseInput` via:
//
//	GetVappLeaseArgs{...}
type GetVappLeaseInput interface {
	pulumi.Input

	ToGetVappLeaseOutput() GetVappLeaseOutput
	ToGetVappLeaseOutputWithContext(context.Context) GetVappLeaseOutput
}

type GetVappLeaseArgs struct {
	// How long any of the VMs in the vApp can run before the vApp is automatically powered off or suspended. 0 means never expires.
	RuntimeLeaseInSec pulumi.IntInput `pulumi:"runtimeLeaseInSec"`
	// How long the vApp is available before being automatically deleted or marked as expired. 0 means never expires.
	StorageLeaseInSec pulumi.IntInput `pulumi:"storageLeaseInSec"`
}

func (GetVappLeaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappLease)(nil)).Elem()
}

func (i GetVappLeaseArgs) ToGetVappLeaseOutput() GetVappLeaseOutput {
	return i.ToGetVappLeaseOutputWithContext(context.Background())
}

func (i GetVappLeaseArgs) ToGetVappLeaseOutputWithContext(ctx context.Context) GetVappLeaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappLeaseOutput)
}

// GetVappLeaseArrayInput is an input type that accepts GetVappLeaseArray and GetVappLeaseArrayOutput values.
// You can construct a concrete instance of `GetVappLeaseArrayInput` via:
//
//	GetVappLeaseArray{ GetVappLeaseArgs{...} }
type GetVappLeaseArrayInput interface {
	pulumi.Input

	ToGetVappLeaseArrayOutput() GetVappLeaseArrayOutput
	ToGetVappLeaseArrayOutputWithContext(context.Context) GetVappLeaseArrayOutput
}

type GetVappLeaseArray []GetVappLeaseInput

func (GetVappLeaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappLease)(nil)).Elem()
}

func (i GetVappLeaseArray) ToGetVappLeaseArrayOutput() GetVappLeaseArrayOutput {
	return i.ToGetVappLeaseArrayOutputWithContext(context.Background())
}

func (i GetVappLeaseArray) ToGetVappLeaseArrayOutputWithContext(ctx context.Context) GetVappLeaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappLeaseArrayOutput)
}

type GetVappLeaseOutput struct{ *pulumi.OutputState }

func (GetVappLeaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappLease)(nil)).Elem()
}

func (o GetVappLeaseOutput) ToGetVappLeaseOutput() GetVappLeaseOutput {
	return o
}

func (o GetVappLeaseOutput) ToGetVappLeaseOutputWithContext(ctx context.Context) GetVappLeaseOutput {
	return o
}

// How long any of the VMs in the vApp can run before the vApp is automatically powered off or suspended. 0 means never expires.
func (o GetVappLeaseOutput) RuntimeLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappLease) int { return v.RuntimeLeaseInSec }).(pulumi.IntOutput)
}

// How long the vApp is available before being automatically deleted or marked as expired. 0 means never expires.
func (o GetVappLeaseOutput) StorageLeaseInSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappLease) int { return v.StorageLeaseInSec }).(pulumi.IntOutput)
}

type GetVappLeaseArrayOutput struct{ *pulumi.OutputState }

func (GetVappLeaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappLease)(nil)).Elem()
}

func (o GetVappLeaseArrayOutput) ToGetVappLeaseArrayOutput() GetVappLeaseArrayOutput {
	return o
}

func (o GetVappLeaseArrayOutput) ToGetVappLeaseArrayOutputWithContext(ctx context.Context) GetVappLeaseArrayOutput {
	return o
}

func (o GetVappLeaseArrayOutput) Index(i pulumi.IntInput) GetVappLeaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappLease {
		return vs[0].([]GetVappLease)[vs[1].(int)]
	}).(GetVappLeaseOutput)
}

type GetVappMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetVappMetadataEntryInput is an input type that accepts GetVappMetadataEntryArgs and GetVappMetadataEntryOutput values.
// You can construct a concrete instance of `GetVappMetadataEntryInput` via:
//
//	GetVappMetadataEntryArgs{...}
type GetVappMetadataEntryInput interface {
	pulumi.Input

	ToGetVappMetadataEntryOutput() GetVappMetadataEntryOutput
	ToGetVappMetadataEntryOutputWithContext(context.Context) GetVappMetadataEntryOutput
}

type GetVappMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVappMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappMetadataEntry)(nil)).Elem()
}

func (i GetVappMetadataEntryArgs) ToGetVappMetadataEntryOutput() GetVappMetadataEntryOutput {
	return i.ToGetVappMetadataEntryOutputWithContext(context.Background())
}

func (i GetVappMetadataEntryArgs) ToGetVappMetadataEntryOutputWithContext(ctx context.Context) GetVappMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappMetadataEntryOutput)
}

// GetVappMetadataEntryArrayInput is an input type that accepts GetVappMetadataEntryArray and GetVappMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetVappMetadataEntryArrayInput` via:
//
//	GetVappMetadataEntryArray{ GetVappMetadataEntryArgs{...} }
type GetVappMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetVappMetadataEntryArrayOutput() GetVappMetadataEntryArrayOutput
	ToGetVappMetadataEntryArrayOutputWithContext(context.Context) GetVappMetadataEntryArrayOutput
}

type GetVappMetadataEntryArray []GetVappMetadataEntryInput

func (GetVappMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappMetadataEntry)(nil)).Elem()
}

func (i GetVappMetadataEntryArray) ToGetVappMetadataEntryArrayOutput() GetVappMetadataEntryArrayOutput {
	return i.ToGetVappMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetVappMetadataEntryArray) ToGetVappMetadataEntryArrayOutputWithContext(ctx context.Context) GetVappMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappMetadataEntryArrayOutput)
}

type GetVappMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetVappMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappMetadataEntry)(nil)).Elem()
}

func (o GetVappMetadataEntryOutput) ToGetVappMetadataEntryOutput() GetVappMetadataEntryOutput {
	return o
}

func (o GetVappMetadataEntryOutput) ToGetVappMetadataEntryOutputWithContext(ctx context.Context) GetVappMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetVappMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetVappMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetVappMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetVappMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetVappMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetVappMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetVappMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappMetadataEntry)(nil)).Elem()
}

func (o GetVappMetadataEntryArrayOutput) ToGetVappMetadataEntryArrayOutput() GetVappMetadataEntryArrayOutput {
	return o
}

func (o GetVappMetadataEntryArrayOutput) ToGetVappMetadataEntryArrayOutputWithContext(ctx context.Context) GetVappMetadataEntryArrayOutput {
	return o
}

func (o GetVappMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetVappMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappMetadataEntry {
		return vs[0].([]GetVappMetadataEntry)[vs[1].(int)]
	}).(GetVappMetadataEntryOutput)
}

type GetVappNetworkDhcpPool struct {
	DefaultLeaseTime int    `pulumi:"defaultLeaseTime"`
	Enabled          bool   `pulumi:"enabled"`
	EndAddress       string `pulumi:"endAddress"`
	MaxLeaseTime     int    `pulumi:"maxLeaseTime"`
	StartAddress     string `pulumi:"startAddress"`
}

// GetVappNetworkDhcpPoolInput is an input type that accepts GetVappNetworkDhcpPoolArgs and GetVappNetworkDhcpPoolOutput values.
// You can construct a concrete instance of `GetVappNetworkDhcpPoolInput` via:
//
//	GetVappNetworkDhcpPoolArgs{...}
type GetVappNetworkDhcpPoolInput interface {
	pulumi.Input

	ToGetVappNetworkDhcpPoolOutput() GetVappNetworkDhcpPoolOutput
	ToGetVappNetworkDhcpPoolOutputWithContext(context.Context) GetVappNetworkDhcpPoolOutput
}

type GetVappNetworkDhcpPoolArgs struct {
	DefaultLeaseTime pulumi.IntInput    `pulumi:"defaultLeaseTime"`
	Enabled          pulumi.BoolInput   `pulumi:"enabled"`
	EndAddress       pulumi.StringInput `pulumi:"endAddress"`
	MaxLeaseTime     pulumi.IntInput    `pulumi:"maxLeaseTime"`
	StartAddress     pulumi.StringInput `pulumi:"startAddress"`
}

func (GetVappNetworkDhcpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappNetworkDhcpPool)(nil)).Elem()
}

func (i GetVappNetworkDhcpPoolArgs) ToGetVappNetworkDhcpPoolOutput() GetVappNetworkDhcpPoolOutput {
	return i.ToGetVappNetworkDhcpPoolOutputWithContext(context.Background())
}

func (i GetVappNetworkDhcpPoolArgs) ToGetVappNetworkDhcpPoolOutputWithContext(ctx context.Context) GetVappNetworkDhcpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappNetworkDhcpPoolOutput)
}

// GetVappNetworkDhcpPoolArrayInput is an input type that accepts GetVappNetworkDhcpPoolArray and GetVappNetworkDhcpPoolArrayOutput values.
// You can construct a concrete instance of `GetVappNetworkDhcpPoolArrayInput` via:
//
//	GetVappNetworkDhcpPoolArray{ GetVappNetworkDhcpPoolArgs{...} }
type GetVappNetworkDhcpPoolArrayInput interface {
	pulumi.Input

	ToGetVappNetworkDhcpPoolArrayOutput() GetVappNetworkDhcpPoolArrayOutput
	ToGetVappNetworkDhcpPoolArrayOutputWithContext(context.Context) GetVappNetworkDhcpPoolArrayOutput
}

type GetVappNetworkDhcpPoolArray []GetVappNetworkDhcpPoolInput

func (GetVappNetworkDhcpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappNetworkDhcpPool)(nil)).Elem()
}

func (i GetVappNetworkDhcpPoolArray) ToGetVappNetworkDhcpPoolArrayOutput() GetVappNetworkDhcpPoolArrayOutput {
	return i.ToGetVappNetworkDhcpPoolArrayOutputWithContext(context.Background())
}

func (i GetVappNetworkDhcpPoolArray) ToGetVappNetworkDhcpPoolArrayOutputWithContext(ctx context.Context) GetVappNetworkDhcpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappNetworkDhcpPoolArrayOutput)
}

type GetVappNetworkDhcpPoolOutput struct{ *pulumi.OutputState }

func (GetVappNetworkDhcpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappNetworkDhcpPool)(nil)).Elem()
}

func (o GetVappNetworkDhcpPoolOutput) ToGetVappNetworkDhcpPoolOutput() GetVappNetworkDhcpPoolOutput {
	return o
}

func (o GetVappNetworkDhcpPoolOutput) ToGetVappNetworkDhcpPoolOutputWithContext(ctx context.Context) GetVappNetworkDhcpPoolOutput {
	return o
}

func (o GetVappNetworkDhcpPoolOutput) DefaultLeaseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappNetworkDhcpPool) int { return v.DefaultLeaseTime }).(pulumi.IntOutput)
}

func (o GetVappNetworkDhcpPoolOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappNetworkDhcpPool) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetVappNetworkDhcpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappNetworkDhcpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

func (o GetVappNetworkDhcpPoolOutput) MaxLeaseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappNetworkDhcpPool) int { return v.MaxLeaseTime }).(pulumi.IntOutput)
}

func (o GetVappNetworkDhcpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappNetworkDhcpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetVappNetworkDhcpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetVappNetworkDhcpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappNetworkDhcpPool)(nil)).Elem()
}

func (o GetVappNetworkDhcpPoolArrayOutput) ToGetVappNetworkDhcpPoolArrayOutput() GetVappNetworkDhcpPoolArrayOutput {
	return o
}

func (o GetVappNetworkDhcpPoolArrayOutput) ToGetVappNetworkDhcpPoolArrayOutputWithContext(ctx context.Context) GetVappNetworkDhcpPoolArrayOutput {
	return o
}

func (o GetVappNetworkDhcpPoolArrayOutput) Index(i pulumi.IntInput) GetVappNetworkDhcpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappNetworkDhcpPool {
		return vs[0].([]GetVappNetworkDhcpPool)[vs[1].(int)]
	}).(GetVappNetworkDhcpPoolOutput)
}

type GetVappNetworkStaticIpPool struct {
	EndAddress   string `pulumi:"endAddress"`
	StartAddress string `pulumi:"startAddress"`
}

// GetVappNetworkStaticIpPoolInput is an input type that accepts GetVappNetworkStaticIpPoolArgs and GetVappNetworkStaticIpPoolOutput values.
// You can construct a concrete instance of `GetVappNetworkStaticIpPoolInput` via:
//
//	GetVappNetworkStaticIpPoolArgs{...}
type GetVappNetworkStaticIpPoolInput interface {
	pulumi.Input

	ToGetVappNetworkStaticIpPoolOutput() GetVappNetworkStaticIpPoolOutput
	ToGetVappNetworkStaticIpPoolOutputWithContext(context.Context) GetVappNetworkStaticIpPoolOutput
}

type GetVappNetworkStaticIpPoolArgs struct {
	EndAddress   pulumi.StringInput `pulumi:"endAddress"`
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetVappNetworkStaticIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappNetworkStaticIpPool)(nil)).Elem()
}

func (i GetVappNetworkStaticIpPoolArgs) ToGetVappNetworkStaticIpPoolOutput() GetVappNetworkStaticIpPoolOutput {
	return i.ToGetVappNetworkStaticIpPoolOutputWithContext(context.Background())
}

func (i GetVappNetworkStaticIpPoolArgs) ToGetVappNetworkStaticIpPoolOutputWithContext(ctx context.Context) GetVappNetworkStaticIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappNetworkStaticIpPoolOutput)
}

// GetVappNetworkStaticIpPoolArrayInput is an input type that accepts GetVappNetworkStaticIpPoolArray and GetVappNetworkStaticIpPoolArrayOutput values.
// You can construct a concrete instance of `GetVappNetworkStaticIpPoolArrayInput` via:
//
//	GetVappNetworkStaticIpPoolArray{ GetVappNetworkStaticIpPoolArgs{...} }
type GetVappNetworkStaticIpPoolArrayInput interface {
	pulumi.Input

	ToGetVappNetworkStaticIpPoolArrayOutput() GetVappNetworkStaticIpPoolArrayOutput
	ToGetVappNetworkStaticIpPoolArrayOutputWithContext(context.Context) GetVappNetworkStaticIpPoolArrayOutput
}

type GetVappNetworkStaticIpPoolArray []GetVappNetworkStaticIpPoolInput

func (GetVappNetworkStaticIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappNetworkStaticIpPool)(nil)).Elem()
}

func (i GetVappNetworkStaticIpPoolArray) ToGetVappNetworkStaticIpPoolArrayOutput() GetVappNetworkStaticIpPoolArrayOutput {
	return i.ToGetVappNetworkStaticIpPoolArrayOutputWithContext(context.Background())
}

func (i GetVappNetworkStaticIpPoolArray) ToGetVappNetworkStaticIpPoolArrayOutputWithContext(ctx context.Context) GetVappNetworkStaticIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappNetworkStaticIpPoolArrayOutput)
}

type GetVappNetworkStaticIpPoolOutput struct{ *pulumi.OutputState }

func (GetVappNetworkStaticIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappNetworkStaticIpPool)(nil)).Elem()
}

func (o GetVappNetworkStaticIpPoolOutput) ToGetVappNetworkStaticIpPoolOutput() GetVappNetworkStaticIpPoolOutput {
	return o
}

func (o GetVappNetworkStaticIpPoolOutput) ToGetVappNetworkStaticIpPoolOutputWithContext(ctx context.Context) GetVappNetworkStaticIpPoolOutput {
	return o
}

func (o GetVappNetworkStaticIpPoolOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappNetworkStaticIpPool) string { return v.EndAddress }).(pulumi.StringOutput)
}

func (o GetVappNetworkStaticIpPoolOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappNetworkStaticIpPool) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetVappNetworkStaticIpPoolArrayOutput struct{ *pulumi.OutputState }

func (GetVappNetworkStaticIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappNetworkStaticIpPool)(nil)).Elem()
}

func (o GetVappNetworkStaticIpPoolArrayOutput) ToGetVappNetworkStaticIpPoolArrayOutput() GetVappNetworkStaticIpPoolArrayOutput {
	return o
}

func (o GetVappNetworkStaticIpPoolArrayOutput) ToGetVappNetworkStaticIpPoolArrayOutputWithContext(ctx context.Context) GetVappNetworkStaticIpPoolArrayOutput {
	return o
}

func (o GetVappNetworkStaticIpPoolArrayOutput) Index(i pulumi.IntInput) GetVappNetworkStaticIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappNetworkStaticIpPool {
		return vs[0].([]GetVappNetworkStaticIpPool)[vs[1].(int)]
	}).(GetVappNetworkStaticIpPoolOutput)
}

type GetVappVmBootOption struct {
	// Number of milliseconds to wait between powering-on and booting the VM
	BootDelay int `pulumi:"bootDelay"`
	// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
	BootRetryDelay int `pulumi:"bootRetryDelay"`
	// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
	BootRetryEnabled bool `pulumi:"bootRetryEnabled"`
	// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
	EfiSecureBoot bool `pulumi:"efiSecureBoot"`
	// If set to true, the VM will enter BIOS setup on boot.
	EnterBiosSetupOnNextBoot bool `pulumi:"enterBiosSetupOnNextBoot"`
}

// GetVappVmBootOptionInput is an input type that accepts GetVappVmBootOptionArgs and GetVappVmBootOptionOutput values.
// You can construct a concrete instance of `GetVappVmBootOptionInput` via:
//
//	GetVappVmBootOptionArgs{...}
type GetVappVmBootOptionInput interface {
	pulumi.Input

	ToGetVappVmBootOptionOutput() GetVappVmBootOptionOutput
	ToGetVappVmBootOptionOutputWithContext(context.Context) GetVappVmBootOptionOutput
}

type GetVappVmBootOptionArgs struct {
	// Number of milliseconds to wait between powering-on and booting the VM
	BootDelay pulumi.IntInput `pulumi:"bootDelay"`
	// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
	BootRetryDelay pulumi.IntInput `pulumi:"bootRetryDelay"`
	// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
	BootRetryEnabled pulumi.BoolInput `pulumi:"bootRetryEnabled"`
	// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
	EfiSecureBoot pulumi.BoolInput `pulumi:"efiSecureBoot"`
	// If set to true, the VM will enter BIOS setup on boot.
	EnterBiosSetupOnNextBoot pulumi.BoolInput `pulumi:"enterBiosSetupOnNextBoot"`
}

func (GetVappVmBootOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmBootOption)(nil)).Elem()
}

func (i GetVappVmBootOptionArgs) ToGetVappVmBootOptionOutput() GetVappVmBootOptionOutput {
	return i.ToGetVappVmBootOptionOutputWithContext(context.Background())
}

func (i GetVappVmBootOptionArgs) ToGetVappVmBootOptionOutputWithContext(ctx context.Context) GetVappVmBootOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmBootOptionOutput)
}

// GetVappVmBootOptionArrayInput is an input type that accepts GetVappVmBootOptionArray and GetVappVmBootOptionArrayOutput values.
// You can construct a concrete instance of `GetVappVmBootOptionArrayInput` via:
//
//	GetVappVmBootOptionArray{ GetVappVmBootOptionArgs{...} }
type GetVappVmBootOptionArrayInput interface {
	pulumi.Input

	ToGetVappVmBootOptionArrayOutput() GetVappVmBootOptionArrayOutput
	ToGetVappVmBootOptionArrayOutputWithContext(context.Context) GetVappVmBootOptionArrayOutput
}

type GetVappVmBootOptionArray []GetVappVmBootOptionInput

func (GetVappVmBootOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmBootOption)(nil)).Elem()
}

func (i GetVappVmBootOptionArray) ToGetVappVmBootOptionArrayOutput() GetVappVmBootOptionArrayOutput {
	return i.ToGetVappVmBootOptionArrayOutputWithContext(context.Background())
}

func (i GetVappVmBootOptionArray) ToGetVappVmBootOptionArrayOutputWithContext(ctx context.Context) GetVappVmBootOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmBootOptionArrayOutput)
}

type GetVappVmBootOptionOutput struct{ *pulumi.OutputState }

func (GetVappVmBootOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmBootOption)(nil)).Elem()
}

func (o GetVappVmBootOptionOutput) ToGetVappVmBootOptionOutput() GetVappVmBootOptionOutput {
	return o
}

func (o GetVappVmBootOptionOutput) ToGetVappVmBootOptionOutputWithContext(ctx context.Context) GetVappVmBootOptionOutput {
	return o
}

// Number of milliseconds to wait between powering-on and booting the VM
func (o GetVappVmBootOptionOutput) BootDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappVmBootOption) int { return v.BootDelay }).(pulumi.IntOutput)
}

// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
func (o GetVappVmBootOptionOutput) BootRetryDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappVmBootOption) int { return v.BootRetryDelay }).(pulumi.IntOutput)
}

// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
func (o GetVappVmBootOptionOutput) BootRetryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmBootOption) bool { return v.BootRetryEnabled }).(pulumi.BoolOutput)
}

// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
func (o GetVappVmBootOptionOutput) EfiSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmBootOption) bool { return v.EfiSecureBoot }).(pulumi.BoolOutput)
}

// If set to true, the VM will enter BIOS setup on boot.
func (o GetVappVmBootOptionOutput) EnterBiosSetupOnNextBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmBootOption) bool { return v.EnterBiosSetupOnNextBoot }).(pulumi.BoolOutput)
}

type GetVappVmBootOptionArrayOutput struct{ *pulumi.OutputState }

func (GetVappVmBootOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmBootOption)(nil)).Elem()
}

func (o GetVappVmBootOptionArrayOutput) ToGetVappVmBootOptionArrayOutput() GetVappVmBootOptionArrayOutput {
	return o
}

func (o GetVappVmBootOptionArrayOutput) ToGetVappVmBootOptionArrayOutputWithContext(ctx context.Context) GetVappVmBootOptionArrayOutput {
	return o
}

func (o GetVappVmBootOptionArrayOutput) Index(i pulumi.IntInput) GetVappVmBootOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappVmBootOption {
		return vs[0].([]GetVappVmBootOption)[vs[1].(int)]
	}).(GetVappVmBootOptionOutput)
}

type GetVappVmCustomization struct {
	// Manually specify admin password
	AdminPassword string `pulumi:"adminPassword"`
	// Allow local administrator password
	AllowLocalAdminPassword bool `pulumi:"allowLocalAdminPassword"`
	// Auto generate password
	AutoGeneratePassword bool `pulumi:"autoGeneratePassword"`
	// 'true' value will change SID. Applicable only for Windows VMs
	ChangeSid bool `pulumi:"changeSid"`
	// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
	Enabled bool `pulumi:"enabled"`
	// 'true' value will cause the VM to reboot on every 'apply' operation
	Force bool `pulumi:"force"`
	// Script to run on initial boot or with customization.force=true set
	Initscript string `pulumi:"initscript"`
	// Enable this VM to join a domain
	JoinDomain bool `pulumi:"joinDomain"`
	// Account organizational unit for domain name join
	JoinDomainAccountOu string `pulumi:"joinDomainAccountOu"`
	// Custom domain name for join
	JoinDomainName string `pulumi:"joinDomainName"`
	// Password for custom domain name join
	JoinDomainPassword string `pulumi:"joinDomainPassword"`
	// Username for custom domain name join
	JoinDomainUser string `pulumi:"joinDomainUser"`
	// Use organization's domain for joining
	JoinOrgDomain bool `pulumi:"joinOrgDomain"`
	// Require Administrator to change password on first login
	MustChangePasswordOnFirstLogin bool `pulumi:"mustChangePasswordOnFirstLogin"`
	// Number of times to log on automatically
	NumberOfAutoLogons int `pulumi:"numberOfAutoLogons"`
}

// GetVappVmCustomizationInput is an input type that accepts GetVappVmCustomizationArgs and GetVappVmCustomizationOutput values.
// You can construct a concrete instance of `GetVappVmCustomizationInput` via:
//
//	GetVappVmCustomizationArgs{...}
type GetVappVmCustomizationInput interface {
	pulumi.Input

	ToGetVappVmCustomizationOutput() GetVappVmCustomizationOutput
	ToGetVappVmCustomizationOutputWithContext(context.Context) GetVappVmCustomizationOutput
}

type GetVappVmCustomizationArgs struct {
	// Manually specify admin password
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	// Allow local administrator password
	AllowLocalAdminPassword pulumi.BoolInput `pulumi:"allowLocalAdminPassword"`
	// Auto generate password
	AutoGeneratePassword pulumi.BoolInput `pulumi:"autoGeneratePassword"`
	// 'true' value will change SID. Applicable only for Windows VMs
	ChangeSid pulumi.BoolInput `pulumi:"changeSid"`
	// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// 'true' value will cause the VM to reboot on every 'apply' operation
	Force pulumi.BoolInput `pulumi:"force"`
	// Script to run on initial boot or with customization.force=true set
	Initscript pulumi.StringInput `pulumi:"initscript"`
	// Enable this VM to join a domain
	JoinDomain pulumi.BoolInput `pulumi:"joinDomain"`
	// Account organizational unit for domain name join
	JoinDomainAccountOu pulumi.StringInput `pulumi:"joinDomainAccountOu"`
	// Custom domain name for join
	JoinDomainName pulumi.StringInput `pulumi:"joinDomainName"`
	// Password for custom domain name join
	JoinDomainPassword pulumi.StringInput `pulumi:"joinDomainPassword"`
	// Username for custom domain name join
	JoinDomainUser pulumi.StringInput `pulumi:"joinDomainUser"`
	// Use organization's domain for joining
	JoinOrgDomain pulumi.BoolInput `pulumi:"joinOrgDomain"`
	// Require Administrator to change password on first login
	MustChangePasswordOnFirstLogin pulumi.BoolInput `pulumi:"mustChangePasswordOnFirstLogin"`
	// Number of times to log on automatically
	NumberOfAutoLogons pulumi.IntInput `pulumi:"numberOfAutoLogons"`
}

func (GetVappVmCustomizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmCustomization)(nil)).Elem()
}

func (i GetVappVmCustomizationArgs) ToGetVappVmCustomizationOutput() GetVappVmCustomizationOutput {
	return i.ToGetVappVmCustomizationOutputWithContext(context.Background())
}

func (i GetVappVmCustomizationArgs) ToGetVappVmCustomizationOutputWithContext(ctx context.Context) GetVappVmCustomizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmCustomizationOutput)
}

// GetVappVmCustomizationArrayInput is an input type that accepts GetVappVmCustomizationArray and GetVappVmCustomizationArrayOutput values.
// You can construct a concrete instance of `GetVappVmCustomizationArrayInput` via:
//
//	GetVappVmCustomizationArray{ GetVappVmCustomizationArgs{...} }
type GetVappVmCustomizationArrayInput interface {
	pulumi.Input

	ToGetVappVmCustomizationArrayOutput() GetVappVmCustomizationArrayOutput
	ToGetVappVmCustomizationArrayOutputWithContext(context.Context) GetVappVmCustomizationArrayOutput
}

type GetVappVmCustomizationArray []GetVappVmCustomizationInput

func (GetVappVmCustomizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmCustomization)(nil)).Elem()
}

func (i GetVappVmCustomizationArray) ToGetVappVmCustomizationArrayOutput() GetVappVmCustomizationArrayOutput {
	return i.ToGetVappVmCustomizationArrayOutputWithContext(context.Background())
}

func (i GetVappVmCustomizationArray) ToGetVappVmCustomizationArrayOutputWithContext(ctx context.Context) GetVappVmCustomizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmCustomizationArrayOutput)
}

type GetVappVmCustomizationOutput struct{ *pulumi.OutputState }

func (GetVappVmCustomizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmCustomization)(nil)).Elem()
}

func (o GetVappVmCustomizationOutput) ToGetVappVmCustomizationOutput() GetVappVmCustomizationOutput {
	return o
}

func (o GetVappVmCustomizationOutput) ToGetVappVmCustomizationOutputWithContext(ctx context.Context) GetVappVmCustomizationOutput {
	return o
}

// Manually specify admin password
func (o GetVappVmCustomizationOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmCustomization) string { return v.AdminPassword }).(pulumi.StringOutput)
}

// Allow local administrator password
func (o GetVappVmCustomizationOutput) AllowLocalAdminPassword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmCustomization) bool { return v.AllowLocalAdminPassword }).(pulumi.BoolOutput)
}

// Auto generate password
func (o GetVappVmCustomizationOutput) AutoGeneratePassword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmCustomization) bool { return v.AutoGeneratePassword }).(pulumi.BoolOutput)
}

// 'true' value will change SID. Applicable only for Windows VMs
func (o GetVappVmCustomizationOutput) ChangeSid() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmCustomization) bool { return v.ChangeSid }).(pulumi.BoolOutput)
}

// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
func (o GetVappVmCustomizationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmCustomization) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// 'true' value will cause the VM to reboot on every 'apply' operation
func (o GetVappVmCustomizationOutput) Force() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmCustomization) bool { return v.Force }).(pulumi.BoolOutput)
}

// Script to run on initial boot or with customization.force=true set
func (o GetVappVmCustomizationOutput) Initscript() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmCustomization) string { return v.Initscript }).(pulumi.StringOutput)
}

// Enable this VM to join a domain
func (o GetVappVmCustomizationOutput) JoinDomain() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmCustomization) bool { return v.JoinDomain }).(pulumi.BoolOutput)
}

// Account organizational unit for domain name join
func (o GetVappVmCustomizationOutput) JoinDomainAccountOu() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmCustomization) string { return v.JoinDomainAccountOu }).(pulumi.StringOutput)
}

// Custom domain name for join
func (o GetVappVmCustomizationOutput) JoinDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmCustomization) string { return v.JoinDomainName }).(pulumi.StringOutput)
}

// Password for custom domain name join
func (o GetVappVmCustomizationOutput) JoinDomainPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmCustomization) string { return v.JoinDomainPassword }).(pulumi.StringOutput)
}

// Username for custom domain name join
func (o GetVappVmCustomizationOutput) JoinDomainUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmCustomization) string { return v.JoinDomainUser }).(pulumi.StringOutput)
}

// Use organization's domain for joining
func (o GetVappVmCustomizationOutput) JoinOrgDomain() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmCustomization) bool { return v.JoinOrgDomain }).(pulumi.BoolOutput)
}

// Require Administrator to change password on first login
func (o GetVappVmCustomizationOutput) MustChangePasswordOnFirstLogin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmCustomization) bool { return v.MustChangePasswordOnFirstLogin }).(pulumi.BoolOutput)
}

// Number of times to log on automatically
func (o GetVappVmCustomizationOutput) NumberOfAutoLogons() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappVmCustomization) int { return v.NumberOfAutoLogons }).(pulumi.IntOutput)
}

type GetVappVmCustomizationArrayOutput struct{ *pulumi.OutputState }

func (GetVappVmCustomizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmCustomization)(nil)).Elem()
}

func (o GetVappVmCustomizationArrayOutput) ToGetVappVmCustomizationArrayOutput() GetVappVmCustomizationArrayOutput {
	return o
}

func (o GetVappVmCustomizationArrayOutput) ToGetVappVmCustomizationArrayOutputWithContext(ctx context.Context) GetVappVmCustomizationArrayOutput {
	return o
}

func (o GetVappVmCustomizationArrayOutput) Index(i pulumi.IntInput) GetVappVmCustomizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappVmCustomization {
		return vs[0].([]GetVappVmCustomization)[vs[1].(int)]
	}).(GetVappVmCustomizationOutput)
}

type GetVappVmDisk struct {
	// Bus number on which to place the disk controller
	BusNumber string `pulumi:"busNumber"`
	// A name for the VM, unique within the vApp
	Name string `pulumi:"name"`
	// The size of the disk in MB.
	SizeInMb int `pulumi:"sizeInMb"`
	// Unit number (slot) on the bus specified by BusNumber
	UnitNumber string `pulumi:"unitNumber"`
}

// GetVappVmDiskInput is an input type that accepts GetVappVmDiskArgs and GetVappVmDiskOutput values.
// You can construct a concrete instance of `GetVappVmDiskInput` via:
//
//	GetVappVmDiskArgs{...}
type GetVappVmDiskInput interface {
	pulumi.Input

	ToGetVappVmDiskOutput() GetVappVmDiskOutput
	ToGetVappVmDiskOutputWithContext(context.Context) GetVappVmDiskOutput
}

type GetVappVmDiskArgs struct {
	// Bus number on which to place the disk controller
	BusNumber pulumi.StringInput `pulumi:"busNumber"`
	// A name for the VM, unique within the vApp
	Name pulumi.StringInput `pulumi:"name"`
	// The size of the disk in MB.
	SizeInMb pulumi.IntInput `pulumi:"sizeInMb"`
	// Unit number (slot) on the bus specified by BusNumber
	UnitNumber pulumi.StringInput `pulumi:"unitNumber"`
}

func (GetVappVmDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmDisk)(nil)).Elem()
}

func (i GetVappVmDiskArgs) ToGetVappVmDiskOutput() GetVappVmDiskOutput {
	return i.ToGetVappVmDiskOutputWithContext(context.Background())
}

func (i GetVappVmDiskArgs) ToGetVappVmDiskOutputWithContext(ctx context.Context) GetVappVmDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmDiskOutput)
}

// GetVappVmDiskArrayInput is an input type that accepts GetVappVmDiskArray and GetVappVmDiskArrayOutput values.
// You can construct a concrete instance of `GetVappVmDiskArrayInput` via:
//
//	GetVappVmDiskArray{ GetVappVmDiskArgs{...} }
type GetVappVmDiskArrayInput interface {
	pulumi.Input

	ToGetVappVmDiskArrayOutput() GetVappVmDiskArrayOutput
	ToGetVappVmDiskArrayOutputWithContext(context.Context) GetVappVmDiskArrayOutput
}

type GetVappVmDiskArray []GetVappVmDiskInput

func (GetVappVmDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmDisk)(nil)).Elem()
}

func (i GetVappVmDiskArray) ToGetVappVmDiskArrayOutput() GetVappVmDiskArrayOutput {
	return i.ToGetVappVmDiskArrayOutputWithContext(context.Background())
}

func (i GetVappVmDiskArray) ToGetVappVmDiskArrayOutputWithContext(ctx context.Context) GetVappVmDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmDiskArrayOutput)
}

type GetVappVmDiskOutput struct{ *pulumi.OutputState }

func (GetVappVmDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmDisk)(nil)).Elem()
}

func (o GetVappVmDiskOutput) ToGetVappVmDiskOutput() GetVappVmDiskOutput {
	return o
}

func (o GetVappVmDiskOutput) ToGetVappVmDiskOutputWithContext(ctx context.Context) GetVappVmDiskOutput {
	return o
}

// Bus number on which to place the disk controller
func (o GetVappVmDiskOutput) BusNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmDisk) string { return v.BusNumber }).(pulumi.StringOutput)
}

// A name for the VM, unique within the vApp
func (o GetVappVmDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmDisk) string { return v.Name }).(pulumi.StringOutput)
}

// The size of the disk in MB.
func (o GetVappVmDiskOutput) SizeInMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappVmDisk) int { return v.SizeInMb }).(pulumi.IntOutput)
}

// Unit number (slot) on the bus specified by BusNumber
func (o GetVappVmDiskOutput) UnitNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmDisk) string { return v.UnitNumber }).(pulumi.StringOutput)
}

type GetVappVmDiskArrayOutput struct{ *pulumi.OutputState }

func (GetVappVmDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmDisk)(nil)).Elem()
}

func (o GetVappVmDiskArrayOutput) ToGetVappVmDiskArrayOutput() GetVappVmDiskArrayOutput {
	return o
}

func (o GetVappVmDiskArrayOutput) ToGetVappVmDiskArrayOutputWithContext(ctx context.Context) GetVappVmDiskArrayOutput {
	return o
}

func (o GetVappVmDiskArrayOutput) Index(i pulumi.IntInput) GetVappVmDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappVmDisk {
		return vs[0].([]GetVappVmDisk)[vs[1].(int)]
	}).(GetVappVmDiskOutput)
}

type GetVappVmExtraConfig struct {
	// The key of the extra configuration item
	Key string `pulumi:"key"`
	// Whether the extra configuration item is required
	Required bool `pulumi:"required"`
	// The value of the extra configuration item
	Value string `pulumi:"value"`
}

// GetVappVmExtraConfigInput is an input type that accepts GetVappVmExtraConfigArgs and GetVappVmExtraConfigOutput values.
// You can construct a concrete instance of `GetVappVmExtraConfigInput` via:
//
//	GetVappVmExtraConfigArgs{...}
type GetVappVmExtraConfigInput interface {
	pulumi.Input

	ToGetVappVmExtraConfigOutput() GetVappVmExtraConfigOutput
	ToGetVappVmExtraConfigOutputWithContext(context.Context) GetVappVmExtraConfigOutput
}

type GetVappVmExtraConfigArgs struct {
	// The key of the extra configuration item
	Key pulumi.StringInput `pulumi:"key"`
	// Whether the extra configuration item is required
	Required pulumi.BoolInput `pulumi:"required"`
	// The value of the extra configuration item
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVappVmExtraConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmExtraConfig)(nil)).Elem()
}

func (i GetVappVmExtraConfigArgs) ToGetVappVmExtraConfigOutput() GetVappVmExtraConfigOutput {
	return i.ToGetVappVmExtraConfigOutputWithContext(context.Background())
}

func (i GetVappVmExtraConfigArgs) ToGetVappVmExtraConfigOutputWithContext(ctx context.Context) GetVappVmExtraConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmExtraConfigOutput)
}

// GetVappVmExtraConfigArrayInput is an input type that accepts GetVappVmExtraConfigArray and GetVappVmExtraConfigArrayOutput values.
// You can construct a concrete instance of `GetVappVmExtraConfigArrayInput` via:
//
//	GetVappVmExtraConfigArray{ GetVappVmExtraConfigArgs{...} }
type GetVappVmExtraConfigArrayInput interface {
	pulumi.Input

	ToGetVappVmExtraConfigArrayOutput() GetVappVmExtraConfigArrayOutput
	ToGetVappVmExtraConfigArrayOutputWithContext(context.Context) GetVappVmExtraConfigArrayOutput
}

type GetVappVmExtraConfigArray []GetVappVmExtraConfigInput

func (GetVappVmExtraConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmExtraConfig)(nil)).Elem()
}

func (i GetVappVmExtraConfigArray) ToGetVappVmExtraConfigArrayOutput() GetVappVmExtraConfigArrayOutput {
	return i.ToGetVappVmExtraConfigArrayOutputWithContext(context.Background())
}

func (i GetVappVmExtraConfigArray) ToGetVappVmExtraConfigArrayOutputWithContext(ctx context.Context) GetVappVmExtraConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmExtraConfigArrayOutput)
}

type GetVappVmExtraConfigOutput struct{ *pulumi.OutputState }

func (GetVappVmExtraConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmExtraConfig)(nil)).Elem()
}

func (o GetVappVmExtraConfigOutput) ToGetVappVmExtraConfigOutput() GetVappVmExtraConfigOutput {
	return o
}

func (o GetVappVmExtraConfigOutput) ToGetVappVmExtraConfigOutputWithContext(ctx context.Context) GetVappVmExtraConfigOutput {
	return o
}

// The key of the extra configuration item
func (o GetVappVmExtraConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmExtraConfig) string { return v.Key }).(pulumi.StringOutput)
}

// Whether the extra configuration item is required
func (o GetVappVmExtraConfigOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmExtraConfig) bool { return v.Required }).(pulumi.BoolOutput)
}

// The value of the extra configuration item
func (o GetVappVmExtraConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmExtraConfig) string { return v.Value }).(pulumi.StringOutput)
}

type GetVappVmExtraConfigArrayOutput struct{ *pulumi.OutputState }

func (GetVappVmExtraConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmExtraConfig)(nil)).Elem()
}

func (o GetVappVmExtraConfigArrayOutput) ToGetVappVmExtraConfigArrayOutput() GetVappVmExtraConfigArrayOutput {
	return o
}

func (o GetVappVmExtraConfigArrayOutput) ToGetVappVmExtraConfigArrayOutputWithContext(ctx context.Context) GetVappVmExtraConfigArrayOutput {
	return o
}

func (o GetVappVmExtraConfigArrayOutput) Index(i pulumi.IntInput) GetVappVmExtraConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappVmExtraConfig {
		return vs[0].([]GetVappVmExtraConfig)[vs[1].(int)]
	}).(GetVappVmExtraConfigOutput)
}

type GetVappVmInternalDisk struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber int `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType string `pulumi:"busType"`
	// The disk ID.
	DiskId string `pulumi:"diskId"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops int `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb int `pulumi:"sizeInMb"`
	// Storage profile to override the VM default one
	StorageProfile string `pulumi:"storageProfile"`
	// Specifies whether the disk storage is pre-allocated or allocated on demand.
	ThinProvisioned bool `pulumi:"thinProvisioned"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber int `pulumi:"unitNumber"`
}

// GetVappVmInternalDiskInput is an input type that accepts GetVappVmInternalDiskArgs and GetVappVmInternalDiskOutput values.
// You can construct a concrete instance of `GetVappVmInternalDiskInput` via:
//
//	GetVappVmInternalDiskArgs{...}
type GetVappVmInternalDiskInput interface {
	pulumi.Input

	ToGetVappVmInternalDiskOutput() GetVappVmInternalDiskOutput
	ToGetVappVmInternalDiskOutputWithContext(context.Context) GetVappVmInternalDiskOutput
}

type GetVappVmInternalDiskArgs struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber pulumi.IntInput `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType pulumi.StringInput `pulumi:"busType"`
	// The disk ID.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb pulumi.IntInput `pulumi:"sizeInMb"`
	// Storage profile to override the VM default one
	StorageProfile pulumi.StringInput `pulumi:"storageProfile"`
	// Specifies whether the disk storage is pre-allocated or allocated on demand.
	ThinProvisioned pulumi.BoolInput `pulumi:"thinProvisioned"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber pulumi.IntInput `pulumi:"unitNumber"`
}

func (GetVappVmInternalDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmInternalDisk)(nil)).Elem()
}

func (i GetVappVmInternalDiskArgs) ToGetVappVmInternalDiskOutput() GetVappVmInternalDiskOutput {
	return i.ToGetVappVmInternalDiskOutputWithContext(context.Background())
}

func (i GetVappVmInternalDiskArgs) ToGetVappVmInternalDiskOutputWithContext(ctx context.Context) GetVappVmInternalDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmInternalDiskOutput)
}

// GetVappVmInternalDiskArrayInput is an input type that accepts GetVappVmInternalDiskArray and GetVappVmInternalDiskArrayOutput values.
// You can construct a concrete instance of `GetVappVmInternalDiskArrayInput` via:
//
//	GetVappVmInternalDiskArray{ GetVappVmInternalDiskArgs{...} }
type GetVappVmInternalDiskArrayInput interface {
	pulumi.Input

	ToGetVappVmInternalDiskArrayOutput() GetVappVmInternalDiskArrayOutput
	ToGetVappVmInternalDiskArrayOutputWithContext(context.Context) GetVappVmInternalDiskArrayOutput
}

type GetVappVmInternalDiskArray []GetVappVmInternalDiskInput

func (GetVappVmInternalDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmInternalDisk)(nil)).Elem()
}

func (i GetVappVmInternalDiskArray) ToGetVappVmInternalDiskArrayOutput() GetVappVmInternalDiskArrayOutput {
	return i.ToGetVappVmInternalDiskArrayOutputWithContext(context.Background())
}

func (i GetVappVmInternalDiskArray) ToGetVappVmInternalDiskArrayOutputWithContext(ctx context.Context) GetVappVmInternalDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmInternalDiskArrayOutput)
}

type GetVappVmInternalDiskOutput struct{ *pulumi.OutputState }

func (GetVappVmInternalDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmInternalDisk)(nil)).Elem()
}

func (o GetVappVmInternalDiskOutput) ToGetVappVmInternalDiskOutput() GetVappVmInternalDiskOutput {
	return o
}

func (o GetVappVmInternalDiskOutput) ToGetVappVmInternalDiskOutputWithContext(ctx context.Context) GetVappVmInternalDiskOutput {
	return o
}

// The number of the SCSI or IDE controller itself.
func (o GetVappVmInternalDiskOutput) BusNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappVmInternalDisk) int { return v.BusNumber }).(pulumi.IntOutput)
}

// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
func (o GetVappVmInternalDiskOutput) BusType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmInternalDisk) string { return v.BusType }).(pulumi.StringOutput)
}

// The disk ID.
func (o GetVappVmInternalDiskOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmInternalDisk) string { return v.DiskId }).(pulumi.StringOutput)
}

// Specifies the IOPS for the disk. Default is 0.
func (o GetVappVmInternalDiskOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappVmInternalDisk) int { return v.Iops }).(pulumi.IntOutput)
}

// The size of the disk in MB.
func (o GetVappVmInternalDiskOutput) SizeInMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappVmInternalDisk) int { return v.SizeInMb }).(pulumi.IntOutput)
}

// Storage profile to override the VM default one
func (o GetVappVmInternalDiskOutput) StorageProfile() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmInternalDisk) string { return v.StorageProfile }).(pulumi.StringOutput)
}

// Specifies whether the disk storage is pre-allocated or allocated on demand.
func (o GetVappVmInternalDiskOutput) ThinProvisioned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmInternalDisk) bool { return v.ThinProvisioned }).(pulumi.BoolOutput)
}

// The device number on the SCSI or IDE controller of the disk.
func (o GetVappVmInternalDiskOutput) UnitNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVappVmInternalDisk) int { return v.UnitNumber }).(pulumi.IntOutput)
}

type GetVappVmInternalDiskArrayOutput struct{ *pulumi.OutputState }

func (GetVappVmInternalDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmInternalDisk)(nil)).Elem()
}

func (o GetVappVmInternalDiskArrayOutput) ToGetVappVmInternalDiskArrayOutput() GetVappVmInternalDiskArrayOutput {
	return o
}

func (o GetVappVmInternalDiskArrayOutput) ToGetVappVmInternalDiskArrayOutputWithContext(ctx context.Context) GetVappVmInternalDiskArrayOutput {
	return o
}

func (o GetVappVmInternalDiskArrayOutput) Index(i pulumi.IntInput) GetVappVmInternalDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappVmInternalDisk {
		return vs[0].([]GetVappVmInternalDisk)[vs[1].(int)]
	}).(GetVappVmInternalDiskOutput)
}

type GetVappVmMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetVappVmMetadataEntryInput is an input type that accepts GetVappVmMetadataEntryArgs and GetVappVmMetadataEntryOutput values.
// You can construct a concrete instance of `GetVappVmMetadataEntryInput` via:
//
//	GetVappVmMetadataEntryArgs{...}
type GetVappVmMetadataEntryInput interface {
	pulumi.Input

	ToGetVappVmMetadataEntryOutput() GetVappVmMetadataEntryOutput
	ToGetVappVmMetadataEntryOutputWithContext(context.Context) GetVappVmMetadataEntryOutput
}

type GetVappVmMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVappVmMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmMetadataEntry)(nil)).Elem()
}

func (i GetVappVmMetadataEntryArgs) ToGetVappVmMetadataEntryOutput() GetVappVmMetadataEntryOutput {
	return i.ToGetVappVmMetadataEntryOutputWithContext(context.Background())
}

func (i GetVappVmMetadataEntryArgs) ToGetVappVmMetadataEntryOutputWithContext(ctx context.Context) GetVappVmMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmMetadataEntryOutput)
}

// GetVappVmMetadataEntryArrayInput is an input type that accepts GetVappVmMetadataEntryArray and GetVappVmMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetVappVmMetadataEntryArrayInput` via:
//
//	GetVappVmMetadataEntryArray{ GetVappVmMetadataEntryArgs{...} }
type GetVappVmMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetVappVmMetadataEntryArrayOutput() GetVappVmMetadataEntryArrayOutput
	ToGetVappVmMetadataEntryArrayOutputWithContext(context.Context) GetVappVmMetadataEntryArrayOutput
}

type GetVappVmMetadataEntryArray []GetVappVmMetadataEntryInput

func (GetVappVmMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmMetadataEntry)(nil)).Elem()
}

func (i GetVappVmMetadataEntryArray) ToGetVappVmMetadataEntryArrayOutput() GetVappVmMetadataEntryArrayOutput {
	return i.ToGetVappVmMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetVappVmMetadataEntryArray) ToGetVappVmMetadataEntryArrayOutputWithContext(ctx context.Context) GetVappVmMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmMetadataEntryArrayOutput)
}

type GetVappVmMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetVappVmMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmMetadataEntry)(nil)).Elem()
}

func (o GetVappVmMetadataEntryOutput) ToGetVappVmMetadataEntryOutput() GetVappVmMetadataEntryOutput {
	return o
}

func (o GetVappVmMetadataEntryOutput) ToGetVappVmMetadataEntryOutputWithContext(ctx context.Context) GetVappVmMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetVappVmMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetVappVmMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetVappVmMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetVappVmMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetVappVmMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetVappVmMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetVappVmMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmMetadataEntry)(nil)).Elem()
}

func (o GetVappVmMetadataEntryArrayOutput) ToGetVappVmMetadataEntryArrayOutput() GetVappVmMetadataEntryArrayOutput {
	return o
}

func (o GetVappVmMetadataEntryArrayOutput) ToGetVappVmMetadataEntryArrayOutputWithContext(ctx context.Context) GetVappVmMetadataEntryArrayOutput {
	return o
}

func (o GetVappVmMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetVappVmMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappVmMetadataEntry {
		return vs[0].([]GetVappVmMetadataEntry)[vs[1].(int)]
	}).(GetVappVmMetadataEntryOutput)
}

type GetVappVmNetwork struct {
	// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
	AdapterType string `pulumi:"adapterType"`
	// It defines if NIC is connected or not.
	Connected bool `pulumi:"connected"`
	// IP of the VM. Settings depend on `ipAllocationMode`
	Ip string `pulumi:"ip"`
	// IP address allocation mode.
	IpAllocationMode string `pulumi:"ipAllocationMode"`
	// Set to true if network interface should be primary. First network card in the list will be primary by default
	IsPrimary bool `pulumi:"isPrimary"`
	// Mac address of network interface
	Mac string `pulumi:"mac"`
	// A name for the VM, unique within the vApp
	Name string `pulumi:"name"`
	// Secondary (IPv6) IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	SecondaryIp string `pulumi:"secondaryIp"`
	// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	SecondaryIpAllocationMode string `pulumi:"secondaryIpAllocationMode"`
	// Network type
	Type string `pulumi:"type"`
}

// GetVappVmNetworkInput is an input type that accepts GetVappVmNetworkArgs and GetVappVmNetworkOutput values.
// You can construct a concrete instance of `GetVappVmNetworkInput` via:
//
//	GetVappVmNetworkArgs{...}
type GetVappVmNetworkInput interface {
	pulumi.Input

	ToGetVappVmNetworkOutput() GetVappVmNetworkOutput
	ToGetVappVmNetworkOutputWithContext(context.Context) GetVappVmNetworkOutput
}

type GetVappVmNetworkArgs struct {
	// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
	AdapterType pulumi.StringInput `pulumi:"adapterType"`
	// It defines if NIC is connected or not.
	Connected pulumi.BoolInput `pulumi:"connected"`
	// IP of the VM. Settings depend on `ipAllocationMode`
	Ip pulumi.StringInput `pulumi:"ip"`
	// IP address allocation mode.
	IpAllocationMode pulumi.StringInput `pulumi:"ipAllocationMode"`
	// Set to true if network interface should be primary. First network card in the list will be primary by default
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// Mac address of network interface
	Mac pulumi.StringInput `pulumi:"mac"`
	// A name for the VM, unique within the vApp
	Name pulumi.StringInput `pulumi:"name"`
	// Secondary (IPv6) IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	SecondaryIp pulumi.StringInput `pulumi:"secondaryIp"`
	// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	SecondaryIpAllocationMode pulumi.StringInput `pulumi:"secondaryIpAllocationMode"`
	// Network type
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetVappVmNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmNetwork)(nil)).Elem()
}

func (i GetVappVmNetworkArgs) ToGetVappVmNetworkOutput() GetVappVmNetworkOutput {
	return i.ToGetVappVmNetworkOutputWithContext(context.Background())
}

func (i GetVappVmNetworkArgs) ToGetVappVmNetworkOutputWithContext(ctx context.Context) GetVappVmNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmNetworkOutput)
}

// GetVappVmNetworkArrayInput is an input type that accepts GetVappVmNetworkArray and GetVappVmNetworkArrayOutput values.
// You can construct a concrete instance of `GetVappVmNetworkArrayInput` via:
//
//	GetVappVmNetworkArray{ GetVappVmNetworkArgs{...} }
type GetVappVmNetworkArrayInput interface {
	pulumi.Input

	ToGetVappVmNetworkArrayOutput() GetVappVmNetworkArrayOutput
	ToGetVappVmNetworkArrayOutputWithContext(context.Context) GetVappVmNetworkArrayOutput
}

type GetVappVmNetworkArray []GetVappVmNetworkInput

func (GetVappVmNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmNetwork)(nil)).Elem()
}

func (i GetVappVmNetworkArray) ToGetVappVmNetworkArrayOutput() GetVappVmNetworkArrayOutput {
	return i.ToGetVappVmNetworkArrayOutputWithContext(context.Background())
}

func (i GetVappVmNetworkArray) ToGetVappVmNetworkArrayOutputWithContext(ctx context.Context) GetVappVmNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVappVmNetworkArrayOutput)
}

type GetVappVmNetworkOutput struct{ *pulumi.OutputState }

func (GetVappVmNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVappVmNetwork)(nil)).Elem()
}

func (o GetVappVmNetworkOutput) ToGetVappVmNetworkOutput() GetVappVmNetworkOutput {
	return o
}

func (o GetVappVmNetworkOutput) ToGetVappVmNetworkOutputWithContext(ctx context.Context) GetVappVmNetworkOutput {
	return o
}

// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
func (o GetVappVmNetworkOutput) AdapterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmNetwork) string { return v.AdapterType }).(pulumi.StringOutput)
}

// It defines if NIC is connected or not.
func (o GetVappVmNetworkOutput) Connected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmNetwork) bool { return v.Connected }).(pulumi.BoolOutput)
}

// IP of the VM. Settings depend on `ipAllocationMode`
func (o GetVappVmNetworkOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmNetwork) string { return v.Ip }).(pulumi.StringOutput)
}

// IP address allocation mode.
func (o GetVappVmNetworkOutput) IpAllocationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmNetwork) string { return v.IpAllocationMode }).(pulumi.StringOutput)
}

// Set to true if network interface should be primary. First network card in the list will be primary by default
func (o GetVappVmNetworkOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVappVmNetwork) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// Mac address of network interface
func (o GetVappVmNetworkOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmNetwork) string { return v.Mac }).(pulumi.StringOutput)
}

// A name for the VM, unique within the vApp
func (o GetVappVmNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// Secondary (IPv6) IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
func (o GetVappVmNetworkOutput) SecondaryIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmNetwork) string { return v.SecondaryIp }).(pulumi.StringOutput)
}

// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
func (o GetVappVmNetworkOutput) SecondaryIpAllocationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmNetwork) string { return v.SecondaryIpAllocationMode }).(pulumi.StringOutput)
}

// Network type
func (o GetVappVmNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVappVmNetwork) string { return v.Type }).(pulumi.StringOutput)
}

type GetVappVmNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetVappVmNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVappVmNetwork)(nil)).Elem()
}

func (o GetVappVmNetworkArrayOutput) ToGetVappVmNetworkArrayOutput() GetVappVmNetworkArrayOutput {
	return o
}

func (o GetVappVmNetworkArrayOutput) ToGetVappVmNetworkArrayOutputWithContext(ctx context.Context) GetVappVmNetworkArrayOutput {
	return o
}

func (o GetVappVmNetworkArrayOutput) Index(i pulumi.IntInput) GetVappVmNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVappVmNetwork {
		return vs[0].([]GetVappVmNetwork)[vs[1].(int)]
	}).(GetVappVmNetworkOutput)
}

type GetVdcGroupParticipatingOrgVdc struct {
	// Represents the fault domain of a given organization VDC
	FaultDomainTag string `pulumi:"faultDomainTag"`
	// Specifies whether the VDC is local to this VCD site
	IsRemoteOrg bool `pulumi:"isRemoteOrg"`
	// Specifies the network provider scope of the VDC
	NetworkProviderScope string `pulumi:"networkProviderScope"`
	// Organization VDC belongs
	OrgId string `pulumi:"orgId"`
	// Organization VDC belongs
	OrgName string `pulumi:"orgName"`
	// Site VDC belongs
	SiteId string `pulumi:"siteId"`
	// Site VDC belongs
	SiteName string `pulumi:"siteName"`
	// The status that the VDC can be in e.g. 'SAVING', 'SAVED', 'CONFIGURING', 'REALIZED', 'REALIZATION_FAILED', 'DELETING', 'DELETE_FAILED', 'OBJECT_NOT_FOUND', 'UNCONFIGURED')
	Status string `pulumi:"status"`
	// VDC ID
	VdcId string `pulumi:"vdcId"`
	// VDC name
	VdcName string `pulumi:"vdcName"`
}

// GetVdcGroupParticipatingOrgVdcInput is an input type that accepts GetVdcGroupParticipatingOrgVdcArgs and GetVdcGroupParticipatingOrgVdcOutput values.
// You can construct a concrete instance of `GetVdcGroupParticipatingOrgVdcInput` via:
//
//	GetVdcGroupParticipatingOrgVdcArgs{...}
type GetVdcGroupParticipatingOrgVdcInput interface {
	pulumi.Input

	ToGetVdcGroupParticipatingOrgVdcOutput() GetVdcGroupParticipatingOrgVdcOutput
	ToGetVdcGroupParticipatingOrgVdcOutputWithContext(context.Context) GetVdcGroupParticipatingOrgVdcOutput
}

type GetVdcGroupParticipatingOrgVdcArgs struct {
	// Represents the fault domain of a given organization VDC
	FaultDomainTag pulumi.StringInput `pulumi:"faultDomainTag"`
	// Specifies whether the VDC is local to this VCD site
	IsRemoteOrg pulumi.BoolInput `pulumi:"isRemoteOrg"`
	// Specifies the network provider scope of the VDC
	NetworkProviderScope pulumi.StringInput `pulumi:"networkProviderScope"`
	// Organization VDC belongs
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Organization VDC belongs
	OrgName pulumi.StringInput `pulumi:"orgName"`
	// Site VDC belongs
	SiteId pulumi.StringInput `pulumi:"siteId"`
	// Site VDC belongs
	SiteName pulumi.StringInput `pulumi:"siteName"`
	// The status that the VDC can be in e.g. 'SAVING', 'SAVED', 'CONFIGURING', 'REALIZED', 'REALIZATION_FAILED', 'DELETING', 'DELETE_FAILED', 'OBJECT_NOT_FOUND', 'UNCONFIGURED')
	Status pulumi.StringInput `pulumi:"status"`
	// VDC ID
	VdcId pulumi.StringInput `pulumi:"vdcId"`
	// VDC name
	VdcName pulumi.StringInput `pulumi:"vdcName"`
}

func (GetVdcGroupParticipatingOrgVdcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVdcGroupParticipatingOrgVdc)(nil)).Elem()
}

func (i GetVdcGroupParticipatingOrgVdcArgs) ToGetVdcGroupParticipatingOrgVdcOutput() GetVdcGroupParticipatingOrgVdcOutput {
	return i.ToGetVdcGroupParticipatingOrgVdcOutputWithContext(context.Background())
}

func (i GetVdcGroupParticipatingOrgVdcArgs) ToGetVdcGroupParticipatingOrgVdcOutputWithContext(ctx context.Context) GetVdcGroupParticipatingOrgVdcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVdcGroupParticipatingOrgVdcOutput)
}

// GetVdcGroupParticipatingOrgVdcArrayInput is an input type that accepts GetVdcGroupParticipatingOrgVdcArray and GetVdcGroupParticipatingOrgVdcArrayOutput values.
// You can construct a concrete instance of `GetVdcGroupParticipatingOrgVdcArrayInput` via:
//
//	GetVdcGroupParticipatingOrgVdcArray{ GetVdcGroupParticipatingOrgVdcArgs{...} }
type GetVdcGroupParticipatingOrgVdcArrayInput interface {
	pulumi.Input

	ToGetVdcGroupParticipatingOrgVdcArrayOutput() GetVdcGroupParticipatingOrgVdcArrayOutput
	ToGetVdcGroupParticipatingOrgVdcArrayOutputWithContext(context.Context) GetVdcGroupParticipatingOrgVdcArrayOutput
}

type GetVdcGroupParticipatingOrgVdcArray []GetVdcGroupParticipatingOrgVdcInput

func (GetVdcGroupParticipatingOrgVdcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVdcGroupParticipatingOrgVdc)(nil)).Elem()
}

func (i GetVdcGroupParticipatingOrgVdcArray) ToGetVdcGroupParticipatingOrgVdcArrayOutput() GetVdcGroupParticipatingOrgVdcArrayOutput {
	return i.ToGetVdcGroupParticipatingOrgVdcArrayOutputWithContext(context.Background())
}

func (i GetVdcGroupParticipatingOrgVdcArray) ToGetVdcGroupParticipatingOrgVdcArrayOutputWithContext(ctx context.Context) GetVdcGroupParticipatingOrgVdcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVdcGroupParticipatingOrgVdcArrayOutput)
}

type GetVdcGroupParticipatingOrgVdcOutput struct{ *pulumi.OutputState }

func (GetVdcGroupParticipatingOrgVdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVdcGroupParticipatingOrgVdc)(nil)).Elem()
}

func (o GetVdcGroupParticipatingOrgVdcOutput) ToGetVdcGroupParticipatingOrgVdcOutput() GetVdcGroupParticipatingOrgVdcOutput {
	return o
}

func (o GetVdcGroupParticipatingOrgVdcOutput) ToGetVdcGroupParticipatingOrgVdcOutputWithContext(ctx context.Context) GetVdcGroupParticipatingOrgVdcOutput {
	return o
}

// Represents the fault domain of a given organization VDC
func (o GetVdcGroupParticipatingOrgVdcOutput) FaultDomainTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdcGroupParticipatingOrgVdc) string { return v.FaultDomainTag }).(pulumi.StringOutput)
}

// Specifies whether the VDC is local to this VCD site
func (o GetVdcGroupParticipatingOrgVdcOutput) IsRemoteOrg() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVdcGroupParticipatingOrgVdc) bool { return v.IsRemoteOrg }).(pulumi.BoolOutput)
}

// Specifies the network provider scope of the VDC
func (o GetVdcGroupParticipatingOrgVdcOutput) NetworkProviderScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdcGroupParticipatingOrgVdc) string { return v.NetworkProviderScope }).(pulumi.StringOutput)
}

// Organization VDC belongs
func (o GetVdcGroupParticipatingOrgVdcOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdcGroupParticipatingOrgVdc) string { return v.OrgId }).(pulumi.StringOutput)
}

// Organization VDC belongs
func (o GetVdcGroupParticipatingOrgVdcOutput) OrgName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdcGroupParticipatingOrgVdc) string { return v.OrgName }).(pulumi.StringOutput)
}

// Site VDC belongs
func (o GetVdcGroupParticipatingOrgVdcOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdcGroupParticipatingOrgVdc) string { return v.SiteId }).(pulumi.StringOutput)
}

// Site VDC belongs
func (o GetVdcGroupParticipatingOrgVdcOutput) SiteName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdcGroupParticipatingOrgVdc) string { return v.SiteName }).(pulumi.StringOutput)
}

// The status that the VDC can be in e.g. 'SAVING', 'SAVED', 'CONFIGURING', 'REALIZED', 'REALIZATION_FAILED', 'DELETING', 'DELETE_FAILED', 'OBJECT_NOT_FOUND', 'UNCONFIGURED')
func (o GetVdcGroupParticipatingOrgVdcOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdcGroupParticipatingOrgVdc) string { return v.Status }).(pulumi.StringOutput)
}

// VDC ID
func (o GetVdcGroupParticipatingOrgVdcOutput) VdcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdcGroupParticipatingOrgVdc) string { return v.VdcId }).(pulumi.StringOutput)
}

// VDC name
func (o GetVdcGroupParticipatingOrgVdcOutput) VdcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdcGroupParticipatingOrgVdc) string { return v.VdcName }).(pulumi.StringOutput)
}

type GetVdcGroupParticipatingOrgVdcArrayOutput struct{ *pulumi.OutputState }

func (GetVdcGroupParticipatingOrgVdcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVdcGroupParticipatingOrgVdc)(nil)).Elem()
}

func (o GetVdcGroupParticipatingOrgVdcArrayOutput) ToGetVdcGroupParticipatingOrgVdcArrayOutput() GetVdcGroupParticipatingOrgVdcArrayOutput {
	return o
}

func (o GetVdcGroupParticipatingOrgVdcArrayOutput) ToGetVdcGroupParticipatingOrgVdcArrayOutputWithContext(ctx context.Context) GetVdcGroupParticipatingOrgVdcArrayOutput {
	return o
}

func (o GetVdcGroupParticipatingOrgVdcArrayOutput) Index(i pulumi.IntInput) GetVdcGroupParticipatingOrgVdcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVdcGroupParticipatingOrgVdc {
		return vs[0].([]GetVdcGroupParticipatingOrgVdc)[vs[1].(int)]
	}).(GetVdcGroupParticipatingOrgVdcOutput)
}

type GetVmBootOption struct {
	// Number of milliseconds to wait between powering-on and booting the VM
	BootDelay int `pulumi:"bootDelay"`
	// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
	BootRetryDelay int `pulumi:"bootRetryDelay"`
	// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
	BootRetryEnabled bool `pulumi:"bootRetryEnabled"`
	// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
	EfiSecureBoot bool `pulumi:"efiSecureBoot"`
	// If set to true, the VM will enter BIOS setup on boot.
	EnterBiosSetupOnNextBoot bool `pulumi:"enterBiosSetupOnNextBoot"`
}

// GetVmBootOptionInput is an input type that accepts GetVmBootOptionArgs and GetVmBootOptionOutput values.
// You can construct a concrete instance of `GetVmBootOptionInput` via:
//
//	GetVmBootOptionArgs{...}
type GetVmBootOptionInput interface {
	pulumi.Input

	ToGetVmBootOptionOutput() GetVmBootOptionOutput
	ToGetVmBootOptionOutputWithContext(context.Context) GetVmBootOptionOutput
}

type GetVmBootOptionArgs struct {
	// Number of milliseconds to wait between powering-on and booting the VM
	BootDelay pulumi.IntInput `pulumi:"bootDelay"`
	// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
	BootRetryDelay pulumi.IntInput `pulumi:"bootRetryDelay"`
	// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
	BootRetryEnabled pulumi.BoolInput `pulumi:"bootRetryEnabled"`
	// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
	EfiSecureBoot pulumi.BoolInput `pulumi:"efiSecureBoot"`
	// If set to true, the VM will enter BIOS setup on boot.
	EnterBiosSetupOnNextBoot pulumi.BoolInput `pulumi:"enterBiosSetupOnNextBoot"`
}

func (GetVmBootOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmBootOption)(nil)).Elem()
}

func (i GetVmBootOptionArgs) ToGetVmBootOptionOutput() GetVmBootOptionOutput {
	return i.ToGetVmBootOptionOutputWithContext(context.Background())
}

func (i GetVmBootOptionArgs) ToGetVmBootOptionOutputWithContext(ctx context.Context) GetVmBootOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmBootOptionOutput)
}

// GetVmBootOptionArrayInput is an input type that accepts GetVmBootOptionArray and GetVmBootOptionArrayOutput values.
// You can construct a concrete instance of `GetVmBootOptionArrayInput` via:
//
//	GetVmBootOptionArray{ GetVmBootOptionArgs{...} }
type GetVmBootOptionArrayInput interface {
	pulumi.Input

	ToGetVmBootOptionArrayOutput() GetVmBootOptionArrayOutput
	ToGetVmBootOptionArrayOutputWithContext(context.Context) GetVmBootOptionArrayOutput
}

type GetVmBootOptionArray []GetVmBootOptionInput

func (GetVmBootOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmBootOption)(nil)).Elem()
}

func (i GetVmBootOptionArray) ToGetVmBootOptionArrayOutput() GetVmBootOptionArrayOutput {
	return i.ToGetVmBootOptionArrayOutputWithContext(context.Background())
}

func (i GetVmBootOptionArray) ToGetVmBootOptionArrayOutputWithContext(ctx context.Context) GetVmBootOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmBootOptionArrayOutput)
}

type GetVmBootOptionOutput struct{ *pulumi.OutputState }

func (GetVmBootOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmBootOption)(nil)).Elem()
}

func (o GetVmBootOptionOutput) ToGetVmBootOptionOutput() GetVmBootOptionOutput {
	return o
}

func (o GetVmBootOptionOutput) ToGetVmBootOptionOutputWithContext(ctx context.Context) GetVmBootOptionOutput {
	return o
}

// Number of milliseconds to wait between powering-on and booting the VM
func (o GetVmBootOptionOutput) BootDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmBootOption) int { return v.BootDelay }).(pulumi.IntOutput)
}

// Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
func (o GetVmBootOptionOutput) BootRetryDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmBootOption) int { return v.BootRetryDelay }).(pulumi.IntOutput)
}

// If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
func (o GetVmBootOptionOutput) BootRetryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmBootOption) bool { return v.BootRetryEnabled }).(pulumi.BoolOutput)
}

// If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
func (o GetVmBootOptionOutput) EfiSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmBootOption) bool { return v.EfiSecureBoot }).(pulumi.BoolOutput)
}

// If set to true, the VM will enter BIOS setup on boot.
func (o GetVmBootOptionOutput) EnterBiosSetupOnNextBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmBootOption) bool { return v.EnterBiosSetupOnNextBoot }).(pulumi.BoolOutput)
}

type GetVmBootOptionArrayOutput struct{ *pulumi.OutputState }

func (GetVmBootOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmBootOption)(nil)).Elem()
}

func (o GetVmBootOptionArrayOutput) ToGetVmBootOptionArrayOutput() GetVmBootOptionArrayOutput {
	return o
}

func (o GetVmBootOptionArrayOutput) ToGetVmBootOptionArrayOutputWithContext(ctx context.Context) GetVmBootOptionArrayOutput {
	return o
}

func (o GetVmBootOptionArrayOutput) Index(i pulumi.IntInput) GetVmBootOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmBootOption {
		return vs[0].([]GetVmBootOption)[vs[1].(int)]
	}).(GetVmBootOptionOutput)
}

type GetVmCustomization struct {
	// Manually specify admin password
	AdminPassword string `pulumi:"adminPassword"`
	// Allow local administrator password
	AllowLocalAdminPassword bool `pulumi:"allowLocalAdminPassword"`
	// Auto generate password
	AutoGeneratePassword bool `pulumi:"autoGeneratePassword"`
	// 'true' value will change SID. Applicable only for Windows VMs
	ChangeSid bool `pulumi:"changeSid"`
	// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
	Enabled bool `pulumi:"enabled"`
	// 'true' value will cause the VM to reboot on every 'apply' operation
	Force bool `pulumi:"force"`
	// Script to run on initial boot or with customization.force=true set
	Initscript string `pulumi:"initscript"`
	// Enable this VM to join a domain
	JoinDomain bool `pulumi:"joinDomain"`
	// Account organizational unit for domain name join
	JoinDomainAccountOu string `pulumi:"joinDomainAccountOu"`
	// Custom domain name for join
	JoinDomainName string `pulumi:"joinDomainName"`
	// Password for custom domain name join
	JoinDomainPassword string `pulumi:"joinDomainPassword"`
	// Username for custom domain name join
	JoinDomainUser string `pulumi:"joinDomainUser"`
	// Use organization's domain for joining
	JoinOrgDomain bool `pulumi:"joinOrgDomain"`
	// Require Administrator to change password on first login
	MustChangePasswordOnFirstLogin bool `pulumi:"mustChangePasswordOnFirstLogin"`
	// Number of times to log on automatically
	NumberOfAutoLogons int `pulumi:"numberOfAutoLogons"`
}

// GetVmCustomizationInput is an input type that accepts GetVmCustomizationArgs and GetVmCustomizationOutput values.
// You can construct a concrete instance of `GetVmCustomizationInput` via:
//
//	GetVmCustomizationArgs{...}
type GetVmCustomizationInput interface {
	pulumi.Input

	ToGetVmCustomizationOutput() GetVmCustomizationOutput
	ToGetVmCustomizationOutputWithContext(context.Context) GetVmCustomizationOutput
}

type GetVmCustomizationArgs struct {
	// Manually specify admin password
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	// Allow local administrator password
	AllowLocalAdminPassword pulumi.BoolInput `pulumi:"allowLocalAdminPassword"`
	// Auto generate password
	AutoGeneratePassword pulumi.BoolInput `pulumi:"autoGeneratePassword"`
	// 'true' value will change SID. Applicable only for Windows VMs
	ChangeSid pulumi.BoolInput `pulumi:"changeSid"`
	// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// 'true' value will cause the VM to reboot on every 'apply' operation
	Force pulumi.BoolInput `pulumi:"force"`
	// Script to run on initial boot or with customization.force=true set
	Initscript pulumi.StringInput `pulumi:"initscript"`
	// Enable this VM to join a domain
	JoinDomain pulumi.BoolInput `pulumi:"joinDomain"`
	// Account organizational unit for domain name join
	JoinDomainAccountOu pulumi.StringInput `pulumi:"joinDomainAccountOu"`
	// Custom domain name for join
	JoinDomainName pulumi.StringInput `pulumi:"joinDomainName"`
	// Password for custom domain name join
	JoinDomainPassword pulumi.StringInput `pulumi:"joinDomainPassword"`
	// Username for custom domain name join
	JoinDomainUser pulumi.StringInput `pulumi:"joinDomainUser"`
	// Use organization's domain for joining
	JoinOrgDomain pulumi.BoolInput `pulumi:"joinOrgDomain"`
	// Require Administrator to change password on first login
	MustChangePasswordOnFirstLogin pulumi.BoolInput `pulumi:"mustChangePasswordOnFirstLogin"`
	// Number of times to log on automatically
	NumberOfAutoLogons pulumi.IntInput `pulumi:"numberOfAutoLogons"`
}

func (GetVmCustomizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmCustomization)(nil)).Elem()
}

func (i GetVmCustomizationArgs) ToGetVmCustomizationOutput() GetVmCustomizationOutput {
	return i.ToGetVmCustomizationOutputWithContext(context.Background())
}

func (i GetVmCustomizationArgs) ToGetVmCustomizationOutputWithContext(ctx context.Context) GetVmCustomizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmCustomizationOutput)
}

// GetVmCustomizationArrayInput is an input type that accepts GetVmCustomizationArray and GetVmCustomizationArrayOutput values.
// You can construct a concrete instance of `GetVmCustomizationArrayInput` via:
//
//	GetVmCustomizationArray{ GetVmCustomizationArgs{...} }
type GetVmCustomizationArrayInput interface {
	pulumi.Input

	ToGetVmCustomizationArrayOutput() GetVmCustomizationArrayOutput
	ToGetVmCustomizationArrayOutputWithContext(context.Context) GetVmCustomizationArrayOutput
}

type GetVmCustomizationArray []GetVmCustomizationInput

func (GetVmCustomizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmCustomization)(nil)).Elem()
}

func (i GetVmCustomizationArray) ToGetVmCustomizationArrayOutput() GetVmCustomizationArrayOutput {
	return i.ToGetVmCustomizationArrayOutputWithContext(context.Background())
}

func (i GetVmCustomizationArray) ToGetVmCustomizationArrayOutputWithContext(ctx context.Context) GetVmCustomizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmCustomizationArrayOutput)
}

type GetVmCustomizationOutput struct{ *pulumi.OutputState }

func (GetVmCustomizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmCustomization)(nil)).Elem()
}

func (o GetVmCustomizationOutput) ToGetVmCustomizationOutput() GetVmCustomizationOutput {
	return o
}

func (o GetVmCustomizationOutput) ToGetVmCustomizationOutputWithContext(ctx context.Context) GetVmCustomizationOutput {
	return o
}

// Manually specify admin password
func (o GetVmCustomizationOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmCustomization) string { return v.AdminPassword }).(pulumi.StringOutput)
}

// Allow local administrator password
func (o GetVmCustomizationOutput) AllowLocalAdminPassword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmCustomization) bool { return v.AllowLocalAdminPassword }).(pulumi.BoolOutput)
}

// Auto generate password
func (o GetVmCustomizationOutput) AutoGeneratePassword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmCustomization) bool { return v.AutoGeneratePassword }).(pulumi.BoolOutput)
}

// 'true' value will change SID. Applicable only for Windows VMs
func (o GetVmCustomizationOutput) ChangeSid() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmCustomization) bool { return v.ChangeSid }).(pulumi.BoolOutput)
}

// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
func (o GetVmCustomizationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmCustomization) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// 'true' value will cause the VM to reboot on every 'apply' operation
func (o GetVmCustomizationOutput) Force() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmCustomization) bool { return v.Force }).(pulumi.BoolOutput)
}

// Script to run on initial boot or with customization.force=true set
func (o GetVmCustomizationOutput) Initscript() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmCustomization) string { return v.Initscript }).(pulumi.StringOutput)
}

// Enable this VM to join a domain
func (o GetVmCustomizationOutput) JoinDomain() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmCustomization) bool { return v.JoinDomain }).(pulumi.BoolOutput)
}

// Account organizational unit for domain name join
func (o GetVmCustomizationOutput) JoinDomainAccountOu() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmCustomization) string { return v.JoinDomainAccountOu }).(pulumi.StringOutput)
}

// Custom domain name for join
func (o GetVmCustomizationOutput) JoinDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmCustomization) string { return v.JoinDomainName }).(pulumi.StringOutput)
}

// Password for custom domain name join
func (o GetVmCustomizationOutput) JoinDomainPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmCustomization) string { return v.JoinDomainPassword }).(pulumi.StringOutput)
}

// Username for custom domain name join
func (o GetVmCustomizationOutput) JoinDomainUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmCustomization) string { return v.JoinDomainUser }).(pulumi.StringOutput)
}

// Use organization's domain for joining
func (o GetVmCustomizationOutput) JoinOrgDomain() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmCustomization) bool { return v.JoinOrgDomain }).(pulumi.BoolOutput)
}

// Require Administrator to change password on first login
func (o GetVmCustomizationOutput) MustChangePasswordOnFirstLogin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmCustomization) bool { return v.MustChangePasswordOnFirstLogin }).(pulumi.BoolOutput)
}

// Number of times to log on automatically
func (o GetVmCustomizationOutput) NumberOfAutoLogons() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmCustomization) int { return v.NumberOfAutoLogons }).(pulumi.IntOutput)
}

type GetVmCustomizationArrayOutput struct{ *pulumi.OutputState }

func (GetVmCustomizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmCustomization)(nil)).Elem()
}

func (o GetVmCustomizationArrayOutput) ToGetVmCustomizationArrayOutput() GetVmCustomizationArrayOutput {
	return o
}

func (o GetVmCustomizationArrayOutput) ToGetVmCustomizationArrayOutputWithContext(ctx context.Context) GetVmCustomizationArrayOutput {
	return o
}

func (o GetVmCustomizationArrayOutput) Index(i pulumi.IntInput) GetVmCustomizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmCustomization {
		return vs[0].([]GetVmCustomization)[vs[1].(int)]
	}).(GetVmCustomizationOutput)
}

type GetVmDisk struct {
	// Bus number on which to place the disk controller
	BusNumber string `pulumi:"busNumber"`
	// A name or ID for the standalone VM in VDC
	Name string `pulumi:"name"`
	// The size of the disk in MB.
	SizeInMb int `pulumi:"sizeInMb"`
	// Unit number (slot) on the bus specified by BusNumber
	UnitNumber string `pulumi:"unitNumber"`
}

// GetVmDiskInput is an input type that accepts GetVmDiskArgs and GetVmDiskOutput values.
// You can construct a concrete instance of `GetVmDiskInput` via:
//
//	GetVmDiskArgs{...}
type GetVmDiskInput interface {
	pulumi.Input

	ToGetVmDiskOutput() GetVmDiskOutput
	ToGetVmDiskOutputWithContext(context.Context) GetVmDiskOutput
}

type GetVmDiskArgs struct {
	// Bus number on which to place the disk controller
	BusNumber pulumi.StringInput `pulumi:"busNumber"`
	// A name or ID for the standalone VM in VDC
	Name pulumi.StringInput `pulumi:"name"`
	// The size of the disk in MB.
	SizeInMb pulumi.IntInput `pulumi:"sizeInMb"`
	// Unit number (slot) on the bus specified by BusNumber
	UnitNumber pulumi.StringInput `pulumi:"unitNumber"`
}

func (GetVmDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmDisk)(nil)).Elem()
}

func (i GetVmDiskArgs) ToGetVmDiskOutput() GetVmDiskOutput {
	return i.ToGetVmDiskOutputWithContext(context.Background())
}

func (i GetVmDiskArgs) ToGetVmDiskOutputWithContext(ctx context.Context) GetVmDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmDiskOutput)
}

// GetVmDiskArrayInput is an input type that accepts GetVmDiskArray and GetVmDiskArrayOutput values.
// You can construct a concrete instance of `GetVmDiskArrayInput` via:
//
//	GetVmDiskArray{ GetVmDiskArgs{...} }
type GetVmDiskArrayInput interface {
	pulumi.Input

	ToGetVmDiskArrayOutput() GetVmDiskArrayOutput
	ToGetVmDiskArrayOutputWithContext(context.Context) GetVmDiskArrayOutput
}

type GetVmDiskArray []GetVmDiskInput

func (GetVmDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmDisk)(nil)).Elem()
}

func (i GetVmDiskArray) ToGetVmDiskArrayOutput() GetVmDiskArrayOutput {
	return i.ToGetVmDiskArrayOutputWithContext(context.Background())
}

func (i GetVmDiskArray) ToGetVmDiskArrayOutputWithContext(ctx context.Context) GetVmDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmDiskArrayOutput)
}

type GetVmDiskOutput struct{ *pulumi.OutputState }

func (GetVmDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmDisk)(nil)).Elem()
}

func (o GetVmDiskOutput) ToGetVmDiskOutput() GetVmDiskOutput {
	return o
}

func (o GetVmDiskOutput) ToGetVmDiskOutputWithContext(ctx context.Context) GetVmDiskOutput {
	return o
}

// Bus number on which to place the disk controller
func (o GetVmDiskOutput) BusNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmDisk) string { return v.BusNumber }).(pulumi.StringOutput)
}

// A name or ID for the standalone VM in VDC
func (o GetVmDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmDisk) string { return v.Name }).(pulumi.StringOutput)
}

// The size of the disk in MB.
func (o GetVmDiskOutput) SizeInMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmDisk) int { return v.SizeInMb }).(pulumi.IntOutput)
}

// Unit number (slot) on the bus specified by BusNumber
func (o GetVmDiskOutput) UnitNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmDisk) string { return v.UnitNumber }).(pulumi.StringOutput)
}

type GetVmDiskArrayOutput struct{ *pulumi.OutputState }

func (GetVmDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmDisk)(nil)).Elem()
}

func (o GetVmDiskArrayOutput) ToGetVmDiskArrayOutput() GetVmDiskArrayOutput {
	return o
}

func (o GetVmDiskArrayOutput) ToGetVmDiskArrayOutputWithContext(ctx context.Context) GetVmDiskArrayOutput {
	return o
}

func (o GetVmDiskArrayOutput) Index(i pulumi.IntInput) GetVmDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmDisk {
		return vs[0].([]GetVmDisk)[vs[1].(int)]
	}).(GetVmDiskOutput)
}

type GetVmExtraConfig struct {
	// The key of the extra configuration item
	Key string `pulumi:"key"`
	// Whether the extra configuration item is required
	Required bool `pulumi:"required"`
	// The value of the extra configuration item
	Value string `pulumi:"value"`
}

// GetVmExtraConfigInput is an input type that accepts GetVmExtraConfigArgs and GetVmExtraConfigOutput values.
// You can construct a concrete instance of `GetVmExtraConfigInput` via:
//
//	GetVmExtraConfigArgs{...}
type GetVmExtraConfigInput interface {
	pulumi.Input

	ToGetVmExtraConfigOutput() GetVmExtraConfigOutput
	ToGetVmExtraConfigOutputWithContext(context.Context) GetVmExtraConfigOutput
}

type GetVmExtraConfigArgs struct {
	// The key of the extra configuration item
	Key pulumi.StringInput `pulumi:"key"`
	// Whether the extra configuration item is required
	Required pulumi.BoolInput `pulumi:"required"`
	// The value of the extra configuration item
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVmExtraConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmExtraConfig)(nil)).Elem()
}

func (i GetVmExtraConfigArgs) ToGetVmExtraConfigOutput() GetVmExtraConfigOutput {
	return i.ToGetVmExtraConfigOutputWithContext(context.Background())
}

func (i GetVmExtraConfigArgs) ToGetVmExtraConfigOutputWithContext(ctx context.Context) GetVmExtraConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmExtraConfigOutput)
}

// GetVmExtraConfigArrayInput is an input type that accepts GetVmExtraConfigArray and GetVmExtraConfigArrayOutput values.
// You can construct a concrete instance of `GetVmExtraConfigArrayInput` via:
//
//	GetVmExtraConfigArray{ GetVmExtraConfigArgs{...} }
type GetVmExtraConfigArrayInput interface {
	pulumi.Input

	ToGetVmExtraConfigArrayOutput() GetVmExtraConfigArrayOutput
	ToGetVmExtraConfigArrayOutputWithContext(context.Context) GetVmExtraConfigArrayOutput
}

type GetVmExtraConfigArray []GetVmExtraConfigInput

func (GetVmExtraConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmExtraConfig)(nil)).Elem()
}

func (i GetVmExtraConfigArray) ToGetVmExtraConfigArrayOutput() GetVmExtraConfigArrayOutput {
	return i.ToGetVmExtraConfigArrayOutputWithContext(context.Background())
}

func (i GetVmExtraConfigArray) ToGetVmExtraConfigArrayOutputWithContext(ctx context.Context) GetVmExtraConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmExtraConfigArrayOutput)
}

type GetVmExtraConfigOutput struct{ *pulumi.OutputState }

func (GetVmExtraConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmExtraConfig)(nil)).Elem()
}

func (o GetVmExtraConfigOutput) ToGetVmExtraConfigOutput() GetVmExtraConfigOutput {
	return o
}

func (o GetVmExtraConfigOutput) ToGetVmExtraConfigOutputWithContext(ctx context.Context) GetVmExtraConfigOutput {
	return o
}

// The key of the extra configuration item
func (o GetVmExtraConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmExtraConfig) string { return v.Key }).(pulumi.StringOutput)
}

// Whether the extra configuration item is required
func (o GetVmExtraConfigOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmExtraConfig) bool { return v.Required }).(pulumi.BoolOutput)
}

// The value of the extra configuration item
func (o GetVmExtraConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmExtraConfig) string { return v.Value }).(pulumi.StringOutput)
}

type GetVmExtraConfigArrayOutput struct{ *pulumi.OutputState }

func (GetVmExtraConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmExtraConfig)(nil)).Elem()
}

func (o GetVmExtraConfigArrayOutput) ToGetVmExtraConfigArrayOutput() GetVmExtraConfigArrayOutput {
	return o
}

func (o GetVmExtraConfigArrayOutput) ToGetVmExtraConfigArrayOutputWithContext(ctx context.Context) GetVmExtraConfigArrayOutput {
	return o
}

func (o GetVmExtraConfigArrayOutput) Index(i pulumi.IntInput) GetVmExtraConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmExtraConfig {
		return vs[0].([]GetVmExtraConfig)[vs[1].(int)]
	}).(GetVmExtraConfigOutput)
}

type GetVmInternalDiskType struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber int `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType string `pulumi:"busType"`
	// The disk ID.
	DiskId string `pulumi:"diskId"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops int `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb int `pulumi:"sizeInMb"`
	// Storage profile to override the VM default one
	StorageProfile string `pulumi:"storageProfile"`
	// Specifies whether the disk storage is pre-allocated or allocated on demand.
	ThinProvisioned bool `pulumi:"thinProvisioned"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber int `pulumi:"unitNumber"`
}

// GetVmInternalDiskTypeInput is an input type that accepts GetVmInternalDiskTypeArgs and GetVmInternalDiskTypeOutput values.
// You can construct a concrete instance of `GetVmInternalDiskTypeInput` via:
//
//	GetVmInternalDiskTypeArgs{...}
type GetVmInternalDiskTypeInput interface {
	pulumi.Input

	ToGetVmInternalDiskTypeOutput() GetVmInternalDiskTypeOutput
	ToGetVmInternalDiskTypeOutputWithContext(context.Context) GetVmInternalDiskTypeOutput
}

type GetVmInternalDiskTypeArgs struct {
	// The number of the SCSI or IDE controller itself.
	BusNumber pulumi.IntInput `pulumi:"busNumber"`
	// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
	BusType pulumi.StringInput `pulumi:"busType"`
	// The disk ID.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// Specifies the IOPS for the disk. Default is 0.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The size of the disk in MB.
	SizeInMb pulumi.IntInput `pulumi:"sizeInMb"`
	// Storage profile to override the VM default one
	StorageProfile pulumi.StringInput `pulumi:"storageProfile"`
	// Specifies whether the disk storage is pre-allocated or allocated on demand.
	ThinProvisioned pulumi.BoolInput `pulumi:"thinProvisioned"`
	// The device number on the SCSI or IDE controller of the disk.
	UnitNumber pulumi.IntInput `pulumi:"unitNumber"`
}

func (GetVmInternalDiskTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmInternalDiskType)(nil)).Elem()
}

func (i GetVmInternalDiskTypeArgs) ToGetVmInternalDiskTypeOutput() GetVmInternalDiskTypeOutput {
	return i.ToGetVmInternalDiskTypeOutputWithContext(context.Background())
}

func (i GetVmInternalDiskTypeArgs) ToGetVmInternalDiskTypeOutputWithContext(ctx context.Context) GetVmInternalDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmInternalDiskTypeOutput)
}

// GetVmInternalDiskTypeArrayInput is an input type that accepts GetVmInternalDiskTypeArray and GetVmInternalDiskTypeArrayOutput values.
// You can construct a concrete instance of `GetVmInternalDiskTypeArrayInput` via:
//
//	GetVmInternalDiskTypeArray{ GetVmInternalDiskTypeArgs{...} }
type GetVmInternalDiskTypeArrayInput interface {
	pulumi.Input

	ToGetVmInternalDiskTypeArrayOutput() GetVmInternalDiskTypeArrayOutput
	ToGetVmInternalDiskTypeArrayOutputWithContext(context.Context) GetVmInternalDiskTypeArrayOutput
}

type GetVmInternalDiskTypeArray []GetVmInternalDiskTypeInput

func (GetVmInternalDiskTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmInternalDiskType)(nil)).Elem()
}

func (i GetVmInternalDiskTypeArray) ToGetVmInternalDiskTypeArrayOutput() GetVmInternalDiskTypeArrayOutput {
	return i.ToGetVmInternalDiskTypeArrayOutputWithContext(context.Background())
}

func (i GetVmInternalDiskTypeArray) ToGetVmInternalDiskTypeArrayOutputWithContext(ctx context.Context) GetVmInternalDiskTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmInternalDiskTypeArrayOutput)
}

type GetVmInternalDiskTypeOutput struct{ *pulumi.OutputState }

func (GetVmInternalDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmInternalDiskType)(nil)).Elem()
}

func (o GetVmInternalDiskTypeOutput) ToGetVmInternalDiskTypeOutput() GetVmInternalDiskTypeOutput {
	return o
}

func (o GetVmInternalDiskTypeOutput) ToGetVmInternalDiskTypeOutputWithContext(ctx context.Context) GetVmInternalDiskTypeOutput {
	return o
}

// The number of the SCSI or IDE controller itself.
func (o GetVmInternalDiskTypeOutput) BusNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmInternalDiskType) int { return v.BusNumber }).(pulumi.IntOutput)
}

// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
func (o GetVmInternalDiskTypeOutput) BusType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmInternalDiskType) string { return v.BusType }).(pulumi.StringOutput)
}

// The disk ID.
func (o GetVmInternalDiskTypeOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmInternalDiskType) string { return v.DiskId }).(pulumi.StringOutput)
}

// Specifies the IOPS for the disk. Default is 0.
func (o GetVmInternalDiskTypeOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmInternalDiskType) int { return v.Iops }).(pulumi.IntOutput)
}

// The size of the disk in MB.
func (o GetVmInternalDiskTypeOutput) SizeInMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmInternalDiskType) int { return v.SizeInMb }).(pulumi.IntOutput)
}

// Storage profile to override the VM default one
func (o GetVmInternalDiskTypeOutput) StorageProfile() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmInternalDiskType) string { return v.StorageProfile }).(pulumi.StringOutput)
}

// Specifies whether the disk storage is pre-allocated or allocated on demand.
func (o GetVmInternalDiskTypeOutput) ThinProvisioned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmInternalDiskType) bool { return v.ThinProvisioned }).(pulumi.BoolOutput)
}

// The device number on the SCSI or IDE controller of the disk.
func (o GetVmInternalDiskTypeOutput) UnitNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmInternalDiskType) int { return v.UnitNumber }).(pulumi.IntOutput)
}

type GetVmInternalDiskTypeArrayOutput struct{ *pulumi.OutputState }

func (GetVmInternalDiskTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmInternalDiskType)(nil)).Elem()
}

func (o GetVmInternalDiskTypeArrayOutput) ToGetVmInternalDiskTypeArrayOutput() GetVmInternalDiskTypeArrayOutput {
	return o
}

func (o GetVmInternalDiskTypeArrayOutput) ToGetVmInternalDiskTypeArrayOutputWithContext(ctx context.Context) GetVmInternalDiskTypeArrayOutput {
	return o
}

func (o GetVmInternalDiskTypeArrayOutput) Index(i pulumi.IntInput) GetVmInternalDiskTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmInternalDiskType {
		return vs[0].([]GetVmInternalDiskType)[vs[1].(int)]
	}).(GetVmInternalDiskTypeOutput)
}

type GetVmMetadataEntry struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem bool `pulumi:"isSystem"`
	// Key of this metadata entry
	Key string `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type string `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess string `pulumi:"userAccess"`
	// Value of this metadata entry
	Value string `pulumi:"value"`
}

// GetVmMetadataEntryInput is an input type that accepts GetVmMetadataEntryArgs and GetVmMetadataEntryOutput values.
// You can construct a concrete instance of `GetVmMetadataEntryInput` via:
//
//	GetVmMetadataEntryArgs{...}
type GetVmMetadataEntryInput interface {
	pulumi.Input

	ToGetVmMetadataEntryOutput() GetVmMetadataEntryOutput
	ToGetVmMetadataEntryOutputWithContext(context.Context) GetVmMetadataEntryOutput
}

type GetVmMetadataEntryArgs struct {
	// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
	IsSystem pulumi.BoolInput `pulumi:"isSystem"`
	// Key of this metadata entry
	Key pulumi.StringInput `pulumi:"key"`
	// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
	Type pulumi.StringInput `pulumi:"type"`
	// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
	// Value of this metadata entry
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVmMetadataEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmMetadataEntry)(nil)).Elem()
}

func (i GetVmMetadataEntryArgs) ToGetVmMetadataEntryOutput() GetVmMetadataEntryOutput {
	return i.ToGetVmMetadataEntryOutputWithContext(context.Background())
}

func (i GetVmMetadataEntryArgs) ToGetVmMetadataEntryOutputWithContext(ctx context.Context) GetVmMetadataEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmMetadataEntryOutput)
}

// GetVmMetadataEntryArrayInput is an input type that accepts GetVmMetadataEntryArray and GetVmMetadataEntryArrayOutput values.
// You can construct a concrete instance of `GetVmMetadataEntryArrayInput` via:
//
//	GetVmMetadataEntryArray{ GetVmMetadataEntryArgs{...} }
type GetVmMetadataEntryArrayInput interface {
	pulumi.Input

	ToGetVmMetadataEntryArrayOutput() GetVmMetadataEntryArrayOutput
	ToGetVmMetadataEntryArrayOutputWithContext(context.Context) GetVmMetadataEntryArrayOutput
}

type GetVmMetadataEntryArray []GetVmMetadataEntryInput

func (GetVmMetadataEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmMetadataEntry)(nil)).Elem()
}

func (i GetVmMetadataEntryArray) ToGetVmMetadataEntryArrayOutput() GetVmMetadataEntryArrayOutput {
	return i.ToGetVmMetadataEntryArrayOutputWithContext(context.Background())
}

func (i GetVmMetadataEntryArray) ToGetVmMetadataEntryArrayOutputWithContext(ctx context.Context) GetVmMetadataEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmMetadataEntryArrayOutput)
}

type GetVmMetadataEntryOutput struct{ *pulumi.OutputState }

func (GetVmMetadataEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmMetadataEntry)(nil)).Elem()
}

func (o GetVmMetadataEntryOutput) ToGetVmMetadataEntryOutput() GetVmMetadataEntryOutput {
	return o
}

func (o GetVmMetadataEntryOutput) ToGetVmMetadataEntryOutputWithContext(ctx context.Context) GetVmMetadataEntryOutput {
	return o
}

// Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
func (o GetVmMetadataEntryOutput) IsSystem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmMetadataEntry) bool { return v.IsSystem }).(pulumi.BoolOutput)
}

// Key of this metadata entry
func (o GetVmMetadataEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmMetadataEntry) string { return v.Key }).(pulumi.StringOutput)
}

// Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
func (o GetVmMetadataEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmMetadataEntry) string { return v.Type }).(pulumi.StringOutput)
}

// User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
func (o GetVmMetadataEntryOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmMetadataEntry) string { return v.UserAccess }).(pulumi.StringOutput)
}

// Value of this metadata entry
func (o GetVmMetadataEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmMetadataEntry) string { return v.Value }).(pulumi.StringOutput)
}

type GetVmMetadataEntryArrayOutput struct{ *pulumi.OutputState }

func (GetVmMetadataEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmMetadataEntry)(nil)).Elem()
}

func (o GetVmMetadataEntryArrayOutput) ToGetVmMetadataEntryArrayOutput() GetVmMetadataEntryArrayOutput {
	return o
}

func (o GetVmMetadataEntryArrayOutput) ToGetVmMetadataEntryArrayOutputWithContext(ctx context.Context) GetVmMetadataEntryArrayOutput {
	return o
}

func (o GetVmMetadataEntryArrayOutput) Index(i pulumi.IntInput) GetVmMetadataEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmMetadataEntry {
		return vs[0].([]GetVmMetadataEntry)[vs[1].(int)]
	}).(GetVmMetadataEntryOutput)
}

type GetVmNetwork struct {
	// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
	AdapterType string `pulumi:"adapterType"`
	// It defines if NIC is connected or not.
	Connected bool `pulumi:"connected"`
	// IP of the VM. Settings depend on `ipAllocationMode`
	Ip string `pulumi:"ip"`
	// IP address allocation mode.
	IpAllocationMode string `pulumi:"ipAllocationMode"`
	// Set to true if network interface should be primary. First network card in the list will be primary by default
	IsPrimary bool `pulumi:"isPrimary"`
	// Mac address of network interface
	Mac string `pulumi:"mac"`
	// A name or ID for the standalone VM in VDC
	Name string `pulumi:"name"`
	// Secondary (IPv6) IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	SecondaryIp string `pulumi:"secondaryIp"`
	// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	SecondaryIpAllocationMode string `pulumi:"secondaryIpAllocationMode"`
	// Network type
	Type string `pulumi:"type"`
}

// GetVmNetworkInput is an input type that accepts GetVmNetworkArgs and GetVmNetworkOutput values.
// You can construct a concrete instance of `GetVmNetworkInput` via:
//
//	GetVmNetworkArgs{...}
type GetVmNetworkInput interface {
	pulumi.Input

	ToGetVmNetworkOutput() GetVmNetworkOutput
	ToGetVmNetworkOutputWithContext(context.Context) GetVmNetworkOutput
}

type GetVmNetworkArgs struct {
	// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
	AdapterType pulumi.StringInput `pulumi:"adapterType"`
	// It defines if NIC is connected or not.
	Connected pulumi.BoolInput `pulumi:"connected"`
	// IP of the VM. Settings depend on `ipAllocationMode`
	Ip pulumi.StringInput `pulumi:"ip"`
	// IP address allocation mode.
	IpAllocationMode pulumi.StringInput `pulumi:"ipAllocationMode"`
	// Set to true if network interface should be primary. First network card in the list will be primary by default
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
	// Mac address of network interface
	Mac pulumi.StringInput `pulumi:"mac"`
	// A name or ID for the standalone VM in VDC
	Name pulumi.StringInput `pulumi:"name"`
	// Secondary (IPv6) IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
	SecondaryIp pulumi.StringInput `pulumi:"secondaryIp"`
	// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
	SecondaryIpAllocationMode pulumi.StringInput `pulumi:"secondaryIpAllocationMode"`
	// Network type
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetVmNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNetwork)(nil)).Elem()
}

func (i GetVmNetworkArgs) ToGetVmNetworkOutput() GetVmNetworkOutput {
	return i.ToGetVmNetworkOutputWithContext(context.Background())
}

func (i GetVmNetworkArgs) ToGetVmNetworkOutputWithContext(ctx context.Context) GetVmNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNetworkOutput)
}

// GetVmNetworkArrayInput is an input type that accepts GetVmNetworkArray and GetVmNetworkArrayOutput values.
// You can construct a concrete instance of `GetVmNetworkArrayInput` via:
//
//	GetVmNetworkArray{ GetVmNetworkArgs{...} }
type GetVmNetworkArrayInput interface {
	pulumi.Input

	ToGetVmNetworkArrayOutput() GetVmNetworkArrayOutput
	ToGetVmNetworkArrayOutputWithContext(context.Context) GetVmNetworkArrayOutput
}

type GetVmNetworkArray []GetVmNetworkInput

func (GetVmNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNetwork)(nil)).Elem()
}

func (i GetVmNetworkArray) ToGetVmNetworkArrayOutput() GetVmNetworkArrayOutput {
	return i.ToGetVmNetworkArrayOutputWithContext(context.Background())
}

func (i GetVmNetworkArray) ToGetVmNetworkArrayOutputWithContext(ctx context.Context) GetVmNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmNetworkArrayOutput)
}

type GetVmNetworkOutput struct{ *pulumi.OutputState }

func (GetVmNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmNetwork)(nil)).Elem()
}

func (o GetVmNetworkOutput) ToGetVmNetworkOutput() GetVmNetworkOutput {
	return o
}

func (o GetVmNetworkOutput) ToGetVmNetworkOutputWithContext(ctx context.Context) GetVmNetworkOutput {
	return o
}

// Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
func (o GetVmNetworkOutput) AdapterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNetwork) string { return v.AdapterType }).(pulumi.StringOutput)
}

// It defines if NIC is connected or not.
func (o GetVmNetworkOutput) Connected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmNetwork) bool { return v.Connected }).(pulumi.BoolOutput)
}

// IP of the VM. Settings depend on `ipAllocationMode`
func (o GetVmNetworkOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNetwork) string { return v.Ip }).(pulumi.StringOutput)
}

// IP address allocation mode.
func (o GetVmNetworkOutput) IpAllocationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNetwork) string { return v.IpAllocationMode }).(pulumi.StringOutput)
}

// Set to true if network interface should be primary. First network card in the list will be primary by default
func (o GetVmNetworkOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmNetwork) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

// Mac address of network interface
func (o GetVmNetworkOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNetwork) string { return v.Mac }).(pulumi.StringOutput)
}

// A name or ID for the standalone VM in VDC
func (o GetVmNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// Secondary (IPv6) IP of the VM. Settings depend on `ipAllocationMode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
func (o GetVmNetworkOutput) SecondaryIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNetwork) string { return v.SecondaryIp }).(pulumi.StringOutput)
}

// Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
func (o GetVmNetworkOutput) SecondaryIpAllocationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNetwork) string { return v.SecondaryIpAllocationMode }).(pulumi.StringOutput)
}

// Network type
func (o GetVmNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmNetwork) string { return v.Type }).(pulumi.StringOutput)
}

type GetVmNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetVmNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmNetwork)(nil)).Elem()
}

func (o GetVmNetworkArrayOutput) ToGetVmNetworkArrayOutput() GetVmNetworkArrayOutput {
	return o
}

func (o GetVmNetworkArrayOutput) ToGetVmNetworkArrayOutputWithContext(ctx context.Context) GetVmNetworkArrayOutput {
	return o
}

func (o GetVmNetworkArrayOutput) Index(i pulumi.IntInput) GetVmNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmNetwork {
		return vs[0].([]GetVmNetwork)[vs[1].(int)]
	}).(GetVmNetworkOutput)
}

type GetVmSizingPolicyCpus struct {
	// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
	CoresPerSocket string `pulumi:"coresPerSocket"`
	// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
	Count string `pulumi:"count"`
	// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs.
	LimitInMhz string `pulumi:"limitInMhz"`
	// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
	ReservationGuarantee string `pulumi:"reservationGuarantee"`
	// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares string `pulumi:"shares"`
	// Defines the vCPU speed of a core in MHz.
	SpeedInMhz string `pulumi:"speedInMhz"`
}

// GetVmSizingPolicyCpusInput is an input type that accepts GetVmSizingPolicyCpusArgs and GetVmSizingPolicyCpusOutput values.
// You can construct a concrete instance of `GetVmSizingPolicyCpusInput` via:
//
//	GetVmSizingPolicyCpusArgs{...}
type GetVmSizingPolicyCpusInput interface {
	pulumi.Input

	ToGetVmSizingPolicyCpusOutput() GetVmSizingPolicyCpusOutput
	ToGetVmSizingPolicyCpusOutputWithContext(context.Context) GetVmSizingPolicyCpusOutput
}

type GetVmSizingPolicyCpusArgs struct {
	// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
	CoresPerSocket pulumi.StringInput `pulumi:"coresPerSocket"`
	// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
	Count pulumi.StringInput `pulumi:"count"`
	// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs.
	LimitInMhz pulumi.StringInput `pulumi:"limitInMhz"`
	// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
	ReservationGuarantee pulumi.StringInput `pulumi:"reservationGuarantee"`
	// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares pulumi.StringInput `pulumi:"shares"`
	// Defines the vCPU speed of a core in MHz.
	SpeedInMhz pulumi.StringInput `pulumi:"speedInMhz"`
}

func (GetVmSizingPolicyCpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmSizingPolicyCpus)(nil)).Elem()
}

func (i GetVmSizingPolicyCpusArgs) ToGetVmSizingPolicyCpusOutput() GetVmSizingPolicyCpusOutput {
	return i.ToGetVmSizingPolicyCpusOutputWithContext(context.Background())
}

func (i GetVmSizingPolicyCpusArgs) ToGetVmSizingPolicyCpusOutputWithContext(ctx context.Context) GetVmSizingPolicyCpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmSizingPolicyCpusOutput)
}

// GetVmSizingPolicyCpusArrayInput is an input type that accepts GetVmSizingPolicyCpusArray and GetVmSizingPolicyCpusArrayOutput values.
// You can construct a concrete instance of `GetVmSizingPolicyCpusArrayInput` via:
//
//	GetVmSizingPolicyCpusArray{ GetVmSizingPolicyCpusArgs{...} }
type GetVmSizingPolicyCpusArrayInput interface {
	pulumi.Input

	ToGetVmSizingPolicyCpusArrayOutput() GetVmSizingPolicyCpusArrayOutput
	ToGetVmSizingPolicyCpusArrayOutputWithContext(context.Context) GetVmSizingPolicyCpusArrayOutput
}

type GetVmSizingPolicyCpusArray []GetVmSizingPolicyCpusInput

func (GetVmSizingPolicyCpusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmSizingPolicyCpus)(nil)).Elem()
}

func (i GetVmSizingPolicyCpusArray) ToGetVmSizingPolicyCpusArrayOutput() GetVmSizingPolicyCpusArrayOutput {
	return i.ToGetVmSizingPolicyCpusArrayOutputWithContext(context.Background())
}

func (i GetVmSizingPolicyCpusArray) ToGetVmSizingPolicyCpusArrayOutputWithContext(ctx context.Context) GetVmSizingPolicyCpusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmSizingPolicyCpusArrayOutput)
}

type GetVmSizingPolicyCpusOutput struct{ *pulumi.OutputState }

func (GetVmSizingPolicyCpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmSizingPolicyCpus)(nil)).Elem()
}

func (o GetVmSizingPolicyCpusOutput) ToGetVmSizingPolicyCpusOutput() GetVmSizingPolicyCpusOutput {
	return o
}

func (o GetVmSizingPolicyCpusOutput) ToGetVmSizingPolicyCpusOutputWithContext(ctx context.Context) GetVmSizingPolicyCpusOutput {
	return o
}

// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
func (o GetVmSizingPolicyCpusOutput) CoresPerSocket() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSizingPolicyCpus) string { return v.CoresPerSocket }).(pulumi.StringOutput)
}

// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
func (o GetVmSizingPolicyCpusOutput) Count() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSizingPolicyCpus) string { return v.Count }).(pulumi.StringOutput)
}

// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs.
func (o GetVmSizingPolicyCpusOutput) LimitInMhz() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSizingPolicyCpus) string { return v.LimitInMhz }).(pulumi.StringOutput)
}

// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
func (o GetVmSizingPolicyCpusOutput) ReservationGuarantee() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSizingPolicyCpus) string { return v.ReservationGuarantee }).(pulumi.StringOutput)
}

// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o GetVmSizingPolicyCpusOutput) Shares() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSizingPolicyCpus) string { return v.Shares }).(pulumi.StringOutput)
}

// Defines the vCPU speed of a core in MHz.
func (o GetVmSizingPolicyCpusOutput) SpeedInMhz() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSizingPolicyCpus) string { return v.SpeedInMhz }).(pulumi.StringOutput)
}

type GetVmSizingPolicyCpusArrayOutput struct{ *pulumi.OutputState }

func (GetVmSizingPolicyCpusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmSizingPolicyCpus)(nil)).Elem()
}

func (o GetVmSizingPolicyCpusArrayOutput) ToGetVmSizingPolicyCpusArrayOutput() GetVmSizingPolicyCpusArrayOutput {
	return o
}

func (o GetVmSizingPolicyCpusArrayOutput) ToGetVmSizingPolicyCpusArrayOutputWithContext(ctx context.Context) GetVmSizingPolicyCpusArrayOutput {
	return o
}

func (o GetVmSizingPolicyCpusArrayOutput) Index(i pulumi.IntInput) GetVmSizingPolicyCpusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmSizingPolicyCpus {
		return vs[0].([]GetVmSizingPolicyCpus)[vs[1].(int)]
	}).(GetVmSizingPolicyCpusOutput)
}

type GetVmSizingPolicyMemory struct {
	// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
	LimitInMb string `pulumi:"limitInMb"`
	// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
	ReservationGuarantee string `pulumi:"reservationGuarantee"`
	// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares string `pulumi:"shares"`
	// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
	SizeInMb string `pulumi:"sizeInMb"`
}

// GetVmSizingPolicyMemoryInput is an input type that accepts GetVmSizingPolicyMemoryArgs and GetVmSizingPolicyMemoryOutput values.
// You can construct a concrete instance of `GetVmSizingPolicyMemoryInput` via:
//
//	GetVmSizingPolicyMemoryArgs{...}
type GetVmSizingPolicyMemoryInput interface {
	pulumi.Input

	ToGetVmSizingPolicyMemoryOutput() GetVmSizingPolicyMemoryOutput
	ToGetVmSizingPolicyMemoryOutputWithContext(context.Context) GetVmSizingPolicyMemoryOutput
}

type GetVmSizingPolicyMemoryArgs struct {
	// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
	LimitInMb pulumi.StringInput `pulumi:"limitInMb"`
	// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
	ReservationGuarantee pulumi.StringInput `pulumi:"reservationGuarantee"`
	// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares pulumi.StringInput `pulumi:"shares"`
	// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
	SizeInMb pulumi.StringInput `pulumi:"sizeInMb"`
}

func (GetVmSizingPolicyMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmSizingPolicyMemory)(nil)).Elem()
}

func (i GetVmSizingPolicyMemoryArgs) ToGetVmSizingPolicyMemoryOutput() GetVmSizingPolicyMemoryOutput {
	return i.ToGetVmSizingPolicyMemoryOutputWithContext(context.Background())
}

func (i GetVmSizingPolicyMemoryArgs) ToGetVmSizingPolicyMemoryOutputWithContext(ctx context.Context) GetVmSizingPolicyMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmSizingPolicyMemoryOutput)
}

// GetVmSizingPolicyMemoryArrayInput is an input type that accepts GetVmSizingPolicyMemoryArray and GetVmSizingPolicyMemoryArrayOutput values.
// You can construct a concrete instance of `GetVmSizingPolicyMemoryArrayInput` via:
//
//	GetVmSizingPolicyMemoryArray{ GetVmSizingPolicyMemoryArgs{...} }
type GetVmSizingPolicyMemoryArrayInput interface {
	pulumi.Input

	ToGetVmSizingPolicyMemoryArrayOutput() GetVmSizingPolicyMemoryArrayOutput
	ToGetVmSizingPolicyMemoryArrayOutputWithContext(context.Context) GetVmSizingPolicyMemoryArrayOutput
}

type GetVmSizingPolicyMemoryArray []GetVmSizingPolicyMemoryInput

func (GetVmSizingPolicyMemoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmSizingPolicyMemory)(nil)).Elem()
}

func (i GetVmSizingPolicyMemoryArray) ToGetVmSizingPolicyMemoryArrayOutput() GetVmSizingPolicyMemoryArrayOutput {
	return i.ToGetVmSizingPolicyMemoryArrayOutputWithContext(context.Background())
}

func (i GetVmSizingPolicyMemoryArray) ToGetVmSizingPolicyMemoryArrayOutputWithContext(ctx context.Context) GetVmSizingPolicyMemoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmSizingPolicyMemoryArrayOutput)
}

type GetVmSizingPolicyMemoryOutput struct{ *pulumi.OutputState }

func (GetVmSizingPolicyMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmSizingPolicyMemory)(nil)).Elem()
}

func (o GetVmSizingPolicyMemoryOutput) ToGetVmSizingPolicyMemoryOutput() GetVmSizingPolicyMemoryOutput {
	return o
}

func (o GetVmSizingPolicyMemoryOutput) ToGetVmSizingPolicyMemoryOutputWithContext(ctx context.Context) GetVmSizingPolicyMemoryOutput {
	return o
}

// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
func (o GetVmSizingPolicyMemoryOutput) LimitInMb() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSizingPolicyMemory) string { return v.LimitInMb }).(pulumi.StringOutput)
}

// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
func (o GetVmSizingPolicyMemoryOutput) ReservationGuarantee() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSizingPolicyMemory) string { return v.ReservationGuarantee }).(pulumi.StringOutput)
}

// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o GetVmSizingPolicyMemoryOutput) Shares() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSizingPolicyMemory) string { return v.Shares }).(pulumi.StringOutput)
}

// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
func (o GetVmSizingPolicyMemoryOutput) SizeInMb() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmSizingPolicyMemory) string { return v.SizeInMb }).(pulumi.StringOutput)
}

type GetVmSizingPolicyMemoryArrayOutput struct{ *pulumi.OutputState }

func (GetVmSizingPolicyMemoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmSizingPolicyMemory)(nil)).Elem()
}

func (o GetVmSizingPolicyMemoryArrayOutput) ToGetVmSizingPolicyMemoryArrayOutput() GetVmSizingPolicyMemoryArrayOutput {
	return o
}

func (o GetVmSizingPolicyMemoryArrayOutput) ToGetVmSizingPolicyMemoryArrayOutputWithContext(ctx context.Context) GetVmSizingPolicyMemoryArrayOutput {
	return o
}

func (o GetVmSizingPolicyMemoryArrayOutput) Index(i pulumi.IntInput) GetVmSizingPolicyMemoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmSizingPolicyMemory {
		return vs[0].([]GetVmSizingPolicyMemory)[vs[1].(int)]
	}).(GetVmSizingPolicyMemoryOutput)
}

type GetVmVgpuPolicyCpus struct {
	// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
	CoresPerSocket string `pulumi:"coresPerSocket"`
	// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
	Count string `pulumi:"count"`
	// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs.
	LimitInMhz string `pulumi:"limitInMhz"`
	// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
	ReservationGuarantee string `pulumi:"reservationGuarantee"`
	// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares string `pulumi:"shares"`
	// Defines the vCPU speed of a core in MHz.
	SpeedInMhz string `pulumi:"speedInMhz"`
}

// GetVmVgpuPolicyCpusInput is an input type that accepts GetVmVgpuPolicyCpusArgs and GetVmVgpuPolicyCpusOutput values.
// You can construct a concrete instance of `GetVmVgpuPolicyCpusInput` via:
//
//	GetVmVgpuPolicyCpusArgs{...}
type GetVmVgpuPolicyCpusInput interface {
	pulumi.Input

	ToGetVmVgpuPolicyCpusOutput() GetVmVgpuPolicyCpusOutput
	ToGetVmVgpuPolicyCpusOutputWithContext(context.Context) GetVmVgpuPolicyCpusOutput
}

type GetVmVgpuPolicyCpusArgs struct {
	// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
	CoresPerSocket pulumi.StringInput `pulumi:"coresPerSocket"`
	// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
	Count pulumi.StringInput `pulumi:"count"`
	// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs.
	LimitInMhz pulumi.StringInput `pulumi:"limitInMhz"`
	// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
	ReservationGuarantee pulumi.StringInput `pulumi:"reservationGuarantee"`
	// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares pulumi.StringInput `pulumi:"shares"`
	// Defines the vCPU speed of a core in MHz.
	SpeedInMhz pulumi.StringInput `pulumi:"speedInMhz"`
}

func (GetVmVgpuPolicyCpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmVgpuPolicyCpus)(nil)).Elem()
}

func (i GetVmVgpuPolicyCpusArgs) ToGetVmVgpuPolicyCpusOutput() GetVmVgpuPolicyCpusOutput {
	return i.ToGetVmVgpuPolicyCpusOutputWithContext(context.Background())
}

func (i GetVmVgpuPolicyCpusArgs) ToGetVmVgpuPolicyCpusOutputWithContext(ctx context.Context) GetVmVgpuPolicyCpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmVgpuPolicyCpusOutput)
}

// GetVmVgpuPolicyCpusArrayInput is an input type that accepts GetVmVgpuPolicyCpusArray and GetVmVgpuPolicyCpusArrayOutput values.
// You can construct a concrete instance of `GetVmVgpuPolicyCpusArrayInput` via:
//
//	GetVmVgpuPolicyCpusArray{ GetVmVgpuPolicyCpusArgs{...} }
type GetVmVgpuPolicyCpusArrayInput interface {
	pulumi.Input

	ToGetVmVgpuPolicyCpusArrayOutput() GetVmVgpuPolicyCpusArrayOutput
	ToGetVmVgpuPolicyCpusArrayOutputWithContext(context.Context) GetVmVgpuPolicyCpusArrayOutput
}

type GetVmVgpuPolicyCpusArray []GetVmVgpuPolicyCpusInput

func (GetVmVgpuPolicyCpusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmVgpuPolicyCpus)(nil)).Elem()
}

func (i GetVmVgpuPolicyCpusArray) ToGetVmVgpuPolicyCpusArrayOutput() GetVmVgpuPolicyCpusArrayOutput {
	return i.ToGetVmVgpuPolicyCpusArrayOutputWithContext(context.Background())
}

func (i GetVmVgpuPolicyCpusArray) ToGetVmVgpuPolicyCpusArrayOutputWithContext(ctx context.Context) GetVmVgpuPolicyCpusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmVgpuPolicyCpusArrayOutput)
}

type GetVmVgpuPolicyCpusOutput struct{ *pulumi.OutputState }

func (GetVmVgpuPolicyCpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmVgpuPolicyCpus)(nil)).Elem()
}

func (o GetVmVgpuPolicyCpusOutput) ToGetVmVgpuPolicyCpusOutput() GetVmVgpuPolicyCpusOutput {
	return o
}

func (o GetVmVgpuPolicyCpusOutput) ToGetVmVgpuPolicyCpusOutputWithContext(ctx context.Context) GetVmVgpuPolicyCpusOutput {
	return o
}

// The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.
func (o GetVmVgpuPolicyCpusOutput) CoresPerSocket() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyCpus) string { return v.CoresPerSocket }).(pulumi.StringOutput)
}

// Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.
func (o GetVmVgpuPolicyCpusOutput) Count() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyCpus) string { return v.Count }).(pulumi.StringOutput)
}

// Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs.
func (o GetVmVgpuPolicyCpusOutput) LimitInMhz() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyCpus) string { return v.LimitInMhz }).(pulumi.StringOutput)
}

// Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.
func (o GetVmVgpuPolicyCpusOutput) ReservationGuarantee() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyCpus) string { return v.ReservationGuarantee }).(pulumi.StringOutput)
}

// Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o GetVmVgpuPolicyCpusOutput) Shares() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyCpus) string { return v.Shares }).(pulumi.StringOutput)
}

// Defines the vCPU speed of a core in MHz.
func (o GetVmVgpuPolicyCpusOutput) SpeedInMhz() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyCpus) string { return v.SpeedInMhz }).(pulumi.StringOutput)
}

type GetVmVgpuPolicyCpusArrayOutput struct{ *pulumi.OutputState }

func (GetVmVgpuPolicyCpusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmVgpuPolicyCpus)(nil)).Elem()
}

func (o GetVmVgpuPolicyCpusArrayOutput) ToGetVmVgpuPolicyCpusArrayOutput() GetVmVgpuPolicyCpusArrayOutput {
	return o
}

func (o GetVmVgpuPolicyCpusArrayOutput) ToGetVmVgpuPolicyCpusArrayOutputWithContext(ctx context.Context) GetVmVgpuPolicyCpusArrayOutput {
	return o
}

func (o GetVmVgpuPolicyCpusArrayOutput) Index(i pulumi.IntInput) GetVmVgpuPolicyCpusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmVgpuPolicyCpus {
		return vs[0].([]GetVmVgpuPolicyCpus)[vs[1].(int)]
	}).(GetVmVgpuPolicyCpusOutput)
}

type GetVmVgpuPolicyMemory struct {
	// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
	LimitInMb string `pulumi:"limitInMb"`
	// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
	ReservationGuarantee string `pulumi:"reservationGuarantee"`
	// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares string `pulumi:"shares"`
	// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
	SizeInMb string `pulumi:"sizeInMb"`
}

// GetVmVgpuPolicyMemoryInput is an input type that accepts GetVmVgpuPolicyMemoryArgs and GetVmVgpuPolicyMemoryOutput values.
// You can construct a concrete instance of `GetVmVgpuPolicyMemoryInput` via:
//
//	GetVmVgpuPolicyMemoryArgs{...}
type GetVmVgpuPolicyMemoryInput interface {
	pulumi.Input

	ToGetVmVgpuPolicyMemoryOutput() GetVmVgpuPolicyMemoryOutput
	ToGetVmVgpuPolicyMemoryOutputWithContext(context.Context) GetVmVgpuPolicyMemoryOutput
}

type GetVmVgpuPolicyMemoryArgs struct {
	// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
	LimitInMb pulumi.StringInput `pulumi:"limitInMb"`
	// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
	ReservationGuarantee pulumi.StringInput `pulumi:"reservationGuarantee"`
	// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
	Shares pulumi.StringInput `pulumi:"shares"`
	// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
	SizeInMb pulumi.StringInput `pulumi:"sizeInMb"`
}

func (GetVmVgpuPolicyMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmVgpuPolicyMemory)(nil)).Elem()
}

func (i GetVmVgpuPolicyMemoryArgs) ToGetVmVgpuPolicyMemoryOutput() GetVmVgpuPolicyMemoryOutput {
	return i.ToGetVmVgpuPolicyMemoryOutputWithContext(context.Background())
}

func (i GetVmVgpuPolicyMemoryArgs) ToGetVmVgpuPolicyMemoryOutputWithContext(ctx context.Context) GetVmVgpuPolicyMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmVgpuPolicyMemoryOutput)
}

// GetVmVgpuPolicyMemoryArrayInput is an input type that accepts GetVmVgpuPolicyMemoryArray and GetVmVgpuPolicyMemoryArrayOutput values.
// You can construct a concrete instance of `GetVmVgpuPolicyMemoryArrayInput` via:
//
//	GetVmVgpuPolicyMemoryArray{ GetVmVgpuPolicyMemoryArgs{...} }
type GetVmVgpuPolicyMemoryArrayInput interface {
	pulumi.Input

	ToGetVmVgpuPolicyMemoryArrayOutput() GetVmVgpuPolicyMemoryArrayOutput
	ToGetVmVgpuPolicyMemoryArrayOutputWithContext(context.Context) GetVmVgpuPolicyMemoryArrayOutput
}

type GetVmVgpuPolicyMemoryArray []GetVmVgpuPolicyMemoryInput

func (GetVmVgpuPolicyMemoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmVgpuPolicyMemory)(nil)).Elem()
}

func (i GetVmVgpuPolicyMemoryArray) ToGetVmVgpuPolicyMemoryArrayOutput() GetVmVgpuPolicyMemoryArrayOutput {
	return i.ToGetVmVgpuPolicyMemoryArrayOutputWithContext(context.Background())
}

func (i GetVmVgpuPolicyMemoryArray) ToGetVmVgpuPolicyMemoryArrayOutputWithContext(ctx context.Context) GetVmVgpuPolicyMemoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmVgpuPolicyMemoryArrayOutput)
}

type GetVmVgpuPolicyMemoryOutput struct{ *pulumi.OutputState }

func (GetVmVgpuPolicyMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmVgpuPolicyMemory)(nil)).Elem()
}

func (o GetVmVgpuPolicyMemoryOutput) ToGetVmVgpuPolicyMemoryOutput() GetVmVgpuPolicyMemoryOutput {
	return o
}

func (o GetVmVgpuPolicyMemoryOutput) ToGetVmVgpuPolicyMemoryOutputWithContext(ctx context.Context) GetVmVgpuPolicyMemoryOutput {
	return o
}

// Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.
func (o GetVmVgpuPolicyMemoryOutput) LimitInMb() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyMemory) string { return v.LimitInMb }).(pulumi.StringOutput)
}

// Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.
func (o GetVmVgpuPolicyMemoryOutput) ReservationGuarantee() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyMemory) string { return v.ReservationGuarantee }).(pulumi.StringOutput)
}

// Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.
func (o GetVmVgpuPolicyMemoryOutput) Shares() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyMemory) string { return v.Shares }).(pulumi.StringOutput)
}

// Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.
func (o GetVmVgpuPolicyMemoryOutput) SizeInMb() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyMemory) string { return v.SizeInMb }).(pulumi.StringOutput)
}

type GetVmVgpuPolicyMemoryArrayOutput struct{ *pulumi.OutputState }

func (GetVmVgpuPolicyMemoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmVgpuPolicyMemory)(nil)).Elem()
}

func (o GetVmVgpuPolicyMemoryArrayOutput) ToGetVmVgpuPolicyMemoryArrayOutput() GetVmVgpuPolicyMemoryArrayOutput {
	return o
}

func (o GetVmVgpuPolicyMemoryArrayOutput) ToGetVmVgpuPolicyMemoryArrayOutputWithContext(ctx context.Context) GetVmVgpuPolicyMemoryArrayOutput {
	return o
}

func (o GetVmVgpuPolicyMemoryArrayOutput) Index(i pulumi.IntInput) GetVmVgpuPolicyMemoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmVgpuPolicyMemory {
		return vs[0].([]GetVmVgpuPolicyMemory)[vs[1].(int)]
	}).(GetVmVgpuPolicyMemoryOutput)
}

type GetVmVgpuPolicyProviderVdcScope struct {
	// Set of cluster names within the provider virtual data center.
	ClusterNames []string `pulumi:"clusterNames"`
	// Identifier for the provider virtual data center.
	ProviderVdcId string `pulumi:"providerVdcId"`
	// Identifier for a VM group within the provider VDC scope.
	VmGroupId string `pulumi:"vmGroupId"`
}

// GetVmVgpuPolicyProviderVdcScopeInput is an input type that accepts GetVmVgpuPolicyProviderVdcScopeArgs and GetVmVgpuPolicyProviderVdcScopeOutput values.
// You can construct a concrete instance of `GetVmVgpuPolicyProviderVdcScopeInput` via:
//
//	GetVmVgpuPolicyProviderVdcScopeArgs{...}
type GetVmVgpuPolicyProviderVdcScopeInput interface {
	pulumi.Input

	ToGetVmVgpuPolicyProviderVdcScopeOutput() GetVmVgpuPolicyProviderVdcScopeOutput
	ToGetVmVgpuPolicyProviderVdcScopeOutputWithContext(context.Context) GetVmVgpuPolicyProviderVdcScopeOutput
}

type GetVmVgpuPolicyProviderVdcScopeArgs struct {
	// Set of cluster names within the provider virtual data center.
	ClusterNames pulumi.StringArrayInput `pulumi:"clusterNames"`
	// Identifier for the provider virtual data center.
	ProviderVdcId pulumi.StringInput `pulumi:"providerVdcId"`
	// Identifier for a VM group within the provider VDC scope.
	VmGroupId pulumi.StringInput `pulumi:"vmGroupId"`
}

func (GetVmVgpuPolicyProviderVdcScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmVgpuPolicyProviderVdcScope)(nil)).Elem()
}

func (i GetVmVgpuPolicyProviderVdcScopeArgs) ToGetVmVgpuPolicyProviderVdcScopeOutput() GetVmVgpuPolicyProviderVdcScopeOutput {
	return i.ToGetVmVgpuPolicyProviderVdcScopeOutputWithContext(context.Background())
}

func (i GetVmVgpuPolicyProviderVdcScopeArgs) ToGetVmVgpuPolicyProviderVdcScopeOutputWithContext(ctx context.Context) GetVmVgpuPolicyProviderVdcScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmVgpuPolicyProviderVdcScopeOutput)
}

// GetVmVgpuPolicyProviderVdcScopeArrayInput is an input type that accepts GetVmVgpuPolicyProviderVdcScopeArray and GetVmVgpuPolicyProviderVdcScopeArrayOutput values.
// You can construct a concrete instance of `GetVmVgpuPolicyProviderVdcScopeArrayInput` via:
//
//	GetVmVgpuPolicyProviderVdcScopeArray{ GetVmVgpuPolicyProviderVdcScopeArgs{...} }
type GetVmVgpuPolicyProviderVdcScopeArrayInput interface {
	pulumi.Input

	ToGetVmVgpuPolicyProviderVdcScopeArrayOutput() GetVmVgpuPolicyProviderVdcScopeArrayOutput
	ToGetVmVgpuPolicyProviderVdcScopeArrayOutputWithContext(context.Context) GetVmVgpuPolicyProviderVdcScopeArrayOutput
}

type GetVmVgpuPolicyProviderVdcScopeArray []GetVmVgpuPolicyProviderVdcScopeInput

func (GetVmVgpuPolicyProviderVdcScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmVgpuPolicyProviderVdcScope)(nil)).Elem()
}

func (i GetVmVgpuPolicyProviderVdcScopeArray) ToGetVmVgpuPolicyProviderVdcScopeArrayOutput() GetVmVgpuPolicyProviderVdcScopeArrayOutput {
	return i.ToGetVmVgpuPolicyProviderVdcScopeArrayOutputWithContext(context.Background())
}

func (i GetVmVgpuPolicyProviderVdcScopeArray) ToGetVmVgpuPolicyProviderVdcScopeArrayOutputWithContext(ctx context.Context) GetVmVgpuPolicyProviderVdcScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmVgpuPolicyProviderVdcScopeArrayOutput)
}

type GetVmVgpuPolicyProviderVdcScopeOutput struct{ *pulumi.OutputState }

func (GetVmVgpuPolicyProviderVdcScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmVgpuPolicyProviderVdcScope)(nil)).Elem()
}

func (o GetVmVgpuPolicyProviderVdcScopeOutput) ToGetVmVgpuPolicyProviderVdcScopeOutput() GetVmVgpuPolicyProviderVdcScopeOutput {
	return o
}

func (o GetVmVgpuPolicyProviderVdcScopeOutput) ToGetVmVgpuPolicyProviderVdcScopeOutputWithContext(ctx context.Context) GetVmVgpuPolicyProviderVdcScopeOutput {
	return o
}

// Set of cluster names within the provider virtual data center.
func (o GetVmVgpuPolicyProviderVdcScopeOutput) ClusterNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyProviderVdcScope) []string { return v.ClusterNames }).(pulumi.StringArrayOutput)
}

// Identifier for the provider virtual data center.
func (o GetVmVgpuPolicyProviderVdcScopeOutput) ProviderVdcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyProviderVdcScope) string { return v.ProviderVdcId }).(pulumi.StringOutput)
}

// Identifier for a VM group within the provider VDC scope.
func (o GetVmVgpuPolicyProviderVdcScopeOutput) VmGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyProviderVdcScope) string { return v.VmGroupId }).(pulumi.StringOutput)
}

type GetVmVgpuPolicyProviderVdcScopeArrayOutput struct{ *pulumi.OutputState }

func (GetVmVgpuPolicyProviderVdcScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmVgpuPolicyProviderVdcScope)(nil)).Elem()
}

func (o GetVmVgpuPolicyProviderVdcScopeArrayOutput) ToGetVmVgpuPolicyProviderVdcScopeArrayOutput() GetVmVgpuPolicyProviderVdcScopeArrayOutput {
	return o
}

func (o GetVmVgpuPolicyProviderVdcScopeArrayOutput) ToGetVmVgpuPolicyProviderVdcScopeArrayOutputWithContext(ctx context.Context) GetVmVgpuPolicyProviderVdcScopeArrayOutput {
	return o
}

func (o GetVmVgpuPolicyProviderVdcScopeArrayOutput) Index(i pulumi.IntInput) GetVmVgpuPolicyProviderVdcScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmVgpuPolicyProviderVdcScope {
		return vs[0].([]GetVmVgpuPolicyProviderVdcScope)[vs[1].(int)]
	}).(GetVmVgpuPolicyProviderVdcScopeOutput)
}

type GetVmVgpuPolicyVgpuProfile struct {
	// Specifies the number of vGPU profiles.
	Count int `pulumi:"count"`
	// The identifier of the vGPU profile.
	Id string `pulumi:"id"`
}

// GetVmVgpuPolicyVgpuProfileInput is an input type that accepts GetVmVgpuPolicyVgpuProfileArgs and GetVmVgpuPolicyVgpuProfileOutput values.
// You can construct a concrete instance of `GetVmVgpuPolicyVgpuProfileInput` via:
//
//	GetVmVgpuPolicyVgpuProfileArgs{...}
type GetVmVgpuPolicyVgpuProfileInput interface {
	pulumi.Input

	ToGetVmVgpuPolicyVgpuProfileOutput() GetVmVgpuPolicyVgpuProfileOutput
	ToGetVmVgpuPolicyVgpuProfileOutputWithContext(context.Context) GetVmVgpuPolicyVgpuProfileOutput
}

type GetVmVgpuPolicyVgpuProfileArgs struct {
	// Specifies the number of vGPU profiles.
	Count pulumi.IntInput `pulumi:"count"`
	// The identifier of the vGPU profile.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetVmVgpuPolicyVgpuProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmVgpuPolicyVgpuProfile)(nil)).Elem()
}

func (i GetVmVgpuPolicyVgpuProfileArgs) ToGetVmVgpuPolicyVgpuProfileOutput() GetVmVgpuPolicyVgpuProfileOutput {
	return i.ToGetVmVgpuPolicyVgpuProfileOutputWithContext(context.Background())
}

func (i GetVmVgpuPolicyVgpuProfileArgs) ToGetVmVgpuPolicyVgpuProfileOutputWithContext(ctx context.Context) GetVmVgpuPolicyVgpuProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmVgpuPolicyVgpuProfileOutput)
}

// GetVmVgpuPolicyVgpuProfileArrayInput is an input type that accepts GetVmVgpuPolicyVgpuProfileArray and GetVmVgpuPolicyVgpuProfileArrayOutput values.
// You can construct a concrete instance of `GetVmVgpuPolicyVgpuProfileArrayInput` via:
//
//	GetVmVgpuPolicyVgpuProfileArray{ GetVmVgpuPolicyVgpuProfileArgs{...} }
type GetVmVgpuPolicyVgpuProfileArrayInput interface {
	pulumi.Input

	ToGetVmVgpuPolicyVgpuProfileArrayOutput() GetVmVgpuPolicyVgpuProfileArrayOutput
	ToGetVmVgpuPolicyVgpuProfileArrayOutputWithContext(context.Context) GetVmVgpuPolicyVgpuProfileArrayOutput
}

type GetVmVgpuPolicyVgpuProfileArray []GetVmVgpuPolicyVgpuProfileInput

func (GetVmVgpuPolicyVgpuProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmVgpuPolicyVgpuProfile)(nil)).Elem()
}

func (i GetVmVgpuPolicyVgpuProfileArray) ToGetVmVgpuPolicyVgpuProfileArrayOutput() GetVmVgpuPolicyVgpuProfileArrayOutput {
	return i.ToGetVmVgpuPolicyVgpuProfileArrayOutputWithContext(context.Background())
}

func (i GetVmVgpuPolicyVgpuProfileArray) ToGetVmVgpuPolicyVgpuProfileArrayOutputWithContext(ctx context.Context) GetVmVgpuPolicyVgpuProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmVgpuPolicyVgpuProfileArrayOutput)
}

type GetVmVgpuPolicyVgpuProfileOutput struct{ *pulumi.OutputState }

func (GetVmVgpuPolicyVgpuProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmVgpuPolicyVgpuProfile)(nil)).Elem()
}

func (o GetVmVgpuPolicyVgpuProfileOutput) ToGetVmVgpuPolicyVgpuProfileOutput() GetVmVgpuPolicyVgpuProfileOutput {
	return o
}

func (o GetVmVgpuPolicyVgpuProfileOutput) ToGetVmVgpuPolicyVgpuProfileOutputWithContext(ctx context.Context) GetVmVgpuPolicyVgpuProfileOutput {
	return o
}

// Specifies the number of vGPU profiles.
func (o GetVmVgpuPolicyVgpuProfileOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyVgpuProfile) int { return v.Count }).(pulumi.IntOutput)
}

// The identifier of the vGPU profile.
func (o GetVmVgpuPolicyVgpuProfileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmVgpuPolicyVgpuProfile) string { return v.Id }).(pulumi.StringOutput)
}

type GetVmVgpuPolicyVgpuProfileArrayOutput struct{ *pulumi.OutputState }

func (GetVmVgpuPolicyVgpuProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmVgpuPolicyVgpuProfile)(nil)).Elem()
}

func (o GetVmVgpuPolicyVgpuProfileArrayOutput) ToGetVmVgpuPolicyVgpuProfileArrayOutput() GetVmVgpuPolicyVgpuProfileArrayOutput {
	return o
}

func (o GetVmVgpuPolicyVgpuProfileArrayOutput) ToGetVmVgpuPolicyVgpuProfileArrayOutputWithContext(ctx context.Context) GetVmVgpuPolicyVgpuProfileArrayOutput {
	return o
}

func (o GetVmVgpuPolicyVgpuProfileArrayOutput) Index(i pulumi.IntInput) GetVmVgpuPolicyVgpuProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmVgpuPolicyVgpuProfile {
		return vs[0].([]GetVmVgpuPolicyVgpuProfile)[vs[1].(int)]
	}).(GetVmVgpuPolicyVgpuProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogAccessControlSharedWithInput)(nil)).Elem(), CatalogAccessControlSharedWithArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogAccessControlSharedWithArrayInput)(nil)).Elem(), CatalogAccessControlSharedWithArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogItemMetadataEntryInput)(nil)).Elem(), CatalogItemMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogItemMetadataEntryArrayInput)(nil)).Elem(), CatalogItemMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogMediaMetadataEntryInput)(nil)).Elem(), CatalogMediaMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogMediaMetadataEntryArrayInput)(nil)).Elem(), CatalogMediaMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogMetadataEntryInput)(nil)).Elem(), CatalogMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogMetadataEntryArrayInput)(nil)).Elem(), CatalogMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogVappTemplateCaptureVappInput)(nil)).Elem(), CatalogVappTemplateCaptureVappArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogVappTemplateCaptureVappPtrInput)(nil)).Elem(), CatalogVappTemplateCaptureVappArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogVappTemplateLeaseInput)(nil)).Elem(), CatalogVappTemplateLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogVappTemplateLeasePtrInput)(nil)).Elem(), CatalogVappTemplateLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogVappTemplateMetadataEntryInput)(nil)).Elem(), CatalogVappTemplateMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogVappTemplateMetadataEntryArrayInput)(nil)).Elem(), CatalogVappTemplateMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseKubernetesClusterControlPlaneInput)(nil)).Elem(), CseKubernetesClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseKubernetesClusterControlPlanePtrInput)(nil)).Elem(), CseKubernetesClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseKubernetesClusterDefaultStorageClassInput)(nil)).Elem(), CseKubernetesClusterDefaultStorageClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseKubernetesClusterDefaultStorageClassPtrInput)(nil)).Elem(), CseKubernetesClusterDefaultStorageClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseKubernetesClusterEventInput)(nil)).Elem(), CseKubernetesClusterEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseKubernetesClusterEventArrayInput)(nil)).Elem(), CseKubernetesClusterEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseKubernetesClusterWorkerPoolInput)(nil)).Elem(), CseKubernetesClusterWorkerPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseKubernetesClusterWorkerPoolArrayInput)(nil)).Elem(), CseKubernetesClusterWorkerPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DseRegistryConfigurationContainerRegistryInput)(nil)).Elem(), DseRegistryConfigurationContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DseRegistryConfigurationContainerRegistryArrayInput)(nil)).Elem(), DseRegistryConfigurationContainerRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgegatewayExternalNetworkInput)(nil)).Elem(), EdgegatewayExternalNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgegatewayExternalNetworkArrayInput)(nil)).Elem(), EdgegatewayExternalNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgegatewayExternalNetworkSubnetInput)(nil)).Elem(), EdgegatewayExternalNetworkSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgegatewayExternalNetworkSubnetArrayInput)(nil)).Elem(), EdgegatewayExternalNetworkSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgegatewayExternalNetworkSubnetSuballocatePoolInput)(nil)).Elem(), EdgegatewayExternalNetworkSubnetSuballocatePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgegatewayExternalNetworkSubnetSuballocatePoolArrayInput)(nil)).Elem(), EdgegatewayExternalNetworkSubnetSuballocatePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgegatewayVpnLocalSubnetInput)(nil)).Elem(), EdgegatewayVpnLocalSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgegatewayVpnLocalSubnetArrayInput)(nil)).Elem(), EdgegatewayVpnLocalSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgegatewayVpnPeerSubnetInput)(nil)).Elem(), EdgegatewayVpnPeerSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgegatewayVpnPeerSubnetArrayInput)(nil)).Elem(), EdgegatewayVpnPeerSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkIpScopeInput)(nil)).Elem(), ExternalNetworkIpScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkIpScopeArrayInput)(nil)).Elem(), ExternalNetworkIpScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkIpScopeStaticIpPoolInput)(nil)).Elem(), ExternalNetworkIpScopeStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkIpScopeStaticIpPoolArrayInput)(nil)).Elem(), ExternalNetworkIpScopeStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkV2IpScopeInput)(nil)).Elem(), ExternalNetworkV2IpScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkV2IpScopeArrayInput)(nil)).Elem(), ExternalNetworkV2IpScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkV2IpScopeStaticIpPoolInput)(nil)).Elem(), ExternalNetworkV2IpScopeStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkV2IpScopeStaticIpPoolArrayInput)(nil)).Elem(), ExternalNetworkV2IpScopeStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkV2NsxtNetworkInput)(nil)).Elem(), ExternalNetworkV2NsxtNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkV2NsxtNetworkPtrInput)(nil)).Elem(), ExternalNetworkV2NsxtNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkV2VsphereNetworkInput)(nil)).Elem(), ExternalNetworkV2VsphereNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkV2VsphereNetworkArrayInput)(nil)).Elem(), ExternalNetworkV2VsphereNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkVsphereNetworkInput)(nil)).Elem(), ExternalNetworkVsphereNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkVsphereNetworkArrayInput)(nil)).Elem(), ExternalNetworkVsphereNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndependentDiskMetadataEntryInput)(nil)).Elem(), IndependentDiskMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndependentDiskMetadataEntryArrayInput)(nil)).Elem(), IndependentDiskMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSpaceCustomQuotaIpPrefixQuotaInput)(nil)).Elem(), IpSpaceCustomQuotaIpPrefixQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSpaceCustomQuotaIpPrefixQuotaArrayInput)(nil)).Elem(), IpSpaceCustomQuotaIpPrefixQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSpaceIpPrefixInput)(nil)).Elem(), IpSpaceIpPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSpaceIpPrefixArrayInput)(nil)).Elem(), IpSpaceIpPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSpaceIpPrefixPrefixInput)(nil)).Elem(), IpSpaceIpPrefixPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSpaceIpPrefixPrefixArrayInput)(nil)).Elem(), IpSpaceIpPrefixPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSpaceIpRangeInput)(nil)).Elem(), IpSpaceIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSpaceIpRangeArrayInput)(nil)).Elem(), IpSpaceIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbServerPoolMemberInput)(nil)).Elem(), LbServerPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbServerPoolMemberArrayInput)(nil)).Elem(), LbServerPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkDirectMetadataEntryInput)(nil)).Elem(), NetworkDirectMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkDirectMetadataEntryArrayInput)(nil)).Elem(), NetworkDirectMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedDhcpPoolInput)(nil)).Elem(), NetworkIsolatedDhcpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedDhcpPoolArrayInput)(nil)).Elem(), NetworkIsolatedDhcpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedMetadataEntryInput)(nil)).Elem(), NetworkIsolatedMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedMetadataEntryArrayInput)(nil)).Elem(), NetworkIsolatedMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedStaticIpPoolInput)(nil)).Elem(), NetworkIsolatedStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedStaticIpPoolArrayInput)(nil)).Elem(), NetworkIsolatedStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedV2MetadataEntryInput)(nil)).Elem(), NetworkIsolatedV2MetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedV2MetadataEntryArrayInput)(nil)).Elem(), NetworkIsolatedV2MetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedV2SecondaryStaticIpPoolInput)(nil)).Elem(), NetworkIsolatedV2SecondaryStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedV2SecondaryStaticIpPoolArrayInput)(nil)).Elem(), NetworkIsolatedV2SecondaryStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedV2StaticIpPoolInput)(nil)).Elem(), NetworkIsolatedV2StaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIsolatedV2StaticIpPoolArrayInput)(nil)).Elem(), NetworkIsolatedV2StaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPoolBackingInput)(nil)).Elem(), NetworkPoolBackingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPoolBackingPtrInput)(nil)).Elem(), NetworkPoolBackingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPoolBackingDistributedSwitchInput)(nil)).Elem(), NetworkPoolBackingDistributedSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPoolBackingDistributedSwitchPtrInput)(nil)).Elem(), NetworkPoolBackingDistributedSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPoolBackingPortGroupInput)(nil)).Elem(), NetworkPoolBackingPortGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPoolBackingPortGroupArrayInput)(nil)).Elem(), NetworkPoolBackingPortGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPoolBackingRangeIdInput)(nil)).Elem(), NetworkPoolBackingRangeIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPoolBackingRangeIdArrayInput)(nil)).Elem(), NetworkPoolBackingRangeIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPoolBackingTransportZoneInput)(nil)).Elem(), NetworkPoolBackingTransportZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPoolBackingTransportZonePtrInput)(nil)).Elem(), NetworkPoolBackingTransportZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedDhcpPoolInput)(nil)).Elem(), NetworkRoutedDhcpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedDhcpPoolArrayInput)(nil)).Elem(), NetworkRoutedDhcpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedMetadataEntryInput)(nil)).Elem(), NetworkRoutedMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedMetadataEntryArrayInput)(nil)).Elem(), NetworkRoutedMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedStaticIpPoolInput)(nil)).Elem(), NetworkRoutedStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedStaticIpPoolArrayInput)(nil)).Elem(), NetworkRoutedStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedV2MetadataEntryInput)(nil)).Elem(), NetworkRoutedV2MetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedV2MetadataEntryArrayInput)(nil)).Elem(), NetworkRoutedV2MetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedV2SecondaryStaticIpPoolInput)(nil)).Elem(), NetworkRoutedV2SecondaryStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedV2SecondaryStaticIpPoolArrayInput)(nil)).Elem(), NetworkRoutedV2SecondaryStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedV2StaticIpPoolInput)(nil)).Elem(), NetworkRoutedV2StaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedV2StaticIpPoolArrayInput)(nil)).Elem(), NetworkRoutedV2StaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbPoolHealthMonitorInput)(nil)).Elem(), NsxtAlbPoolHealthMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbPoolHealthMonitorArrayInput)(nil)).Elem(), NsxtAlbPoolHealthMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbPoolMemberInput)(nil)).Elem(), NsxtAlbPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbPoolMemberArrayInput)(nil)).Elem(), NsxtAlbPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbPoolPersistenceProfileInput)(nil)).Elem(), NsxtAlbPoolPersistenceProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbPoolPersistenceProfilePtrInput)(nil)).Elem(), NsxtAlbPoolPersistenceProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActionsInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrInput)(nil)).Elem(), NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceServicePortInput)(nil)).Elem(), NsxtAlbVirtualServiceServicePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbVirtualServiceServicePortArrayInput)(nil)).Elem(), NsxtAlbVirtualServiceServicePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAppPortProfileAppPortInput)(nil)).Elem(), NsxtAppPortProfileAppPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAppPortProfileAppPortArrayInput)(nil)).Elem(), NsxtAppPortProfileAppPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDistributedFirewallRuleTypeInput)(nil)).Elem(), NsxtDistributedFirewallRuleTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDistributedFirewallRuleTypeArrayInput)(nil)).Elem(), NsxtDistributedFirewallRuleTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDynamicSecurityGroupCriteriaInput)(nil)).Elem(), NsxtDynamicSecurityGroupCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDynamicSecurityGroupCriteriaArrayInput)(nil)).Elem(), NsxtDynamicSecurityGroupCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDynamicSecurityGroupCriteriaRuleInput)(nil)).Elem(), NsxtDynamicSecurityGroupCriteriaRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDynamicSecurityGroupCriteriaRuleArrayInput)(nil)).Elem(), NsxtDynamicSecurityGroupCriteriaRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDynamicSecurityGroupMemberVmInput)(nil)).Elem(), NsxtDynamicSecurityGroupMemberVmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtDynamicSecurityGroupMemberVmArrayInput)(nil)).Elem(), NsxtDynamicSecurityGroupMemberVmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayBgpIpPrefixListIpPrefixInput)(nil)).Elem(), NsxtEdgegatewayBgpIpPrefixListIpPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayInput)(nil)).Elem(), NsxtEdgegatewayBgpIpPrefixListIpPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayDnsConditionalForwarderZoneInput)(nil)).Elem(), NsxtEdgegatewayDnsConditionalForwarderZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayDnsConditionalForwarderZoneArrayInput)(nil)).Elem(), NsxtEdgegatewayDnsConditionalForwarderZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayDnsDefaultForwarderZoneInput)(nil)).Elem(), NsxtEdgegatewayDnsDefaultForwarderZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayDnsDefaultForwarderZonePtrInput)(nil)).Elem(), NsxtEdgegatewayDnsDefaultForwarderZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayExternalNetworkInput)(nil)).Elem(), NsxtEdgegatewayExternalNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayExternalNetworkArrayInput)(nil)).Elem(), NsxtEdgegatewayExternalNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayL2VpnTunnelStretchedNetworkInput)(nil)).Elem(), NsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayInput)(nil)).Elem(), NsxtEdgegatewayL2VpnTunnelStretchedNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayStaticRouteNextHopInput)(nil)).Elem(), NsxtEdgegatewayStaticRouteNextHopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayStaticRouteNextHopArrayInput)(nil)).Elem(), NsxtEdgegatewayStaticRouteNextHopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayStaticRouteNextHopScopeInput)(nil)).Elem(), NsxtEdgegatewayStaticRouteNextHopScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayStaticRouteNextHopScopePtrInput)(nil)).Elem(), NsxtEdgegatewayStaticRouteNextHopScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewaySubnetInput)(nil)).Elem(), NsxtEdgegatewaySubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewaySubnetArrayInput)(nil)).Elem(), NsxtEdgegatewaySubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewaySubnetAllocatedIpInput)(nil)).Elem(), NsxtEdgegatewaySubnetAllocatedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewaySubnetAllocatedIpArrayInput)(nil)).Elem(), NsxtEdgegatewaySubnetAllocatedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewaySubnetWithIpCountInput)(nil)).Elem(), NsxtEdgegatewaySubnetWithIpCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewaySubnetWithIpCountArrayInput)(nil)).Elem(), NsxtEdgegatewaySubnetWithIpCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewaySubnetWithTotalIpCountInput)(nil)).Elem(), NsxtEdgegatewaySubnetWithTotalIpCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewaySubnetWithTotalIpCountArrayInput)(nil)).Elem(), NsxtEdgegatewaySubnetWithTotalIpCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtFirewallRuleInput)(nil)).Elem(), NsxtFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtFirewallRuleArrayInput)(nil)).Elem(), NsxtFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtIpsecVpnTunnelSecurityProfileCustomizationInput)(nil)).Elem(), NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrInput)(nil)).Elem(), NsxtIpsecVpnTunnelSecurityProfileCustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtNetworkDhcpBindingDhcpV4ConfigInput)(nil)).Elem(), NsxtNetworkDhcpBindingDhcpV4ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtNetworkDhcpBindingDhcpV4ConfigPtrInput)(nil)).Elem(), NsxtNetworkDhcpBindingDhcpV4ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtNetworkDhcpBindingDhcpV6ConfigInput)(nil)).Elem(), NsxtNetworkDhcpBindingDhcpV6ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtNetworkDhcpBindingDhcpV6ConfigPtrInput)(nil)).Elem(), NsxtNetworkDhcpBindingDhcpV6ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtNetworkDhcpPoolInput)(nil)).Elem(), NsxtNetworkDhcpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtNetworkDhcpPoolArrayInput)(nil)).Elem(), NsxtNetworkDhcpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtNetworkImportedSecondaryStaticIpPoolInput)(nil)).Elem(), NsxtNetworkImportedSecondaryStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtNetworkImportedSecondaryStaticIpPoolArrayInput)(nil)).Elem(), NsxtNetworkImportedSecondaryStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtNetworkImportedStaticIpPoolInput)(nil)).Elem(), NsxtNetworkImportedStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtNetworkImportedStaticIpPoolArrayInput)(nil)).Elem(), NsxtNetworkImportedStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtSecurityGroupMemberVmInput)(nil)).Elem(), NsxtSecurityGroupMemberVmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtSecurityGroupMemberVmArrayInput)(nil)).Elem(), NsxtSecurityGroupMemberVmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDhcpRelayRelayAgentInput)(nil)).Elem(), NsxvDhcpRelayRelayAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDhcpRelayRelayAgentArrayInput)(nil)).Elem(), NsxvDhcpRelayRelayAgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDistributedFirewallRuleInput)(nil)).Elem(), NsxvDistributedFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDistributedFirewallRuleArrayInput)(nil)).Elem(), NsxvDistributedFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDistributedFirewallRuleApplicationInput)(nil)).Elem(), NsxvDistributedFirewallRuleApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDistributedFirewallRuleApplicationArrayInput)(nil)).Elem(), NsxvDistributedFirewallRuleApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDistributedFirewallRuleAppliedToInput)(nil)).Elem(), NsxvDistributedFirewallRuleAppliedToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDistributedFirewallRuleAppliedToArrayInput)(nil)).Elem(), NsxvDistributedFirewallRuleAppliedToArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDistributedFirewallRuleDestinationInput)(nil)).Elem(), NsxvDistributedFirewallRuleDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDistributedFirewallRuleDestinationArrayInput)(nil)).Elem(), NsxvDistributedFirewallRuleDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDistributedFirewallRuleSourceInput)(nil)).Elem(), NsxvDistributedFirewallRuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvDistributedFirewallRuleSourceArrayInput)(nil)).Elem(), NsxvDistributedFirewallRuleSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvFirewallRuleDestinationInput)(nil)).Elem(), NsxvFirewallRuleDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvFirewallRuleDestinationPtrInput)(nil)).Elem(), NsxvFirewallRuleDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvFirewallRuleServiceInput)(nil)).Elem(), NsxvFirewallRuleServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvFirewallRuleServiceArrayInput)(nil)).Elem(), NsxvFirewallRuleServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvFirewallRuleSourceInput)(nil)).Elem(), NsxvFirewallRuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxvFirewallRuleSourcePtrInput)(nil)).Elem(), NsxvFirewallRuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgAccountLockoutInput)(nil)).Elem(), OrgAccountLockoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgAccountLockoutPtrInput)(nil)).Elem(), OrgAccountLockoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLdapCustomSettingsInput)(nil)).Elem(), OrgLdapCustomSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLdapCustomSettingsPtrInput)(nil)).Elem(), OrgLdapCustomSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLdapCustomSettingsGroupAttributesInput)(nil)).Elem(), OrgLdapCustomSettingsGroupAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLdapCustomSettingsGroupAttributesPtrInput)(nil)).Elem(), OrgLdapCustomSettingsGroupAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLdapCustomSettingsUserAttributesInput)(nil)).Elem(), OrgLdapCustomSettingsUserAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgLdapCustomSettingsUserAttributesPtrInput)(nil)).Elem(), OrgLdapCustomSettingsUserAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgMetadataEntryInput)(nil)).Elem(), OrgMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgMetadataEntryArrayInput)(nil)).Elem(), OrgMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgOidcClaimsMappingInput)(nil)).Elem(), OrgOidcClaimsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgOidcClaimsMappingPtrInput)(nil)).Elem(), OrgOidcClaimsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgOidcKeyInput)(nil)).Elem(), OrgOidcKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgOidcKeyArrayInput)(nil)).Elem(), OrgOidcKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVappLeaseInput)(nil)).Elem(), OrgVappLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVappLeasePtrInput)(nil)).Elem(), OrgVappLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVappTemplateLeaseInput)(nil)).Elem(), OrgVappTemplateLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVappTemplateLeasePtrInput)(nil)).Elem(), OrgVappTemplateLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcAccessControlSharedWithInput)(nil)).Elem(), OrgVdcAccessControlSharedWithArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcAccessControlSharedWithArrayInput)(nil)).Elem(), OrgVdcAccessControlSharedWithArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcComputeCapacityInput)(nil)).Elem(), OrgVdcComputeCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcComputeCapacityPtrInput)(nil)).Elem(), OrgVdcComputeCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcComputeCapacityCpuInput)(nil)).Elem(), OrgVdcComputeCapacityCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcComputeCapacityCpuPtrInput)(nil)).Elem(), OrgVdcComputeCapacityCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcComputeCapacityMemoryInput)(nil)).Elem(), OrgVdcComputeCapacityMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcComputeCapacityMemoryPtrInput)(nil)).Elem(), OrgVdcComputeCapacityMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcMetadataEntryInput)(nil)).Elem(), OrgVdcMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcMetadataEntryArrayInput)(nil)).Elem(), OrgVdcMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcStorageProfileInput)(nil)).Elem(), OrgVdcStorageProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcStorageProfileArrayInput)(nil)).Elem(), OrgVdcStorageProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcTemplateComputeConfigurationInput)(nil)).Elem(), OrgVdcTemplateComputeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcTemplateComputeConfigurationPtrInput)(nil)).Elem(), OrgVdcTemplateComputeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcTemplateEdgeGatewayInput)(nil)).Elem(), OrgVdcTemplateEdgeGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcTemplateEdgeGatewayPtrInput)(nil)).Elem(), OrgVdcTemplateEdgeGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcTemplateEdgeGatewayStaticIpPoolInput)(nil)).Elem(), OrgVdcTemplateEdgeGatewayStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcTemplateEdgeGatewayStaticIpPoolPtrInput)(nil)).Elem(), OrgVdcTemplateEdgeGatewayStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcTemplateProviderVdcInput)(nil)).Elem(), OrgVdcTemplateProviderVdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcTemplateProviderVdcArrayInput)(nil)).Elem(), OrgVdcTemplateProviderVdcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcTemplateStorageProfileInput)(nil)).Elem(), OrgVdcTemplateStorageProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcTemplateStorageProfileArrayInput)(nil)).Elem(), OrgVdcTemplateStorageProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderIgnoreMetadataChangeInput)(nil)).Elem(), ProviderIgnoreMetadataChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderIgnoreMetadataChangeArrayInput)(nil)).Elem(), ProviderIgnoreMetadataChangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVdcComputeCapacityInput)(nil)).Elem(), ProviderVdcComputeCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVdcComputeCapacityArrayInput)(nil)).Elem(), ProviderVdcComputeCapacityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVdcComputeCapacityCpusInput)(nil)).Elem(), ProviderVdcComputeCapacityCpusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVdcComputeCapacityCpusArrayInput)(nil)).Elem(), ProviderVdcComputeCapacityCpusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVdcComputeCapacityMemoryInput)(nil)).Elem(), ProviderVdcComputeCapacityMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVdcComputeCapacityMemoryArrayInput)(nil)).Elem(), ProviderVdcComputeCapacityMemoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVdcMetadataEntryInput)(nil)).Elem(), ProviderVdcMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVdcMetadataEntryArrayInput)(nil)).Elem(), ProviderVdcMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdeMetadataEntryInput)(nil)).Elem(), RdeMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdeMetadataEntryArrayInput)(nil)).Elem(), RdeMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdeTypeHookInput)(nil)).Elem(), RdeTypeHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdeTypeHookArrayInput)(nil)).Elem(), RdeTypeHookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionLandingZoneCatalogInput)(nil)).Elem(), SolutionLandingZoneCatalogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionLandingZoneCatalogPtrInput)(nil)).Elem(), SolutionLandingZoneCatalogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionLandingZoneVdcInput)(nil)).Elem(), SolutionLandingZoneVdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionLandingZoneVdcArrayInput)(nil)).Elem(), SolutionLandingZoneVdcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionLandingZoneVdcComputePolicyInput)(nil)).Elem(), SolutionLandingZoneVdcComputePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionLandingZoneVdcComputePolicyArrayInput)(nil)).Elem(), SolutionLandingZoneVdcComputePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionLandingZoneVdcOrgVdcNetworkInput)(nil)).Elem(), SolutionLandingZoneVdcOrgVdcNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionLandingZoneVdcOrgVdcNetworkArrayInput)(nil)).Elem(), SolutionLandingZoneVdcOrgVdcNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionLandingZoneVdcStoragePolicyInput)(nil)).Elem(), SolutionLandingZoneVdcStoragePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionLandingZoneVdcStoragePolicyArrayInput)(nil)).Elem(), SolutionLandingZoneVdcStoragePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappAccessControlSharedWithInput)(nil)).Elem(), VappAccessControlSharedWithArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappAccessControlSharedWithArrayInput)(nil)).Elem(), VappAccessControlSharedWithArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappFirewallRulesRuleInput)(nil)).Elem(), VappFirewallRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappFirewallRulesRuleArrayInput)(nil)).Elem(), VappFirewallRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappLeaseInput)(nil)).Elem(), VappLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappLeasePtrInput)(nil)).Elem(), VappLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappMetadataEntryInput)(nil)).Elem(), VappMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappMetadataEntryArrayInput)(nil)).Elem(), VappMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappNatRulesRuleInput)(nil)).Elem(), VappNatRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappNatRulesRuleArrayInput)(nil)).Elem(), VappNatRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappNetworkDhcpPoolInput)(nil)).Elem(), VappNetworkDhcpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappNetworkDhcpPoolArrayInput)(nil)).Elem(), VappNetworkDhcpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappNetworkStaticIpPoolInput)(nil)).Elem(), VappNetworkStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappNetworkStaticIpPoolArrayInput)(nil)).Elem(), VappNetworkStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappStaticRoutingRuleInput)(nil)).Elem(), VappStaticRoutingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappStaticRoutingRuleArrayInput)(nil)).Elem(), VappStaticRoutingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmBootOptionsInput)(nil)).Elem(), VappVmBootOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmBootOptionsPtrInput)(nil)).Elem(), VappVmBootOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmCustomizationInput)(nil)).Elem(), VappVmCustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmCustomizationPtrInput)(nil)).Elem(), VappVmCustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmDiskInput)(nil)).Elem(), VappVmDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmDiskArrayInput)(nil)).Elem(), VappVmDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmExtraConfigInput)(nil)).Elem(), VappVmExtraConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmExtraConfigArrayInput)(nil)).Elem(), VappVmExtraConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmInternalDiskInput)(nil)).Elem(), VappVmInternalDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmInternalDiskArrayInput)(nil)).Elem(), VappVmInternalDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmMetadataEntryInput)(nil)).Elem(), VappVmMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmMetadataEntryArrayInput)(nil)).Elem(), VappVmMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmNetworkInput)(nil)).Elem(), VappVmNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmNetworkArrayInput)(nil)).Elem(), VappVmNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmOverrideTemplateDiskInput)(nil)).Elem(), VappVmOverrideTemplateDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmOverrideTemplateDiskArrayInput)(nil)).Elem(), VappVmOverrideTemplateDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmSetExtraConfigInput)(nil)).Elem(), VappVmSetExtraConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VappVmSetExtraConfigArrayInput)(nil)).Elem(), VappVmSetExtraConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdcGroupParticipatingOrgVdcInput)(nil)).Elem(), VdcGroupParticipatingOrgVdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdcGroupParticipatingOrgVdcArrayInput)(nil)).Elem(), VdcGroupParticipatingOrgVdcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBootOptionsInput)(nil)).Elem(), VmBootOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmBootOptionsPtrInput)(nil)).Elem(), VmBootOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmCustomizationInput)(nil)).Elem(), VmCustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmCustomizationPtrInput)(nil)).Elem(), VmCustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmDiskInput)(nil)).Elem(), VmDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmDiskArrayInput)(nil)).Elem(), VmDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmExtraConfigInput)(nil)).Elem(), VmExtraConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmExtraConfigArrayInput)(nil)).Elem(), VmExtraConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmInternalDiskTypeInput)(nil)).Elem(), VmInternalDiskTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmInternalDiskTypeArrayInput)(nil)).Elem(), VmInternalDiskTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmMetadataEntryInput)(nil)).Elem(), VmMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmMetadataEntryArrayInput)(nil)).Elem(), VmMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNetworkInput)(nil)).Elem(), VmNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmNetworkArrayInput)(nil)).Elem(), VmNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmOverrideTemplateDiskInput)(nil)).Elem(), VmOverrideTemplateDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmOverrideTemplateDiskArrayInput)(nil)).Elem(), VmOverrideTemplateDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmSetExtraConfigInput)(nil)).Elem(), VmSetExtraConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmSetExtraConfigArrayInput)(nil)).Elem(), VmSetExtraConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmSizingPolicyCpuInput)(nil)).Elem(), VmSizingPolicyCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmSizingPolicyCpuPtrInput)(nil)).Elem(), VmSizingPolicyCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmSizingPolicyMemoryInput)(nil)).Elem(), VmSizingPolicyMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmSizingPolicyMemoryPtrInput)(nil)).Elem(), VmSizingPolicyMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmVgpuPolicyCpuInput)(nil)).Elem(), VmVgpuPolicyCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmVgpuPolicyCpuPtrInput)(nil)).Elem(), VmVgpuPolicyCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmVgpuPolicyMemoryInput)(nil)).Elem(), VmVgpuPolicyMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmVgpuPolicyMemoryPtrInput)(nil)).Elem(), VmVgpuPolicyMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmVgpuPolicyProviderVdcScopeInput)(nil)).Elem(), VmVgpuPolicyProviderVdcScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmVgpuPolicyProviderVdcScopeArrayInput)(nil)).Elem(), VmVgpuPolicyProviderVdcScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmVgpuPolicyVgpuProfileInput)(nil)).Elem(), VmVgpuPolicyVgpuProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmVgpuPolicyVgpuProfilePtrInput)(nil)).Elem(), VmVgpuPolicyVgpuProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogAccessControlSharedWithInput)(nil)).Elem(), GetCatalogAccessControlSharedWithArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogAccessControlSharedWithArrayInput)(nil)).Elem(), GetCatalogAccessControlSharedWithArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogFilterInput)(nil)).Elem(), GetCatalogFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogFilterPtrInput)(nil)).Elem(), GetCatalogFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogFilterMetadataInput)(nil)).Elem(), GetCatalogFilterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogFilterMetadataArrayInput)(nil)).Elem(), GetCatalogFilterMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogItemFilterInput)(nil)).Elem(), GetCatalogItemFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogItemFilterPtrInput)(nil)).Elem(), GetCatalogItemFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogItemFilterMetadataInput)(nil)).Elem(), GetCatalogItemFilterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogItemFilterMetadataArrayInput)(nil)).Elem(), GetCatalogItemFilterMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogItemMetadataEntryInput)(nil)).Elem(), GetCatalogItemMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogItemMetadataEntryArrayInput)(nil)).Elem(), GetCatalogItemMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogMediaFilterInput)(nil)).Elem(), GetCatalogMediaFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogMediaFilterPtrInput)(nil)).Elem(), GetCatalogMediaFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogMediaFilterMetadataInput)(nil)).Elem(), GetCatalogMediaFilterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogMediaFilterMetadataArrayInput)(nil)).Elem(), GetCatalogMediaFilterMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogMediaMetadataEntryInput)(nil)).Elem(), GetCatalogMediaMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogMediaMetadataEntryArrayInput)(nil)).Elem(), GetCatalogMediaMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogMetadataEntryInput)(nil)).Elem(), GetCatalogMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogMetadataEntryArrayInput)(nil)).Elem(), GetCatalogMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogVappTemplateFilterInput)(nil)).Elem(), GetCatalogVappTemplateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogVappTemplateFilterPtrInput)(nil)).Elem(), GetCatalogVappTemplateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogVappTemplateFilterMetadataInput)(nil)).Elem(), GetCatalogVappTemplateFilterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogVappTemplateFilterMetadataArrayInput)(nil)).Elem(), GetCatalogVappTemplateFilterMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogVappTemplateLeaseInput)(nil)).Elem(), GetCatalogVappTemplateLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogVappTemplateLeaseArrayInput)(nil)).Elem(), GetCatalogVappTemplateLeaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogVappTemplateMetadataEntryInput)(nil)).Elem(), GetCatalogVappTemplateMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogVappTemplateMetadataEntryArrayInput)(nil)).Elem(), GetCatalogVappTemplateMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCseKubernetesClusterControlPlaneInput)(nil)).Elem(), GetCseKubernetesClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCseKubernetesClusterControlPlaneArrayInput)(nil)).Elem(), GetCseKubernetesClusterControlPlaneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCseKubernetesClusterDefaultStorageClassInput)(nil)).Elem(), GetCseKubernetesClusterDefaultStorageClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCseKubernetesClusterDefaultStorageClassArrayInput)(nil)).Elem(), GetCseKubernetesClusterDefaultStorageClassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCseKubernetesClusterEventInput)(nil)).Elem(), GetCseKubernetesClusterEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCseKubernetesClusterEventArrayInput)(nil)).Elem(), GetCseKubernetesClusterEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCseKubernetesClusterWorkerPoolInput)(nil)).Elem(), GetCseKubernetesClusterWorkerPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCseKubernetesClusterWorkerPoolArrayInput)(nil)).Elem(), GetCseKubernetesClusterWorkerPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDseRegistryConfigurationContainerRegistryInput)(nil)).Elem(), GetDseRegistryConfigurationContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDseRegistryConfigurationContainerRegistryArrayInput)(nil)).Elem(), GetDseRegistryConfigurationContainerRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEdgegatewayExternalNetworkInput)(nil)).Elem(), GetEdgegatewayExternalNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEdgegatewayExternalNetworkArrayInput)(nil)).Elem(), GetEdgegatewayExternalNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEdgegatewayExternalNetworkSubnetInput)(nil)).Elem(), GetEdgegatewayExternalNetworkSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEdgegatewayExternalNetworkSubnetArrayInput)(nil)).Elem(), GetEdgegatewayExternalNetworkSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEdgegatewayExternalNetworkSubnetSuballocatePoolInput)(nil)).Elem(), GetEdgegatewayExternalNetworkSubnetSuballocatePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayInput)(nil)).Elem(), GetEdgegatewayExternalNetworkSubnetSuballocatePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEdgegatewayFilterInput)(nil)).Elem(), GetEdgegatewayFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEdgegatewayFilterPtrInput)(nil)).Elem(), GetEdgegatewayFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkIpScopeInput)(nil)).Elem(), GetExternalNetworkIpScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkIpScopeArrayInput)(nil)).Elem(), GetExternalNetworkIpScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkIpScopeStaticIpPoolInput)(nil)).Elem(), GetExternalNetworkIpScopeStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkIpScopeStaticIpPoolArrayInput)(nil)).Elem(), GetExternalNetworkIpScopeStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkV2IpScopeInput)(nil)).Elem(), GetExternalNetworkV2IpScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkV2IpScopeArrayInput)(nil)).Elem(), GetExternalNetworkV2IpScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkV2IpScopeStaticIpPoolInput)(nil)).Elem(), GetExternalNetworkV2IpScopeStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkV2IpScopeStaticIpPoolArrayInput)(nil)).Elem(), GetExternalNetworkV2IpScopeStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkV2NsxtNetworkInput)(nil)).Elem(), GetExternalNetworkV2NsxtNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkV2NsxtNetworkArrayInput)(nil)).Elem(), GetExternalNetworkV2NsxtNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkV2VsphereNetworkInput)(nil)).Elem(), GetExternalNetworkV2VsphereNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkV2VsphereNetworkArrayInput)(nil)).Elem(), GetExternalNetworkV2VsphereNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkVsphereNetworkInput)(nil)).Elem(), GetExternalNetworkVsphereNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExternalNetworkVsphereNetworkArrayInput)(nil)).Elem(), GetExternalNetworkVsphereNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIndependentDiskMetadataEntryInput)(nil)).Elem(), GetIndependentDiskMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIndependentDiskMetadataEntryArrayInput)(nil)).Elem(), GetIndependentDiskMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpSpaceCustomQuotaIpPrefixQuotaInput)(nil)).Elem(), GetIpSpaceCustomQuotaIpPrefixQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpSpaceCustomQuotaIpPrefixQuotaArrayInput)(nil)).Elem(), GetIpSpaceCustomQuotaIpPrefixQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpSpaceIpPrefixInput)(nil)).Elem(), GetIpSpaceIpPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpSpaceIpPrefixArrayInput)(nil)).Elem(), GetIpSpaceIpPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpSpaceIpPrefixPrefixInput)(nil)).Elem(), GetIpSpaceIpPrefixPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpSpaceIpPrefixPrefixArrayInput)(nil)).Elem(), GetIpSpaceIpPrefixPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpSpaceIpRangeInput)(nil)).Elem(), GetIpSpaceIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpSpaceIpRangeArrayInput)(nil)).Elem(), GetIpSpaceIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbServerPoolMemberInput)(nil)).Elem(), GetLbServerPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbServerPoolMemberArrayInput)(nil)).Elem(), GetLbServerPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkDirectFilterInput)(nil)).Elem(), GetNetworkDirectFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkDirectFilterPtrInput)(nil)).Elem(), GetNetworkDirectFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkDirectFilterMetadataInput)(nil)).Elem(), GetNetworkDirectFilterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkDirectFilterMetadataArrayInput)(nil)).Elem(), GetNetworkDirectFilterMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkDirectMetadataEntryInput)(nil)).Elem(), GetNetworkDirectMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkDirectMetadataEntryArrayInput)(nil)).Elem(), GetNetworkDirectMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedDhcpPoolInput)(nil)).Elem(), GetNetworkIsolatedDhcpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedDhcpPoolArrayInput)(nil)).Elem(), GetNetworkIsolatedDhcpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedFilterInput)(nil)).Elem(), GetNetworkIsolatedFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedFilterPtrInput)(nil)).Elem(), GetNetworkIsolatedFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedFilterMetadataInput)(nil)).Elem(), GetNetworkIsolatedFilterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedFilterMetadataArrayInput)(nil)).Elem(), GetNetworkIsolatedFilterMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedMetadataEntryInput)(nil)).Elem(), GetNetworkIsolatedMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedMetadataEntryArrayInput)(nil)).Elem(), GetNetworkIsolatedMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedStaticIpPoolInput)(nil)).Elem(), GetNetworkIsolatedStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedStaticIpPoolArrayInput)(nil)).Elem(), GetNetworkIsolatedStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedV2FilterInput)(nil)).Elem(), GetNetworkIsolatedV2FilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedV2FilterPtrInput)(nil)).Elem(), GetNetworkIsolatedV2FilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedV2MetadataEntryInput)(nil)).Elem(), GetNetworkIsolatedV2MetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedV2MetadataEntryArrayInput)(nil)).Elem(), GetNetworkIsolatedV2MetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedV2SecondaryStaticIpPoolInput)(nil)).Elem(), GetNetworkIsolatedV2SecondaryStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedV2SecondaryStaticIpPoolArrayInput)(nil)).Elem(), GetNetworkIsolatedV2SecondaryStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedV2StaticIpPoolInput)(nil)).Elem(), GetNetworkIsolatedV2StaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkIsolatedV2StaticIpPoolArrayInput)(nil)).Elem(), GetNetworkIsolatedV2StaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPoolBackingInput)(nil)).Elem(), GetNetworkPoolBackingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPoolBackingArrayInput)(nil)).Elem(), GetNetworkPoolBackingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPoolBackingDistributedSwitchInput)(nil)).Elem(), GetNetworkPoolBackingDistributedSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPoolBackingDistributedSwitchArrayInput)(nil)).Elem(), GetNetworkPoolBackingDistributedSwitchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPoolBackingPortGroupInput)(nil)).Elem(), GetNetworkPoolBackingPortGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPoolBackingPortGroupArrayInput)(nil)).Elem(), GetNetworkPoolBackingPortGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPoolBackingRangeIdInput)(nil)).Elem(), GetNetworkPoolBackingRangeIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPoolBackingRangeIdArrayInput)(nil)).Elem(), GetNetworkPoolBackingRangeIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPoolBackingTransportZoneInput)(nil)).Elem(), GetNetworkPoolBackingTransportZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPoolBackingTransportZoneArrayInput)(nil)).Elem(), GetNetworkPoolBackingTransportZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedDhcpPoolInput)(nil)).Elem(), GetNetworkRoutedDhcpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedDhcpPoolArrayInput)(nil)).Elem(), GetNetworkRoutedDhcpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedFilterInput)(nil)).Elem(), GetNetworkRoutedFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedFilterPtrInput)(nil)).Elem(), GetNetworkRoutedFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedFilterMetadataInput)(nil)).Elem(), GetNetworkRoutedFilterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedFilterMetadataArrayInput)(nil)).Elem(), GetNetworkRoutedFilterMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedMetadataEntryInput)(nil)).Elem(), GetNetworkRoutedMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedMetadataEntryArrayInput)(nil)).Elem(), GetNetworkRoutedMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedStaticIpPoolInput)(nil)).Elem(), GetNetworkRoutedStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedStaticIpPoolArrayInput)(nil)).Elem(), GetNetworkRoutedStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedV2FilterInput)(nil)).Elem(), GetNetworkRoutedV2FilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedV2FilterPtrInput)(nil)).Elem(), GetNetworkRoutedV2FilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedV2MetadataEntryInput)(nil)).Elem(), GetNetworkRoutedV2MetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedV2MetadataEntryArrayInput)(nil)).Elem(), GetNetworkRoutedV2MetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedV2SecondaryStaticIpPoolInput)(nil)).Elem(), GetNetworkRoutedV2SecondaryStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedV2SecondaryStaticIpPoolArrayInput)(nil)).Elem(), GetNetworkRoutedV2SecondaryStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedV2StaticIpPoolInput)(nil)).Elem(), GetNetworkRoutedV2StaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkRoutedV2StaticIpPoolArrayInput)(nil)).Elem(), GetNetworkRoutedV2StaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbPoolHealthMonitorInput)(nil)).Elem(), GetNsxtAlbPoolHealthMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbPoolHealthMonitorArrayInput)(nil)).Elem(), GetNsxtAlbPoolHealthMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbPoolMemberInput)(nil)).Elem(), GetNsxtAlbPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbPoolMemberArrayInput)(nil)).Elem(), GetNsxtAlbPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbPoolPersistenceProfileInput)(nil)).Elem(), GetNsxtAlbPoolPersistenceProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbPoolPersistenceProfileArrayInput)(nil)).Elem(), GetNsxtAlbPoolPersistenceProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleActionInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceServicePortInput)(nil)).Elem(), GetNsxtAlbVirtualServiceServicePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAlbVirtualServiceServicePortArrayInput)(nil)).Elem(), GetNsxtAlbVirtualServiceServicePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAppPortProfileAppPortInput)(nil)).Elem(), GetNsxtAppPortProfileAppPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtAppPortProfileAppPortArrayInput)(nil)).Elem(), GetNsxtAppPortProfileAppPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtDistributedFirewallRuleTypeInput)(nil)).Elem(), GetNsxtDistributedFirewallRuleTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtDistributedFirewallRuleTypeArrayInput)(nil)).Elem(), GetNsxtDistributedFirewallRuleTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtDynamicSecurityGroupCriteriaInput)(nil)).Elem(), GetNsxtDynamicSecurityGroupCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtDynamicSecurityGroupCriteriaArrayInput)(nil)).Elem(), GetNsxtDynamicSecurityGroupCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtDynamicSecurityGroupCriteriaRuleInput)(nil)).Elem(), GetNsxtDynamicSecurityGroupCriteriaRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtDynamicSecurityGroupCriteriaRuleArrayInput)(nil)).Elem(), GetNsxtDynamicSecurityGroupCriteriaRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtDynamicSecurityGroupMemberVmInput)(nil)).Elem(), GetNsxtDynamicSecurityGroupMemberVmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtDynamicSecurityGroupMemberVmArrayInput)(nil)).Elem(), GetNsxtDynamicSecurityGroupMemberVmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayBgpIpPrefixListIpPrefixInput)(nil)).Elem(), GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayInput)(nil)).Elem(), GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayDnsConditionalForwarderZoneInput)(nil)).Elem(), GetNsxtEdgegatewayDnsConditionalForwarderZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayInput)(nil)).Elem(), GetNsxtEdgegatewayDnsConditionalForwarderZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayDnsDefaultForwarderZoneInput)(nil)).Elem(), GetNsxtEdgegatewayDnsDefaultForwarderZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayInput)(nil)).Elem(), GetNsxtEdgegatewayDnsDefaultForwarderZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayExternalNetworkInput)(nil)).Elem(), GetNsxtEdgegatewayExternalNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayExternalNetworkArrayInput)(nil)).Elem(), GetNsxtEdgegatewayExternalNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkInput)(nil)).Elem(), GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayInput)(nil)).Elem(), GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayStaticRouteNextHopInput)(nil)).Elem(), GetNsxtEdgegatewayStaticRouteNextHopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayStaticRouteNextHopArrayInput)(nil)).Elem(), GetNsxtEdgegatewayStaticRouteNextHopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayStaticRouteNextHopScopeInput)(nil)).Elem(), GetNsxtEdgegatewayStaticRouteNextHopScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewayStaticRouteNextHopScopeArrayInput)(nil)).Elem(), GetNsxtEdgegatewayStaticRouteNextHopScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewaySubnetInput)(nil)).Elem(), GetNsxtEdgegatewaySubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewaySubnetArrayInput)(nil)).Elem(), GetNsxtEdgegatewaySubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewaySubnetAllocatedIpInput)(nil)).Elem(), GetNsxtEdgegatewaySubnetAllocatedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewaySubnetAllocatedIpArrayInput)(nil)).Elem(), GetNsxtEdgegatewaySubnetAllocatedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewaySubnetWithIpCountInput)(nil)).Elem(), GetNsxtEdgegatewaySubnetWithIpCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewaySubnetWithIpCountArrayInput)(nil)).Elem(), GetNsxtEdgegatewaySubnetWithIpCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewaySubnetWithTotalIpCountInput)(nil)).Elem(), GetNsxtEdgegatewaySubnetWithTotalIpCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtEdgegatewaySubnetWithTotalIpCountArrayInput)(nil)).Elem(), GetNsxtEdgegatewaySubnetWithTotalIpCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtFirewallRuleInput)(nil)).Elem(), GetNsxtFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtFirewallRuleArrayInput)(nil)).Elem(), GetNsxtFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtIpsecVpnTunnelSecurityProfileCustomizationInput)(nil)).Elem(), GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayInput)(nil)).Elem(), GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkDhcpBindingDhcpV4ConfigInput)(nil)).Elem(), GetNsxtNetworkDhcpBindingDhcpV4ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayInput)(nil)).Elem(), GetNsxtNetworkDhcpBindingDhcpV4ConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkDhcpBindingDhcpV6ConfigInput)(nil)).Elem(), GetNsxtNetworkDhcpBindingDhcpV6ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayInput)(nil)).Elem(), GetNsxtNetworkDhcpBindingDhcpV6ConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkDhcpPoolInput)(nil)).Elem(), GetNsxtNetworkDhcpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkDhcpPoolArrayInput)(nil)).Elem(), GetNsxtNetworkDhcpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkImportedFilterInput)(nil)).Elem(), GetNsxtNetworkImportedFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkImportedFilterPtrInput)(nil)).Elem(), GetNsxtNetworkImportedFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkImportedSecondaryStaticIpPoolInput)(nil)).Elem(), GetNsxtNetworkImportedSecondaryStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkImportedSecondaryStaticIpPoolArrayInput)(nil)).Elem(), GetNsxtNetworkImportedSecondaryStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkImportedStaticIpPoolInput)(nil)).Elem(), GetNsxtNetworkImportedStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtNetworkImportedStaticIpPoolArrayInput)(nil)).Elem(), GetNsxtNetworkImportedStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtSecurityGroupMemberVmInput)(nil)).Elem(), GetNsxtSecurityGroupMemberVmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxtSecurityGroupMemberVmArrayInput)(nil)).Elem(), GetNsxtSecurityGroupMemberVmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvApplicationFinderObjectInput)(nil)).Elem(), GetNsxvApplicationFinderObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvApplicationFinderObjectArrayInput)(nil)).Elem(), GetNsxvApplicationFinderObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvApplicationGroupApplicationInput)(nil)).Elem(), GetNsxvApplicationGroupApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvApplicationGroupApplicationArrayInput)(nil)).Elem(), GetNsxvApplicationGroupApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDhcpRelayRelayAgentInput)(nil)).Elem(), GetNsxvDhcpRelayRelayAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDhcpRelayRelayAgentArrayInput)(nil)).Elem(), GetNsxvDhcpRelayRelayAgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDistributedFirewallRuleInput)(nil)).Elem(), GetNsxvDistributedFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDistributedFirewallRuleArrayInput)(nil)).Elem(), GetNsxvDistributedFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDistributedFirewallRuleApplicationInput)(nil)).Elem(), GetNsxvDistributedFirewallRuleApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDistributedFirewallRuleApplicationArrayInput)(nil)).Elem(), GetNsxvDistributedFirewallRuleApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDistributedFirewallRuleAppliedToInput)(nil)).Elem(), GetNsxvDistributedFirewallRuleAppliedToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDistributedFirewallRuleAppliedToArrayInput)(nil)).Elem(), GetNsxvDistributedFirewallRuleAppliedToArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDistributedFirewallRuleDestinationInput)(nil)).Elem(), GetNsxvDistributedFirewallRuleDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDistributedFirewallRuleDestinationArrayInput)(nil)).Elem(), GetNsxvDistributedFirewallRuleDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDistributedFirewallRuleSourceInput)(nil)).Elem(), GetNsxvDistributedFirewallRuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvDistributedFirewallRuleSourceArrayInput)(nil)).Elem(), GetNsxvDistributedFirewallRuleSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvFirewallRuleDestinationInput)(nil)).Elem(), GetNsxvFirewallRuleDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvFirewallRuleDestinationArrayInput)(nil)).Elem(), GetNsxvFirewallRuleDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvFirewallRuleServiceInput)(nil)).Elem(), GetNsxvFirewallRuleServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvFirewallRuleServiceArrayInput)(nil)).Elem(), GetNsxvFirewallRuleServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvFirewallRuleSourceInput)(nil)).Elem(), GetNsxvFirewallRuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsxvFirewallRuleSourceArrayInput)(nil)).Elem(), GetNsxvFirewallRuleSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgAccountLockoutInput)(nil)).Elem(), GetOrgAccountLockoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgAccountLockoutArrayInput)(nil)).Elem(), GetOrgAccountLockoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgLdapCustomSettingInput)(nil)).Elem(), GetOrgLdapCustomSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgLdapCustomSettingArrayInput)(nil)).Elem(), GetOrgLdapCustomSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgLdapCustomSettingGroupAttributeInput)(nil)).Elem(), GetOrgLdapCustomSettingGroupAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgLdapCustomSettingGroupAttributeArrayInput)(nil)).Elem(), GetOrgLdapCustomSettingGroupAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgLdapCustomSettingUserAttributeInput)(nil)).Elem(), GetOrgLdapCustomSettingUserAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgLdapCustomSettingUserAttributeArrayInput)(nil)).Elem(), GetOrgLdapCustomSettingUserAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgMetadataEntryInput)(nil)).Elem(), GetOrgMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgMetadataEntryArrayInput)(nil)).Elem(), GetOrgMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgOidcClaimsMappingInput)(nil)).Elem(), GetOrgOidcClaimsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgOidcClaimsMappingArrayInput)(nil)).Elem(), GetOrgOidcClaimsMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgOidcKeyInput)(nil)).Elem(), GetOrgOidcKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgOidcKeyArrayInput)(nil)).Elem(), GetOrgOidcKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVappLeaseInput)(nil)).Elem(), GetOrgVappLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVappLeaseArrayInput)(nil)).Elem(), GetOrgVappLeaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVappTemplateLeaseInput)(nil)).Elem(), GetOrgVappTemplateLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVappTemplateLeaseArrayInput)(nil)).Elem(), GetOrgVappTemplateLeaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcComputeCapacityInput)(nil)).Elem(), GetOrgVdcComputeCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcComputeCapacityArrayInput)(nil)).Elem(), GetOrgVdcComputeCapacityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcComputeCapacityCpusInput)(nil)).Elem(), GetOrgVdcComputeCapacityCpusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcComputeCapacityCpusArrayInput)(nil)).Elem(), GetOrgVdcComputeCapacityCpusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcComputeCapacityMemoryInput)(nil)).Elem(), GetOrgVdcComputeCapacityMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcComputeCapacityMemoryArrayInput)(nil)).Elem(), GetOrgVdcComputeCapacityMemoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcMetadataEntryInput)(nil)).Elem(), GetOrgVdcMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcMetadataEntryArrayInput)(nil)).Elem(), GetOrgVdcMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcStorageProfileInput)(nil)).Elem(), GetOrgVdcStorageProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcStorageProfileArrayInput)(nil)).Elem(), GetOrgVdcStorageProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcTemplateComputeConfigurationInput)(nil)).Elem(), GetOrgVdcTemplateComputeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcTemplateComputeConfigurationArrayInput)(nil)).Elem(), GetOrgVdcTemplateComputeConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcTemplateEdgeGatewayInput)(nil)).Elem(), GetOrgVdcTemplateEdgeGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcTemplateEdgeGatewayArrayInput)(nil)).Elem(), GetOrgVdcTemplateEdgeGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcTemplateEdgeGatewayStaticIpPoolInput)(nil)).Elem(), GetOrgVdcTemplateEdgeGatewayStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayInput)(nil)).Elem(), GetOrgVdcTemplateEdgeGatewayStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcTemplateProviderVdcInput)(nil)).Elem(), GetOrgVdcTemplateProviderVdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcTemplateProviderVdcArrayInput)(nil)).Elem(), GetOrgVdcTemplateProviderVdcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcTemplateStorageProfileInput)(nil)).Elem(), GetOrgVdcTemplateStorageProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgVdcTemplateStorageProfileArrayInput)(nil)).Elem(), GetOrgVdcTemplateStorageProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProviderVdcComputeCapacityInput)(nil)).Elem(), GetProviderVdcComputeCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProviderVdcComputeCapacityArrayInput)(nil)).Elem(), GetProviderVdcComputeCapacityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProviderVdcComputeCapacityCpusInput)(nil)).Elem(), GetProviderVdcComputeCapacityCpusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProviderVdcComputeCapacityCpusArrayInput)(nil)).Elem(), GetProviderVdcComputeCapacityCpusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProviderVdcComputeCapacityMemoryInput)(nil)).Elem(), GetProviderVdcComputeCapacityMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProviderVdcComputeCapacityMemoryArrayInput)(nil)).Elem(), GetProviderVdcComputeCapacityMemoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProviderVdcMetadataEntryInput)(nil)).Elem(), GetProviderVdcMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProviderVdcMetadataEntryArrayInput)(nil)).Elem(), GetProviderVdcMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdeMetadataEntryInput)(nil)).Elem(), GetRdeMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdeMetadataEntryArrayInput)(nil)).Elem(), GetRdeMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdeTypeHookInput)(nil)).Elem(), GetRdeTypeHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRdeTypeHookArrayInput)(nil)).Elem(), GetRdeTypeHookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceSchemaAttributeInput)(nil)).Elem(), GetResourceSchemaAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceSchemaAttributeArrayInput)(nil)).Elem(), GetResourceSchemaAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceSchemaBlockAttributeInput)(nil)).Elem(), GetResourceSchemaBlockAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceSchemaBlockAttributeArrayInput)(nil)).Elem(), GetResourceSchemaBlockAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceSchemaBlockAttributeAttributeInput)(nil)).Elem(), GetResourceSchemaBlockAttributeAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceSchemaBlockAttributeAttributeArrayInput)(nil)).Elem(), GetResourceSchemaBlockAttributeAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRightImpliedRightInput)(nil)).Elem(), GetRightImpliedRightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRightImpliedRightArrayInput)(nil)).Elem(), GetRightImpliedRightArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSolutionLandingZoneCatalogInput)(nil)).Elem(), GetSolutionLandingZoneCatalogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSolutionLandingZoneCatalogArrayInput)(nil)).Elem(), GetSolutionLandingZoneCatalogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSolutionLandingZoneVdcInput)(nil)).Elem(), GetSolutionLandingZoneVdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSolutionLandingZoneVdcArrayInput)(nil)).Elem(), GetSolutionLandingZoneVdcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSolutionLandingZoneVdcComputePolicyInput)(nil)).Elem(), GetSolutionLandingZoneVdcComputePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSolutionLandingZoneVdcComputePolicyArrayInput)(nil)).Elem(), GetSolutionLandingZoneVdcComputePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSolutionLandingZoneVdcOrgVdcNetworkInput)(nil)).Elem(), GetSolutionLandingZoneVdcOrgVdcNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSolutionLandingZoneVdcOrgVdcNetworkArrayInput)(nil)).Elem(), GetSolutionLandingZoneVdcOrgVdcNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSolutionLandingZoneVdcStoragePolicyInput)(nil)).Elem(), GetSolutionLandingZoneVdcStoragePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSolutionLandingZoneVdcStoragePolicyArrayInput)(nil)).Elem(), GetSolutionLandingZoneVdcStoragePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageProfileIopsSettingInput)(nil)).Elem(), GetStorageProfileIopsSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageProfileIopsSettingArrayInput)(nil)).Elem(), GetStorageProfileIopsSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageProfileMetadataEntryInput)(nil)).Elem(), GetStorageProfileMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageProfileMetadataEntryArrayInput)(nil)).Elem(), GetStorageProfileMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscribedCatalogFilterInput)(nil)).Elem(), GetSubscribedCatalogFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscribedCatalogFilterPtrInput)(nil)).Elem(), GetSubscribedCatalogFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscribedCatalogFilterMetadataInput)(nil)).Elem(), GetSubscribedCatalogFilterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscribedCatalogFilterMetadataArrayInput)(nil)).Elem(), GetSubscribedCatalogFilterMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappLeaseInput)(nil)).Elem(), GetVappLeaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappLeaseArrayInput)(nil)).Elem(), GetVappLeaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappMetadataEntryInput)(nil)).Elem(), GetVappMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappMetadataEntryArrayInput)(nil)).Elem(), GetVappMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappNetworkDhcpPoolInput)(nil)).Elem(), GetVappNetworkDhcpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappNetworkDhcpPoolArrayInput)(nil)).Elem(), GetVappNetworkDhcpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappNetworkStaticIpPoolInput)(nil)).Elem(), GetVappNetworkStaticIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappNetworkStaticIpPoolArrayInput)(nil)).Elem(), GetVappNetworkStaticIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmBootOptionInput)(nil)).Elem(), GetVappVmBootOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmBootOptionArrayInput)(nil)).Elem(), GetVappVmBootOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmCustomizationInput)(nil)).Elem(), GetVappVmCustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmCustomizationArrayInput)(nil)).Elem(), GetVappVmCustomizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmDiskInput)(nil)).Elem(), GetVappVmDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmDiskArrayInput)(nil)).Elem(), GetVappVmDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmExtraConfigInput)(nil)).Elem(), GetVappVmExtraConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmExtraConfigArrayInput)(nil)).Elem(), GetVappVmExtraConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmInternalDiskInput)(nil)).Elem(), GetVappVmInternalDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmInternalDiskArrayInput)(nil)).Elem(), GetVappVmInternalDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmMetadataEntryInput)(nil)).Elem(), GetVappVmMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmMetadataEntryArrayInput)(nil)).Elem(), GetVappVmMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmNetworkInput)(nil)).Elem(), GetVappVmNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVappVmNetworkArrayInput)(nil)).Elem(), GetVappVmNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVdcGroupParticipatingOrgVdcInput)(nil)).Elem(), GetVdcGroupParticipatingOrgVdcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVdcGroupParticipatingOrgVdcArrayInput)(nil)).Elem(), GetVdcGroupParticipatingOrgVdcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmBootOptionInput)(nil)).Elem(), GetVmBootOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmBootOptionArrayInput)(nil)).Elem(), GetVmBootOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmCustomizationInput)(nil)).Elem(), GetVmCustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmCustomizationArrayInput)(nil)).Elem(), GetVmCustomizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmDiskInput)(nil)).Elem(), GetVmDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmDiskArrayInput)(nil)).Elem(), GetVmDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmExtraConfigInput)(nil)).Elem(), GetVmExtraConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmExtraConfigArrayInput)(nil)).Elem(), GetVmExtraConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmInternalDiskTypeInput)(nil)).Elem(), GetVmInternalDiskTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmInternalDiskTypeArrayInput)(nil)).Elem(), GetVmInternalDiskTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmMetadataEntryInput)(nil)).Elem(), GetVmMetadataEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmMetadataEntryArrayInput)(nil)).Elem(), GetVmMetadataEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNetworkInput)(nil)).Elem(), GetVmNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmNetworkArrayInput)(nil)).Elem(), GetVmNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmSizingPolicyCpusInput)(nil)).Elem(), GetVmSizingPolicyCpusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmSizingPolicyCpusArrayInput)(nil)).Elem(), GetVmSizingPolicyCpusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmSizingPolicyMemoryInput)(nil)).Elem(), GetVmSizingPolicyMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmSizingPolicyMemoryArrayInput)(nil)).Elem(), GetVmSizingPolicyMemoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmVgpuPolicyCpusInput)(nil)).Elem(), GetVmVgpuPolicyCpusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmVgpuPolicyCpusArrayInput)(nil)).Elem(), GetVmVgpuPolicyCpusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmVgpuPolicyMemoryInput)(nil)).Elem(), GetVmVgpuPolicyMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmVgpuPolicyMemoryArrayInput)(nil)).Elem(), GetVmVgpuPolicyMemoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmVgpuPolicyProviderVdcScopeInput)(nil)).Elem(), GetVmVgpuPolicyProviderVdcScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmVgpuPolicyProviderVdcScopeArrayInput)(nil)).Elem(), GetVmVgpuPolicyProviderVdcScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmVgpuPolicyVgpuProfileInput)(nil)).Elem(), GetVmVgpuPolicyVgpuProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmVgpuPolicyVgpuProfileArrayInput)(nil)).Elem(), GetVmVgpuPolicyVgpuProfileArray{})
	pulumi.RegisterOutputType(CatalogAccessControlSharedWithOutput{})
	pulumi.RegisterOutputType(CatalogAccessControlSharedWithArrayOutput{})
	pulumi.RegisterOutputType(CatalogItemMetadataEntryOutput{})
	pulumi.RegisterOutputType(CatalogItemMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(CatalogMediaMetadataEntryOutput{})
	pulumi.RegisterOutputType(CatalogMediaMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(CatalogMetadataEntryOutput{})
	pulumi.RegisterOutputType(CatalogMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(CatalogVappTemplateCaptureVappOutput{})
	pulumi.RegisterOutputType(CatalogVappTemplateCaptureVappPtrOutput{})
	pulumi.RegisterOutputType(CatalogVappTemplateLeaseOutput{})
	pulumi.RegisterOutputType(CatalogVappTemplateLeasePtrOutput{})
	pulumi.RegisterOutputType(CatalogVappTemplateMetadataEntryOutput{})
	pulumi.RegisterOutputType(CatalogVappTemplateMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(CseKubernetesClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(CseKubernetesClusterControlPlanePtrOutput{})
	pulumi.RegisterOutputType(CseKubernetesClusterDefaultStorageClassOutput{})
	pulumi.RegisterOutputType(CseKubernetesClusterDefaultStorageClassPtrOutput{})
	pulumi.RegisterOutputType(CseKubernetesClusterEventOutput{})
	pulumi.RegisterOutputType(CseKubernetesClusterEventArrayOutput{})
	pulumi.RegisterOutputType(CseKubernetesClusterWorkerPoolOutput{})
	pulumi.RegisterOutputType(CseKubernetesClusterWorkerPoolArrayOutput{})
	pulumi.RegisterOutputType(DseRegistryConfigurationContainerRegistryOutput{})
	pulumi.RegisterOutputType(DseRegistryConfigurationContainerRegistryArrayOutput{})
	pulumi.RegisterOutputType(EdgegatewayExternalNetworkOutput{})
	pulumi.RegisterOutputType(EdgegatewayExternalNetworkArrayOutput{})
	pulumi.RegisterOutputType(EdgegatewayExternalNetworkSubnetOutput{})
	pulumi.RegisterOutputType(EdgegatewayExternalNetworkSubnetArrayOutput{})
	pulumi.RegisterOutputType(EdgegatewayExternalNetworkSubnetSuballocatePoolOutput{})
	pulumi.RegisterOutputType(EdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput{})
	pulumi.RegisterOutputType(EdgegatewayVpnLocalSubnetOutput{})
	pulumi.RegisterOutputType(EdgegatewayVpnLocalSubnetArrayOutput{})
	pulumi.RegisterOutputType(EdgegatewayVpnPeerSubnetOutput{})
	pulumi.RegisterOutputType(EdgegatewayVpnPeerSubnetArrayOutput{})
	pulumi.RegisterOutputType(ExternalNetworkIpScopeOutput{})
	pulumi.RegisterOutputType(ExternalNetworkIpScopeArrayOutput{})
	pulumi.RegisterOutputType(ExternalNetworkIpScopeStaticIpPoolOutput{})
	pulumi.RegisterOutputType(ExternalNetworkIpScopeStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(ExternalNetworkV2IpScopeOutput{})
	pulumi.RegisterOutputType(ExternalNetworkV2IpScopeArrayOutput{})
	pulumi.RegisterOutputType(ExternalNetworkV2IpScopeStaticIpPoolOutput{})
	pulumi.RegisterOutputType(ExternalNetworkV2IpScopeStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(ExternalNetworkV2NsxtNetworkOutput{})
	pulumi.RegisterOutputType(ExternalNetworkV2NsxtNetworkPtrOutput{})
	pulumi.RegisterOutputType(ExternalNetworkV2VsphereNetworkOutput{})
	pulumi.RegisterOutputType(ExternalNetworkV2VsphereNetworkArrayOutput{})
	pulumi.RegisterOutputType(ExternalNetworkVsphereNetworkOutput{})
	pulumi.RegisterOutputType(ExternalNetworkVsphereNetworkArrayOutput{})
	pulumi.RegisterOutputType(IndependentDiskMetadataEntryOutput{})
	pulumi.RegisterOutputType(IndependentDiskMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(IpSpaceCustomQuotaIpPrefixQuotaOutput{})
	pulumi.RegisterOutputType(IpSpaceCustomQuotaIpPrefixQuotaArrayOutput{})
	pulumi.RegisterOutputType(IpSpaceIpPrefixOutput{})
	pulumi.RegisterOutputType(IpSpaceIpPrefixArrayOutput{})
	pulumi.RegisterOutputType(IpSpaceIpPrefixPrefixOutput{})
	pulumi.RegisterOutputType(IpSpaceIpPrefixPrefixArrayOutput{})
	pulumi.RegisterOutputType(IpSpaceIpRangeOutput{})
	pulumi.RegisterOutputType(IpSpaceIpRangeArrayOutput{})
	pulumi.RegisterOutputType(LbServerPoolMemberOutput{})
	pulumi.RegisterOutputType(LbServerPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(NetworkDirectMetadataEntryOutput{})
	pulumi.RegisterOutputType(NetworkDirectMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedDhcpPoolOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedDhcpPoolArrayOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedMetadataEntryOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedStaticIpPoolOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedV2MetadataEntryOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedV2MetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedV2SecondaryStaticIpPoolOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedV2SecondaryStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedV2StaticIpPoolOutput{})
	pulumi.RegisterOutputType(NetworkIsolatedV2StaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NetworkPoolBackingOutput{})
	pulumi.RegisterOutputType(NetworkPoolBackingPtrOutput{})
	pulumi.RegisterOutputType(NetworkPoolBackingDistributedSwitchOutput{})
	pulumi.RegisterOutputType(NetworkPoolBackingDistributedSwitchPtrOutput{})
	pulumi.RegisterOutputType(NetworkPoolBackingPortGroupOutput{})
	pulumi.RegisterOutputType(NetworkPoolBackingPortGroupArrayOutput{})
	pulumi.RegisterOutputType(NetworkPoolBackingRangeIdOutput{})
	pulumi.RegisterOutputType(NetworkPoolBackingRangeIdArrayOutput{})
	pulumi.RegisterOutputType(NetworkPoolBackingTransportZoneOutput{})
	pulumi.RegisterOutputType(NetworkPoolBackingTransportZonePtrOutput{})
	pulumi.RegisterOutputType(NetworkRoutedDhcpPoolOutput{})
	pulumi.RegisterOutputType(NetworkRoutedDhcpPoolArrayOutput{})
	pulumi.RegisterOutputType(NetworkRoutedMetadataEntryOutput{})
	pulumi.RegisterOutputType(NetworkRoutedMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkRoutedStaticIpPoolOutput{})
	pulumi.RegisterOutputType(NetworkRoutedStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NetworkRoutedV2MetadataEntryOutput{})
	pulumi.RegisterOutputType(NetworkRoutedV2MetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkRoutedV2SecondaryStaticIpPoolOutput{})
	pulumi.RegisterOutputType(NetworkRoutedV2SecondaryStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NetworkRoutedV2StaticIpPoolOutput{})
	pulumi.RegisterOutputType(NetworkRoutedV2StaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbPoolHealthMonitorOutput{})
	pulumi.RegisterOutputType(NsxtAlbPoolHealthMonitorArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbPoolMemberOutput{})
	pulumi.RegisterOutputType(NsxtAlbPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbPoolPersistenceProfileOutput{})
	pulumi.RegisterOutputType(NsxtAlbPoolPersistenceProfilePtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleActionsOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleActionsModifyHeaderArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRedirectPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleActionsRewriteUrlPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookiePtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodsPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortsPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleActionsOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleActionsModifyHeaderArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleActionsRewriteLocationHeaderPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookiePtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodsPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortsPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodePtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleActionsOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionLocalResponseArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleActionsRateLimitActionRedirectArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponseOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleActionsSendResponsePtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookiePtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodsPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortsPtrOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceServicePortOutput{})
	pulumi.RegisterOutputType(NsxtAlbVirtualServiceServicePortArrayOutput{})
	pulumi.RegisterOutputType(NsxtAppPortProfileAppPortOutput{})
	pulumi.RegisterOutputType(NsxtAppPortProfileAppPortArrayOutput{})
	pulumi.RegisterOutputType(NsxtDistributedFirewallRuleTypeOutput{})
	pulumi.RegisterOutputType(NsxtDistributedFirewallRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(NsxtDynamicSecurityGroupCriteriaOutput{})
	pulumi.RegisterOutputType(NsxtDynamicSecurityGroupCriteriaArrayOutput{})
	pulumi.RegisterOutputType(NsxtDynamicSecurityGroupCriteriaRuleOutput{})
	pulumi.RegisterOutputType(NsxtDynamicSecurityGroupCriteriaRuleArrayOutput{})
	pulumi.RegisterOutputType(NsxtDynamicSecurityGroupMemberVmOutput{})
	pulumi.RegisterOutputType(NsxtDynamicSecurityGroupMemberVmArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayBgpIpPrefixListIpPrefixOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayDnsConditionalForwarderZoneOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayDnsDefaultForwarderZoneOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayDnsDefaultForwarderZonePtrOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayExternalNetworkOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayExternalNetworkArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayStaticRouteNextHopOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayStaticRouteNextHopArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayStaticRouteNextHopScopeOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayStaticRouteNextHopScopePtrOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewaySubnetOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewaySubnetArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewaySubnetAllocatedIpOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewaySubnetAllocatedIpArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewaySubnetWithIpCountOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewaySubnetWithIpCountArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewaySubnetWithTotalIpCountOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewaySubnetWithTotalIpCountArrayOutput{})
	pulumi.RegisterOutputType(NsxtFirewallRuleOutput{})
	pulumi.RegisterOutputType(NsxtFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(NsxtIpsecVpnTunnelSecurityProfileCustomizationOutput{})
	pulumi.RegisterOutputType(NsxtIpsecVpnTunnelSecurityProfileCustomizationPtrOutput{})
	pulumi.RegisterOutputType(NsxtNetworkDhcpBindingDhcpV4ConfigOutput{})
	pulumi.RegisterOutputType(NsxtNetworkDhcpBindingDhcpV4ConfigPtrOutput{})
	pulumi.RegisterOutputType(NsxtNetworkDhcpBindingDhcpV6ConfigOutput{})
	pulumi.RegisterOutputType(NsxtNetworkDhcpBindingDhcpV6ConfigPtrOutput{})
	pulumi.RegisterOutputType(NsxtNetworkDhcpPoolOutput{})
	pulumi.RegisterOutputType(NsxtNetworkDhcpPoolArrayOutput{})
	pulumi.RegisterOutputType(NsxtNetworkImportedSecondaryStaticIpPoolOutput{})
	pulumi.RegisterOutputType(NsxtNetworkImportedSecondaryStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NsxtNetworkImportedStaticIpPoolOutput{})
	pulumi.RegisterOutputType(NsxtNetworkImportedStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NsxtSecurityGroupMemberVmOutput{})
	pulumi.RegisterOutputType(NsxtSecurityGroupMemberVmArrayOutput{})
	pulumi.RegisterOutputType(NsxvDhcpRelayRelayAgentOutput{})
	pulumi.RegisterOutputType(NsxvDhcpRelayRelayAgentArrayOutput{})
	pulumi.RegisterOutputType(NsxvDistributedFirewallRuleOutput{})
	pulumi.RegisterOutputType(NsxvDistributedFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(NsxvDistributedFirewallRuleApplicationOutput{})
	pulumi.RegisterOutputType(NsxvDistributedFirewallRuleApplicationArrayOutput{})
	pulumi.RegisterOutputType(NsxvDistributedFirewallRuleAppliedToOutput{})
	pulumi.RegisterOutputType(NsxvDistributedFirewallRuleAppliedToArrayOutput{})
	pulumi.RegisterOutputType(NsxvDistributedFirewallRuleDestinationOutput{})
	pulumi.RegisterOutputType(NsxvDistributedFirewallRuleDestinationArrayOutput{})
	pulumi.RegisterOutputType(NsxvDistributedFirewallRuleSourceOutput{})
	pulumi.RegisterOutputType(NsxvDistributedFirewallRuleSourceArrayOutput{})
	pulumi.RegisterOutputType(NsxvFirewallRuleDestinationOutput{})
	pulumi.RegisterOutputType(NsxvFirewallRuleDestinationPtrOutput{})
	pulumi.RegisterOutputType(NsxvFirewallRuleServiceOutput{})
	pulumi.RegisterOutputType(NsxvFirewallRuleServiceArrayOutput{})
	pulumi.RegisterOutputType(NsxvFirewallRuleSourceOutput{})
	pulumi.RegisterOutputType(NsxvFirewallRuleSourcePtrOutput{})
	pulumi.RegisterOutputType(OrgAccountLockoutOutput{})
	pulumi.RegisterOutputType(OrgAccountLockoutPtrOutput{})
	pulumi.RegisterOutputType(OrgLdapCustomSettingsOutput{})
	pulumi.RegisterOutputType(OrgLdapCustomSettingsPtrOutput{})
	pulumi.RegisterOutputType(OrgLdapCustomSettingsGroupAttributesOutput{})
	pulumi.RegisterOutputType(OrgLdapCustomSettingsGroupAttributesPtrOutput{})
	pulumi.RegisterOutputType(OrgLdapCustomSettingsUserAttributesOutput{})
	pulumi.RegisterOutputType(OrgLdapCustomSettingsUserAttributesPtrOutput{})
	pulumi.RegisterOutputType(OrgMetadataEntryOutput{})
	pulumi.RegisterOutputType(OrgMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(OrgOidcClaimsMappingOutput{})
	pulumi.RegisterOutputType(OrgOidcClaimsMappingPtrOutput{})
	pulumi.RegisterOutputType(OrgOidcKeyOutput{})
	pulumi.RegisterOutputType(OrgOidcKeyArrayOutput{})
	pulumi.RegisterOutputType(OrgVappLeaseOutput{})
	pulumi.RegisterOutputType(OrgVappLeasePtrOutput{})
	pulumi.RegisterOutputType(OrgVappTemplateLeaseOutput{})
	pulumi.RegisterOutputType(OrgVappTemplateLeasePtrOutput{})
	pulumi.RegisterOutputType(OrgVdcAccessControlSharedWithOutput{})
	pulumi.RegisterOutputType(OrgVdcAccessControlSharedWithArrayOutput{})
	pulumi.RegisterOutputType(OrgVdcComputeCapacityOutput{})
	pulumi.RegisterOutputType(OrgVdcComputeCapacityPtrOutput{})
	pulumi.RegisterOutputType(OrgVdcComputeCapacityCpuOutput{})
	pulumi.RegisterOutputType(OrgVdcComputeCapacityCpuPtrOutput{})
	pulumi.RegisterOutputType(OrgVdcComputeCapacityMemoryOutput{})
	pulumi.RegisterOutputType(OrgVdcComputeCapacityMemoryPtrOutput{})
	pulumi.RegisterOutputType(OrgVdcMetadataEntryOutput{})
	pulumi.RegisterOutputType(OrgVdcMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(OrgVdcStorageProfileOutput{})
	pulumi.RegisterOutputType(OrgVdcStorageProfileArrayOutput{})
	pulumi.RegisterOutputType(OrgVdcTemplateComputeConfigurationOutput{})
	pulumi.RegisterOutputType(OrgVdcTemplateComputeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OrgVdcTemplateEdgeGatewayOutput{})
	pulumi.RegisterOutputType(OrgVdcTemplateEdgeGatewayPtrOutput{})
	pulumi.RegisterOutputType(OrgVdcTemplateEdgeGatewayStaticIpPoolOutput{})
	pulumi.RegisterOutputType(OrgVdcTemplateEdgeGatewayStaticIpPoolPtrOutput{})
	pulumi.RegisterOutputType(OrgVdcTemplateProviderVdcOutput{})
	pulumi.RegisterOutputType(OrgVdcTemplateProviderVdcArrayOutput{})
	pulumi.RegisterOutputType(OrgVdcTemplateStorageProfileOutput{})
	pulumi.RegisterOutputType(OrgVdcTemplateStorageProfileArrayOutput{})
	pulumi.RegisterOutputType(ProviderIgnoreMetadataChangeOutput{})
	pulumi.RegisterOutputType(ProviderIgnoreMetadataChangeArrayOutput{})
	pulumi.RegisterOutputType(ProviderVdcComputeCapacityOutput{})
	pulumi.RegisterOutputType(ProviderVdcComputeCapacityArrayOutput{})
	pulumi.RegisterOutputType(ProviderVdcComputeCapacityCpusOutput{})
	pulumi.RegisterOutputType(ProviderVdcComputeCapacityCpusArrayOutput{})
	pulumi.RegisterOutputType(ProviderVdcComputeCapacityMemoryOutput{})
	pulumi.RegisterOutputType(ProviderVdcComputeCapacityMemoryArrayOutput{})
	pulumi.RegisterOutputType(ProviderVdcMetadataEntryOutput{})
	pulumi.RegisterOutputType(ProviderVdcMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(RdeMetadataEntryOutput{})
	pulumi.RegisterOutputType(RdeMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(RdeTypeHookOutput{})
	pulumi.RegisterOutputType(RdeTypeHookArrayOutput{})
	pulumi.RegisterOutputType(SolutionLandingZoneCatalogOutput{})
	pulumi.RegisterOutputType(SolutionLandingZoneCatalogPtrOutput{})
	pulumi.RegisterOutputType(SolutionLandingZoneVdcOutput{})
	pulumi.RegisterOutputType(SolutionLandingZoneVdcArrayOutput{})
	pulumi.RegisterOutputType(SolutionLandingZoneVdcComputePolicyOutput{})
	pulumi.RegisterOutputType(SolutionLandingZoneVdcComputePolicyArrayOutput{})
	pulumi.RegisterOutputType(SolutionLandingZoneVdcOrgVdcNetworkOutput{})
	pulumi.RegisterOutputType(SolutionLandingZoneVdcOrgVdcNetworkArrayOutput{})
	pulumi.RegisterOutputType(SolutionLandingZoneVdcStoragePolicyOutput{})
	pulumi.RegisterOutputType(SolutionLandingZoneVdcStoragePolicyArrayOutput{})
	pulumi.RegisterOutputType(VappAccessControlSharedWithOutput{})
	pulumi.RegisterOutputType(VappAccessControlSharedWithArrayOutput{})
	pulumi.RegisterOutputType(VappFirewallRulesRuleOutput{})
	pulumi.RegisterOutputType(VappFirewallRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(VappLeaseOutput{})
	pulumi.RegisterOutputType(VappLeasePtrOutput{})
	pulumi.RegisterOutputType(VappMetadataEntryOutput{})
	pulumi.RegisterOutputType(VappMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(VappNatRulesRuleOutput{})
	pulumi.RegisterOutputType(VappNatRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(VappNetworkDhcpPoolOutput{})
	pulumi.RegisterOutputType(VappNetworkDhcpPoolArrayOutput{})
	pulumi.RegisterOutputType(VappNetworkStaticIpPoolOutput{})
	pulumi.RegisterOutputType(VappNetworkStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(VappStaticRoutingRuleOutput{})
	pulumi.RegisterOutputType(VappStaticRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(VappVmBootOptionsOutput{})
	pulumi.RegisterOutputType(VappVmBootOptionsPtrOutput{})
	pulumi.RegisterOutputType(VappVmCustomizationOutput{})
	pulumi.RegisterOutputType(VappVmCustomizationPtrOutput{})
	pulumi.RegisterOutputType(VappVmDiskOutput{})
	pulumi.RegisterOutputType(VappVmDiskArrayOutput{})
	pulumi.RegisterOutputType(VappVmExtraConfigOutput{})
	pulumi.RegisterOutputType(VappVmExtraConfigArrayOutput{})
	pulumi.RegisterOutputType(VappVmInternalDiskOutput{})
	pulumi.RegisterOutputType(VappVmInternalDiskArrayOutput{})
	pulumi.RegisterOutputType(VappVmMetadataEntryOutput{})
	pulumi.RegisterOutputType(VappVmMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(VappVmNetworkOutput{})
	pulumi.RegisterOutputType(VappVmNetworkArrayOutput{})
	pulumi.RegisterOutputType(VappVmOverrideTemplateDiskOutput{})
	pulumi.RegisterOutputType(VappVmOverrideTemplateDiskArrayOutput{})
	pulumi.RegisterOutputType(VappVmSetExtraConfigOutput{})
	pulumi.RegisterOutputType(VappVmSetExtraConfigArrayOutput{})
	pulumi.RegisterOutputType(VdcGroupParticipatingOrgVdcOutput{})
	pulumi.RegisterOutputType(VdcGroupParticipatingOrgVdcArrayOutput{})
	pulumi.RegisterOutputType(VmBootOptionsOutput{})
	pulumi.RegisterOutputType(VmBootOptionsPtrOutput{})
	pulumi.RegisterOutputType(VmCustomizationOutput{})
	pulumi.RegisterOutputType(VmCustomizationPtrOutput{})
	pulumi.RegisterOutputType(VmDiskOutput{})
	pulumi.RegisterOutputType(VmDiskArrayOutput{})
	pulumi.RegisterOutputType(VmExtraConfigOutput{})
	pulumi.RegisterOutputType(VmExtraConfigArrayOutput{})
	pulumi.RegisterOutputType(VmInternalDiskTypeOutput{})
	pulumi.RegisterOutputType(VmInternalDiskTypeArrayOutput{})
	pulumi.RegisterOutputType(VmMetadataEntryOutput{})
	pulumi.RegisterOutputType(VmMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(VmNetworkOutput{})
	pulumi.RegisterOutputType(VmNetworkArrayOutput{})
	pulumi.RegisterOutputType(VmOverrideTemplateDiskOutput{})
	pulumi.RegisterOutputType(VmOverrideTemplateDiskArrayOutput{})
	pulumi.RegisterOutputType(VmSetExtraConfigOutput{})
	pulumi.RegisterOutputType(VmSetExtraConfigArrayOutput{})
	pulumi.RegisterOutputType(VmSizingPolicyCpuOutput{})
	pulumi.RegisterOutputType(VmSizingPolicyCpuPtrOutput{})
	pulumi.RegisterOutputType(VmSizingPolicyMemoryOutput{})
	pulumi.RegisterOutputType(VmSizingPolicyMemoryPtrOutput{})
	pulumi.RegisterOutputType(VmVgpuPolicyCpuOutput{})
	pulumi.RegisterOutputType(VmVgpuPolicyCpuPtrOutput{})
	pulumi.RegisterOutputType(VmVgpuPolicyMemoryOutput{})
	pulumi.RegisterOutputType(VmVgpuPolicyMemoryPtrOutput{})
	pulumi.RegisterOutputType(VmVgpuPolicyProviderVdcScopeOutput{})
	pulumi.RegisterOutputType(VmVgpuPolicyProviderVdcScopeArrayOutput{})
	pulumi.RegisterOutputType(VmVgpuPolicyVgpuProfileOutput{})
	pulumi.RegisterOutputType(VmVgpuPolicyVgpuProfilePtrOutput{})
	pulumi.RegisterOutputType(GetCatalogAccessControlSharedWithOutput{})
	pulumi.RegisterOutputType(GetCatalogAccessControlSharedWithArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogFilterOutput{})
	pulumi.RegisterOutputType(GetCatalogFilterPtrOutput{})
	pulumi.RegisterOutputType(GetCatalogFilterMetadataOutput{})
	pulumi.RegisterOutputType(GetCatalogFilterMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogItemFilterOutput{})
	pulumi.RegisterOutputType(GetCatalogItemFilterPtrOutput{})
	pulumi.RegisterOutputType(GetCatalogItemFilterMetadataOutput{})
	pulumi.RegisterOutputType(GetCatalogItemFilterMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogItemMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetCatalogItemMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogMediaFilterOutput{})
	pulumi.RegisterOutputType(GetCatalogMediaFilterPtrOutput{})
	pulumi.RegisterOutputType(GetCatalogMediaFilterMetadataOutput{})
	pulumi.RegisterOutputType(GetCatalogMediaFilterMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogMediaMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetCatalogMediaMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetCatalogMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogVappTemplateFilterOutput{})
	pulumi.RegisterOutputType(GetCatalogVappTemplateFilterPtrOutput{})
	pulumi.RegisterOutputType(GetCatalogVappTemplateFilterMetadataOutput{})
	pulumi.RegisterOutputType(GetCatalogVappTemplateFilterMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogVappTemplateLeaseOutput{})
	pulumi.RegisterOutputType(GetCatalogVappTemplateLeaseArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogVappTemplateMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetCatalogVappTemplateMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetCseKubernetesClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(GetCseKubernetesClusterControlPlaneArrayOutput{})
	pulumi.RegisterOutputType(GetCseKubernetesClusterDefaultStorageClassOutput{})
	pulumi.RegisterOutputType(GetCseKubernetesClusterDefaultStorageClassArrayOutput{})
	pulumi.RegisterOutputType(GetCseKubernetesClusterEventOutput{})
	pulumi.RegisterOutputType(GetCseKubernetesClusterEventArrayOutput{})
	pulumi.RegisterOutputType(GetCseKubernetesClusterWorkerPoolOutput{})
	pulumi.RegisterOutputType(GetCseKubernetesClusterWorkerPoolArrayOutput{})
	pulumi.RegisterOutputType(GetDseRegistryConfigurationContainerRegistryOutput{})
	pulumi.RegisterOutputType(GetDseRegistryConfigurationContainerRegistryArrayOutput{})
	pulumi.RegisterOutputType(GetEdgegatewayExternalNetworkOutput{})
	pulumi.RegisterOutputType(GetEdgegatewayExternalNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetEdgegatewayExternalNetworkSubnetOutput{})
	pulumi.RegisterOutputType(GetEdgegatewayExternalNetworkSubnetArrayOutput{})
	pulumi.RegisterOutputType(GetEdgegatewayExternalNetworkSubnetSuballocatePoolOutput{})
	pulumi.RegisterOutputType(GetEdgegatewayExternalNetworkSubnetSuballocatePoolArrayOutput{})
	pulumi.RegisterOutputType(GetEdgegatewayFilterOutput{})
	pulumi.RegisterOutputType(GetEdgegatewayFilterPtrOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkIpScopeOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkIpScopeArrayOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkIpScopeStaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkIpScopeStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkV2IpScopeOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkV2IpScopeArrayOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkV2IpScopeStaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkV2IpScopeStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkV2NsxtNetworkOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkV2NsxtNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkV2VsphereNetworkOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkV2VsphereNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkVsphereNetworkOutput{})
	pulumi.RegisterOutputType(GetExternalNetworkVsphereNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetIndependentDiskMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetIndependentDiskMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetIpSpaceCustomQuotaIpPrefixQuotaOutput{})
	pulumi.RegisterOutputType(GetIpSpaceCustomQuotaIpPrefixQuotaArrayOutput{})
	pulumi.RegisterOutputType(GetIpSpaceIpPrefixOutput{})
	pulumi.RegisterOutputType(GetIpSpaceIpPrefixArrayOutput{})
	pulumi.RegisterOutputType(GetIpSpaceIpPrefixPrefixOutput{})
	pulumi.RegisterOutputType(GetIpSpaceIpPrefixPrefixArrayOutput{})
	pulumi.RegisterOutputType(GetIpSpaceIpRangeOutput{})
	pulumi.RegisterOutputType(GetIpSpaceIpRangeArrayOutput{})
	pulumi.RegisterOutputType(GetLbServerPoolMemberOutput{})
	pulumi.RegisterOutputType(GetLbServerPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkDirectFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkDirectFilterPtrOutput{})
	pulumi.RegisterOutputType(GetNetworkDirectFilterMetadataOutput{})
	pulumi.RegisterOutputType(GetNetworkDirectFilterMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkDirectMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetNetworkDirectMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedDhcpPoolOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedDhcpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedFilterPtrOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedFilterMetadataOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedFilterMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedStaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedV2FilterOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedV2FilterPtrOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedV2MetadataEntryOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedV2MetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedV2SecondaryStaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedV2SecondaryStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedV2StaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetNetworkIsolatedV2StaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPoolBackingOutput{})
	pulumi.RegisterOutputType(GetNetworkPoolBackingArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPoolBackingDistributedSwitchOutput{})
	pulumi.RegisterOutputType(GetNetworkPoolBackingDistributedSwitchArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPoolBackingPortGroupOutput{})
	pulumi.RegisterOutputType(GetNetworkPoolBackingPortGroupArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPoolBackingRangeIdOutput{})
	pulumi.RegisterOutputType(GetNetworkPoolBackingRangeIdArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPoolBackingTransportZoneOutput{})
	pulumi.RegisterOutputType(GetNetworkPoolBackingTransportZoneArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedDhcpPoolOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedDhcpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedFilterPtrOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedFilterMetadataOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedFilterMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedStaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedV2FilterOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedV2FilterPtrOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedV2MetadataEntryOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedV2MetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedV2SecondaryStaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedV2SecondaryStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedV2StaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetNetworkRoutedV2StaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbPoolHealthMonitorOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbPoolHealthMonitorArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbPoolMemberOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbPoolPersistenceProfileOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbPoolPersistenceProfileArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionModifyHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRedirectArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleActionRewriteUrlArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaClientIpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaCookieArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaHttpMethodArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaPathArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpReqRulesRuleMatchCriteriaServicePortArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionModifyHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleActionRewriteLocationHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaClientIpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaCookieArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaHttpMethodArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaLocationHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaPathArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaResponseHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaServicePortArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpRespRulesRuleMatchCriteriaStatusCodeArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionLocalResponseArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionRateLimitActionRedirectArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleActionSendResponseArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaClientIpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaCookieArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaHttpMethodArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaPathArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceHttpSecRulesRuleMatchCriteriaServicePortArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceServicePortOutput{})
	pulumi.RegisterOutputType(GetNsxtAlbVirtualServiceServicePortArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtAppPortProfileAppPortOutput{})
	pulumi.RegisterOutputType(GetNsxtAppPortProfileAppPortArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtDistributedFirewallRuleTypeOutput{})
	pulumi.RegisterOutputType(GetNsxtDistributedFirewallRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtDynamicSecurityGroupCriteriaOutput{})
	pulumi.RegisterOutputType(GetNsxtDynamicSecurityGroupCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtDynamicSecurityGroupCriteriaRuleOutput{})
	pulumi.RegisterOutputType(GetNsxtDynamicSecurityGroupCriteriaRuleArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtDynamicSecurityGroupMemberVmOutput{})
	pulumi.RegisterOutputType(GetNsxtDynamicSecurityGroupMemberVmArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayBgpIpPrefixListIpPrefixOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayDnsConditionalForwarderZoneOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayDnsConditionalForwarderZoneArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayDnsDefaultForwarderZoneOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayDnsDefaultForwarderZoneArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayExternalNetworkOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayExternalNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayL2VpnTunnelStretchedNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayStaticRouteNextHopOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayStaticRouteNextHopArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayStaticRouteNextHopScopeOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewayStaticRouteNextHopScopeArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewaySubnetOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewaySubnetArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewaySubnetAllocatedIpOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewaySubnetAllocatedIpArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewaySubnetWithIpCountOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewaySubnetWithIpCountArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewaySubnetWithTotalIpCountOutput{})
	pulumi.RegisterOutputType(GetNsxtEdgegatewaySubnetWithTotalIpCountArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetNsxtFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtIpsecVpnTunnelSecurityProfileCustomizationOutput{})
	pulumi.RegisterOutputType(GetNsxtIpsecVpnTunnelSecurityProfileCustomizationArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkDhcpBindingDhcpV4ConfigOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkDhcpBindingDhcpV4ConfigArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkDhcpBindingDhcpV6ConfigOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkDhcpBindingDhcpV6ConfigArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkDhcpPoolOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkDhcpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkImportedFilterOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkImportedFilterPtrOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkImportedSecondaryStaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkImportedSecondaryStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkImportedStaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetNsxtNetworkImportedStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetNsxtSecurityGroupMemberVmOutput{})
	pulumi.RegisterOutputType(GetNsxtSecurityGroupMemberVmArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvApplicationFinderObjectOutput{})
	pulumi.RegisterOutputType(GetNsxvApplicationFinderObjectArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvApplicationGroupApplicationOutput{})
	pulumi.RegisterOutputType(GetNsxvApplicationGroupApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvDhcpRelayRelayAgentOutput{})
	pulumi.RegisterOutputType(GetNsxvDhcpRelayRelayAgentArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvDistributedFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetNsxvDistributedFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvDistributedFirewallRuleApplicationOutput{})
	pulumi.RegisterOutputType(GetNsxvDistributedFirewallRuleApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvDistributedFirewallRuleAppliedToOutput{})
	pulumi.RegisterOutputType(GetNsxvDistributedFirewallRuleAppliedToArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvDistributedFirewallRuleDestinationOutput{})
	pulumi.RegisterOutputType(GetNsxvDistributedFirewallRuleDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvDistributedFirewallRuleSourceOutput{})
	pulumi.RegisterOutputType(GetNsxvDistributedFirewallRuleSourceArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvFirewallRuleDestinationOutput{})
	pulumi.RegisterOutputType(GetNsxvFirewallRuleDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvFirewallRuleServiceOutput{})
	pulumi.RegisterOutputType(GetNsxvFirewallRuleServiceArrayOutput{})
	pulumi.RegisterOutputType(GetNsxvFirewallRuleSourceOutput{})
	pulumi.RegisterOutputType(GetNsxvFirewallRuleSourceArrayOutput{})
	pulumi.RegisterOutputType(GetOrgAccountLockoutOutput{})
	pulumi.RegisterOutputType(GetOrgAccountLockoutArrayOutput{})
	pulumi.RegisterOutputType(GetOrgLdapCustomSettingOutput{})
	pulumi.RegisterOutputType(GetOrgLdapCustomSettingArrayOutput{})
	pulumi.RegisterOutputType(GetOrgLdapCustomSettingGroupAttributeOutput{})
	pulumi.RegisterOutputType(GetOrgLdapCustomSettingGroupAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetOrgLdapCustomSettingUserAttributeOutput{})
	pulumi.RegisterOutputType(GetOrgLdapCustomSettingUserAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetOrgMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetOrgMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetOrgOidcClaimsMappingOutput{})
	pulumi.RegisterOutputType(GetOrgOidcClaimsMappingArrayOutput{})
	pulumi.RegisterOutputType(GetOrgOidcKeyOutput{})
	pulumi.RegisterOutputType(GetOrgOidcKeyArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVappLeaseOutput{})
	pulumi.RegisterOutputType(GetOrgVappLeaseArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVappTemplateLeaseOutput{})
	pulumi.RegisterOutputType(GetOrgVappTemplateLeaseArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcComputeCapacityOutput{})
	pulumi.RegisterOutputType(GetOrgVdcComputeCapacityArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcComputeCapacityCpusOutput{})
	pulumi.RegisterOutputType(GetOrgVdcComputeCapacityCpusArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcComputeCapacityMemoryOutput{})
	pulumi.RegisterOutputType(GetOrgVdcComputeCapacityMemoryArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetOrgVdcMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcStorageProfileOutput{})
	pulumi.RegisterOutputType(GetOrgVdcStorageProfileArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcTemplateComputeConfigurationOutput{})
	pulumi.RegisterOutputType(GetOrgVdcTemplateComputeConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcTemplateEdgeGatewayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcTemplateEdgeGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcTemplateEdgeGatewayStaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetOrgVdcTemplateEdgeGatewayStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcTemplateProviderVdcOutput{})
	pulumi.RegisterOutputType(GetOrgVdcTemplateProviderVdcArrayOutput{})
	pulumi.RegisterOutputType(GetOrgVdcTemplateStorageProfileOutput{})
	pulumi.RegisterOutputType(GetOrgVdcTemplateStorageProfileArrayOutput{})
	pulumi.RegisterOutputType(GetProviderVdcComputeCapacityOutput{})
	pulumi.RegisterOutputType(GetProviderVdcComputeCapacityArrayOutput{})
	pulumi.RegisterOutputType(GetProviderVdcComputeCapacityCpusOutput{})
	pulumi.RegisterOutputType(GetProviderVdcComputeCapacityCpusArrayOutput{})
	pulumi.RegisterOutputType(GetProviderVdcComputeCapacityMemoryOutput{})
	pulumi.RegisterOutputType(GetProviderVdcComputeCapacityMemoryArrayOutput{})
	pulumi.RegisterOutputType(GetProviderVdcMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetProviderVdcMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetRdeMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetRdeMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetRdeTypeHookOutput{})
	pulumi.RegisterOutputType(GetRdeTypeHookArrayOutput{})
	pulumi.RegisterOutputType(GetResourceSchemaAttributeOutput{})
	pulumi.RegisterOutputType(GetResourceSchemaAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetResourceSchemaBlockAttributeOutput{})
	pulumi.RegisterOutputType(GetResourceSchemaBlockAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetResourceSchemaBlockAttributeAttributeOutput{})
	pulumi.RegisterOutputType(GetResourceSchemaBlockAttributeAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetRightImpliedRightOutput{})
	pulumi.RegisterOutputType(GetRightImpliedRightArrayOutput{})
	pulumi.RegisterOutputType(GetSolutionLandingZoneCatalogOutput{})
	pulumi.RegisterOutputType(GetSolutionLandingZoneCatalogArrayOutput{})
	pulumi.RegisterOutputType(GetSolutionLandingZoneVdcOutput{})
	pulumi.RegisterOutputType(GetSolutionLandingZoneVdcArrayOutput{})
	pulumi.RegisterOutputType(GetSolutionLandingZoneVdcComputePolicyOutput{})
	pulumi.RegisterOutputType(GetSolutionLandingZoneVdcComputePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetSolutionLandingZoneVdcOrgVdcNetworkOutput{})
	pulumi.RegisterOutputType(GetSolutionLandingZoneVdcOrgVdcNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetSolutionLandingZoneVdcStoragePolicyOutput{})
	pulumi.RegisterOutputType(GetSolutionLandingZoneVdcStoragePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetStorageProfileIopsSettingOutput{})
	pulumi.RegisterOutputType(GetStorageProfileIopsSettingArrayOutput{})
	pulumi.RegisterOutputType(GetStorageProfileMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetStorageProfileMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetSubscribedCatalogFilterOutput{})
	pulumi.RegisterOutputType(GetSubscribedCatalogFilterPtrOutput{})
	pulumi.RegisterOutputType(GetSubscribedCatalogFilterMetadataOutput{})
	pulumi.RegisterOutputType(GetSubscribedCatalogFilterMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetVappLeaseOutput{})
	pulumi.RegisterOutputType(GetVappLeaseArrayOutput{})
	pulumi.RegisterOutputType(GetVappMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetVappMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetVappNetworkDhcpPoolOutput{})
	pulumi.RegisterOutputType(GetVappNetworkDhcpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetVappNetworkStaticIpPoolOutput{})
	pulumi.RegisterOutputType(GetVappNetworkStaticIpPoolArrayOutput{})
	pulumi.RegisterOutputType(GetVappVmBootOptionOutput{})
	pulumi.RegisterOutputType(GetVappVmBootOptionArrayOutput{})
	pulumi.RegisterOutputType(GetVappVmCustomizationOutput{})
	pulumi.RegisterOutputType(GetVappVmCustomizationArrayOutput{})
	pulumi.RegisterOutputType(GetVappVmDiskOutput{})
	pulumi.RegisterOutputType(GetVappVmDiskArrayOutput{})
	pulumi.RegisterOutputType(GetVappVmExtraConfigOutput{})
	pulumi.RegisterOutputType(GetVappVmExtraConfigArrayOutput{})
	pulumi.RegisterOutputType(GetVappVmInternalDiskOutput{})
	pulumi.RegisterOutputType(GetVappVmInternalDiskArrayOutput{})
	pulumi.RegisterOutputType(GetVappVmMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetVappVmMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetVappVmNetworkOutput{})
	pulumi.RegisterOutputType(GetVappVmNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetVdcGroupParticipatingOrgVdcOutput{})
	pulumi.RegisterOutputType(GetVdcGroupParticipatingOrgVdcArrayOutput{})
	pulumi.RegisterOutputType(GetVmBootOptionOutput{})
	pulumi.RegisterOutputType(GetVmBootOptionArrayOutput{})
	pulumi.RegisterOutputType(GetVmCustomizationOutput{})
	pulumi.RegisterOutputType(GetVmCustomizationArrayOutput{})
	pulumi.RegisterOutputType(GetVmDiskOutput{})
	pulumi.RegisterOutputType(GetVmDiskArrayOutput{})
	pulumi.RegisterOutputType(GetVmExtraConfigOutput{})
	pulumi.RegisterOutputType(GetVmExtraConfigArrayOutput{})
	pulumi.RegisterOutputType(GetVmInternalDiskTypeOutput{})
	pulumi.RegisterOutputType(GetVmInternalDiskTypeArrayOutput{})
	pulumi.RegisterOutputType(GetVmMetadataEntryOutput{})
	pulumi.RegisterOutputType(GetVmMetadataEntryArrayOutput{})
	pulumi.RegisterOutputType(GetVmNetworkOutput{})
	pulumi.RegisterOutputType(GetVmNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetVmSizingPolicyCpusOutput{})
	pulumi.RegisterOutputType(GetVmSizingPolicyCpusArrayOutput{})
	pulumi.RegisterOutputType(GetVmSizingPolicyMemoryOutput{})
	pulumi.RegisterOutputType(GetVmSizingPolicyMemoryArrayOutput{})
	pulumi.RegisterOutputType(GetVmVgpuPolicyCpusOutput{})
	pulumi.RegisterOutputType(GetVmVgpuPolicyCpusArrayOutput{})
	pulumi.RegisterOutputType(GetVmVgpuPolicyMemoryOutput{})
	pulumi.RegisterOutputType(GetVmVgpuPolicyMemoryArrayOutput{})
	pulumi.RegisterOutputType(GetVmVgpuPolicyProviderVdcScopeOutput{})
	pulumi.RegisterOutputType(GetVmVgpuPolicyProviderVdcScopeArrayOutput{})
	pulumi.RegisterOutputType(GetVmVgpuPolicyVgpuProfileOutput{})
	pulumi.RegisterOutputType(GetVmVgpuPolicyVgpuProfileArrayOutput{})
}
