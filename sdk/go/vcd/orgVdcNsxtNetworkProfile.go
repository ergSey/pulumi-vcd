// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrgVdcNsxtNetworkProfile struct {
	pulumi.CustomResourceState

	// Edge Cluster ID to be used for this VDC
	EdgeClusterId pulumi.StringPtrOutput `pulumi:"edgeClusterId"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrOutput `pulumi:"org"`
	// Default Segment Profile
	// Template ID for all vApp Networks in a VDC
	VappNetworksDefaultSegmentProfileTemplateId pulumi.StringPtrOutput `pulumi:"vappNetworksDefaultSegmentProfileTemplateId"`
	// The name of VDC to use, optional if defined at provider level
	Vdc pulumi.StringPtrOutput `pulumi:"vdc"`
	// Default Segment Profile
	// Template ID for all VDC Networks in a VDC
	VdcNetworksDefaultSegmentProfileTemplateId pulumi.StringPtrOutput `pulumi:"vdcNetworksDefaultSegmentProfileTemplateId"`
}

// NewOrgVdcNsxtNetworkProfile registers a new resource with the given unique name, arguments, and options.
func NewOrgVdcNsxtNetworkProfile(ctx *pulumi.Context,
	name string, args *OrgVdcNsxtNetworkProfileArgs, opts ...pulumi.ResourceOption) (*OrgVdcNsxtNetworkProfile, error) {
	if args == nil {
		args = &OrgVdcNsxtNetworkProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrgVdcNsxtNetworkProfile
	err := ctx.RegisterResource("vcd:index/orgVdcNsxtNetworkProfile:OrgVdcNsxtNetworkProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrgVdcNsxtNetworkProfile gets an existing OrgVdcNsxtNetworkProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrgVdcNsxtNetworkProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrgVdcNsxtNetworkProfileState, opts ...pulumi.ResourceOption) (*OrgVdcNsxtNetworkProfile, error) {
	var resource OrgVdcNsxtNetworkProfile
	err := ctx.ReadResource("vcd:index/orgVdcNsxtNetworkProfile:OrgVdcNsxtNetworkProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrgVdcNsxtNetworkProfile resources.
type orgVdcNsxtNetworkProfileState struct {
	// Edge Cluster ID to be used for this VDC
	EdgeClusterId *string `pulumi:"edgeClusterId"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// Default Segment Profile
	// Template ID for all vApp Networks in a VDC
	VappNetworksDefaultSegmentProfileTemplateId *string `pulumi:"vappNetworksDefaultSegmentProfileTemplateId"`
	// The name of VDC to use, optional if defined at provider level
	Vdc *string `pulumi:"vdc"`
	// Default Segment Profile
	// Template ID for all VDC Networks in a VDC
	VdcNetworksDefaultSegmentProfileTemplateId *string `pulumi:"vdcNetworksDefaultSegmentProfileTemplateId"`
}

type OrgVdcNsxtNetworkProfileState struct {
	// Edge Cluster ID to be used for this VDC
	EdgeClusterId pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// Default Segment Profile
	// Template ID for all vApp Networks in a VDC
	VappNetworksDefaultSegmentProfileTemplateId pulumi.StringPtrInput
	// The name of VDC to use, optional if defined at provider level
	Vdc pulumi.StringPtrInput
	// Default Segment Profile
	// Template ID for all VDC Networks in a VDC
	VdcNetworksDefaultSegmentProfileTemplateId pulumi.StringPtrInput
}

func (OrgVdcNsxtNetworkProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*orgVdcNsxtNetworkProfileState)(nil)).Elem()
}

type orgVdcNsxtNetworkProfileArgs struct {
	// Edge Cluster ID to be used for this VDC
	EdgeClusterId *string `pulumi:"edgeClusterId"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// Default Segment Profile
	// Template ID for all vApp Networks in a VDC
	VappNetworksDefaultSegmentProfileTemplateId *string `pulumi:"vappNetworksDefaultSegmentProfileTemplateId"`
	// The name of VDC to use, optional if defined at provider level
	Vdc *string `pulumi:"vdc"`
	// Default Segment Profile
	// Template ID for all VDC Networks in a VDC
	VdcNetworksDefaultSegmentProfileTemplateId *string `pulumi:"vdcNetworksDefaultSegmentProfileTemplateId"`
}

// The set of arguments for constructing a OrgVdcNsxtNetworkProfile resource.
type OrgVdcNsxtNetworkProfileArgs struct {
	// Edge Cluster ID to be used for this VDC
	EdgeClusterId pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// Default Segment Profile
	// Template ID for all vApp Networks in a VDC
	VappNetworksDefaultSegmentProfileTemplateId pulumi.StringPtrInput
	// The name of VDC to use, optional if defined at provider level
	Vdc pulumi.StringPtrInput
	// Default Segment Profile
	// Template ID for all VDC Networks in a VDC
	VdcNetworksDefaultSegmentProfileTemplateId pulumi.StringPtrInput
}

func (OrgVdcNsxtNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*orgVdcNsxtNetworkProfileArgs)(nil)).Elem()
}

type OrgVdcNsxtNetworkProfileInput interface {
	pulumi.Input

	ToOrgVdcNsxtNetworkProfileOutput() OrgVdcNsxtNetworkProfileOutput
	ToOrgVdcNsxtNetworkProfileOutputWithContext(ctx context.Context) OrgVdcNsxtNetworkProfileOutput
}

func (*OrgVdcNsxtNetworkProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcNsxtNetworkProfile)(nil)).Elem()
}

func (i *OrgVdcNsxtNetworkProfile) ToOrgVdcNsxtNetworkProfileOutput() OrgVdcNsxtNetworkProfileOutput {
	return i.ToOrgVdcNsxtNetworkProfileOutputWithContext(context.Background())
}

func (i *OrgVdcNsxtNetworkProfile) ToOrgVdcNsxtNetworkProfileOutputWithContext(ctx context.Context) OrgVdcNsxtNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcNsxtNetworkProfileOutput)
}

// OrgVdcNsxtNetworkProfileArrayInput is an input type that accepts OrgVdcNsxtNetworkProfileArray and OrgVdcNsxtNetworkProfileArrayOutput values.
// You can construct a concrete instance of `OrgVdcNsxtNetworkProfileArrayInput` via:
//
//	OrgVdcNsxtNetworkProfileArray{ OrgVdcNsxtNetworkProfileArgs{...} }
type OrgVdcNsxtNetworkProfileArrayInput interface {
	pulumi.Input

	ToOrgVdcNsxtNetworkProfileArrayOutput() OrgVdcNsxtNetworkProfileArrayOutput
	ToOrgVdcNsxtNetworkProfileArrayOutputWithContext(context.Context) OrgVdcNsxtNetworkProfileArrayOutput
}

type OrgVdcNsxtNetworkProfileArray []OrgVdcNsxtNetworkProfileInput

func (OrgVdcNsxtNetworkProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrgVdcNsxtNetworkProfile)(nil)).Elem()
}

func (i OrgVdcNsxtNetworkProfileArray) ToOrgVdcNsxtNetworkProfileArrayOutput() OrgVdcNsxtNetworkProfileArrayOutput {
	return i.ToOrgVdcNsxtNetworkProfileArrayOutputWithContext(context.Background())
}

func (i OrgVdcNsxtNetworkProfileArray) ToOrgVdcNsxtNetworkProfileArrayOutputWithContext(ctx context.Context) OrgVdcNsxtNetworkProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcNsxtNetworkProfileArrayOutput)
}

// OrgVdcNsxtNetworkProfileMapInput is an input type that accepts OrgVdcNsxtNetworkProfileMap and OrgVdcNsxtNetworkProfileMapOutput values.
// You can construct a concrete instance of `OrgVdcNsxtNetworkProfileMapInput` via:
//
//	OrgVdcNsxtNetworkProfileMap{ "key": OrgVdcNsxtNetworkProfileArgs{...} }
type OrgVdcNsxtNetworkProfileMapInput interface {
	pulumi.Input

	ToOrgVdcNsxtNetworkProfileMapOutput() OrgVdcNsxtNetworkProfileMapOutput
	ToOrgVdcNsxtNetworkProfileMapOutputWithContext(context.Context) OrgVdcNsxtNetworkProfileMapOutput
}

type OrgVdcNsxtNetworkProfileMap map[string]OrgVdcNsxtNetworkProfileInput

func (OrgVdcNsxtNetworkProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrgVdcNsxtNetworkProfile)(nil)).Elem()
}

func (i OrgVdcNsxtNetworkProfileMap) ToOrgVdcNsxtNetworkProfileMapOutput() OrgVdcNsxtNetworkProfileMapOutput {
	return i.ToOrgVdcNsxtNetworkProfileMapOutputWithContext(context.Background())
}

func (i OrgVdcNsxtNetworkProfileMap) ToOrgVdcNsxtNetworkProfileMapOutputWithContext(ctx context.Context) OrgVdcNsxtNetworkProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgVdcNsxtNetworkProfileMapOutput)
}

type OrgVdcNsxtNetworkProfileOutput struct{ *pulumi.OutputState }

func (OrgVdcNsxtNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgVdcNsxtNetworkProfile)(nil)).Elem()
}

func (o OrgVdcNsxtNetworkProfileOutput) ToOrgVdcNsxtNetworkProfileOutput() OrgVdcNsxtNetworkProfileOutput {
	return o
}

func (o OrgVdcNsxtNetworkProfileOutput) ToOrgVdcNsxtNetworkProfileOutputWithContext(ctx context.Context) OrgVdcNsxtNetworkProfileOutput {
	return o
}

// Edge Cluster ID to be used for this VDC
func (o OrgVdcNsxtNetworkProfileOutput) EdgeClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcNsxtNetworkProfile) pulumi.StringPtrOutput { return v.EdgeClusterId }).(pulumi.StringPtrOutput)
}

// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
// different organizations
func (o OrgVdcNsxtNetworkProfileOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcNsxtNetworkProfile) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

// Default Segment Profile
// Template ID for all vApp Networks in a VDC
func (o OrgVdcNsxtNetworkProfileOutput) VappNetworksDefaultSegmentProfileTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcNsxtNetworkProfile) pulumi.StringPtrOutput {
		return v.VappNetworksDefaultSegmentProfileTemplateId
	}).(pulumi.StringPtrOutput)
}

// The name of VDC to use, optional if defined at provider level
func (o OrgVdcNsxtNetworkProfileOutput) Vdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcNsxtNetworkProfile) pulumi.StringPtrOutput { return v.Vdc }).(pulumi.StringPtrOutput)
}

// Default Segment Profile
// Template ID for all VDC Networks in a VDC
func (o OrgVdcNsxtNetworkProfileOutput) VdcNetworksDefaultSegmentProfileTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgVdcNsxtNetworkProfile) pulumi.StringPtrOutput {
		return v.VdcNetworksDefaultSegmentProfileTemplateId
	}).(pulumi.StringPtrOutput)
}

type OrgVdcNsxtNetworkProfileArrayOutput struct{ *pulumi.OutputState }

func (OrgVdcNsxtNetworkProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrgVdcNsxtNetworkProfile)(nil)).Elem()
}

func (o OrgVdcNsxtNetworkProfileArrayOutput) ToOrgVdcNsxtNetworkProfileArrayOutput() OrgVdcNsxtNetworkProfileArrayOutput {
	return o
}

func (o OrgVdcNsxtNetworkProfileArrayOutput) ToOrgVdcNsxtNetworkProfileArrayOutputWithContext(ctx context.Context) OrgVdcNsxtNetworkProfileArrayOutput {
	return o
}

func (o OrgVdcNsxtNetworkProfileArrayOutput) Index(i pulumi.IntInput) OrgVdcNsxtNetworkProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrgVdcNsxtNetworkProfile {
		return vs[0].([]*OrgVdcNsxtNetworkProfile)[vs[1].(int)]
	}).(OrgVdcNsxtNetworkProfileOutput)
}

type OrgVdcNsxtNetworkProfileMapOutput struct{ *pulumi.OutputState }

func (OrgVdcNsxtNetworkProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrgVdcNsxtNetworkProfile)(nil)).Elem()
}

func (o OrgVdcNsxtNetworkProfileMapOutput) ToOrgVdcNsxtNetworkProfileMapOutput() OrgVdcNsxtNetworkProfileMapOutput {
	return o
}

func (o OrgVdcNsxtNetworkProfileMapOutput) ToOrgVdcNsxtNetworkProfileMapOutputWithContext(ctx context.Context) OrgVdcNsxtNetworkProfileMapOutput {
	return o
}

func (o OrgVdcNsxtNetworkProfileMapOutput) MapIndex(k pulumi.StringInput) OrgVdcNsxtNetworkProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrgVdcNsxtNetworkProfile {
		return vs[0].(map[string]*OrgVdcNsxtNetworkProfile)[vs[1].(string)]
	}).(OrgVdcNsxtNetworkProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcNsxtNetworkProfileInput)(nil)).Elem(), &OrgVdcNsxtNetworkProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcNsxtNetworkProfileArrayInput)(nil)).Elem(), OrgVdcNsxtNetworkProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgVdcNsxtNetworkProfileMapInput)(nil)).Elem(), OrgVdcNsxtNetworkProfileMap{})
	pulumi.RegisterOutputType(OrgVdcNsxtNetworkProfileOutput{})
	pulumi.RegisterOutputType(OrgVdcNsxtNetworkProfileArrayOutput{})
	pulumi.RegisterOutputType(OrgVdcNsxtNetworkProfileMapOutput{})
}
