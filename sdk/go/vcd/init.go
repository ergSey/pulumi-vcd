// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "vcd:index/apiFilter:ApiFilter":
		r = &ApiFilter{}
	case "vcd:index/apiToken:ApiToken":
		r = &ApiToken{}
	case "vcd:index/catalog:Catalog":
		r = &Catalog{}
	case "vcd:index/catalogAccessControl:CatalogAccessControl":
		r = &CatalogAccessControl{}
	case "vcd:index/catalogItem:CatalogItem":
		r = &CatalogItem{}
	case "vcd:index/catalogMedia:CatalogMedia":
		r = &CatalogMedia{}
	case "vcd:index/catalogVappTemplate:CatalogVappTemplate":
		r = &CatalogVappTemplate{}
	case "vcd:index/clonedVapp:ClonedVapp":
		r = &ClonedVapp{}
	case "vcd:index/cseKubernetesCluster:CseKubernetesCluster":
		r = &CseKubernetesCluster{}
	case "vcd:index/dseRegistryConfiguration:DseRegistryConfiguration":
		r = &DseRegistryConfiguration{}
	case "vcd:index/dseSolutionPublish:DseSolutionPublish":
		r = &DseSolutionPublish{}
	case "vcd:index/edgegateway:Edgegateway":
		r = &Edgegateway{}
	case "vcd:index/edgegatewaySettings:EdgegatewaySettings":
		r = &EdgegatewaySettings{}
	case "vcd:index/edgegatewayVpn:EdgegatewayVpn":
		r = &EdgegatewayVpn{}
	case "vcd:index/externalEndpoint:ExternalEndpoint":
		r = &ExternalEndpoint{}
	case "vcd:index/externalNetwork:ExternalNetwork":
		r = &ExternalNetwork{}
	case "vcd:index/externalNetworkV2:ExternalNetworkV2":
		r = &ExternalNetworkV2{}
	case "vcd:index/globalRole:GlobalRole":
		r = &GlobalRole{}
	case "vcd:index/independentDisk:IndependentDisk":
		r = &IndependentDisk{}
	case "vcd:index/insertedMedia:InsertedMedia":
		r = &InsertedMedia{}
	case "vcd:index/ipSpace:IpSpace":
		r = &IpSpace{}
	case "vcd:index/ipSpaceCustomQuota:IpSpaceCustomQuota":
		r = &IpSpaceCustomQuota{}
	case "vcd:index/ipSpaceIpAllocation:IpSpaceIpAllocation":
		r = &IpSpaceIpAllocation{}
	case "vcd:index/ipSpaceUplink:IpSpaceUplink":
		r = &IpSpaceUplink{}
	case "vcd:index/lbAppProfile:LbAppProfile":
		r = &LbAppProfile{}
	case "vcd:index/lbAppRule:LbAppRule":
		r = &LbAppRule{}
	case "vcd:index/lbServerPool:LbServerPool":
		r = &LbServerPool{}
	case "vcd:index/lbServiceMonitor:LbServiceMonitor":
		r = &LbServiceMonitor{}
	case "vcd:index/lbVirtualServer:LbVirtualServer":
		r = &LbVirtualServer{}
	case "vcd:index/libraryCertificate:LibraryCertificate":
		r = &LibraryCertificate{}
	case "vcd:index/multisiteOrgAssociation:MultisiteOrgAssociation":
		r = &MultisiteOrgAssociation{}
	case "vcd:index/multisiteSiteAssociation:MultisiteSiteAssociation":
		r = &MultisiteSiteAssociation{}
	case "vcd:index/networkDirect:NetworkDirect":
		r = &NetworkDirect{}
	case "vcd:index/networkIsolated:NetworkIsolated":
		r = &NetworkIsolated{}
	case "vcd:index/networkIsolatedV2:NetworkIsolatedV2":
		r = &NetworkIsolatedV2{}
	case "vcd:index/networkPool:NetworkPool":
		r = &NetworkPool{}
	case "vcd:index/networkRouted:NetworkRouted":
		r = &NetworkRouted{}
	case "vcd:index/networkRoutedV2:NetworkRoutedV2":
		r = &NetworkRoutedV2{}
	case "vcd:index/nsxtAlbCloud:NsxtAlbCloud":
		r = &NsxtAlbCloud{}
	case "vcd:index/nsxtAlbController:NsxtAlbController":
		r = &NsxtAlbController{}
	case "vcd:index/nsxtAlbEdgegatewayServiceEngineGroup:NsxtAlbEdgegatewayServiceEngineGroup":
		r = &NsxtAlbEdgegatewayServiceEngineGroup{}
	case "vcd:index/nsxtAlbPool:NsxtAlbPool":
		r = &NsxtAlbPool{}
	case "vcd:index/nsxtAlbServiceEngineGroup:NsxtAlbServiceEngineGroup":
		r = &NsxtAlbServiceEngineGroup{}
	case "vcd:index/nsxtAlbSettings:NsxtAlbSettings":
		r = &NsxtAlbSettings{}
	case "vcd:index/nsxtAlbVirtualService:NsxtAlbVirtualService":
		r = &NsxtAlbVirtualService{}
	case "vcd:index/nsxtAlbVirtualServiceHttpReqRules:NsxtAlbVirtualServiceHttpReqRules":
		r = &NsxtAlbVirtualServiceHttpReqRules{}
	case "vcd:index/nsxtAlbVirtualServiceHttpRespRules:NsxtAlbVirtualServiceHttpRespRules":
		r = &NsxtAlbVirtualServiceHttpRespRules{}
	case "vcd:index/nsxtAlbVirtualServiceHttpSecRules:NsxtAlbVirtualServiceHttpSecRules":
		r = &NsxtAlbVirtualServiceHttpSecRules{}
	case "vcd:index/nsxtAppPortProfile:NsxtAppPortProfile":
		r = &NsxtAppPortProfile{}
	case "vcd:index/nsxtDistributedFirewall:NsxtDistributedFirewall":
		r = &NsxtDistributedFirewall{}
	case "vcd:index/nsxtDistributedFirewallRule:NsxtDistributedFirewallRule":
		r = &NsxtDistributedFirewallRule{}
	case "vcd:index/nsxtDynamicSecurityGroup:NsxtDynamicSecurityGroup":
		r = &NsxtDynamicSecurityGroup{}
	case "vcd:index/nsxtEdgegateway:NsxtEdgegateway":
		r = &NsxtEdgegateway{}
	case "vcd:index/nsxtEdgegatewayBgpConfiguration:NsxtEdgegatewayBgpConfiguration":
		r = &NsxtEdgegatewayBgpConfiguration{}
	case "vcd:index/nsxtEdgegatewayBgpIpPrefixList:NsxtEdgegatewayBgpIpPrefixList":
		r = &NsxtEdgegatewayBgpIpPrefixList{}
	case "vcd:index/nsxtEdgegatewayBgpNeighbor:NsxtEdgegatewayBgpNeighbor":
		r = &NsxtEdgegatewayBgpNeighbor{}
	case "vcd:index/nsxtEdgegatewayDhcpForwarding:NsxtEdgegatewayDhcpForwarding":
		r = &NsxtEdgegatewayDhcpForwarding{}
	case "vcd:index/nsxtEdgegatewayDhcpv6:NsxtEdgegatewayDhcpv6":
		r = &NsxtEdgegatewayDhcpv6{}
	case "vcd:index/nsxtEdgegatewayDns:NsxtEdgegatewayDns":
		r = &NsxtEdgegatewayDns{}
	case "vcd:index/nsxtEdgegatewayL2VpnTunnel:NsxtEdgegatewayL2VpnTunnel":
		r = &NsxtEdgegatewayL2VpnTunnel{}
	case "vcd:index/nsxtEdgegatewayRateLimiting:NsxtEdgegatewayRateLimiting":
		r = &NsxtEdgegatewayRateLimiting{}
	case "vcd:index/nsxtEdgegatewayStaticRoute:NsxtEdgegatewayStaticRoute":
		r = &NsxtEdgegatewayStaticRoute{}
	case "vcd:index/nsxtFirewall:NsxtFirewall":
		r = &NsxtFirewall{}
	case "vcd:index/nsxtGlobalDefaultSegmentProfileTemplate:NsxtGlobalDefaultSegmentProfileTemplate":
		r = &NsxtGlobalDefaultSegmentProfileTemplate{}
	case "vcd:index/nsxtIpSet:NsxtIpSet":
		r = &NsxtIpSet{}
	case "vcd:index/nsxtIpsecVpnTunnel:NsxtIpsecVpnTunnel":
		r = &NsxtIpsecVpnTunnel{}
	case "vcd:index/nsxtNatRule:NsxtNatRule":
		r = &NsxtNatRule{}
	case "vcd:index/nsxtNetworkDhcp:NsxtNetworkDhcp":
		r = &NsxtNetworkDhcp{}
	case "vcd:index/nsxtNetworkDhcpBinding:NsxtNetworkDhcpBinding":
		r = &NsxtNetworkDhcpBinding{}
	case "vcd:index/nsxtNetworkImported:NsxtNetworkImported":
		r = &NsxtNetworkImported{}
	case "vcd:index/nsxtNetworkSegmentProfile:NsxtNetworkSegmentProfile":
		r = &NsxtNetworkSegmentProfile{}
	case "vcd:index/nsxtRouteAdvertisement:NsxtRouteAdvertisement":
		r = &NsxtRouteAdvertisement{}
	case "vcd:index/nsxtSecurityGroup:NsxtSecurityGroup":
		r = &NsxtSecurityGroup{}
	case "vcd:index/nsxtSegmentProfileTemplate:NsxtSegmentProfileTemplate":
		r = &NsxtSegmentProfileTemplate{}
	case "vcd:index/nsxvDhcpRelay:NsxvDhcpRelay":
		r = &NsxvDhcpRelay{}
	case "vcd:index/nsxvDistributedFirewall:NsxvDistributedFirewall":
		r = &NsxvDistributedFirewall{}
	case "vcd:index/nsxvDnat:NsxvDnat":
		r = &NsxvDnat{}
	case "vcd:index/nsxvFirewallRule:NsxvFirewallRule":
		r = &NsxvFirewallRule{}
	case "vcd:index/nsxvIpSet:NsxvIpSet":
		r = &NsxvIpSet{}
	case "vcd:index/nsxvSnat:NsxvSnat":
		r = &NsxvSnat{}
	case "vcd:index/org:Org":
		r = &Org{}
	case "vcd:index/orgGroup:OrgGroup":
		r = &OrgGroup{}
	case "vcd:index/orgLdap:OrgLdap":
		r = &OrgLdap{}
	case "vcd:index/orgOidc:OrgOidc":
		r = &OrgOidc{}
	case "vcd:index/orgSaml:OrgSaml":
		r = &OrgSaml{}
	case "vcd:index/orgUser:OrgUser":
		r = &OrgUser{}
	case "vcd:index/orgVdc:OrgVdc":
		r = &OrgVdc{}
	case "vcd:index/orgVdcAccessControl:OrgVdcAccessControl":
		r = &OrgVdcAccessControl{}
	case "vcd:index/orgVdcNsxtNetworkProfile:OrgVdcNsxtNetworkProfile":
		r = &OrgVdcNsxtNetworkProfile{}
	case "vcd:index/orgVdcTemplate:OrgVdcTemplate":
		r = &OrgVdcTemplate{}
	case "vcd:index/orgVdcTemplateInstance:OrgVdcTemplateInstance":
		r = &OrgVdcTemplateInstance{}
	case "vcd:index/providerVdc:ProviderVdc":
		r = &ProviderVdc{}
	case "vcd:index/rde:Rde":
		r = &Rde{}
	case "vcd:index/rdeInterface:RdeInterface":
		r = &RdeInterface{}
	case "vcd:index/rdeInterfaceBehavior:RdeInterfaceBehavior":
		r = &RdeInterfaceBehavior{}
	case "vcd:index/rdeType:RdeType":
		r = &RdeType{}
	case "vcd:index/rdeTypeBehavior:RdeTypeBehavior":
		r = &RdeTypeBehavior{}
	case "vcd:index/rdeTypeBehaviorAcl:RdeTypeBehaviorAcl":
		r = &RdeTypeBehaviorAcl{}
	case "vcd:index/rightsBundle:RightsBundle":
		r = &RightsBundle{}
	case "vcd:index/role:Role":
		r = &Role{}
	case "vcd:index/securityTag:SecurityTag":
		r = &SecurityTag{}
	case "vcd:index/serviceAccount:ServiceAccount":
		r = &ServiceAccount{}
	case "vcd:index/solutionAddOn:SolutionAddOn":
		r = &SolutionAddOn{}
	case "vcd:index/solutionAddOnInstance:SolutionAddOnInstance":
		r = &SolutionAddOnInstance{}
	case "vcd:index/solutionAddOnInstancePublish:SolutionAddOnInstancePublish":
		r = &SolutionAddOnInstancePublish{}
	case "vcd:index/solutionLandingZone:SolutionLandingZone":
		r = &SolutionLandingZone{}
	case "vcd:index/subscribedCatalog:SubscribedCatalog":
		r = &SubscribedCatalog{}
	case "vcd:index/uiPlugin:UiPlugin":
		r = &UiPlugin{}
	case "vcd:index/vapp:Vapp":
		r = &Vapp{}
	case "vcd:index/vappAccessControl:VappAccessControl":
		r = &VappAccessControl{}
	case "vcd:index/vappFirewallRules:VappFirewallRules":
		r = &VappFirewallRules{}
	case "vcd:index/vappNatRules:VappNatRules":
		r = &VappNatRules{}
	case "vcd:index/vappNetwork:VappNetwork":
		r = &VappNetwork{}
	case "vcd:index/vappOrgNetwork:VappOrgNetwork":
		r = &VappOrgNetwork{}
	case "vcd:index/vappStaticRouting:VappStaticRouting":
		r = &VappStaticRouting{}
	case "vcd:index/vappVm:VappVm":
		r = &VappVm{}
	case "vcd:index/vdcGroup:VdcGroup":
		r = &VdcGroup{}
	case "vcd:index/vm:Vm":
		r = &Vm{}
	case "vcd:index/vmAffinityRule:VmAffinityRule":
		r = &VmAffinityRule{}
	case "vcd:index/vmInternalDisk:VmInternalDisk":
		r = &VmInternalDisk{}
	case "vcd:index/vmPlacementPolicy:VmPlacementPolicy":
		r = &VmPlacementPolicy{}
	case "vcd:index/vmSizingPolicy:VmSizingPolicy":
		r = &VmSizingPolicy{}
	case "vcd:index/vmVgpuPolicy:VmVgpuPolicy":
		r = &VmVgpuPolicy{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:vcd" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"vcd",
		"index/apiFilter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/apiToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/catalog",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/catalogAccessControl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/catalogItem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/catalogMedia",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/catalogVappTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/clonedVapp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/cseKubernetesCluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/dseRegistryConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/dseSolutionPublish",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/edgegateway",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/edgegatewaySettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/edgegatewayVpn",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/externalEndpoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/externalNetwork",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/externalNetworkV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/globalRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/independentDisk",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/insertedMedia",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/ipSpace",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/ipSpaceCustomQuota",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/ipSpaceIpAllocation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/ipSpaceUplink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/lbAppProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/lbAppRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/lbServerPool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/lbServiceMonitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/lbVirtualServer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/libraryCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/multisiteOrgAssociation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/multisiteSiteAssociation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/networkDirect",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/networkIsolated",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/networkIsolatedV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/networkPool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/networkRouted",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/networkRoutedV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAlbCloud",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAlbController",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAlbEdgegatewayServiceEngineGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAlbPool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAlbServiceEngineGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAlbSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAlbVirtualService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAlbVirtualServiceHttpReqRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAlbVirtualServiceHttpRespRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAlbVirtualServiceHttpSecRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtAppPortProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtDistributedFirewall",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtDistributedFirewallRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtDynamicSecurityGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtEdgegateway",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtEdgegatewayBgpConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtEdgegatewayBgpIpPrefixList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtEdgegatewayBgpNeighbor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtEdgegatewayDhcpForwarding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtEdgegatewayDhcpv6",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtEdgegatewayDns",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtEdgegatewayL2VpnTunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtEdgegatewayRateLimiting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtEdgegatewayStaticRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtFirewall",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtGlobalDefaultSegmentProfileTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtIpSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtIpsecVpnTunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtNatRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtNetworkDhcp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtNetworkDhcpBinding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtNetworkImported",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtNetworkSegmentProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtRouteAdvertisement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtSecurityGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxtSegmentProfileTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxvDhcpRelay",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxvDistributedFirewall",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxvDnat",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxvFirewallRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxvIpSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/nsxvSnat",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/org",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/orgGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/orgLdap",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/orgOidc",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/orgSaml",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/orgUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/orgVdc",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/orgVdcAccessControl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/orgVdcNsxtNetworkProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/orgVdcTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/orgVdcTemplateInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/providerVdc",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/rde",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/rdeInterface",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/rdeInterfaceBehavior",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/rdeType",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/rdeTypeBehavior",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/rdeTypeBehaviorAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/rightsBundle",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/securityTag",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/serviceAccount",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/solutionAddOn",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/solutionAddOnInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/solutionAddOnInstancePublish",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/solutionLandingZone",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/subscribedCatalog",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/uiPlugin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vapp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vappAccessControl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vappFirewallRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vappNatRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vappNetwork",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vappOrgNetwork",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vappStaticRouting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vappVm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vdcGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vmAffinityRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vmInternalDisk",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vmPlacementPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vmSizingPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vcd",
		"index/vmVgpuPolicy",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"vcd",
		&pkg{version},
	)
}
