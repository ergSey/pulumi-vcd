// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Supported in provider *v3.13+* and VCD 10.4.1+.
//
// Provides a data source to read VCD Solution Add-on Landing Zone.
//
// > Only `System Administrator` can read this configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupSolutionLandingZone(ctx, &vcd.LookupSolutionLandingZoneArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSolutionLandingZone(ctx *pulumi.Context, args *LookupSolutionLandingZoneArgs, opts ...pulumi.InvokeOption) (*LookupSolutionLandingZoneResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSolutionLandingZoneResult
	err := ctx.Invoke("vcd:index/getSolutionLandingZone:getSolutionLandingZone", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSolutionLandingZone.
type LookupSolutionLandingZoneArgs struct {
	Org *string `pulumi:"org"`
}

// A collection of values returned by getSolutionLandingZone.
type LookupSolutionLandingZoneResult struct {
	Catalogs []GetSolutionLandingZoneCatalog `pulumi:"catalogs"`
	// The provider-assigned unique ID for this managed resource.
	Id    string                      `pulumi:"id"`
	Org   *string                     `pulumi:"org"`
	State string                      `pulumi:"state"`
	Vdcs  []GetSolutionLandingZoneVdc `pulumi:"vdcs"`
}

func LookupSolutionLandingZoneOutput(ctx *pulumi.Context, args LookupSolutionLandingZoneOutputArgs, opts ...pulumi.InvokeOption) LookupSolutionLandingZoneResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSolutionLandingZoneResultOutput, error) {
			args := v.(LookupSolutionLandingZoneArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getSolutionLandingZone:getSolutionLandingZone", args, LookupSolutionLandingZoneResultOutput{}, options).(LookupSolutionLandingZoneResultOutput), nil
		}).(LookupSolutionLandingZoneResultOutput)
}

// A collection of arguments for invoking getSolutionLandingZone.
type LookupSolutionLandingZoneOutputArgs struct {
	Org pulumi.StringPtrInput `pulumi:"org"`
}

func (LookupSolutionLandingZoneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSolutionLandingZoneArgs)(nil)).Elem()
}

// A collection of values returned by getSolutionLandingZone.
type LookupSolutionLandingZoneResultOutput struct{ *pulumi.OutputState }

func (LookupSolutionLandingZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSolutionLandingZoneResult)(nil)).Elem()
}

func (o LookupSolutionLandingZoneResultOutput) ToLookupSolutionLandingZoneResultOutput() LookupSolutionLandingZoneResultOutput {
	return o
}

func (o LookupSolutionLandingZoneResultOutput) ToLookupSolutionLandingZoneResultOutputWithContext(ctx context.Context) LookupSolutionLandingZoneResultOutput {
	return o
}

func (o LookupSolutionLandingZoneResultOutput) Catalogs() GetSolutionLandingZoneCatalogArrayOutput {
	return o.ApplyT(func(v LookupSolutionLandingZoneResult) []GetSolutionLandingZoneCatalog { return v.Catalogs }).(GetSolutionLandingZoneCatalogArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSolutionLandingZoneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionLandingZoneResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSolutionLandingZoneResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSolutionLandingZoneResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupSolutionLandingZoneResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionLandingZoneResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupSolutionLandingZoneResultOutput) Vdcs() GetSolutionLandingZoneVdcArrayOutput {
	return o.ApplyT(func(v LookupSolutionLandingZoneResult) []GetSolutionLandingZoneVdc { return v.Vdcs }).(GetSolutionLandingZoneVdcArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSolutionLandingZoneResultOutput{})
}
