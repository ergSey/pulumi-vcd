// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Supported in provider *v3.5+* and VCD 10.2+.
//
// Provides a data source to read NSX-T VDC group and reference in other resources.
//
// > Only `System Administrator` and `Org Users` with right `View VDC Group` can access VDC groups using this data source.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupVdcGroup(ctx, &vcd.LookupVdcGroupArgs{
//				Org:  pulumi.StringRef("myOrg"),
//				Name: pulumi.StringRef("myVDC"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVdcGroup(ctx *pulumi.Context, args *LookupVdcGroupArgs, opts ...pulumi.InvokeOption) (*LookupVdcGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVdcGroupResult
	err := ctx.Invoke("vcd:index/getVdcGroup:getVdcGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVdcGroup.
type LookupVdcGroupArgs struct {
	DefaultPolicyStatus *bool   `pulumi:"defaultPolicyStatus"`
	Description         *string `pulumi:"description"`
	ErrorMessage        *string `pulumi:"errorMessage"`
	// ID of VDC group
	//
	// Either `name` or `id` must be used. If both are missing, an error arises.
	Id          *string `pulumi:"id"`
	LocalEgress *bool   `pulumi:"localEgress"`
	// Name of VDC group
	Name                       *string `pulumi:"name"`
	NetworkPoolId              *string `pulumi:"networkPoolId"`
	NetworkPoolUniversalId     *string `pulumi:"networkPoolUniversalId"`
	NetworkProviderType        *string `pulumi:"networkProviderType"`
	Org                        *string `pulumi:"org"`
	Status                     *string `pulumi:"status"`
	Type                       *string `pulumi:"type"`
	UniversalNetworkingEnabled *bool   `pulumi:"universalNetworkingEnabled"`
}

// A collection of values returned by getVdcGroup.
type LookupVdcGroupResult struct {
	DefaultPolicyStatus        bool                             `pulumi:"defaultPolicyStatus"`
	Description                string                           `pulumi:"description"`
	DfwEnabled                 bool                             `pulumi:"dfwEnabled"`
	ErrorMessage               string                           `pulumi:"errorMessage"`
	Id                         string                           `pulumi:"id"`
	LocalEgress                bool                             `pulumi:"localEgress"`
	Name                       string                           `pulumi:"name"`
	NetworkPoolId              string                           `pulumi:"networkPoolId"`
	NetworkPoolUniversalId     string                           `pulumi:"networkPoolUniversalId"`
	NetworkProviderType        string                           `pulumi:"networkProviderType"`
	Org                        *string                          `pulumi:"org"`
	ParticipatingOrgVdcs       []GetVdcGroupParticipatingOrgVdc `pulumi:"participatingOrgVdcs"`
	Status                     string                           `pulumi:"status"`
	Type                       string                           `pulumi:"type"`
	UniversalNetworkingEnabled bool                             `pulumi:"universalNetworkingEnabled"`
}

func LookupVdcGroupOutput(ctx *pulumi.Context, args LookupVdcGroupOutputArgs, opts ...pulumi.InvokeOption) LookupVdcGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVdcGroupResultOutput, error) {
			args := v.(LookupVdcGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getVdcGroup:getVdcGroup", args, LookupVdcGroupResultOutput{}, options).(LookupVdcGroupResultOutput), nil
		}).(LookupVdcGroupResultOutput)
}

// A collection of arguments for invoking getVdcGroup.
type LookupVdcGroupOutputArgs struct {
	DefaultPolicyStatus pulumi.BoolPtrInput   `pulumi:"defaultPolicyStatus"`
	Description         pulumi.StringPtrInput `pulumi:"description"`
	ErrorMessage        pulumi.StringPtrInput `pulumi:"errorMessage"`
	// ID of VDC group
	//
	// Either `name` or `id` must be used. If both are missing, an error arises.
	Id          pulumi.StringPtrInput `pulumi:"id"`
	LocalEgress pulumi.BoolPtrInput   `pulumi:"localEgress"`
	// Name of VDC group
	Name                       pulumi.StringPtrInput `pulumi:"name"`
	NetworkPoolId              pulumi.StringPtrInput `pulumi:"networkPoolId"`
	NetworkPoolUniversalId     pulumi.StringPtrInput `pulumi:"networkPoolUniversalId"`
	NetworkProviderType        pulumi.StringPtrInput `pulumi:"networkProviderType"`
	Org                        pulumi.StringPtrInput `pulumi:"org"`
	Status                     pulumi.StringPtrInput `pulumi:"status"`
	Type                       pulumi.StringPtrInput `pulumi:"type"`
	UniversalNetworkingEnabled pulumi.BoolPtrInput   `pulumi:"universalNetworkingEnabled"`
}

func (LookupVdcGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVdcGroupArgs)(nil)).Elem()
}

// A collection of values returned by getVdcGroup.
type LookupVdcGroupResultOutput struct{ *pulumi.OutputState }

func (LookupVdcGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVdcGroupResult)(nil)).Elem()
}

func (o LookupVdcGroupResultOutput) ToLookupVdcGroupResultOutput() LookupVdcGroupResultOutput {
	return o
}

func (o LookupVdcGroupResultOutput) ToLookupVdcGroupResultOutputWithContext(ctx context.Context) LookupVdcGroupResultOutput {
	return o
}

func (o LookupVdcGroupResultOutput) DefaultPolicyStatus() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) bool { return v.DefaultPolicyStatus }).(pulumi.BoolOutput)
}

func (o LookupVdcGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupVdcGroupResultOutput) DfwEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) bool { return v.DfwEnabled }).(pulumi.BoolOutput)
}

func (o LookupVdcGroupResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o LookupVdcGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVdcGroupResultOutput) LocalEgress() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) bool { return v.LocalEgress }).(pulumi.BoolOutput)
}

func (o LookupVdcGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVdcGroupResultOutput) NetworkPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) string { return v.NetworkPoolId }).(pulumi.StringOutput)
}

func (o LookupVdcGroupResultOutput) NetworkPoolUniversalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) string { return v.NetworkPoolUniversalId }).(pulumi.StringOutput)
}

func (o LookupVdcGroupResultOutput) NetworkProviderType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) string { return v.NetworkProviderType }).(pulumi.StringOutput)
}

func (o LookupVdcGroupResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupVdcGroupResultOutput) ParticipatingOrgVdcs() GetVdcGroupParticipatingOrgVdcArrayOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) []GetVdcGroupParticipatingOrgVdc { return v.ParticipatingOrgVdcs }).(GetVdcGroupParticipatingOrgVdcArrayOutput)
}

func (o LookupVdcGroupResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupVdcGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupVdcGroupResultOutput) UniversalNetworkingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVdcGroupResult) bool { return v.UniversalNetworkingEnabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVdcGroupResultOutput{})
}
