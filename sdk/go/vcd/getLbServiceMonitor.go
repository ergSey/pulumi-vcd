// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director Edge Gateway Load Balancer Service Monitor data source. A service monitor
// defines health check parameters for a particular type of network traffic. It can be associated with
// a pool. Pool members are monitored according to the service monitor parameters. See example usage of
// this data source in [server pool resource page](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/lb_server_pool).
//
// > **Note:** See additional support notes in [service monitor resource page](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/lb_service_monitor).
//
// Supported in provider *v2.4+*
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupLbServiceMonitor(ctx, &vcd.LookupLbServiceMonitorArgs{
//				Org:         pulumi.StringRef("my-org"),
//				Vdc:         pulumi.StringRef("my-org-vdc"),
//				EdgeGateway: "my-edge-gw",
//				Name:        "not-managed",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLbServiceMonitor(ctx *pulumi.Context, args *LookupLbServiceMonitorArgs, opts ...pulumi.InvokeOption) (*LookupLbServiceMonitorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLbServiceMonitorResult
	err := ctx.Invoke("vcd:index/getLbServiceMonitor:getLbServiceMonitor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLbServiceMonitor.
type LookupLbServiceMonitorArgs struct {
	// The name of the edge gateway on which the service monitor is defined
	EdgeGateway string `pulumi:"edgeGateway"`
	// Service Monitor name for identifying the exact service monitor
	Name string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
	Org *string `pulumi:"org"`
	// The name of VDC to use, optional if defined at provider level
	Vdc *string `pulumi:"vdc"`
}

// A collection of values returned by getLbServiceMonitor.
type LookupLbServiceMonitorResult struct {
	EdgeGateway string            `pulumi:"edgeGateway"`
	Expected    string            `pulumi:"expected"`
	Extension   map[string]string `pulumi:"extension"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	Interval   int     `pulumi:"interval"`
	MaxRetries int     `pulumi:"maxRetries"`
	Method     string  `pulumi:"method"`
	Name       string  `pulumi:"name"`
	Org        *string `pulumi:"org"`
	Receive    string  `pulumi:"receive"`
	Send       string  `pulumi:"send"`
	Timeout    int     `pulumi:"timeout"`
	Type       string  `pulumi:"type"`
	Url        string  `pulumi:"url"`
	Vdc        *string `pulumi:"vdc"`
}

func LookupLbServiceMonitorOutput(ctx *pulumi.Context, args LookupLbServiceMonitorOutputArgs, opts ...pulumi.InvokeOption) LookupLbServiceMonitorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLbServiceMonitorResultOutput, error) {
			args := v.(LookupLbServiceMonitorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getLbServiceMonitor:getLbServiceMonitor", args, LookupLbServiceMonitorResultOutput{}, options).(LookupLbServiceMonitorResultOutput), nil
		}).(LookupLbServiceMonitorResultOutput)
}

// A collection of arguments for invoking getLbServiceMonitor.
type LookupLbServiceMonitorOutputArgs struct {
	// The name of the edge gateway on which the service monitor is defined
	EdgeGateway pulumi.StringInput `pulumi:"edgeGateway"`
	// Service Monitor name for identifying the exact service monitor
	Name pulumi.StringInput `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
	Org pulumi.StringPtrInput `pulumi:"org"`
	// The name of VDC to use, optional if defined at provider level
	Vdc pulumi.StringPtrInput `pulumi:"vdc"`
}

func (LookupLbServiceMonitorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLbServiceMonitorArgs)(nil)).Elem()
}

// A collection of values returned by getLbServiceMonitor.
type LookupLbServiceMonitorResultOutput struct{ *pulumi.OutputState }

func (LookupLbServiceMonitorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLbServiceMonitorResult)(nil)).Elem()
}

func (o LookupLbServiceMonitorResultOutput) ToLookupLbServiceMonitorResultOutput() LookupLbServiceMonitorResultOutput {
	return o
}

func (o LookupLbServiceMonitorResultOutput) ToLookupLbServiceMonitorResultOutputWithContext(ctx context.Context) LookupLbServiceMonitorResultOutput {
	return o
}

func (o LookupLbServiceMonitorResultOutput) EdgeGateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) string { return v.EdgeGateway }).(pulumi.StringOutput)
}

func (o LookupLbServiceMonitorResultOutput) Expected() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) string { return v.Expected }).(pulumi.StringOutput)
}

func (o LookupLbServiceMonitorResultOutput) Extension() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) map[string]string { return v.Extension }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLbServiceMonitorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLbServiceMonitorResultOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) int { return v.Interval }).(pulumi.IntOutput)
}

func (o LookupLbServiceMonitorResultOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) int { return v.MaxRetries }).(pulumi.IntOutput)
}

func (o LookupLbServiceMonitorResultOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) string { return v.Method }).(pulumi.StringOutput)
}

func (o LookupLbServiceMonitorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupLbServiceMonitorResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupLbServiceMonitorResultOutput) Receive() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) string { return v.Receive }).(pulumi.StringOutput)
}

func (o LookupLbServiceMonitorResultOutput) Send() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) string { return v.Send }).(pulumi.StringOutput)
}

func (o LookupLbServiceMonitorResultOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) int { return v.Timeout }).(pulumi.IntOutput)
}

func (o LookupLbServiceMonitorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupLbServiceMonitorResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) string { return v.Url }).(pulumi.StringOutput)
}

func (o LookupLbServiceMonitorResultOutput) Vdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLbServiceMonitorResult) *string { return v.Vdc }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLbServiceMonitorResultOutput{})
}
