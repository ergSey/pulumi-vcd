// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NsxtAlbCloud struct {
	pulumi.CustomResourceState

	// ALB Controller ID
	ControllerId pulumi.StringOutput `pulumi:"controllerId"`
	// An optional description ALB Cloud
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// DetailedHealthMessage contains detailed message on the health of the Cloud
	HealthMessage pulumi.StringOutput `pulumi:"healthMessage"`
	// HealthStatus contains status of the Load Balancer Cloud. Possible values are:
	// * UP - The cloud is healthy and ready to enable Load Balancer for an Edge Gateway
	// * DOWN - The cloud is in a failure state. Enabling Load balancer on an Edge Gateway may not be possible
	// * RUNNING - The cloud is currently processing. An example is if it's enabling a Load Balancer for an Edge Gateway
	// * UNAVAILABLE - The cloud is unavailable
	// * UNKNOWN - The cloud state is unknown
	HealthStatus pulumi.StringOutput `pulumi:"healthStatus"`
	// Importable Cloud ID. Can be looked up using `getNsxtAlbImportableCloud` data
	// source
	ImportableCloudId pulumi.StringOutput `pulumi:"importableCloudId"`
	// A name for ALB Cloud
	Name pulumi.StringOutput `pulumi:"name"`
	// Network pool ID for ALB Cloud. Can be looked up using `getNsxtAlbImportableCloud` data
	// source
	NetworkPoolId pulumi.StringOutput `pulumi:"networkPoolId"`
	// Network Pool Name used by the Cloud
	NetworkPoolName pulumi.StringOutput `pulumi:"networkPoolName"`
}

// NewNsxtAlbCloud registers a new resource with the given unique name, arguments, and options.
func NewNsxtAlbCloud(ctx *pulumi.Context,
	name string, args *NsxtAlbCloudArgs, opts ...pulumi.ResourceOption) (*NsxtAlbCloud, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControllerId == nil {
		return nil, errors.New("invalid value for required argument 'ControllerId'")
	}
	if args.ImportableCloudId == nil {
		return nil, errors.New("invalid value for required argument 'ImportableCloudId'")
	}
	if args.NetworkPoolId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkPoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NsxtAlbCloud
	err := ctx.RegisterResource("vcd:index/nsxtAlbCloud:NsxtAlbCloud", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNsxtAlbCloud gets an existing NsxtAlbCloud resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNsxtAlbCloud(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NsxtAlbCloudState, opts ...pulumi.ResourceOption) (*NsxtAlbCloud, error) {
	var resource NsxtAlbCloud
	err := ctx.ReadResource("vcd:index/nsxtAlbCloud:NsxtAlbCloud", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NsxtAlbCloud resources.
type nsxtAlbCloudState struct {
	// ALB Controller ID
	ControllerId *string `pulumi:"controllerId"`
	// An optional description ALB Cloud
	Description *string `pulumi:"description"`
	// DetailedHealthMessage contains detailed message on the health of the Cloud
	HealthMessage *string `pulumi:"healthMessage"`
	// HealthStatus contains status of the Load Balancer Cloud. Possible values are:
	// * UP - The cloud is healthy and ready to enable Load Balancer for an Edge Gateway
	// * DOWN - The cloud is in a failure state. Enabling Load balancer on an Edge Gateway may not be possible
	// * RUNNING - The cloud is currently processing. An example is if it's enabling a Load Balancer for an Edge Gateway
	// * UNAVAILABLE - The cloud is unavailable
	// * UNKNOWN - The cloud state is unknown
	HealthStatus *string `pulumi:"healthStatus"`
	// Importable Cloud ID. Can be looked up using `getNsxtAlbImportableCloud` data
	// source
	ImportableCloudId *string `pulumi:"importableCloudId"`
	// A name for ALB Cloud
	Name *string `pulumi:"name"`
	// Network pool ID for ALB Cloud. Can be looked up using `getNsxtAlbImportableCloud` data
	// source
	NetworkPoolId *string `pulumi:"networkPoolId"`
	// Network Pool Name used by the Cloud
	NetworkPoolName *string `pulumi:"networkPoolName"`
}

type NsxtAlbCloudState struct {
	// ALB Controller ID
	ControllerId pulumi.StringPtrInput
	// An optional description ALB Cloud
	Description pulumi.StringPtrInput
	// DetailedHealthMessage contains detailed message on the health of the Cloud
	HealthMessage pulumi.StringPtrInput
	// HealthStatus contains status of the Load Balancer Cloud. Possible values are:
	// * UP - The cloud is healthy and ready to enable Load Balancer for an Edge Gateway
	// * DOWN - The cloud is in a failure state. Enabling Load balancer on an Edge Gateway may not be possible
	// * RUNNING - The cloud is currently processing. An example is if it's enabling a Load Balancer for an Edge Gateway
	// * UNAVAILABLE - The cloud is unavailable
	// * UNKNOWN - The cloud state is unknown
	HealthStatus pulumi.StringPtrInput
	// Importable Cloud ID. Can be looked up using `getNsxtAlbImportableCloud` data
	// source
	ImportableCloudId pulumi.StringPtrInput
	// A name for ALB Cloud
	Name pulumi.StringPtrInput
	// Network pool ID for ALB Cloud. Can be looked up using `getNsxtAlbImportableCloud` data
	// source
	NetworkPoolId pulumi.StringPtrInput
	// Network Pool Name used by the Cloud
	NetworkPoolName pulumi.StringPtrInput
}

func (NsxtAlbCloudState) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtAlbCloudState)(nil)).Elem()
}

type nsxtAlbCloudArgs struct {
	// ALB Controller ID
	ControllerId string `pulumi:"controllerId"`
	// An optional description ALB Cloud
	Description *string `pulumi:"description"`
	// Importable Cloud ID. Can be looked up using `getNsxtAlbImportableCloud` data
	// source
	ImportableCloudId string `pulumi:"importableCloudId"`
	// A name for ALB Cloud
	Name *string `pulumi:"name"`
	// Network pool ID for ALB Cloud. Can be looked up using `getNsxtAlbImportableCloud` data
	// source
	NetworkPoolId string `pulumi:"networkPoolId"`
}

// The set of arguments for constructing a NsxtAlbCloud resource.
type NsxtAlbCloudArgs struct {
	// ALB Controller ID
	ControllerId pulumi.StringInput
	// An optional description ALB Cloud
	Description pulumi.StringPtrInput
	// Importable Cloud ID. Can be looked up using `getNsxtAlbImportableCloud` data
	// source
	ImportableCloudId pulumi.StringInput
	// A name for ALB Cloud
	Name pulumi.StringPtrInput
	// Network pool ID for ALB Cloud. Can be looked up using `getNsxtAlbImportableCloud` data
	// source
	NetworkPoolId pulumi.StringInput
}

func (NsxtAlbCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtAlbCloudArgs)(nil)).Elem()
}

type NsxtAlbCloudInput interface {
	pulumi.Input

	ToNsxtAlbCloudOutput() NsxtAlbCloudOutput
	ToNsxtAlbCloudOutputWithContext(ctx context.Context) NsxtAlbCloudOutput
}

func (*NsxtAlbCloud) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbCloud)(nil)).Elem()
}

func (i *NsxtAlbCloud) ToNsxtAlbCloudOutput() NsxtAlbCloudOutput {
	return i.ToNsxtAlbCloudOutputWithContext(context.Background())
}

func (i *NsxtAlbCloud) ToNsxtAlbCloudOutputWithContext(ctx context.Context) NsxtAlbCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbCloudOutput)
}

// NsxtAlbCloudArrayInput is an input type that accepts NsxtAlbCloudArray and NsxtAlbCloudArrayOutput values.
// You can construct a concrete instance of `NsxtAlbCloudArrayInput` via:
//
//	NsxtAlbCloudArray{ NsxtAlbCloudArgs{...} }
type NsxtAlbCloudArrayInput interface {
	pulumi.Input

	ToNsxtAlbCloudArrayOutput() NsxtAlbCloudArrayOutput
	ToNsxtAlbCloudArrayOutputWithContext(context.Context) NsxtAlbCloudArrayOutput
}

type NsxtAlbCloudArray []NsxtAlbCloudInput

func (NsxtAlbCloudArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtAlbCloud)(nil)).Elem()
}

func (i NsxtAlbCloudArray) ToNsxtAlbCloudArrayOutput() NsxtAlbCloudArrayOutput {
	return i.ToNsxtAlbCloudArrayOutputWithContext(context.Background())
}

func (i NsxtAlbCloudArray) ToNsxtAlbCloudArrayOutputWithContext(ctx context.Context) NsxtAlbCloudArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbCloudArrayOutput)
}

// NsxtAlbCloudMapInput is an input type that accepts NsxtAlbCloudMap and NsxtAlbCloudMapOutput values.
// You can construct a concrete instance of `NsxtAlbCloudMapInput` via:
//
//	NsxtAlbCloudMap{ "key": NsxtAlbCloudArgs{...} }
type NsxtAlbCloudMapInput interface {
	pulumi.Input

	ToNsxtAlbCloudMapOutput() NsxtAlbCloudMapOutput
	ToNsxtAlbCloudMapOutputWithContext(context.Context) NsxtAlbCloudMapOutput
}

type NsxtAlbCloudMap map[string]NsxtAlbCloudInput

func (NsxtAlbCloudMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtAlbCloud)(nil)).Elem()
}

func (i NsxtAlbCloudMap) ToNsxtAlbCloudMapOutput() NsxtAlbCloudMapOutput {
	return i.ToNsxtAlbCloudMapOutputWithContext(context.Background())
}

func (i NsxtAlbCloudMap) ToNsxtAlbCloudMapOutputWithContext(ctx context.Context) NsxtAlbCloudMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtAlbCloudMapOutput)
}

type NsxtAlbCloudOutput struct{ *pulumi.OutputState }

func (NsxtAlbCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtAlbCloud)(nil)).Elem()
}

func (o NsxtAlbCloudOutput) ToNsxtAlbCloudOutput() NsxtAlbCloudOutput {
	return o
}

func (o NsxtAlbCloudOutput) ToNsxtAlbCloudOutputWithContext(ctx context.Context) NsxtAlbCloudOutput {
	return o
}

// ALB Controller ID
func (o NsxtAlbCloudOutput) ControllerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbCloud) pulumi.StringOutput { return v.ControllerId }).(pulumi.StringOutput)
}

// An optional description ALB Cloud
func (o NsxtAlbCloudOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtAlbCloud) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// DetailedHealthMessage contains detailed message on the health of the Cloud
func (o NsxtAlbCloudOutput) HealthMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbCloud) pulumi.StringOutput { return v.HealthMessage }).(pulumi.StringOutput)
}

// HealthStatus contains status of the Load Balancer Cloud. Possible values are:
// * UP - The cloud is healthy and ready to enable Load Balancer for an Edge Gateway
// * DOWN - The cloud is in a failure state. Enabling Load balancer on an Edge Gateway may not be possible
// * RUNNING - The cloud is currently processing. An example is if it's enabling a Load Balancer for an Edge Gateway
// * UNAVAILABLE - The cloud is unavailable
// * UNKNOWN - The cloud state is unknown
func (o NsxtAlbCloudOutput) HealthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbCloud) pulumi.StringOutput { return v.HealthStatus }).(pulumi.StringOutput)
}

// Importable Cloud ID. Can be looked up using `getNsxtAlbImportableCloud` data
// source
func (o NsxtAlbCloudOutput) ImportableCloudId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbCloud) pulumi.StringOutput { return v.ImportableCloudId }).(pulumi.StringOutput)
}

// A name for ALB Cloud
func (o NsxtAlbCloudOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbCloud) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network pool ID for ALB Cloud. Can be looked up using `getNsxtAlbImportableCloud` data
// source
func (o NsxtAlbCloudOutput) NetworkPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbCloud) pulumi.StringOutput { return v.NetworkPoolId }).(pulumi.StringOutput)
}

// Network Pool Name used by the Cloud
func (o NsxtAlbCloudOutput) NetworkPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtAlbCloud) pulumi.StringOutput { return v.NetworkPoolName }).(pulumi.StringOutput)
}

type NsxtAlbCloudArrayOutput struct{ *pulumi.OutputState }

func (NsxtAlbCloudArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtAlbCloud)(nil)).Elem()
}

func (o NsxtAlbCloudArrayOutput) ToNsxtAlbCloudArrayOutput() NsxtAlbCloudArrayOutput {
	return o
}

func (o NsxtAlbCloudArrayOutput) ToNsxtAlbCloudArrayOutputWithContext(ctx context.Context) NsxtAlbCloudArrayOutput {
	return o
}

func (o NsxtAlbCloudArrayOutput) Index(i pulumi.IntInput) NsxtAlbCloudOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NsxtAlbCloud {
		return vs[0].([]*NsxtAlbCloud)[vs[1].(int)]
	}).(NsxtAlbCloudOutput)
}

type NsxtAlbCloudMapOutput struct{ *pulumi.OutputState }

func (NsxtAlbCloudMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtAlbCloud)(nil)).Elem()
}

func (o NsxtAlbCloudMapOutput) ToNsxtAlbCloudMapOutput() NsxtAlbCloudMapOutput {
	return o
}

func (o NsxtAlbCloudMapOutput) ToNsxtAlbCloudMapOutputWithContext(ctx context.Context) NsxtAlbCloudMapOutput {
	return o
}

func (o NsxtAlbCloudMapOutput) MapIndex(k pulumi.StringInput) NsxtAlbCloudOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NsxtAlbCloud {
		return vs[0].(map[string]*NsxtAlbCloud)[vs[1].(string)]
	}).(NsxtAlbCloudOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbCloudInput)(nil)).Elem(), &NsxtAlbCloud{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbCloudArrayInput)(nil)).Elem(), NsxtAlbCloudArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtAlbCloudMapInput)(nil)).Elem(), NsxtAlbCloudMap{})
	pulumi.RegisterOutputType(NsxtAlbCloudOutput{})
	pulumi.RegisterOutputType(NsxtAlbCloudArrayOutput{})
	pulumi.RegisterOutputType(NsxtAlbCloudMapOutput{})
}
