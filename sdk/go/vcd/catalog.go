// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Catalog struct {
	pulumi.CustomResourceState

	// Enable early catalog export to optimize synchronization. Default is `false`. It is recommended to set it to `true` when publishing the catalog.
	CacheEnabled pulumi.BoolPtrOutput `pulumi:"cacheEnabled"`
	// (*v3.6+*) Version number from this catalog.
	CatalogVersion pulumi.IntOutput `pulumi:"catalogVersion"`
	// (*v3.6+*) Date and time of catalog creation
	Created pulumi.StringOutput `pulumi:"created"`
	// When destroying use `delete_force=true` with `delete_recursive=true` to remove a catalog and any objects it contains, regardless of their state. Default is `false`
	DeleteForce pulumi.BoolPtrOutput `pulumi:"deleteForce"`
	// When destroying use `delete_recursive=true` to remove the catalog and any objects it contains that are in a state that normally allows removal. Default is `false`
	DeleteRecursive pulumi.BoolPtrOutput `pulumi:"deleteRecursive"`
	// Description of catalog
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Catalog HREF
	Href pulumi.StringOutput `pulumi:"href"`
	// (*v3.8.1+*) Indicates if this catalog was created in the current organization.
	IsLocal pulumi.BoolOutput `pulumi:"isLocal"`
	// (*v3.6+*) Indicates if this catalog is shared to all organizations.
	IsPublished pulumi.BoolOutput `pulumi:"isPublished"`
	// (*v3.6+*) Indicates if the catalog is shared.
	IsShared pulumi.BoolOutput `pulumi:"isShared"`
	// (*v3.8+*) List of media item names in this catalog, in alphabetical order.
	MediaItemLists pulumi.StringArrayOutput `pulumi:"mediaItemLists"`
	// Use `metadataEntry` instead. Key value map of metadata to assign.
	//
	// Deprecated: Use metadataEntry instead
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// A set of metadata entries to assign. See Metadata section for details.
	MetadataEntries CatalogMetadataEntryArrayOutput `pulumi:"metadataEntries"`
	// Catalog name
	Name pulumi.StringOutput `pulumi:"name"`
	// (*v3.6+*) Number of media items available in this catalog.
	NumberOfMedia pulumi.IntOutput `pulumi:"numberOfMedia"`
	// (*v3.6+*) Number of vApp templates available in this catalog.
	NumberOfVappTemplates pulumi.IntOutput `pulumi:"numberOfVappTemplates"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations.
	// When using a catalog shared from another organization, this field must have the name of that one, not the current one.
	// If you don't know the name of the sharing org, and put the current one, an error message will list the possible names.
	Org pulumi.StringPtrOutput `pulumi:"org"`
	// (*v3.6+*) Owner of the catalog.
	OwnerName pulumi.StringOutput `pulumi:"ownerName"`
	// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
	Password pulumi.StringOutput `pulumi:"password"`
	// Enable include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the portability of the package, and you should use it only when necessary. Default is `false`.
	PreserveIdentityInformation pulumi.BoolPtrOutput `pulumi:"preserveIdentityInformation"`
	// Enable allows to publish a catalog externally to make its vApp templates and media files available for subscription by organizations outside the Cloud Director installation. Default is `false`.
	PublishEnabled pulumi.BoolPtrOutput `pulumi:"publishEnabled"`
	// (*v3.6+*) Shows if the catalog is `PUBLISHED`, if it is a subscription from another one (`SUBSCRIBED`), or none of those (`UNPUBLISHED`).
	PublishSubscriptionType pulumi.StringOutput `pulumi:"publishSubscriptionType"`
	// (*v3.8+*) URL to which other catalogs can subscribe.
	PublishSubscriptionUrl pulumi.StringOutput `pulumi:"publishSubscriptionUrl"`
	// Allows to set specific storage profile to be used for catalog. **Note.** Data
	// source [getStorageProfile](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/storage_profile) can help to lookup storage profile ID.
	StorageProfileId pulumi.StringPtrOutput `pulumi:"storageProfileId"`
	// (*v3.8+*) List of vApp template names in this catalog, in alphabetical order.
	VappTemplateLists pulumi.StringArrayOutput `pulumi:"vappTemplateLists"`
}

// NewCatalog registers a new resource with the given unique name, arguments, and options.
func NewCatalog(ctx *pulumi.Context,
	name string, args *CatalogArgs, opts ...pulumi.ResourceOption) (*Catalog, error) {
	if args == nil {
		args = &CatalogArgs{}
	}

	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Catalog
	err := ctx.RegisterResource("vcd:index/catalog:Catalog", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCatalog gets an existing Catalog resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCatalog(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CatalogState, opts ...pulumi.ResourceOption) (*Catalog, error) {
	var resource Catalog
	err := ctx.ReadResource("vcd:index/catalog:Catalog", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Catalog resources.
type catalogState struct {
	// Enable early catalog export to optimize synchronization. Default is `false`. It is recommended to set it to `true` when publishing the catalog.
	CacheEnabled *bool `pulumi:"cacheEnabled"`
	// (*v3.6+*) Version number from this catalog.
	CatalogVersion *int `pulumi:"catalogVersion"`
	// (*v3.6+*) Date and time of catalog creation
	Created *string `pulumi:"created"`
	// When destroying use `delete_force=true` with `delete_recursive=true` to remove a catalog and any objects it contains, regardless of their state. Default is `false`
	DeleteForce *bool `pulumi:"deleteForce"`
	// When destroying use `delete_recursive=true` to remove the catalog and any objects it contains that are in a state that normally allows removal. Default is `false`
	DeleteRecursive *bool `pulumi:"deleteRecursive"`
	// Description of catalog
	Description *string `pulumi:"description"`
	// Catalog HREF
	Href *string `pulumi:"href"`
	// (*v3.8.1+*) Indicates if this catalog was created in the current organization.
	IsLocal *bool `pulumi:"isLocal"`
	// (*v3.6+*) Indicates if this catalog is shared to all organizations.
	IsPublished *bool `pulumi:"isPublished"`
	// (*v3.6+*) Indicates if the catalog is shared.
	IsShared *bool `pulumi:"isShared"`
	// (*v3.8+*) List of media item names in this catalog, in alphabetical order.
	MediaItemLists []string `pulumi:"mediaItemLists"`
	// Use `metadataEntry` instead. Key value map of metadata to assign.
	//
	// Deprecated: Use metadataEntry instead
	Metadata map[string]string `pulumi:"metadata"`
	// A set of metadata entries to assign. See Metadata section for details.
	MetadataEntries []CatalogMetadataEntry `pulumi:"metadataEntries"`
	// Catalog name
	Name *string `pulumi:"name"`
	// (*v3.6+*) Number of media items available in this catalog.
	NumberOfMedia *int `pulumi:"numberOfMedia"`
	// (*v3.6+*) Number of vApp templates available in this catalog.
	NumberOfVappTemplates *int `pulumi:"numberOfVappTemplates"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations.
	// When using a catalog shared from another organization, this field must have the name of that one, not the current one.
	// If you don't know the name of the sharing org, and put the current one, an error message will list the possible names.
	Org *string `pulumi:"org"`
	// (*v3.6+*) Owner of the catalog.
	OwnerName *string `pulumi:"ownerName"`
	// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
	Password *string `pulumi:"password"`
	// Enable include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the portability of the package, and you should use it only when necessary. Default is `false`.
	PreserveIdentityInformation *bool `pulumi:"preserveIdentityInformation"`
	// Enable allows to publish a catalog externally to make its vApp templates and media files available for subscription by organizations outside the Cloud Director installation. Default is `false`.
	PublishEnabled *bool `pulumi:"publishEnabled"`
	// (*v3.6+*) Shows if the catalog is `PUBLISHED`, if it is a subscription from another one (`SUBSCRIBED`), or none of those (`UNPUBLISHED`).
	PublishSubscriptionType *string `pulumi:"publishSubscriptionType"`
	// (*v3.8+*) URL to which other catalogs can subscribe.
	PublishSubscriptionUrl *string `pulumi:"publishSubscriptionUrl"`
	// Allows to set specific storage profile to be used for catalog. **Note.** Data
	// source [getStorageProfile](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/storage_profile) can help to lookup storage profile ID.
	StorageProfileId *string `pulumi:"storageProfileId"`
	// (*v3.8+*) List of vApp template names in this catalog, in alphabetical order.
	VappTemplateLists []string `pulumi:"vappTemplateLists"`
}

type CatalogState struct {
	// Enable early catalog export to optimize synchronization. Default is `false`. It is recommended to set it to `true` when publishing the catalog.
	CacheEnabled pulumi.BoolPtrInput
	// (*v3.6+*) Version number from this catalog.
	CatalogVersion pulumi.IntPtrInput
	// (*v3.6+*) Date and time of catalog creation
	Created pulumi.StringPtrInput
	// When destroying use `delete_force=true` with `delete_recursive=true` to remove a catalog and any objects it contains, regardless of their state. Default is `false`
	DeleteForce pulumi.BoolPtrInput
	// When destroying use `delete_recursive=true` to remove the catalog and any objects it contains that are in a state that normally allows removal. Default is `false`
	DeleteRecursive pulumi.BoolPtrInput
	// Description of catalog
	Description pulumi.StringPtrInput
	// Catalog HREF
	Href pulumi.StringPtrInput
	// (*v3.8.1+*) Indicates if this catalog was created in the current organization.
	IsLocal pulumi.BoolPtrInput
	// (*v3.6+*) Indicates if this catalog is shared to all organizations.
	IsPublished pulumi.BoolPtrInput
	// (*v3.6+*) Indicates if the catalog is shared.
	IsShared pulumi.BoolPtrInput
	// (*v3.8+*) List of media item names in this catalog, in alphabetical order.
	MediaItemLists pulumi.StringArrayInput
	// Use `metadataEntry` instead. Key value map of metadata to assign.
	//
	// Deprecated: Use metadataEntry instead
	Metadata pulumi.StringMapInput
	// A set of metadata entries to assign. See Metadata section for details.
	MetadataEntries CatalogMetadataEntryArrayInput
	// Catalog name
	Name pulumi.StringPtrInput
	// (*v3.6+*) Number of media items available in this catalog.
	NumberOfMedia pulumi.IntPtrInput
	// (*v3.6+*) Number of vApp templates available in this catalog.
	NumberOfVappTemplates pulumi.IntPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations.
	// When using a catalog shared from another organization, this field must have the name of that one, not the current one.
	// If you don't know the name of the sharing org, and put the current one, an error message will list the possible names.
	Org pulumi.StringPtrInput
	// (*v3.6+*) Owner of the catalog.
	OwnerName pulumi.StringPtrInput
	// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
	Password pulumi.StringPtrInput
	// Enable include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the portability of the package, and you should use it only when necessary. Default is `false`.
	PreserveIdentityInformation pulumi.BoolPtrInput
	// Enable allows to publish a catalog externally to make its vApp templates and media files available for subscription by organizations outside the Cloud Director installation. Default is `false`.
	PublishEnabled pulumi.BoolPtrInput
	// (*v3.6+*) Shows if the catalog is `PUBLISHED`, if it is a subscription from another one (`SUBSCRIBED`), or none of those (`UNPUBLISHED`).
	PublishSubscriptionType pulumi.StringPtrInput
	// (*v3.8+*) URL to which other catalogs can subscribe.
	PublishSubscriptionUrl pulumi.StringPtrInput
	// Allows to set specific storage profile to be used for catalog. **Note.** Data
	// source [getStorageProfile](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/storage_profile) can help to lookup storage profile ID.
	StorageProfileId pulumi.StringPtrInput
	// (*v3.8+*) List of vApp template names in this catalog, in alphabetical order.
	VappTemplateLists pulumi.StringArrayInput
}

func (CatalogState) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogState)(nil)).Elem()
}

type catalogArgs struct {
	// Enable early catalog export to optimize synchronization. Default is `false`. It is recommended to set it to `true` when publishing the catalog.
	CacheEnabled *bool `pulumi:"cacheEnabled"`
	// When destroying use `delete_force=true` with `delete_recursive=true` to remove a catalog and any objects it contains, regardless of their state. Default is `false`
	DeleteForce *bool `pulumi:"deleteForce"`
	// When destroying use `delete_recursive=true` to remove the catalog and any objects it contains that are in a state that normally allows removal. Default is `false`
	DeleteRecursive *bool `pulumi:"deleteRecursive"`
	// Description of catalog
	Description *string `pulumi:"description"`
	// Use `metadataEntry` instead. Key value map of metadata to assign.
	//
	// Deprecated: Use metadataEntry instead
	Metadata map[string]string `pulumi:"metadata"`
	// A set of metadata entries to assign. See Metadata section for details.
	MetadataEntries []CatalogMetadataEntry `pulumi:"metadataEntries"`
	// Catalog name
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations.
	// When using a catalog shared from another organization, this field must have the name of that one, not the current one.
	// If you don't know the name of the sharing org, and put the current one, an error message will list the possible names.
	Org *string `pulumi:"org"`
	// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
	Password *string `pulumi:"password"`
	// Enable include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the portability of the package, and you should use it only when necessary. Default is `false`.
	PreserveIdentityInformation *bool `pulumi:"preserveIdentityInformation"`
	// Enable allows to publish a catalog externally to make its vApp templates and media files available for subscription by organizations outside the Cloud Director installation. Default is `false`.
	PublishEnabled *bool `pulumi:"publishEnabled"`
	// Allows to set specific storage profile to be used for catalog. **Note.** Data
	// source [getStorageProfile](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/storage_profile) can help to lookup storage profile ID.
	StorageProfileId *string `pulumi:"storageProfileId"`
}

// The set of arguments for constructing a Catalog resource.
type CatalogArgs struct {
	// Enable early catalog export to optimize synchronization. Default is `false`. It is recommended to set it to `true` when publishing the catalog.
	CacheEnabled pulumi.BoolPtrInput
	// When destroying use `delete_force=true` with `delete_recursive=true` to remove a catalog and any objects it contains, regardless of their state. Default is `false`
	DeleteForce pulumi.BoolPtrInput
	// When destroying use `delete_recursive=true` to remove the catalog and any objects it contains that are in a state that normally allows removal. Default is `false`
	DeleteRecursive pulumi.BoolPtrInput
	// Description of catalog
	Description pulumi.StringPtrInput
	// Use `metadataEntry` instead. Key value map of metadata to assign.
	//
	// Deprecated: Use metadataEntry instead
	Metadata pulumi.StringMapInput
	// A set of metadata entries to assign. See Metadata section for details.
	MetadataEntries CatalogMetadataEntryArrayInput
	// Catalog name
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations.
	// When using a catalog shared from another organization, this field must have the name of that one, not the current one.
	// If you don't know the name of the sharing org, and put the current one, an error message will list the possible names.
	Org pulumi.StringPtrInput
	// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
	Password pulumi.StringPtrInput
	// Enable include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the portability of the package, and you should use it only when necessary. Default is `false`.
	PreserveIdentityInformation pulumi.BoolPtrInput
	// Enable allows to publish a catalog externally to make its vApp templates and media files available for subscription by organizations outside the Cloud Director installation. Default is `false`.
	PublishEnabled pulumi.BoolPtrInput
	// Allows to set specific storage profile to be used for catalog. **Note.** Data
	// source [getStorageProfile](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/storage_profile) can help to lookup storage profile ID.
	StorageProfileId pulumi.StringPtrInput
}

func (CatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogArgs)(nil)).Elem()
}

type CatalogInput interface {
	pulumi.Input

	ToCatalogOutput() CatalogOutput
	ToCatalogOutputWithContext(ctx context.Context) CatalogOutput
}

func (*Catalog) ElementType() reflect.Type {
	return reflect.TypeOf((**Catalog)(nil)).Elem()
}

func (i *Catalog) ToCatalogOutput() CatalogOutput {
	return i.ToCatalogOutputWithContext(context.Background())
}

func (i *Catalog) ToCatalogOutputWithContext(ctx context.Context) CatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogOutput)
}

// CatalogArrayInput is an input type that accepts CatalogArray and CatalogArrayOutput values.
// You can construct a concrete instance of `CatalogArrayInput` via:
//
//	CatalogArray{ CatalogArgs{...} }
type CatalogArrayInput interface {
	pulumi.Input

	ToCatalogArrayOutput() CatalogArrayOutput
	ToCatalogArrayOutputWithContext(context.Context) CatalogArrayOutput
}

type CatalogArray []CatalogInput

func (CatalogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Catalog)(nil)).Elem()
}

func (i CatalogArray) ToCatalogArrayOutput() CatalogArrayOutput {
	return i.ToCatalogArrayOutputWithContext(context.Background())
}

func (i CatalogArray) ToCatalogArrayOutputWithContext(ctx context.Context) CatalogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogArrayOutput)
}

// CatalogMapInput is an input type that accepts CatalogMap and CatalogMapOutput values.
// You can construct a concrete instance of `CatalogMapInput` via:
//
//	CatalogMap{ "key": CatalogArgs{...} }
type CatalogMapInput interface {
	pulumi.Input

	ToCatalogMapOutput() CatalogMapOutput
	ToCatalogMapOutputWithContext(context.Context) CatalogMapOutput
}

type CatalogMap map[string]CatalogInput

func (CatalogMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Catalog)(nil)).Elem()
}

func (i CatalogMap) ToCatalogMapOutput() CatalogMapOutput {
	return i.ToCatalogMapOutputWithContext(context.Background())
}

func (i CatalogMap) ToCatalogMapOutputWithContext(ctx context.Context) CatalogMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogMapOutput)
}

type CatalogOutput struct{ *pulumi.OutputState }

func (CatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Catalog)(nil)).Elem()
}

func (o CatalogOutput) ToCatalogOutput() CatalogOutput {
	return o
}

func (o CatalogOutput) ToCatalogOutputWithContext(ctx context.Context) CatalogOutput {
	return o
}

// Enable early catalog export to optimize synchronization. Default is `false`. It is recommended to set it to `true` when publishing the catalog.
func (o CatalogOutput) CacheEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolPtrOutput { return v.CacheEnabled }).(pulumi.BoolPtrOutput)
}

// (*v3.6+*) Version number from this catalog.
func (o CatalogOutput) CatalogVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *Catalog) pulumi.IntOutput { return v.CatalogVersion }).(pulumi.IntOutput)
}

// (*v3.6+*) Date and time of catalog creation
func (o CatalogOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// When destroying use `delete_force=true` with `delete_recursive=true` to remove a catalog and any objects it contains, regardless of their state. Default is `false`
func (o CatalogOutput) DeleteForce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolPtrOutput { return v.DeleteForce }).(pulumi.BoolPtrOutput)
}

// When destroying use `delete_recursive=true` to remove the catalog and any objects it contains that are in a state that normally allows removal. Default is `false`
func (o CatalogOutput) DeleteRecursive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolPtrOutput { return v.DeleteRecursive }).(pulumi.BoolPtrOutput)
}

// Description of catalog
func (o CatalogOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Catalog HREF
func (o CatalogOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.Href }).(pulumi.StringOutput)
}

// (*v3.8.1+*) Indicates if this catalog was created in the current organization.
func (o CatalogOutput) IsLocal() pulumi.BoolOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolOutput { return v.IsLocal }).(pulumi.BoolOutput)
}

// (*v3.6+*) Indicates if this catalog is shared to all organizations.
func (o CatalogOutput) IsPublished() pulumi.BoolOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolOutput { return v.IsPublished }).(pulumi.BoolOutput)
}

// (*v3.6+*) Indicates if the catalog is shared.
func (o CatalogOutput) IsShared() pulumi.BoolOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolOutput { return v.IsShared }).(pulumi.BoolOutput)
}

// (*v3.8+*) List of media item names in this catalog, in alphabetical order.
func (o CatalogOutput) MediaItemLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringArrayOutput { return v.MediaItemLists }).(pulumi.StringArrayOutput)
}

// Use `metadataEntry` instead. Key value map of metadata to assign.
//
// Deprecated: Use metadataEntry instead
func (o CatalogOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// A set of metadata entries to assign. See Metadata section for details.
func (o CatalogOutput) MetadataEntries() CatalogMetadataEntryArrayOutput {
	return o.ApplyT(func(v *Catalog) CatalogMetadataEntryArrayOutput { return v.MetadataEntries }).(CatalogMetadataEntryArrayOutput)
}

// Catalog name
func (o CatalogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (*v3.6+*) Number of media items available in this catalog.
func (o CatalogOutput) NumberOfMedia() pulumi.IntOutput {
	return o.ApplyT(func(v *Catalog) pulumi.IntOutput { return v.NumberOfMedia }).(pulumi.IntOutput)
}

// (*v3.6+*) Number of vApp templates available in this catalog.
func (o CatalogOutput) NumberOfVappTemplates() pulumi.IntOutput {
	return o.ApplyT(func(v *Catalog) pulumi.IntOutput { return v.NumberOfVappTemplates }).(pulumi.IntOutput)
}

// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations.
// When using a catalog shared from another organization, this field must have the name of that one, not the current one.
// If you don't know the name of the sharing org, and put the current one, an error message will list the possible names.
func (o CatalogOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

// (*v3.6+*) Owner of the catalog.
func (o CatalogOutput) OwnerName() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.OwnerName }).(pulumi.StringOutput)
}

// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
func (o CatalogOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Enable include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the portability of the package, and you should use it only when necessary. Default is `false`.
func (o CatalogOutput) PreserveIdentityInformation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolPtrOutput { return v.PreserveIdentityInformation }).(pulumi.BoolPtrOutput)
}

// Enable allows to publish a catalog externally to make its vApp templates and media files available for subscription by organizations outside the Cloud Director installation. Default is `false`.
func (o CatalogOutput) PublishEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolPtrOutput { return v.PublishEnabled }).(pulumi.BoolPtrOutput)
}

// (*v3.6+*) Shows if the catalog is `PUBLISHED`, if it is a subscription from another one (`SUBSCRIBED`), or none of those (`UNPUBLISHED`).
func (o CatalogOutput) PublishSubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.PublishSubscriptionType }).(pulumi.StringOutput)
}

// (*v3.8+*) URL to which other catalogs can subscribe.
func (o CatalogOutput) PublishSubscriptionUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.PublishSubscriptionUrl }).(pulumi.StringOutput)
}

// Allows to set specific storage profile to be used for catalog. **Note.** Data
// source [getStorageProfile](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/storage_profile) can help to lookup storage profile ID.
func (o CatalogOutput) StorageProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringPtrOutput { return v.StorageProfileId }).(pulumi.StringPtrOutput)
}

// (*v3.8+*) List of vApp template names in this catalog, in alphabetical order.
func (o CatalogOutput) VappTemplateLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringArrayOutput { return v.VappTemplateLists }).(pulumi.StringArrayOutput)
}

type CatalogArrayOutput struct{ *pulumi.OutputState }

func (CatalogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Catalog)(nil)).Elem()
}

func (o CatalogArrayOutput) ToCatalogArrayOutput() CatalogArrayOutput {
	return o
}

func (o CatalogArrayOutput) ToCatalogArrayOutputWithContext(ctx context.Context) CatalogArrayOutput {
	return o
}

func (o CatalogArrayOutput) Index(i pulumi.IntInput) CatalogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Catalog {
		return vs[0].([]*Catalog)[vs[1].(int)]
	}).(CatalogOutput)
}

type CatalogMapOutput struct{ *pulumi.OutputState }

func (CatalogMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Catalog)(nil)).Elem()
}

func (o CatalogMapOutput) ToCatalogMapOutput() CatalogMapOutput {
	return o
}

func (o CatalogMapOutput) ToCatalogMapOutputWithContext(ctx context.Context) CatalogMapOutput {
	return o
}

func (o CatalogMapOutput) MapIndex(k pulumi.StringInput) CatalogOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Catalog {
		return vs[0].(map[string]*Catalog)[vs[1].(string)]
	}).(CatalogOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogInput)(nil)).Elem(), &Catalog{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogArrayInput)(nil)).Elem(), CatalogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogMapInput)(nil)).Elem(), CatalogMap{})
	pulumi.RegisterOutputType(CatalogOutput{})
	pulumi.RegisterOutputType(CatalogArrayOutput{})
	pulumi.RegisterOutputType(CatalogMapOutput{})
}
