// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NsxtEdgegatewayDhcpForwarding struct {
	pulumi.CustomResourceState

	// IP addresses of DHCP servers. Maximum 8 can be specified.
	//
	// > Modification of the `dhcpServers` field will not be changed in VCD when `enabled = false` because VCD API ignores DHCP server changes when DHCP forwarding is disabled.
	DhcpServers pulumi.StringArrayOutput `pulumi:"dhcpServers"`
	// NSX-T Edge Gateway ID.
	EdgeGatewayId pulumi.StringOutput `pulumi:"edgeGatewayId"`
	// DHCP Forwarding status.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Org in which the NSX-T Edge Gateway is located, required
	// if not set in the provider section.
	Org pulumi.StringPtrOutput `pulumi:"org"`
}

// NewNsxtEdgegatewayDhcpForwarding registers a new resource with the given unique name, arguments, and options.
func NewNsxtEdgegatewayDhcpForwarding(ctx *pulumi.Context,
	name string, args *NsxtEdgegatewayDhcpForwardingArgs, opts ...pulumi.ResourceOption) (*NsxtEdgegatewayDhcpForwarding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DhcpServers == nil {
		return nil, errors.New("invalid value for required argument 'DhcpServers'")
	}
	if args.EdgeGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'EdgeGatewayId'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NsxtEdgegatewayDhcpForwarding
	err := ctx.RegisterResource("vcd:index/nsxtEdgegatewayDhcpForwarding:NsxtEdgegatewayDhcpForwarding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNsxtEdgegatewayDhcpForwarding gets an existing NsxtEdgegatewayDhcpForwarding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNsxtEdgegatewayDhcpForwarding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NsxtEdgegatewayDhcpForwardingState, opts ...pulumi.ResourceOption) (*NsxtEdgegatewayDhcpForwarding, error) {
	var resource NsxtEdgegatewayDhcpForwarding
	err := ctx.ReadResource("vcd:index/nsxtEdgegatewayDhcpForwarding:NsxtEdgegatewayDhcpForwarding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NsxtEdgegatewayDhcpForwarding resources.
type nsxtEdgegatewayDhcpForwardingState struct {
	// IP addresses of DHCP servers. Maximum 8 can be specified.
	//
	// > Modification of the `dhcpServers` field will not be changed in VCD when `enabled = false` because VCD API ignores DHCP server changes when DHCP forwarding is disabled.
	DhcpServers []string `pulumi:"dhcpServers"`
	// NSX-T Edge Gateway ID.
	EdgeGatewayId *string `pulumi:"edgeGatewayId"`
	// DHCP Forwarding status.
	Enabled *bool `pulumi:"enabled"`
	// Org in which the NSX-T Edge Gateway is located, required
	// if not set in the provider section.
	Org *string `pulumi:"org"`
}

type NsxtEdgegatewayDhcpForwardingState struct {
	// IP addresses of DHCP servers. Maximum 8 can be specified.
	//
	// > Modification of the `dhcpServers` field will not be changed in VCD when `enabled = false` because VCD API ignores DHCP server changes when DHCP forwarding is disabled.
	DhcpServers pulumi.StringArrayInput
	// NSX-T Edge Gateway ID.
	EdgeGatewayId pulumi.StringPtrInput
	// DHCP Forwarding status.
	Enabled pulumi.BoolPtrInput
	// Org in which the NSX-T Edge Gateway is located, required
	// if not set in the provider section.
	Org pulumi.StringPtrInput
}

func (NsxtEdgegatewayDhcpForwardingState) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtEdgegatewayDhcpForwardingState)(nil)).Elem()
}

type nsxtEdgegatewayDhcpForwardingArgs struct {
	// IP addresses of DHCP servers. Maximum 8 can be specified.
	//
	// > Modification of the `dhcpServers` field will not be changed in VCD when `enabled = false` because VCD API ignores DHCP server changes when DHCP forwarding is disabled.
	DhcpServers []string `pulumi:"dhcpServers"`
	// NSX-T Edge Gateway ID.
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	// DHCP Forwarding status.
	Enabled bool `pulumi:"enabled"`
	// Org in which the NSX-T Edge Gateway is located, required
	// if not set in the provider section.
	Org *string `pulumi:"org"`
}

// The set of arguments for constructing a NsxtEdgegatewayDhcpForwarding resource.
type NsxtEdgegatewayDhcpForwardingArgs struct {
	// IP addresses of DHCP servers. Maximum 8 can be specified.
	//
	// > Modification of the `dhcpServers` field will not be changed in VCD when `enabled = false` because VCD API ignores DHCP server changes when DHCP forwarding is disabled.
	DhcpServers pulumi.StringArrayInput
	// NSX-T Edge Gateway ID.
	EdgeGatewayId pulumi.StringInput
	// DHCP Forwarding status.
	Enabled pulumi.BoolInput
	// Org in which the NSX-T Edge Gateway is located, required
	// if not set in the provider section.
	Org pulumi.StringPtrInput
}

func (NsxtEdgegatewayDhcpForwardingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtEdgegatewayDhcpForwardingArgs)(nil)).Elem()
}

type NsxtEdgegatewayDhcpForwardingInput interface {
	pulumi.Input

	ToNsxtEdgegatewayDhcpForwardingOutput() NsxtEdgegatewayDhcpForwardingOutput
	ToNsxtEdgegatewayDhcpForwardingOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpForwardingOutput
}

func (*NsxtEdgegatewayDhcpForwarding) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegatewayDhcpForwarding)(nil)).Elem()
}

func (i *NsxtEdgegatewayDhcpForwarding) ToNsxtEdgegatewayDhcpForwardingOutput() NsxtEdgegatewayDhcpForwardingOutput {
	return i.ToNsxtEdgegatewayDhcpForwardingOutputWithContext(context.Background())
}

func (i *NsxtEdgegatewayDhcpForwarding) ToNsxtEdgegatewayDhcpForwardingOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpForwardingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDhcpForwardingOutput)
}

// NsxtEdgegatewayDhcpForwardingArrayInput is an input type that accepts NsxtEdgegatewayDhcpForwardingArray and NsxtEdgegatewayDhcpForwardingArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayDhcpForwardingArrayInput` via:
//
//	NsxtEdgegatewayDhcpForwardingArray{ NsxtEdgegatewayDhcpForwardingArgs{...} }
type NsxtEdgegatewayDhcpForwardingArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewayDhcpForwardingArrayOutput() NsxtEdgegatewayDhcpForwardingArrayOutput
	ToNsxtEdgegatewayDhcpForwardingArrayOutputWithContext(context.Context) NsxtEdgegatewayDhcpForwardingArrayOutput
}

type NsxtEdgegatewayDhcpForwardingArray []NsxtEdgegatewayDhcpForwardingInput

func (NsxtEdgegatewayDhcpForwardingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtEdgegatewayDhcpForwarding)(nil)).Elem()
}

func (i NsxtEdgegatewayDhcpForwardingArray) ToNsxtEdgegatewayDhcpForwardingArrayOutput() NsxtEdgegatewayDhcpForwardingArrayOutput {
	return i.ToNsxtEdgegatewayDhcpForwardingArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayDhcpForwardingArray) ToNsxtEdgegatewayDhcpForwardingArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpForwardingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDhcpForwardingArrayOutput)
}

// NsxtEdgegatewayDhcpForwardingMapInput is an input type that accepts NsxtEdgegatewayDhcpForwardingMap and NsxtEdgegatewayDhcpForwardingMapOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayDhcpForwardingMapInput` via:
//
//	NsxtEdgegatewayDhcpForwardingMap{ "key": NsxtEdgegatewayDhcpForwardingArgs{...} }
type NsxtEdgegatewayDhcpForwardingMapInput interface {
	pulumi.Input

	ToNsxtEdgegatewayDhcpForwardingMapOutput() NsxtEdgegatewayDhcpForwardingMapOutput
	ToNsxtEdgegatewayDhcpForwardingMapOutputWithContext(context.Context) NsxtEdgegatewayDhcpForwardingMapOutput
}

type NsxtEdgegatewayDhcpForwardingMap map[string]NsxtEdgegatewayDhcpForwardingInput

func (NsxtEdgegatewayDhcpForwardingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtEdgegatewayDhcpForwarding)(nil)).Elem()
}

func (i NsxtEdgegatewayDhcpForwardingMap) ToNsxtEdgegatewayDhcpForwardingMapOutput() NsxtEdgegatewayDhcpForwardingMapOutput {
	return i.ToNsxtEdgegatewayDhcpForwardingMapOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayDhcpForwardingMap) ToNsxtEdgegatewayDhcpForwardingMapOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpForwardingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayDhcpForwardingMapOutput)
}

type NsxtEdgegatewayDhcpForwardingOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayDhcpForwardingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegatewayDhcpForwarding)(nil)).Elem()
}

func (o NsxtEdgegatewayDhcpForwardingOutput) ToNsxtEdgegatewayDhcpForwardingOutput() NsxtEdgegatewayDhcpForwardingOutput {
	return o
}

func (o NsxtEdgegatewayDhcpForwardingOutput) ToNsxtEdgegatewayDhcpForwardingOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpForwardingOutput {
	return o
}

// IP addresses of DHCP servers. Maximum 8 can be specified.
//
// > Modification of the `dhcpServers` field will not be changed in VCD when `enabled = false` because VCD API ignores DHCP server changes when DHCP forwarding is disabled.
func (o NsxtEdgegatewayDhcpForwardingOutput) DhcpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDhcpForwarding) pulumi.StringArrayOutput { return v.DhcpServers }).(pulumi.StringArrayOutput)
}

// NSX-T Edge Gateway ID.
func (o NsxtEdgegatewayDhcpForwardingOutput) EdgeGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDhcpForwarding) pulumi.StringOutput { return v.EdgeGatewayId }).(pulumi.StringOutput)
}

// DHCP Forwarding status.
func (o NsxtEdgegatewayDhcpForwardingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDhcpForwarding) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Org in which the NSX-T Edge Gateway is located, required
// if not set in the provider section.
func (o NsxtEdgegatewayDhcpForwardingOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayDhcpForwarding) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

type NsxtEdgegatewayDhcpForwardingArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayDhcpForwardingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtEdgegatewayDhcpForwarding)(nil)).Elem()
}

func (o NsxtEdgegatewayDhcpForwardingArrayOutput) ToNsxtEdgegatewayDhcpForwardingArrayOutput() NsxtEdgegatewayDhcpForwardingArrayOutput {
	return o
}

func (o NsxtEdgegatewayDhcpForwardingArrayOutput) ToNsxtEdgegatewayDhcpForwardingArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpForwardingArrayOutput {
	return o
}

func (o NsxtEdgegatewayDhcpForwardingArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewayDhcpForwardingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NsxtEdgegatewayDhcpForwarding {
		return vs[0].([]*NsxtEdgegatewayDhcpForwarding)[vs[1].(int)]
	}).(NsxtEdgegatewayDhcpForwardingOutput)
}

type NsxtEdgegatewayDhcpForwardingMapOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayDhcpForwardingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtEdgegatewayDhcpForwarding)(nil)).Elem()
}

func (o NsxtEdgegatewayDhcpForwardingMapOutput) ToNsxtEdgegatewayDhcpForwardingMapOutput() NsxtEdgegatewayDhcpForwardingMapOutput {
	return o
}

func (o NsxtEdgegatewayDhcpForwardingMapOutput) ToNsxtEdgegatewayDhcpForwardingMapOutputWithContext(ctx context.Context) NsxtEdgegatewayDhcpForwardingMapOutput {
	return o
}

func (o NsxtEdgegatewayDhcpForwardingMapOutput) MapIndex(k pulumi.StringInput) NsxtEdgegatewayDhcpForwardingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NsxtEdgegatewayDhcpForwarding {
		return vs[0].(map[string]*NsxtEdgegatewayDhcpForwarding)[vs[1].(string)]
	}).(NsxtEdgegatewayDhcpForwardingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayDhcpForwardingInput)(nil)).Elem(), &NsxtEdgegatewayDhcpForwarding{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayDhcpForwardingArrayInput)(nil)).Elem(), NsxtEdgegatewayDhcpForwardingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayDhcpForwardingMapInput)(nil)).Elem(), NsxtEdgegatewayDhcpForwardingMap{})
	pulumi.RegisterOutputType(NsxtEdgegatewayDhcpForwardingOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayDhcpForwardingArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayDhcpForwardingMapOutput{})
}
