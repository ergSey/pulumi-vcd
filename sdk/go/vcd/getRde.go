// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides the capability of reading an existing Runtime Defined Entity in VMware Cloud Director.
//
// > VCD allows to have multiple RDEs of the same [RDE Type](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_type) with
// the same name, meaning that the data source will not be able to fetch a RDE in this situation, as this data source
// can only retrieve **unique RDEs**.
//
// Supported in provider *v3.9+*
func LookupRde(ctx *pulumi.Context, args *LookupRdeArgs, opts ...pulumi.InvokeOption) (*LookupRdeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRdeResult
	err := ctx.Invoke("vcd:index/getRde:getRde", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRde.
type LookupRdeArgs struct {
	// The name of the Runtime Defined Entity.
	Name string `pulumi:"name"`
	// Name of the [Organization](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org) that owns the RDE, optional if defined at provider level.
	Org *string `pulumi:"org"`
	// The ID of the [RDE Type](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/rde_type) of the RDE to fetch.
	RdeTypeId string `pulumi:"rdeTypeId"`
}

// A collection of values returned by getRde.
type LookupRdeResult struct {
	// The entity JSON.
	Entity     string `pulumi:"entity"`
	ExternalId string `pulumi:"externalId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of metadata entries that belong to the RDE.
	// Read the [resource](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde#metadata) documentation for the details of the sub-attributes.
	MetadataEntries []GetRdeMetadataEntry `pulumi:"metadataEntries"`
	Name            string                `pulumi:"name"`
	Org             *string               `pulumi:"org"`
	// The ID of the [Organization](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/org) to which the Runtime Defined Entity belongs.
	OrgId string `pulumi:"orgId"`
	// The ID of the [Organization user](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/org_user) that owns this Runtime Defined Entity.
	OwnerUserId string `pulumi:"ownerUserId"`
	RdeTypeId   string `pulumi:"rdeTypeId"`
	// It can be `RESOLVED`, `RESOLUTION_ERROR` or `PRE_CREATED`.
	State string `pulumi:"state"`
}

func LookupRdeOutput(ctx *pulumi.Context, args LookupRdeOutputArgs, opts ...pulumi.InvokeOption) LookupRdeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRdeResultOutput, error) {
			args := v.(LookupRdeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getRde:getRde", args, LookupRdeResultOutput{}, options).(LookupRdeResultOutput), nil
		}).(LookupRdeResultOutput)
}

// A collection of arguments for invoking getRde.
type LookupRdeOutputArgs struct {
	// The name of the Runtime Defined Entity.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the [Organization](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org) that owns the RDE, optional if defined at provider level.
	Org pulumi.StringPtrInput `pulumi:"org"`
	// The ID of the [RDE Type](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/rde_type) of the RDE to fetch.
	RdeTypeId pulumi.StringInput `pulumi:"rdeTypeId"`
}

func (LookupRdeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRdeArgs)(nil)).Elem()
}

// A collection of values returned by getRde.
type LookupRdeResultOutput struct{ *pulumi.OutputState }

func (LookupRdeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRdeResult)(nil)).Elem()
}

func (o LookupRdeResultOutput) ToLookupRdeResultOutput() LookupRdeResultOutput {
	return o
}

func (o LookupRdeResultOutput) ToLookupRdeResultOutputWithContext(ctx context.Context) LookupRdeResultOutput {
	return o
}

// The entity JSON.
func (o LookupRdeResultOutput) Entity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRdeResult) string { return v.Entity }).(pulumi.StringOutput)
}

func (o LookupRdeResultOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRdeResult) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRdeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRdeResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of metadata entries that belong to the RDE.
// Read the [resource](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde#metadata) documentation for the details of the sub-attributes.
func (o LookupRdeResultOutput) MetadataEntries() GetRdeMetadataEntryArrayOutput {
	return o.ApplyT(func(v LookupRdeResult) []GetRdeMetadataEntry { return v.MetadataEntries }).(GetRdeMetadataEntryArrayOutput)
}

func (o LookupRdeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRdeResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRdeResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRdeResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

// The ID of the [Organization](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/org) to which the Runtime Defined Entity belongs.
func (o LookupRdeResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRdeResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// The ID of the [Organization user](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/org_user) that owns this Runtime Defined Entity.
func (o LookupRdeResultOutput) OwnerUserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRdeResult) string { return v.OwnerUserId }).(pulumi.StringOutput)
}

func (o LookupRdeResultOutput) RdeTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRdeResult) string { return v.RdeTypeId }).(pulumi.StringOutput)
}

// It can be `RESOLVED`, `RESOLUTION_ERROR` or `PRE_CREATED`.
func (o LookupRdeResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRdeResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRdeResultOutput{})
}
