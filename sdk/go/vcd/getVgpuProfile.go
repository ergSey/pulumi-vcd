// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Supported in provider *3.11* and VCD *10.4.0+*.
//
// > **Note:** This data source requires system administrator privileges.
//
// Provides a datasource to read vGPU profiles in VMware Cloud Director.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			profile_name, err := vcd.GetVgpuProfile(ctx, &vcd.GetVgpuProfileArgs{
//				Name: "my-profile",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("profileId", profile_name.Id)
//			return nil
//		})
//	}
//
// ```
func GetVgpuProfile(ctx *pulumi.Context, args *GetVgpuProfileArgs, opts ...pulumi.InvokeOption) (*GetVgpuProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVgpuProfileResult
	err := ctx.Invoke("vcd:index/getVgpuProfile:getVgpuProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVgpuProfile.
type GetVgpuProfileArgs struct {
	// The name of the vGPU profile.
	Name string `pulumi:"name"`
}

// A collection of values returned by getVgpuProfile.
type GetVgpuProfileResult struct {
	// ID of the vGPU profile.
	Id string `pulumi:"id"`
	// Instructions for the vGPU profile.
	Instructions string `pulumi:"instructions"`
	Name         string `pulumi:"name"`
	// Tenant facing name of the vGPU profile.
	TenantFacingName string `pulumi:"tenantFacingName"`
}

func GetVgpuProfileOutput(ctx *pulumi.Context, args GetVgpuProfileOutputArgs, opts ...pulumi.InvokeOption) GetVgpuProfileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVgpuProfileResultOutput, error) {
			args := v.(GetVgpuProfileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getVgpuProfile:getVgpuProfile", args, GetVgpuProfileResultOutput{}, options).(GetVgpuProfileResultOutput), nil
		}).(GetVgpuProfileResultOutput)
}

// A collection of arguments for invoking getVgpuProfile.
type GetVgpuProfileOutputArgs struct {
	// The name of the vGPU profile.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVgpuProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVgpuProfileArgs)(nil)).Elem()
}

// A collection of values returned by getVgpuProfile.
type GetVgpuProfileResultOutput struct{ *pulumi.OutputState }

func (GetVgpuProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVgpuProfileResult)(nil)).Elem()
}

func (o GetVgpuProfileResultOutput) ToGetVgpuProfileResultOutput() GetVgpuProfileResultOutput {
	return o
}

func (o GetVgpuProfileResultOutput) ToGetVgpuProfileResultOutputWithContext(ctx context.Context) GetVgpuProfileResultOutput {
	return o
}

// ID of the vGPU profile.
func (o GetVgpuProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVgpuProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// Instructions for the vGPU profile.
func (o GetVgpuProfileResultOutput) Instructions() pulumi.StringOutput {
	return o.ApplyT(func(v GetVgpuProfileResult) string { return v.Instructions }).(pulumi.StringOutput)
}

func (o GetVgpuProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVgpuProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// Tenant facing name of the vGPU profile.
func (o GetVgpuProfileResultOutput) TenantFacingName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVgpuProfileResult) string { return v.TenantFacingName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVgpuProfileResultOutput{})
}
