// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"errors"
	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NsxtEdgegatewayBgpIpPrefixList struct {
	pulumi.CustomResourceState

	// Description of IP Prefix List
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the Edge Gateway (NSX-T only). Can be looked up using
	// `NsxtEdgegateway` datasource
	EdgeGatewayId pulumi.StringOutput `pulumi:"edgeGatewayId"`
	// At least one `ipPrefix` definition. See IP Prefix for
	// definition structure.
	//
	// <a id="ip-prefix"></a>
	IpPrefixes NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput `pulumi:"ipPrefixes"`
	// The Name of IP Prefix List
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations
	Org pulumi.StringPtrOutput `pulumi:"org"`
}

// NewNsxtEdgegatewayBgpIpPrefixList registers a new resource with the given unique name, arguments, and options.
func NewNsxtEdgegatewayBgpIpPrefixList(ctx *pulumi.Context,
	name string, args *NsxtEdgegatewayBgpIpPrefixListArgs, opts ...pulumi.ResourceOption) (*NsxtEdgegatewayBgpIpPrefixList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EdgeGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'EdgeGatewayId'")
	}
	if args.IpPrefixes == nil {
		return nil, errors.New("invalid value for required argument 'IpPrefixes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NsxtEdgegatewayBgpIpPrefixList
	err := ctx.RegisterResource("vcd:index/nsxtEdgegatewayBgpIpPrefixList:NsxtEdgegatewayBgpIpPrefixList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNsxtEdgegatewayBgpIpPrefixList gets an existing NsxtEdgegatewayBgpIpPrefixList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNsxtEdgegatewayBgpIpPrefixList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NsxtEdgegatewayBgpIpPrefixListState, opts ...pulumi.ResourceOption) (*NsxtEdgegatewayBgpIpPrefixList, error) {
	var resource NsxtEdgegatewayBgpIpPrefixList
	err := ctx.ReadResource("vcd:index/nsxtEdgegatewayBgpIpPrefixList:NsxtEdgegatewayBgpIpPrefixList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NsxtEdgegatewayBgpIpPrefixList resources.
type nsxtEdgegatewayBgpIpPrefixListState struct {
	// Description of IP Prefix List
	Description *string `pulumi:"description"`
	// The ID of the Edge Gateway (NSX-T only). Can be looked up using
	// `NsxtEdgegateway` datasource
	EdgeGatewayId *string `pulumi:"edgeGatewayId"`
	// At least one `ipPrefix` definition. See IP Prefix for
	// definition structure.
	//
	// <a id="ip-prefix"></a>
	IpPrefixes []NsxtEdgegatewayBgpIpPrefixListIpPrefix `pulumi:"ipPrefixes"`
	// The Name of IP Prefix List
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations
	Org *string `pulumi:"org"`
}

type NsxtEdgegatewayBgpIpPrefixListState struct {
	// Description of IP Prefix List
	Description pulumi.StringPtrInput
	// The ID of the Edge Gateway (NSX-T only). Can be looked up using
	// `NsxtEdgegateway` datasource
	EdgeGatewayId pulumi.StringPtrInput
	// At least one `ipPrefix` definition. See IP Prefix for
	// definition structure.
	//
	// <a id="ip-prefix"></a>
	IpPrefixes NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayInput
	// The Name of IP Prefix List
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations
	Org pulumi.StringPtrInput
}

func (NsxtEdgegatewayBgpIpPrefixListState) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtEdgegatewayBgpIpPrefixListState)(nil)).Elem()
}

type nsxtEdgegatewayBgpIpPrefixListArgs struct {
	// Description of IP Prefix List
	Description *string `pulumi:"description"`
	// The ID of the Edge Gateway (NSX-T only). Can be looked up using
	// `NsxtEdgegateway` datasource
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	// At least one `ipPrefix` definition. See IP Prefix for
	// definition structure.
	//
	// <a id="ip-prefix"></a>
	IpPrefixes []NsxtEdgegatewayBgpIpPrefixListIpPrefix `pulumi:"ipPrefixes"`
	// The Name of IP Prefix List
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations
	Org *string `pulumi:"org"`
}

// The set of arguments for constructing a NsxtEdgegatewayBgpIpPrefixList resource.
type NsxtEdgegatewayBgpIpPrefixListArgs struct {
	// Description of IP Prefix List
	Description pulumi.StringPtrInput
	// The ID of the Edge Gateway (NSX-T only). Can be looked up using
	// `NsxtEdgegateway` datasource
	EdgeGatewayId pulumi.StringInput
	// At least one `ipPrefix` definition. See IP Prefix for
	// definition structure.
	//
	// <a id="ip-prefix"></a>
	IpPrefixes NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayInput
	// The Name of IP Prefix List
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations
	Org pulumi.StringPtrInput
}

func (NsxtEdgegatewayBgpIpPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtEdgegatewayBgpIpPrefixListArgs)(nil)).Elem()
}

type NsxtEdgegatewayBgpIpPrefixListInput interface {
	pulumi.Input

	ToNsxtEdgegatewayBgpIpPrefixListOutput() NsxtEdgegatewayBgpIpPrefixListOutput
	ToNsxtEdgegatewayBgpIpPrefixListOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListOutput
}

func (*NsxtEdgegatewayBgpIpPrefixList) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegatewayBgpIpPrefixList)(nil)).Elem()
}

func (i *NsxtEdgegatewayBgpIpPrefixList) ToNsxtEdgegatewayBgpIpPrefixListOutput() NsxtEdgegatewayBgpIpPrefixListOutput {
	return i.ToNsxtEdgegatewayBgpIpPrefixListOutputWithContext(context.Background())
}

func (i *NsxtEdgegatewayBgpIpPrefixList) ToNsxtEdgegatewayBgpIpPrefixListOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayBgpIpPrefixListOutput)
}

// NsxtEdgegatewayBgpIpPrefixListArrayInput is an input type that accepts NsxtEdgegatewayBgpIpPrefixListArray and NsxtEdgegatewayBgpIpPrefixListArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayBgpIpPrefixListArrayInput` via:
//
//	NsxtEdgegatewayBgpIpPrefixListArray{ NsxtEdgegatewayBgpIpPrefixListArgs{...} }
type NsxtEdgegatewayBgpIpPrefixListArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewayBgpIpPrefixListArrayOutput() NsxtEdgegatewayBgpIpPrefixListArrayOutput
	ToNsxtEdgegatewayBgpIpPrefixListArrayOutputWithContext(context.Context) NsxtEdgegatewayBgpIpPrefixListArrayOutput
}

type NsxtEdgegatewayBgpIpPrefixListArray []NsxtEdgegatewayBgpIpPrefixListInput

func (NsxtEdgegatewayBgpIpPrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtEdgegatewayBgpIpPrefixList)(nil)).Elem()
}

func (i NsxtEdgegatewayBgpIpPrefixListArray) ToNsxtEdgegatewayBgpIpPrefixListArrayOutput() NsxtEdgegatewayBgpIpPrefixListArrayOutput {
	return i.ToNsxtEdgegatewayBgpIpPrefixListArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayBgpIpPrefixListArray) ToNsxtEdgegatewayBgpIpPrefixListArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayBgpIpPrefixListArrayOutput)
}

// NsxtEdgegatewayBgpIpPrefixListMapInput is an input type that accepts NsxtEdgegatewayBgpIpPrefixListMap and NsxtEdgegatewayBgpIpPrefixListMapOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayBgpIpPrefixListMapInput` via:
//
//	NsxtEdgegatewayBgpIpPrefixListMap{ "key": NsxtEdgegatewayBgpIpPrefixListArgs{...} }
type NsxtEdgegatewayBgpIpPrefixListMapInput interface {
	pulumi.Input

	ToNsxtEdgegatewayBgpIpPrefixListMapOutput() NsxtEdgegatewayBgpIpPrefixListMapOutput
	ToNsxtEdgegatewayBgpIpPrefixListMapOutputWithContext(context.Context) NsxtEdgegatewayBgpIpPrefixListMapOutput
}

type NsxtEdgegatewayBgpIpPrefixListMap map[string]NsxtEdgegatewayBgpIpPrefixListInput

func (NsxtEdgegatewayBgpIpPrefixListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtEdgegatewayBgpIpPrefixList)(nil)).Elem()
}

func (i NsxtEdgegatewayBgpIpPrefixListMap) ToNsxtEdgegatewayBgpIpPrefixListMapOutput() NsxtEdgegatewayBgpIpPrefixListMapOutput {
	return i.ToNsxtEdgegatewayBgpIpPrefixListMapOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayBgpIpPrefixListMap) ToNsxtEdgegatewayBgpIpPrefixListMapOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayBgpIpPrefixListMapOutput)
}

type NsxtEdgegatewayBgpIpPrefixListOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayBgpIpPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegatewayBgpIpPrefixList)(nil)).Elem()
}

func (o NsxtEdgegatewayBgpIpPrefixListOutput) ToNsxtEdgegatewayBgpIpPrefixListOutput() NsxtEdgegatewayBgpIpPrefixListOutput {
	return o
}

func (o NsxtEdgegatewayBgpIpPrefixListOutput) ToNsxtEdgegatewayBgpIpPrefixListOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListOutput {
	return o
}

// Description of IP Prefix List
func (o NsxtEdgegatewayBgpIpPrefixListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayBgpIpPrefixList) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the Edge Gateway (NSX-T only). Can be looked up using
// `NsxtEdgegateway` datasource
func (o NsxtEdgegatewayBgpIpPrefixListOutput) EdgeGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayBgpIpPrefixList) pulumi.StringOutput { return v.EdgeGatewayId }).(pulumi.StringOutput)
}

// At least one `ipPrefix` definition. See IP Prefix for
// definition structure.
//
// <a id="ip-prefix"></a>
func (o NsxtEdgegatewayBgpIpPrefixListOutput) IpPrefixes() NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayBgpIpPrefixList) NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput {
		return v.IpPrefixes
	}).(NsxtEdgegatewayBgpIpPrefixListIpPrefixArrayOutput)
}

// The Name of IP Prefix List
func (o NsxtEdgegatewayBgpIpPrefixListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayBgpIpPrefixList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of organization to use, optional if defined at provider level. Useful
// when connected as sysadmin working across different organisations
func (o NsxtEdgegatewayBgpIpPrefixListOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegatewayBgpIpPrefixList) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

type NsxtEdgegatewayBgpIpPrefixListArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayBgpIpPrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtEdgegatewayBgpIpPrefixList)(nil)).Elem()
}

func (o NsxtEdgegatewayBgpIpPrefixListArrayOutput) ToNsxtEdgegatewayBgpIpPrefixListArrayOutput() NsxtEdgegatewayBgpIpPrefixListArrayOutput {
	return o
}

func (o NsxtEdgegatewayBgpIpPrefixListArrayOutput) ToNsxtEdgegatewayBgpIpPrefixListArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListArrayOutput {
	return o
}

func (o NsxtEdgegatewayBgpIpPrefixListArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewayBgpIpPrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NsxtEdgegatewayBgpIpPrefixList {
		return vs[0].([]*NsxtEdgegatewayBgpIpPrefixList)[vs[1].(int)]
	}).(NsxtEdgegatewayBgpIpPrefixListOutput)
}

type NsxtEdgegatewayBgpIpPrefixListMapOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayBgpIpPrefixListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtEdgegatewayBgpIpPrefixList)(nil)).Elem()
}

func (o NsxtEdgegatewayBgpIpPrefixListMapOutput) ToNsxtEdgegatewayBgpIpPrefixListMapOutput() NsxtEdgegatewayBgpIpPrefixListMapOutput {
	return o
}

func (o NsxtEdgegatewayBgpIpPrefixListMapOutput) ToNsxtEdgegatewayBgpIpPrefixListMapOutputWithContext(ctx context.Context) NsxtEdgegatewayBgpIpPrefixListMapOutput {
	return o
}

func (o NsxtEdgegatewayBgpIpPrefixListMapOutput) MapIndex(k pulumi.StringInput) NsxtEdgegatewayBgpIpPrefixListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NsxtEdgegatewayBgpIpPrefixList {
		return vs[0].(map[string]*NsxtEdgegatewayBgpIpPrefixList)[vs[1].(string)]
	}).(NsxtEdgegatewayBgpIpPrefixListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayBgpIpPrefixListInput)(nil)).Elem(), &NsxtEdgegatewayBgpIpPrefixList{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayBgpIpPrefixListArrayInput)(nil)).Elem(), NsxtEdgegatewayBgpIpPrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayBgpIpPrefixListMapInput)(nil)).Elem(), NsxtEdgegatewayBgpIpPrefixListMap{})
	pulumi.RegisterOutputType(NsxtEdgegatewayBgpIpPrefixListOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayBgpIpPrefixListArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayBgpIpPrefixListMapOutput{})
}
