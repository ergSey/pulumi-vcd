// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director vApp data source. This can be used to reference vApps.
//
// Supported in provider *v2.5+*
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test_tf, err := vcd.LookupVapp(ctx, &vcd.LookupVappArgs{
//				Name: "test-tf",
//				Org:  pulumi.StringRef("tf"),
//				Vdc:  pulumi.StringRef("vdc-tf"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", test_tf.Id)
//			ctx.Export("name", test_tf.Name)
//			ctx.Export("description", test_tf.Description)
//			ctx.Export("href", test_tf.Href)
//			ctx.Export("statusText", test_tf.StatusText)
//			return nil
//		})
//	}
//
// ```
//
// ## Metadata
//
// The `metadataEntry` (*v3.8+*) is a set of metadata entries that have the following structure:
//
// * `key` - Key of this metadata entry.
// * `value` - Value of this metadata entry.
// * `type` - Type of this metadata entry. One of: `MetadataStringValue`, `MetadataNumberValue`, `MetadataDateTimeValue`, `MetadataBooleanValue`.
// * `userAccess` - User access level for this metadata entry. One of: `PRIVATE` (hidden), `READONLY` (read only), `READWRITE` (read/write).
// * `isSystem` - Domain for this metadata entry. true if it belongs to `SYSTEM`, false if it belongs to `GENERAL`.
func LookupVapp(ctx *pulumi.Context, args *LookupVappArgs, opts ...pulumi.InvokeOption) (*LookupVappResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVappResult
	err := ctx.Invoke("vcd:index/getVapp:getVapp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVapp.
type LookupVappArgs struct {
	// A unique name for the vApp
	Name string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
	Org *string `pulumi:"org"`
	// The name of VDC to use, optional if defined at provider level
	Vdc *string `pulumi:"vdc"`
}

// A collection of values returned by getVapp.
type LookupVappResult struct {
	// An optional description for the vApp
	Description string `pulumi:"description"`
	// Key value map of vApp guest properties.
	GuestProperties map[string]string `pulumi:"guestProperties"`
	// The vApp Hyper Reference
	Href string `pulumi:"href"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (*v3.11+*; *VCD 10.5.1+*) A map that contains read-only metadata that is automatically added by VCD (10.5.1+) and provides
	// details on the origin of the vApp (e.g. `vapp.origin.id`, `vapp.origin.name`, `vapp.origin.type`).
	InheritedMetadata map[string]string `pulumi:"inheritedMetadata"`
	// (*v3.5+*) - The information about the vApp lease. It includes the following fields:
	Leases []GetVappLease `pulumi:"leases"`
	// (Deprecated) Use `metadataEntry` instead. Key value map of metadata assigned to this vApp. Key and value can be any string.
	//
	// Deprecated: Use metadataEntry instead
	Metadata map[string]string `pulumi:"metadata"`
	// A set of metadata entries assigned to this vApp. See Metadata section for details.
	MetadataEntries []GetVappMetadataEntry `pulumi:"metadataEntries"`
	Name            string                 `pulumi:"name"`
	Org             *string                `pulumi:"org"`
	// The vApp status as a numeric code
	Status int `pulumi:"status"`
	// The vApp status as text.
	StatusText string `pulumi:"statusText"`
	// (*3.13.0+*) A list of vApp network names included in this vApp
	VappNetworkNames []string `pulumi:"vappNetworkNames"`
	// (*v3.13.0+*) A list of vApp Org network names included in this vApp
	VappOrgNetworkNames []string `pulumi:"vappOrgNetworkNames"`
	Vdc                 *string  `pulumi:"vdc"`
	// (*v3.13.0+*) A list of VM names included in this vApp
	VmNames []string `pulumi:"vmNames"`
}

func LookupVappOutput(ctx *pulumi.Context, args LookupVappOutputArgs, opts ...pulumi.InvokeOption) LookupVappResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVappResultOutput, error) {
			args := v.(LookupVappArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getVapp:getVapp", args, LookupVappResultOutput{}, options).(LookupVappResultOutput), nil
		}).(LookupVappResultOutput)
}

// A collection of arguments for invoking getVapp.
type LookupVappOutputArgs struct {
	// A unique name for the vApp
	Name pulumi.StringInput `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
	Org pulumi.StringPtrInput `pulumi:"org"`
	// The name of VDC to use, optional if defined at provider level
	Vdc pulumi.StringPtrInput `pulumi:"vdc"`
}

func (LookupVappOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVappArgs)(nil)).Elem()
}

// A collection of values returned by getVapp.
type LookupVappResultOutput struct{ *pulumi.OutputState }

func (LookupVappResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVappResult)(nil)).Elem()
}

func (o LookupVappResultOutput) ToLookupVappResultOutput() LookupVappResultOutput {
	return o
}

func (o LookupVappResultOutput) ToLookupVappResultOutputWithContext(ctx context.Context) LookupVappResultOutput {
	return o
}

// An optional description for the vApp
func (o LookupVappResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVappResult) string { return v.Description }).(pulumi.StringOutput)
}

// Key value map of vApp guest properties.
func (o LookupVappResultOutput) GuestProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVappResult) map[string]string { return v.GuestProperties }).(pulumi.StringMapOutput)
}

// The vApp Hyper Reference
func (o LookupVappResultOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVappResult) string { return v.Href }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVappResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVappResult) string { return v.Id }).(pulumi.StringOutput)
}

// (*v3.11+*; *VCD 10.5.1+*) A map that contains read-only metadata that is automatically added by VCD (10.5.1+) and provides
// details on the origin of the vApp (e.g. `vapp.origin.id`, `vapp.origin.name`, `vapp.origin.type`).
func (o LookupVappResultOutput) InheritedMetadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVappResult) map[string]string { return v.InheritedMetadata }).(pulumi.StringMapOutput)
}

// (*v3.5+*) - The information about the vApp lease. It includes the following fields:
func (o LookupVappResultOutput) Leases() GetVappLeaseArrayOutput {
	return o.ApplyT(func(v LookupVappResult) []GetVappLease { return v.Leases }).(GetVappLeaseArrayOutput)
}

// (Deprecated) Use `metadataEntry` instead. Key value map of metadata assigned to this vApp. Key and value can be any string.
//
// Deprecated: Use metadataEntry instead
func (o LookupVappResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVappResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// A set of metadata entries assigned to this vApp. See Metadata section for details.
func (o LookupVappResultOutput) MetadataEntries() GetVappMetadataEntryArrayOutput {
	return o.ApplyT(func(v LookupVappResult) []GetVappMetadataEntry { return v.MetadataEntries }).(GetVappMetadataEntryArrayOutput)
}

func (o LookupVappResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVappResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVappResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVappResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

// The vApp status as a numeric code
func (o LookupVappResultOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVappResult) int { return v.Status }).(pulumi.IntOutput)
}

// The vApp status as text.
func (o LookupVappResultOutput) StatusText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVappResult) string { return v.StatusText }).(pulumi.StringOutput)
}

// (*3.13.0+*) A list of vApp network names included in this vApp
func (o LookupVappResultOutput) VappNetworkNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVappResult) []string { return v.VappNetworkNames }).(pulumi.StringArrayOutput)
}

// (*v3.13.0+*) A list of vApp Org network names included in this vApp
func (o LookupVappResultOutput) VappOrgNetworkNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVappResult) []string { return v.VappOrgNetworkNames }).(pulumi.StringArrayOutput)
}

func (o LookupVappResultOutput) Vdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVappResult) *string { return v.Vdc }).(pulumi.StringPtrOutput)
}

// (*v3.13.0+*) A list of VM names included in this vApp
func (o LookupVappResultOutput) VmNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVappResult) []string { return v.VmNames }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVappResultOutput{})
}
