// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director data source for reading NSX-V distributed firewall applications.
//
// Supported in provider *v3.9+*
func GetNsxvApplication(ctx *pulumi.Context, args *GetNsxvApplicationArgs, opts ...pulumi.InvokeOption) (*GetNsxvApplicationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNsxvApplicationResult
	err := ctx.Invoke("vcd:index/getNsxvApplication:getNsxvApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxvApplication.
type GetNsxvApplicationArgs struct {
	// The name of the application
	Name string `pulumi:"name"`
	// The ID of VDC to use
	VdcId string `pulumi:"vdcId"`
}

// A collection of values returned by getNsxvApplication.
type GetNsxvApplicationResult struct {
	// The application identifier, when available
	AppGuid string `pulumi:"appGuid"`
	// The identifier of the application
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// The ports used by the application. Could be a number, a list of numbers, or a range
	Ports string `pulumi:"ports"`
	// The protocol used by the application
	Protocol string `pulumi:"protocol"`
	// The source port used by this application. Not all applications provide one
	SourcePort string `pulumi:"sourcePort"`
	VdcId      string `pulumi:"vdcId"`
}

func GetNsxvApplicationOutput(ctx *pulumi.Context, args GetNsxvApplicationOutputArgs, opts ...pulumi.InvokeOption) GetNsxvApplicationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNsxvApplicationResultOutput, error) {
			args := v.(GetNsxvApplicationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxvApplication:getNsxvApplication", args, GetNsxvApplicationResultOutput{}, options).(GetNsxvApplicationResultOutput), nil
		}).(GetNsxvApplicationResultOutput)
}

// A collection of arguments for invoking getNsxvApplication.
type GetNsxvApplicationOutputArgs struct {
	// The name of the application
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of VDC to use
	VdcId pulumi.StringInput `pulumi:"vdcId"`
}

func (GetNsxvApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvApplicationArgs)(nil)).Elem()
}

// A collection of values returned by getNsxvApplication.
type GetNsxvApplicationResultOutput struct{ *pulumi.OutputState }

func (GetNsxvApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvApplicationResult)(nil)).Elem()
}

func (o GetNsxvApplicationResultOutput) ToGetNsxvApplicationResultOutput() GetNsxvApplicationResultOutput {
	return o
}

func (o GetNsxvApplicationResultOutput) ToGetNsxvApplicationResultOutputWithContext(ctx context.Context) GetNsxvApplicationResultOutput {
	return o
}

// The application identifier, when available
func (o GetNsxvApplicationResultOutput) AppGuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationResult) string { return v.AppGuid }).(pulumi.StringOutput)
}

// The identifier of the application
func (o GetNsxvApplicationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNsxvApplicationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ports used by the application. Could be a number, a list of numbers, or a range
func (o GetNsxvApplicationResultOutput) Ports() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationResult) string { return v.Ports }).(pulumi.StringOutput)
}

// The protocol used by the application
func (o GetNsxvApplicationResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// The source port used by this application. Not all applications provide one
func (o GetNsxvApplicationResultOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationResult) string { return v.SourcePort }).(pulumi.StringOutput)
}

func (o GetNsxvApplicationResultOutput) VdcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationResult) string { return v.VdcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNsxvApplicationResultOutput{})
}
