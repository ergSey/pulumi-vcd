// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVm(ctx *pulumi.Context, args *LookupVmArgs, opts ...pulumi.InvokeOption) (*LookupVmResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVmResult
	err := ctx.Invoke("vcd:index/getVm:getVm", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVm.
type LookupVmArgs struct {
	// A name or ID for the standalone VM in VDC
	Name                   string `pulumi:"name"`
	NetworkDhcpWaitSeconds *int   `pulumi:"networkDhcpWaitSeconds"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
	Org               *string `pulumi:"org"`
	PlacementPolicyId *string `pulumi:"placementPolicyId"`
	SizingPolicyId    *string `pulumi:"sizingPolicyId"`
	VappName          *string `pulumi:"vappName"`
	// The name of VDC to use, optional if defined at provider level
	Vdc *string `pulumi:"vdc"`
}

// A collection of values returned by getVm.
type LookupVmResult struct {
	BootOptions                  []GetVmBootOption    `pulumi:"bootOptions"`
	ComputerName                 string               `pulumi:"computerName"`
	CpuCores                     int                  `pulumi:"cpuCores"`
	CpuHotAddEnabled             bool                 `pulumi:"cpuHotAddEnabled"`
	CpuLimit                     int                  `pulumi:"cpuLimit"`
	CpuPriority                  string               `pulumi:"cpuPriority"`
	CpuReservation               int                  `pulumi:"cpuReservation"`
	CpuShares                    int                  `pulumi:"cpuShares"`
	Cpus                         int                  `pulumi:"cpus"`
	Customizations               []GetVmCustomization `pulumi:"customizations"`
	Description                  string               `pulumi:"description"`
	Disks                        []GetVmDisk          `pulumi:"disks"`
	ExposeHardwareVirtualization bool                 `pulumi:"exposeHardwareVirtualization"`
	ExtraConfigs                 []GetVmExtraConfig   `pulumi:"extraConfigs"`
	Firmware                     string               `pulumi:"firmware"`
	GuestProperties              map[string]string    `pulumi:"guestProperties"`
	HardwareVersion              string               `pulumi:"hardwareVersion"`
	Href                         string               `pulumi:"href"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string                  `pulumi:"id"`
	InheritedMetadata   map[string]string       `pulumi:"inheritedMetadata"`
	InternalDisks       []GetVmInternalDiskType `pulumi:"internalDisks"`
	Memory              int                     `pulumi:"memory"`
	MemoryHotAddEnabled bool                    `pulumi:"memoryHotAddEnabled"`
	MemoryLimit         int                     `pulumi:"memoryLimit"`
	MemoryPriority      string                  `pulumi:"memoryPriority"`
	MemoryReservation   int                     `pulumi:"memoryReservation"`
	MemoryShares        int                     `pulumi:"memoryShares"`
	// Deprecated: Use metadataEntry instead
	Metadata               map[string]string    `pulumi:"metadata"`
	MetadataEntries        []GetVmMetadataEntry `pulumi:"metadataEntries"`
	Name                   string               `pulumi:"name"`
	NetworkDhcpWaitSeconds *int                 `pulumi:"networkDhcpWaitSeconds"`
	Networks               []GetVmNetwork       `pulumi:"networks"`
	Org                    *string              `pulumi:"org"`
	OsType                 string               `pulumi:"osType"`
	PlacementPolicyId      string               `pulumi:"placementPolicyId"`
	SecurityTags           []string             `pulumi:"securityTags"`
	SizingPolicyId         string               `pulumi:"sizingPolicyId"`
	Status                 int                  `pulumi:"status"`
	StatusText             string               `pulumi:"statusText"`
	StorageProfile         string               `pulumi:"storageProfile"`
	VappId                 string               `pulumi:"vappId"`
	VappName               string               `pulumi:"vappName"`
	Vdc                    *string              `pulumi:"vdc"`
	VmType                 string               `pulumi:"vmType"`
}

func LookupVmOutput(ctx *pulumi.Context, args LookupVmOutputArgs, opts ...pulumi.InvokeOption) LookupVmResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVmResultOutput, error) {
			args := v.(LookupVmArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getVm:getVm", args, LookupVmResultOutput{}, options).(LookupVmResultOutput), nil
		}).(LookupVmResultOutput)
}

// A collection of arguments for invoking getVm.
type LookupVmOutputArgs struct {
	// A name or ID for the standalone VM in VDC
	Name                   pulumi.StringInput `pulumi:"name"`
	NetworkDhcpWaitSeconds pulumi.IntPtrInput `pulumi:"networkDhcpWaitSeconds"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
	Org               pulumi.StringPtrInput `pulumi:"org"`
	PlacementPolicyId pulumi.StringPtrInput `pulumi:"placementPolicyId"`
	SizingPolicyId    pulumi.StringPtrInput `pulumi:"sizingPolicyId"`
	VappName          pulumi.StringPtrInput `pulumi:"vappName"`
	// The name of VDC to use, optional if defined at provider level
	Vdc pulumi.StringPtrInput `pulumi:"vdc"`
}

func (LookupVmOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVmArgs)(nil)).Elem()
}

// A collection of values returned by getVm.
type LookupVmResultOutput struct{ *pulumi.OutputState }

func (LookupVmResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVmResult)(nil)).Elem()
}

func (o LookupVmResultOutput) ToLookupVmResultOutput() LookupVmResultOutput {
	return o
}

func (o LookupVmResultOutput) ToLookupVmResultOutputWithContext(ctx context.Context) LookupVmResultOutput {
	return o
}

func (o LookupVmResultOutput) BootOptions() GetVmBootOptionArrayOutput {
	return o.ApplyT(func(v LookupVmResult) []GetVmBootOption { return v.BootOptions }).(GetVmBootOptionArrayOutput)
}

func (o LookupVmResultOutput) ComputerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.ComputerName }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmResult) int { return v.CpuCores }).(pulumi.IntOutput)
}

func (o LookupVmResultOutput) CpuHotAddEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVmResult) bool { return v.CpuHotAddEnabled }).(pulumi.BoolOutput)
}

func (o LookupVmResultOutput) CpuLimit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmResult) int { return v.CpuLimit }).(pulumi.IntOutput)
}

func (o LookupVmResultOutput) CpuPriority() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.CpuPriority }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) CpuReservation() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmResult) int { return v.CpuReservation }).(pulumi.IntOutput)
}

func (o LookupVmResultOutput) CpuShares() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmResult) int { return v.CpuShares }).(pulumi.IntOutput)
}

func (o LookupVmResultOutput) Cpus() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmResult) int { return v.Cpus }).(pulumi.IntOutput)
}

func (o LookupVmResultOutput) Customizations() GetVmCustomizationArrayOutput {
	return o.ApplyT(func(v LookupVmResult) []GetVmCustomization { return v.Customizations }).(GetVmCustomizationArrayOutput)
}

func (o LookupVmResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) Disks() GetVmDiskArrayOutput {
	return o.ApplyT(func(v LookupVmResult) []GetVmDisk { return v.Disks }).(GetVmDiskArrayOutput)
}

func (o LookupVmResultOutput) ExposeHardwareVirtualization() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVmResult) bool { return v.ExposeHardwareVirtualization }).(pulumi.BoolOutput)
}

func (o LookupVmResultOutput) ExtraConfigs() GetVmExtraConfigArrayOutput {
	return o.ApplyT(func(v LookupVmResult) []GetVmExtraConfig { return v.ExtraConfigs }).(GetVmExtraConfigArrayOutput)
}

func (o LookupVmResultOutput) Firmware() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.Firmware }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) GuestProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVmResult) map[string]string { return v.GuestProperties }).(pulumi.StringMapOutput)
}

func (o LookupVmResultOutput) HardwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.HardwareVersion }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.Href }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVmResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) InheritedMetadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVmResult) map[string]string { return v.InheritedMetadata }).(pulumi.StringMapOutput)
}

func (o LookupVmResultOutput) InternalDisks() GetVmInternalDiskTypeArrayOutput {
	return o.ApplyT(func(v LookupVmResult) []GetVmInternalDiskType { return v.InternalDisks }).(GetVmInternalDiskTypeArrayOutput)
}

func (o LookupVmResultOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmResult) int { return v.Memory }).(pulumi.IntOutput)
}

func (o LookupVmResultOutput) MemoryHotAddEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVmResult) bool { return v.MemoryHotAddEnabled }).(pulumi.BoolOutput)
}

func (o LookupVmResultOutput) MemoryLimit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmResult) int { return v.MemoryLimit }).(pulumi.IntOutput)
}

func (o LookupVmResultOutput) MemoryPriority() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.MemoryPriority }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) MemoryReservation() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmResult) int { return v.MemoryReservation }).(pulumi.IntOutput)
}

func (o LookupVmResultOutput) MemoryShares() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmResult) int { return v.MemoryShares }).(pulumi.IntOutput)
}

// Deprecated: Use metadataEntry instead
func (o LookupVmResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVmResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o LookupVmResultOutput) MetadataEntries() GetVmMetadataEntryArrayOutput {
	return o.ApplyT(func(v LookupVmResult) []GetVmMetadataEntry { return v.MetadataEntries }).(GetVmMetadataEntryArrayOutput)
}

func (o LookupVmResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) NetworkDhcpWaitSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupVmResult) *int { return v.NetworkDhcpWaitSeconds }).(pulumi.IntPtrOutput)
}

func (o LookupVmResultOutput) Networks() GetVmNetworkArrayOutput {
	return o.ApplyT(func(v LookupVmResult) []GetVmNetwork { return v.Networks }).(GetVmNetworkArrayOutput)
}

func (o LookupVmResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVmResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupVmResultOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.OsType }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) PlacementPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.PlacementPolicyId }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) SecurityTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVmResult) []string { return v.SecurityTags }).(pulumi.StringArrayOutput)
}

func (o LookupVmResultOutput) SizingPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.SizingPolicyId }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmResult) int { return v.Status }).(pulumi.IntOutput)
}

func (o LookupVmResultOutput) StatusText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.StatusText }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) StorageProfile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.StorageProfile }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) VappId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.VappId }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) VappName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.VappName }).(pulumi.StringOutput)
}

func (o LookupVmResultOutput) Vdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVmResult) *string { return v.Vdc }).(pulumi.StringPtrOutput)
}

func (o LookupVmResultOutput) VmType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmResult) string { return v.VmType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVmResultOutput{})
}
