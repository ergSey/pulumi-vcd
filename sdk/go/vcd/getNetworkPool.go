// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a data source for a network pool attached to a VCD.
//
// Supported in provider *v3.10+*
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupNetworkPool(ctx, &vcd.LookupNetworkPoolArgs{
//				Name: "NSX-T Overlay 1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNetworkPool(ctx *pulumi.Context, args *LookupNetworkPoolArgs, opts ...pulumi.InvokeOption) (*LookupNetworkPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkPoolResult
	err := ctx.Invoke("vcd:index/getNetworkPool:getNetworkPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkPool.
type LookupNetworkPoolArgs struct {
	// network pool name.
	Name string `pulumi:"name"`
}

// A collection of values returned by getNetworkPool.
type LookupNetworkPoolResult struct {
	Backings    []GetNetworkPoolBacking `pulumi:"backings"`
	Description string                  `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string `pulumi:"id"`
	Name                string `pulumi:"name"`
	NetworkProviderId   string `pulumi:"networkProviderId"`
	NetworkProviderName string `pulumi:"networkProviderName"`
	NetworkProviderType string `pulumi:"networkProviderType"`
	PromiscuousMode     bool   `pulumi:"promiscuousMode"`
	Status              string `pulumi:"status"`
	TotalBackingsCount  int    `pulumi:"totalBackingsCount"`
	Type                string `pulumi:"type"`
	UsedBackingsCount   int    `pulumi:"usedBackingsCount"`
}

func LookupNetworkPoolOutput(ctx *pulumi.Context, args LookupNetworkPoolOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkPoolResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkPoolResultOutput, error) {
			args := v.(LookupNetworkPoolArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNetworkPool:getNetworkPool", args, LookupNetworkPoolResultOutput{}, options).(LookupNetworkPoolResultOutput), nil
		}).(LookupNetworkPoolResultOutput)
}

// A collection of arguments for invoking getNetworkPool.
type LookupNetworkPoolOutputArgs struct {
	// network pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupNetworkPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkPoolArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkPool.
type LookupNetworkPoolResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkPoolResult)(nil)).Elem()
}

func (o LookupNetworkPoolResultOutput) ToLookupNetworkPoolResultOutput() LookupNetworkPoolResultOutput {
	return o
}

func (o LookupNetworkPoolResultOutput) ToLookupNetworkPoolResultOutputWithContext(ctx context.Context) LookupNetworkPoolResultOutput {
	return o
}

func (o LookupNetworkPoolResultOutput) Backings() GetNetworkPoolBackingArrayOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) []GetNetworkPoolBacking { return v.Backings }).(GetNetworkPoolBackingArrayOutput)
}

func (o LookupNetworkPoolResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNetworkPoolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNetworkPoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkPoolResultOutput) NetworkProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) string { return v.NetworkProviderId }).(pulumi.StringOutput)
}

func (o LookupNetworkPoolResultOutput) NetworkProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) string { return v.NetworkProviderName }).(pulumi.StringOutput)
}

func (o LookupNetworkPoolResultOutput) NetworkProviderType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) string { return v.NetworkProviderType }).(pulumi.StringOutput)
}

func (o LookupNetworkPoolResultOutput) PromiscuousMode() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) bool { return v.PromiscuousMode }).(pulumi.BoolOutput)
}

func (o LookupNetworkPoolResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupNetworkPoolResultOutput) TotalBackingsCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) int { return v.TotalBackingsCount }).(pulumi.IntOutput)
}

func (o LookupNetworkPoolResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupNetworkPoolResultOutput) UsedBackingsCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNetworkPoolResult) int { return v.UsedBackingsCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkPoolResultOutput{})
}
