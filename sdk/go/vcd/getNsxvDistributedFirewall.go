// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The NSX-V Distributed Firewall data source reads all defined rules for a particular VDC.
//
// Supported in provider *v3.9+*
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			my_vdc, err := vcd.LookupOrgVdc(ctx, &vcd.LookupOrgVdcArgs{
//				Org:  pulumi.StringRef("my-org"),
//				Name: "my-vdc",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = vcd.LookupNsxvDistributedFirewall(ctx, &vcd.LookupNsxvDistributedFirewallArgs{
//				VdcId: my_vdc.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Attributes reference
//
// All the arguments and attributes defined for the `NsxvDistributedFirewall` resource are reported as attributes for this data source.
func LookupNsxvDistributedFirewall(ctx *pulumi.Context, args *LookupNsxvDistributedFirewallArgs, opts ...pulumi.InvokeOption) (*LookupNsxvDistributedFirewallResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNsxvDistributedFirewallResult
	err := ctx.Invoke("vcd:index/getNsxvDistributedFirewall:getNsxvDistributedFirewall", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxvDistributedFirewall.
type LookupNsxvDistributedFirewallArgs struct {
	// The ID of VDC to manage the Distributed Firewall in. Can be looked up using a `OrgVdc` data source
	VdcId string `pulumi:"vdcId"`
}

// A collection of values returned by getNsxvDistributedFirewall.
type LookupNsxvDistributedFirewallResult struct {
	Enabled bool `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id    string                           `pulumi:"id"`
	Rules []GetNsxvDistributedFirewallRule `pulumi:"rules"`
	VdcId string                           `pulumi:"vdcId"`
}

func LookupNsxvDistributedFirewallOutput(ctx *pulumi.Context, args LookupNsxvDistributedFirewallOutputArgs, opts ...pulumi.InvokeOption) LookupNsxvDistributedFirewallResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNsxvDistributedFirewallResultOutput, error) {
			args := v.(LookupNsxvDistributedFirewallArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxvDistributedFirewall:getNsxvDistributedFirewall", args, LookupNsxvDistributedFirewallResultOutput{}, options).(LookupNsxvDistributedFirewallResultOutput), nil
		}).(LookupNsxvDistributedFirewallResultOutput)
}

// A collection of arguments for invoking getNsxvDistributedFirewall.
type LookupNsxvDistributedFirewallOutputArgs struct {
	// The ID of VDC to manage the Distributed Firewall in. Can be looked up using a `OrgVdc` data source
	VdcId pulumi.StringInput `pulumi:"vdcId"`
}

func (LookupNsxvDistributedFirewallOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxvDistributedFirewallArgs)(nil)).Elem()
}

// A collection of values returned by getNsxvDistributedFirewall.
type LookupNsxvDistributedFirewallResultOutput struct{ *pulumi.OutputState }

func (LookupNsxvDistributedFirewallResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxvDistributedFirewallResult)(nil)).Elem()
}

func (o LookupNsxvDistributedFirewallResultOutput) ToLookupNsxvDistributedFirewallResultOutput() LookupNsxvDistributedFirewallResultOutput {
	return o
}

func (o LookupNsxvDistributedFirewallResultOutput) ToLookupNsxvDistributedFirewallResultOutputWithContext(ctx context.Context) LookupNsxvDistributedFirewallResultOutput {
	return o
}

func (o LookupNsxvDistributedFirewallResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxvDistributedFirewallResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNsxvDistributedFirewallResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDistributedFirewallResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNsxvDistributedFirewallResultOutput) Rules() GetNsxvDistributedFirewallRuleArrayOutput {
	return o.ApplyT(func(v LookupNsxvDistributedFirewallResult) []GetNsxvDistributedFirewallRule { return v.Rules }).(GetNsxvDistributedFirewallRuleArrayOutput)
}

func (o LookupNsxvDistributedFirewallResultOutput) VdcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvDistributedFirewallResult) string { return v.VdcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNsxvDistributedFirewallResultOutput{})
}
