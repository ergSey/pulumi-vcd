// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director SNAT data source for advanced edge gateways (NSX-V). This can be used to
// read existing rule by ID and use its attributes in other resources.
//
// > **Note:** This data source requires advanced edge gateway.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.LookupNsxvSnat(ctx, &vcd.LookupNsxvSnatArgs{
//				Org:         pulumi.StringRef("my-org"),
//				Vdc:         pulumi.StringRef("my-org-vdc"),
//				EdgeGateway: "my-edge-gw",
//				RuleId:      "197867",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNsxvSnat(ctx *pulumi.Context, args *LookupNsxvSnatArgs, opts ...pulumi.InvokeOption) (*LookupNsxvSnatResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNsxvSnatResult
	err := ctx.Invoke("vcd:index/getNsxvSnat:getNsxvSnat", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxvSnat.
type LookupNsxvSnatArgs struct {
	// The name of the edge gateway on which to apply the SNAT rule.
	EdgeGateway string `pulumi:"edgeGateway"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations.
	Org *string `pulumi:"org"`
	// ID of SNAT rule as shown in the UI.
	RuleId string `pulumi:"ruleId"`
	// The name of VDC to use, optional if defined at provider level.
	Vdc *string `pulumi:"vdc"`
}

// A collection of values returned by getNsxvSnat.
type LookupNsxvSnatResult struct {
	Description string `pulumi:"description"`
	EdgeGateway string `pulumi:"edgeGateway"`
	Enabled     bool   `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id                string  `pulumi:"id"`
	LoggingEnabled    bool    `pulumi:"loggingEnabled"`
	NetworkName       string  `pulumi:"networkName"`
	NetworkType       string  `pulumi:"networkType"`
	Org               *string `pulumi:"org"`
	OriginalAddress   string  `pulumi:"originalAddress"`
	RuleId            string  `pulumi:"ruleId"`
	RuleTag           int     `pulumi:"ruleTag"`
	RuleType          string  `pulumi:"ruleType"`
	TranslatedAddress string  `pulumi:"translatedAddress"`
	Vdc               *string `pulumi:"vdc"`
}

func LookupNsxvSnatOutput(ctx *pulumi.Context, args LookupNsxvSnatOutputArgs, opts ...pulumi.InvokeOption) LookupNsxvSnatResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNsxvSnatResultOutput, error) {
			args := v.(LookupNsxvSnatArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxvSnat:getNsxvSnat", args, LookupNsxvSnatResultOutput{}, options).(LookupNsxvSnatResultOutput), nil
		}).(LookupNsxvSnatResultOutput)
}

// A collection of arguments for invoking getNsxvSnat.
type LookupNsxvSnatOutputArgs struct {
	// The name of the edge gateway on which to apply the SNAT rule.
	EdgeGateway pulumi.StringInput `pulumi:"edgeGateway"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations.
	Org pulumi.StringPtrInput `pulumi:"org"`
	// ID of SNAT rule as shown in the UI.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The name of VDC to use, optional if defined at provider level.
	Vdc pulumi.StringPtrInput `pulumi:"vdc"`
}

func (LookupNsxvSnatOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxvSnatArgs)(nil)).Elem()
}

// A collection of values returned by getNsxvSnat.
type LookupNsxvSnatResultOutput struct{ *pulumi.OutputState }

func (LookupNsxvSnatResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsxvSnatResult)(nil)).Elem()
}

func (o LookupNsxvSnatResultOutput) ToLookupNsxvSnatResultOutput() LookupNsxvSnatResultOutput {
	return o
}

func (o LookupNsxvSnatResultOutput) ToLookupNsxvSnatResultOutputWithContext(ctx context.Context) LookupNsxvSnatResultOutput {
	return o
}

func (o LookupNsxvSnatResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupNsxvSnatResultOutput) EdgeGateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) string { return v.EdgeGateway }).(pulumi.StringOutput)
}

func (o LookupNsxvSnatResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNsxvSnatResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNsxvSnatResultOutput) LoggingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) bool { return v.LoggingEnabled }).(pulumi.BoolOutput)
}

func (o LookupNsxvSnatResultOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) string { return v.NetworkName }).(pulumi.StringOutput)
}

func (o LookupNsxvSnatResultOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) string { return v.NetworkType }).(pulumi.StringOutput)
}

func (o LookupNsxvSnatResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupNsxvSnatResultOutput) OriginalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) string { return v.OriginalAddress }).(pulumi.StringOutput)
}

func (o LookupNsxvSnatResultOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) string { return v.RuleId }).(pulumi.StringOutput)
}

func (o LookupNsxvSnatResultOutput) RuleTag() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) int { return v.RuleTag }).(pulumi.IntOutput)
}

func (o LookupNsxvSnatResultOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) string { return v.RuleType }).(pulumi.StringOutput)
}

func (o LookupNsxvSnatResultOutput) TranslatedAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) string { return v.TranslatedAddress }).(pulumi.StringOutput)
}

func (o LookupNsxvSnatResultOutput) Vdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNsxvSnatResult) *string { return v.Vdc }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNsxvSnatResultOutput{})
}
