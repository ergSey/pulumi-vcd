// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director NSX-V distributed firewall applications and application groups finder
// used to retrieve existing ones by regular expressions.
//
// Supported in provider *v3.9+*
//
// ## Example Usage
//
// ### 2
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.GetNsxvApplicationFinder(ctx, &vcd.GetNsxvApplicationFinderArgs{
//				VdcId:            my_vdc.Id,
//				SearchExpression: "dns",
//				CaseSensitive:    pulumi.BoolRef(false),
//				Type:             "application",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Sample output:
//
// ## Search expressions
//
// To search for an application or application group, we can use simple or complex [regular expressions](https://en.wikipedia.org/wiki/Regular_expression).
// The expressions in this data source follow the [PCRE](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions) standard.
//
// A **simple** regular expression is a (short) text that we expect to find within the application name. For example, the
// expression `sql` will find, among others, `Oracle i*SQLPlus` and `MSSQL Server Database Engine`, because the search, by default,
// ignores the case of the searched text.
//
// A more complex regular expression could use meta-characters and regular expression directives to search more precisely.
// For example, the expression `^server` tells the search to find a name that starts (`^`) with "server", thus finding
// "Server Message Block (SMB)" (starts with `server`), but not  "SAP MDM Server" (where `server` is not at the beginning
// of the name).
//
// If we want to search with even more accuracy, we could set the property `caseSensitive = true`, where the case of the
// text matters. Thus, searching for `VMware` would find `VMware-SRM-Replication` and `VMware-VCO-Messaging`, but not
// `Vmware-VC-WebAccess` (lowercase `m` after `V`).
func GetNsxvApplicationFinder(ctx *pulumi.Context, args *GetNsxvApplicationFinderArgs, opts ...pulumi.InvokeOption) (*GetNsxvApplicationFinderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNsxvApplicationFinderResult
	err := ctx.Invoke("vcd:index/getNsxvApplicationFinder:getNsxvApplicationFinder", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxvApplicationFinder.
type GetNsxvApplicationFinderArgs struct {
	// Makes the search case-sensitive. By default, it is false
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// The regular expression that will be used to search the applications. See Search Expressions below
	SearchExpression string `pulumi:"searchExpression"`
	// What kind of application we seek. One of `application`, `applicationGroup`
	Type string `pulumi:"type"`
	// The ID of VDC to use
	VdcId string `pulumi:"vdcId"`
}

// A collection of values returned by getNsxvApplicationFinder.
type GetNsxvApplicationFinderResult struct {
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of objects found by the search expression. Each one contains the following properties:
	Objects          []GetNsxvApplicationFinderObject `pulumi:"objects"`
	SearchExpression string                           `pulumi:"searchExpression"`
	// the type of the object (`Application` or `ApplicationGroup`)
	Type  string `pulumi:"type"`
	VdcId string `pulumi:"vdcId"`
}

func GetNsxvApplicationFinderOutput(ctx *pulumi.Context, args GetNsxvApplicationFinderOutputArgs, opts ...pulumi.InvokeOption) GetNsxvApplicationFinderResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNsxvApplicationFinderResultOutput, error) {
			args := v.(GetNsxvApplicationFinderArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxvApplicationFinder:getNsxvApplicationFinder", args, GetNsxvApplicationFinderResultOutput{}, options).(GetNsxvApplicationFinderResultOutput), nil
		}).(GetNsxvApplicationFinderResultOutput)
}

// A collection of arguments for invoking getNsxvApplicationFinder.
type GetNsxvApplicationFinderOutputArgs struct {
	// Makes the search case-sensitive. By default, it is false
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// The regular expression that will be used to search the applications. See Search Expressions below
	SearchExpression pulumi.StringInput `pulumi:"searchExpression"`
	// What kind of application we seek. One of `application`, `applicationGroup`
	Type pulumi.StringInput `pulumi:"type"`
	// The ID of VDC to use
	VdcId pulumi.StringInput `pulumi:"vdcId"`
}

func (GetNsxvApplicationFinderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvApplicationFinderArgs)(nil)).Elem()
}

// A collection of values returned by getNsxvApplicationFinder.
type GetNsxvApplicationFinderResultOutput struct{ *pulumi.OutputState }

func (GetNsxvApplicationFinderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxvApplicationFinderResult)(nil)).Elem()
}

func (o GetNsxvApplicationFinderResultOutput) ToGetNsxvApplicationFinderResultOutput() GetNsxvApplicationFinderResultOutput {
	return o
}

func (o GetNsxvApplicationFinderResultOutput) ToGetNsxvApplicationFinderResultOutputWithContext(ctx context.Context) GetNsxvApplicationFinderResultOutput {
	return o
}

func (o GetNsxvApplicationFinderResultOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNsxvApplicationFinderResult) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNsxvApplicationFinderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationFinderResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of objects found by the search expression. Each one contains the following properties:
func (o GetNsxvApplicationFinderResultOutput) Objects() GetNsxvApplicationFinderObjectArrayOutput {
	return o.ApplyT(func(v GetNsxvApplicationFinderResult) []GetNsxvApplicationFinderObject { return v.Objects }).(GetNsxvApplicationFinderObjectArrayOutput)
}

func (o GetNsxvApplicationFinderResultOutput) SearchExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationFinderResult) string { return v.SearchExpression }).(pulumi.StringOutput)
}

// the type of the object (`Application` or `ApplicationGroup`)
func (o GetNsxvApplicationFinderResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationFinderResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetNsxvApplicationFinderResultOutput) VdcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxvApplicationFinderResult) string { return v.VdcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNsxvApplicationFinderResultOutput{})
}
