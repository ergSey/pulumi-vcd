// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a data source to read a VMware Cloud Director Site association data to be used for association with another site.
//
// Supported in provider *v3.13+*
//
// ## Example Usage
//
// Note: there is only one site available for each VCD. No ID or name is necessary to identify it.
//
// > Note: this data source requires System Administrator privileges
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vcd.GetMultisiteSiteData(ctx, &vcd.GetMultisiteSiteDataArgs{
//				DownloadToFile: pulumi.StringRef("filename.xml"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMultisiteSiteData(ctx *pulumi.Context, args *GetMultisiteSiteDataArgs, opts ...pulumi.InvokeOption) (*GetMultisiteSiteDataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMultisiteSiteDataResult
	err := ctx.Invoke("vcd:index/getMultisiteSiteData:getMultisiteSiteData", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMultisiteSiteData.
type GetMultisiteSiteDataArgs struct {
	// Name of the file that will contain the data needed to associate this site to a remote one.
	// Contains the same data returned in `associationData`.
	DownloadToFile *string `pulumi:"downloadToFile"`
}

// A collection of values returned by getMultisiteSiteData.
type GetMultisiteSiteDataResult struct {
	// The data needed to associate this site to another one. Contains the same data that would be saved into
	// the file defined in `downloadToFile`.
	AssociationData string  `pulumi:"associationData"`
	DownloadToFile  *string `pulumi:"downloadToFile"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetMultisiteSiteDataOutput(ctx *pulumi.Context, args GetMultisiteSiteDataOutputArgs, opts ...pulumi.InvokeOption) GetMultisiteSiteDataResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMultisiteSiteDataResultOutput, error) {
			args := v.(GetMultisiteSiteDataArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getMultisiteSiteData:getMultisiteSiteData", args, GetMultisiteSiteDataResultOutput{}, options).(GetMultisiteSiteDataResultOutput), nil
		}).(GetMultisiteSiteDataResultOutput)
}

// A collection of arguments for invoking getMultisiteSiteData.
type GetMultisiteSiteDataOutputArgs struct {
	// Name of the file that will contain the data needed to associate this site to a remote one.
	// Contains the same data returned in `associationData`.
	DownloadToFile pulumi.StringPtrInput `pulumi:"downloadToFile"`
}

func (GetMultisiteSiteDataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMultisiteSiteDataArgs)(nil)).Elem()
}

// A collection of values returned by getMultisiteSiteData.
type GetMultisiteSiteDataResultOutput struct{ *pulumi.OutputState }

func (GetMultisiteSiteDataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMultisiteSiteDataResult)(nil)).Elem()
}

func (o GetMultisiteSiteDataResultOutput) ToGetMultisiteSiteDataResultOutput() GetMultisiteSiteDataResultOutput {
	return o
}

func (o GetMultisiteSiteDataResultOutput) ToGetMultisiteSiteDataResultOutputWithContext(ctx context.Context) GetMultisiteSiteDataResultOutput {
	return o
}

// The data needed to associate this site to another one. Contains the same data that would be saved into
// the file defined in `downloadToFile`.
func (o GetMultisiteSiteDataResultOutput) AssociationData() pulumi.StringOutput {
	return o.ApplyT(func(v GetMultisiteSiteDataResult) string { return v.AssociationData }).(pulumi.StringOutput)
}

func (o GetMultisiteSiteDataResultOutput) DownloadToFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMultisiteSiteDataResult) *string { return v.DownloadToFile }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMultisiteSiteDataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMultisiteSiteDataResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMultisiteSiteDataResultOutput{})
}
