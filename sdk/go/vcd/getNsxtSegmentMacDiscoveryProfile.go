// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director NSX-T MAC Discovery Profile data source. This can be used to read NSX-T Segment Profile definitions.
//
// Supported in provider *v3.11+*.
//
// ## Example Usage
//
// ### MAC Discovery Profile)
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			nsxt, err := vcd.GetNsxtManager(ctx, &vcd.GetNsxtManagerArgs{
//				Name: "nsxManager1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = vcd.GetNsxtSegmentMacDiscoveryProfile(ctx, &vcd.GetNsxtSegmentMacDiscoveryProfileArgs{
//				Name:          "mac-discovery-profile-0",
//				NsxtManagerId: pulumi.StringRef(nsxt.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNsxtSegmentMacDiscoveryProfile(ctx *pulumi.Context, args *GetNsxtSegmentMacDiscoveryProfileArgs, opts ...pulumi.InvokeOption) (*GetNsxtSegmentMacDiscoveryProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNsxtSegmentMacDiscoveryProfileResult
	err := ctx.Invoke("vcd:index/getNsxtSegmentMacDiscoveryProfile:getNsxtSegmentMacDiscoveryProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxtSegmentMacDiscoveryProfile.
type GetNsxtSegmentMacDiscoveryProfileArgs struct {
	// The name of Segment Profile
	Name string `pulumi:"name"`
	// Segment Profile search context. Use when searching by NSX-T manager
	NsxtManagerId *string `pulumi:"nsxtManagerId"`
	// Segment Profile search context. Use when searching by VDC group
	//
	// > Note: only one of `nsxtManagerId`, `vdcId`, `vdcGroupId` can be used
	VdcGroupId *string `pulumi:"vdcGroupId"`
	// Segment Profile search context. Use when searching by VDC
	VdcId *string `pulumi:"vdcId"`
}

// A collection of values returned by getNsxtSegmentMacDiscoveryProfile.
type GetNsxtSegmentMacDiscoveryProfileResult struct {
	// Description of MAC Discovery Profile
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Defines whether source MAC address change is enabled
	IsMacChangeEnabled bool `pulumi:"isMacChangeEnabled"`
	// Defines whether source MAC address learning is enabled
	IsMacLearningEnabled bool `pulumi:"isMacLearningEnabled"`
	// Defines whether unknown unicast flooding rule is enabled
	// This allows flooding for unlearned MAC for ingress traffic
	IsUnknownUnicastFloodingEnabled bool `pulumi:"isUnknownUnicastFloodingEnabled"`
	// Aging time in seconds for learned MAC address. Indicates how long
	// learned MAC address remain
	MacLearningAgingTime int `pulumi:"macLearningAgingTime"`
	// The maximum number of MAC addresses that can be learned on this port
	MacLimit int `pulumi:"macLimit"`
	// The policy after MAC Limit is exceeded. It can be either `ALLOW` or `DROP`
	MacPolicy     string  `pulumi:"macPolicy"`
	Name          string  `pulumi:"name"`
	NsxtManagerId *string `pulumi:"nsxtManagerId"`
	VdcGroupId    *string `pulumi:"vdcGroupId"`
	VdcId         *string `pulumi:"vdcId"`
}

func GetNsxtSegmentMacDiscoveryProfileOutput(ctx *pulumi.Context, args GetNsxtSegmentMacDiscoveryProfileOutputArgs, opts ...pulumi.InvokeOption) GetNsxtSegmentMacDiscoveryProfileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNsxtSegmentMacDiscoveryProfileResultOutput, error) {
			args := v.(GetNsxtSegmentMacDiscoveryProfileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getNsxtSegmentMacDiscoveryProfile:getNsxtSegmentMacDiscoveryProfile", args, GetNsxtSegmentMacDiscoveryProfileResultOutput{}, options).(GetNsxtSegmentMacDiscoveryProfileResultOutput), nil
		}).(GetNsxtSegmentMacDiscoveryProfileResultOutput)
}

// A collection of arguments for invoking getNsxtSegmentMacDiscoveryProfile.
type GetNsxtSegmentMacDiscoveryProfileOutputArgs struct {
	// The name of Segment Profile
	Name pulumi.StringInput `pulumi:"name"`
	// Segment Profile search context. Use when searching by NSX-T manager
	NsxtManagerId pulumi.StringPtrInput `pulumi:"nsxtManagerId"`
	// Segment Profile search context. Use when searching by VDC group
	//
	// > Note: only one of `nsxtManagerId`, `vdcId`, `vdcGroupId` can be used
	VdcGroupId pulumi.StringPtrInput `pulumi:"vdcGroupId"`
	// Segment Profile search context. Use when searching by VDC
	VdcId pulumi.StringPtrInput `pulumi:"vdcId"`
}

func (GetNsxtSegmentMacDiscoveryProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtSegmentMacDiscoveryProfileArgs)(nil)).Elem()
}

// A collection of values returned by getNsxtSegmentMacDiscoveryProfile.
type GetNsxtSegmentMacDiscoveryProfileResultOutput struct{ *pulumi.OutputState }

func (GetNsxtSegmentMacDiscoveryProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtSegmentMacDiscoveryProfileResult)(nil)).Elem()
}

func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) ToGetNsxtSegmentMacDiscoveryProfileResultOutput() GetNsxtSegmentMacDiscoveryProfileResultOutput {
	return o
}

func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) ToGetNsxtSegmentMacDiscoveryProfileResultOutputWithContext(ctx context.Context) GetNsxtSegmentMacDiscoveryProfileResultOutput {
	return o
}

// Description of MAC Discovery Profile
func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// Defines whether source MAC address change is enabled
func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) IsMacChangeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) bool { return v.IsMacChangeEnabled }).(pulumi.BoolOutput)
}

// Defines whether source MAC address learning is enabled
func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) IsMacLearningEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) bool { return v.IsMacLearningEnabled }).(pulumi.BoolOutput)
}

// Defines whether unknown unicast flooding rule is enabled
// This allows flooding for unlearned MAC for ingress traffic
func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) IsUnknownUnicastFloodingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) bool { return v.IsUnknownUnicastFloodingEnabled }).(pulumi.BoolOutput)
}

// Aging time in seconds for learned MAC address. Indicates how long
// learned MAC address remain
func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) MacLearningAgingTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) int { return v.MacLearningAgingTime }).(pulumi.IntOutput)
}

// The maximum number of MAC addresses that can be learned on this port
func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) MacLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) int { return v.MacLimit }).(pulumi.IntOutput)
}

// The policy after MAC Limit is exceeded. It can be either `ALLOW` or `DROP`
func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) MacPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) string { return v.MacPolicy }).(pulumi.StringOutput)
}

func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) NsxtManagerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) *string { return v.NsxtManagerId }).(pulumi.StringPtrOutput)
}

func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) VdcGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) *string { return v.VdcGroupId }).(pulumi.StringPtrOutput)
}

func (o GetNsxtSegmentMacDiscoveryProfileResultOutput) VdcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNsxtSegmentMacDiscoveryProfileResult) *string { return v.VdcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNsxtSegmentMacDiscoveryProfileResultOutput{})
}
