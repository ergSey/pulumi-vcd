// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/ergSey/pulumi-vcd/sdk/go/vcd/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware Cloud Director UI Plugin data source. This can be used to fetch and read an existing UI Plugin.
//
// > Reading UI Plugins requires System Administrator privileges.
//
// Supported in provider *v3.10+* and requires VCD 10.3+
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ergSey/pulumi-vcd/sdk/go/vcd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			existingUiPlugin, err := vcd.LookupUiPlugin(ctx, &vcd.LookupUiPluginArgs{
//				Vendor:  "VMware",
//				Name:    "Customize Portal",
//				Version: "3.1.4",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("license", existingUiPlugin.License)
//			ctx.Export("tenants", existingUiPlugin.TenantIds)
//			return nil
//		})
//	}
//
// ```
func LookupUiPlugin(ctx *pulumi.Context, args *LookupUiPluginArgs, opts ...pulumi.InvokeOption) (*LookupUiPluginResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUiPluginResult
	err := ctx.Invoke("vcd:index/getUiPlugin:getUiPlugin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUiPlugin.
type LookupUiPluginArgs struct {
	// The name of the UI Plugin
	Name string `pulumi:"name"`
	// The vendor of the UI Plugin
	Vendor string `pulumi:"vendor"`
	// The version of the UI Plugin
	Version string `pulumi:"version"`
}

// A collection of values returned by getUiPlugin.
type LookupUiPluginResult struct {
	Description string `pulumi:"description"`
	Enabled     bool   `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id             string   `pulumi:"id"`
	License        string   `pulumi:"license"`
	Link           string   `pulumi:"link"`
	Name           string   `pulumi:"name"`
	ProviderScoped bool     `pulumi:"providerScoped"`
	Status         string   `pulumi:"status"`
	TenantIds      []string `pulumi:"tenantIds"`
	TenantScoped   bool     `pulumi:"tenantScoped"`
	Vendor         string   `pulumi:"vendor"`
	Version        string   `pulumi:"version"`
}

func LookupUiPluginOutput(ctx *pulumi.Context, args LookupUiPluginOutputArgs, opts ...pulumi.InvokeOption) LookupUiPluginResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUiPluginResultOutput, error) {
			args := v.(LookupUiPluginArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vcd:index/getUiPlugin:getUiPlugin", args, LookupUiPluginResultOutput{}, options).(LookupUiPluginResultOutput), nil
		}).(LookupUiPluginResultOutput)
}

// A collection of arguments for invoking getUiPlugin.
type LookupUiPluginOutputArgs struct {
	// The name of the UI Plugin
	Name pulumi.StringInput `pulumi:"name"`
	// The vendor of the UI Plugin
	Vendor pulumi.StringInput `pulumi:"vendor"`
	// The version of the UI Plugin
	Version pulumi.StringInput `pulumi:"version"`
}

func (LookupUiPluginOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUiPluginArgs)(nil)).Elem()
}

// A collection of values returned by getUiPlugin.
type LookupUiPluginResultOutput struct{ *pulumi.OutputState }

func (LookupUiPluginResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUiPluginResult)(nil)).Elem()
}

func (o LookupUiPluginResultOutput) ToLookupUiPluginResultOutput() LookupUiPluginResultOutput {
	return o
}

func (o LookupUiPluginResultOutput) ToLookupUiPluginResultOutputWithContext(ctx context.Context) LookupUiPluginResultOutput {
	return o
}

func (o LookupUiPluginResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUiPluginResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupUiPluginResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUiPluginResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUiPluginResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUiPluginResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupUiPluginResultOutput) License() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUiPluginResult) string { return v.License }).(pulumi.StringOutput)
}

func (o LookupUiPluginResultOutput) Link() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUiPluginResult) string { return v.Link }).(pulumi.StringOutput)
}

func (o LookupUiPluginResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUiPluginResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupUiPluginResultOutput) ProviderScoped() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUiPluginResult) bool { return v.ProviderScoped }).(pulumi.BoolOutput)
}

func (o LookupUiPluginResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUiPluginResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupUiPluginResultOutput) TenantIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUiPluginResult) []string { return v.TenantIds }).(pulumi.StringArrayOutput)
}

func (o LookupUiPluginResultOutput) TenantScoped() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUiPluginResult) bool { return v.TenantScoped }).(pulumi.BoolOutput)
}

func (o LookupUiPluginResultOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUiPluginResult) string { return v.Vendor }).(pulumi.StringOutput)
}

func (o LookupUiPluginResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUiPluginResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUiPluginResultOutput{})
}
