// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/nsxvDnat:NsxvDnat")]
    public partial class NsxvDnat : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Free text description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the edge gateway on which to apply the DNAT rule.
        /// </summary>
        [Output("edgeGateway")]
        public Output<string> EdgeGateway { get; private set; } = null!;

        /// <summary>
        /// Defines if the rule is enabaled. Default `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Only when `protocol` is set to `icmp`. One of `any`,
        /// `address-mask-request`, `address-mask-reply`, `destination-unreachable`, `echo-request`,
        /// `echo-reply`, `parameter-problem`, `redirect`, `router-advertisement`, `router-solicitation`,
        /// `source-quench`, `time-exceeded`, `timestamp-request`, `timestamp-reply`. Default `any`
        /// </summary>
        [Output("icmpType")]
        public Output<string?> IcmpType { get; private set; } = null!;

        /// <summary>
        /// Defines if the logging for this rule is enabaled. Default `false`.
        /// </summary>
        [Output("loggingEnabled")]
        public Output<bool?> LoggingEnabled { get; private set; } = null!;

        /// <summary>
        /// The name of the network on which to apply the DNAT rule.
        /// </summary>
        [Output("networkName")]
        public Output<string> NetworkName { get; private set; } = null!;

        /// <summary>
        /// Type of the network on which to apply the DNAT rule. Possible values
        /// `org` or `ext`.
        /// </summary>
        [Output("networkType")]
        public Output<string> NetworkType { get; private set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Output("org")]
        public Output<string?> Org { get; private set; } = null!;

        /// <summary>
        /// IP address, range or subnet. This address must be the public IP
        /// address of the edge gateway for which you are configuring the DNAT rule. In the packet being
        /// inspected, this IP address or range would be those that appear as the destination IP address of the
        /// packet. These packet destination addresses are the ones translated by this DNAT rule.
        /// </summary>
        [Output("originalAddress")]
        public Output<string> OriginalAddress { get; private set; } = null!;

        /// <summary>
        /// Select the port or port range that the incoming traffic uses on the
        /// edge gateway to connect to the internal network on which the virtual machines are connected. This
        /// selection is not available when the Protocol is set to `icmp` or `any`. Default `any`.
        /// </summary>
        [Output("originalPort")]
        public Output<string?> OriginalPort { get; private set; } = null!;

        /// <summary>
        /// Select the protocol to which the rule applies. One of `tcp`, `udp`,
        /// `icmp`, `any`. Default `any`
        /// protocols, select Any.
        /// </summary>
        [Output("protocol")]
        public Output<string?> Protocol { get; private set; } = null!;

        /// <summary>
        /// This can be used to specify user-controlled rule tag. If not specified,
        /// it will report rule ID after creation. Must be between 65537-131072.
        /// </summary>
        [Output("ruleTag")]
        public Output<int> RuleTag { get; private set; } = null!;

        /// <summary>
        /// Possible values - `user`, `internal_high`.
        /// </summary>
        [Output("ruleType")]
        public Output<string> RuleType { get; private set; } = null!;

        /// <summary>
        /// IP address, range or subnet. IP addresses to which destination
        /// addresses on inbound packets will be translated. These addresses are the IP addresses of the one or
        /// more virtual machines for which you are configuring DNAT so that they can receive traffic from the
        /// external network.
        /// </summary>
        [Output("translatedAddress")]
        public Output<string?> TranslatedAddress { get; private set; } = null!;

        /// <summary>
        /// Select the port or port range that inbound traffic is connecting
        /// to on the virtual machines on the internal network. These ports are the ones into which the DNAT
        /// rule is translating for the packets inbound to the virtual machines.
        /// </summary>
        [Output("translatedPort")]
        public Output<string?> TranslatedPort { get; private set; } = null!;

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level.
        /// </summary>
        [Output("vdc")]
        public Output<string?> Vdc { get; private set; } = null!;


        /// <summary>
        /// Create a NsxvDnat resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NsxvDnat(string name, NsxvDnatArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/nsxvDnat:NsxvDnat", name, args ?? new NsxvDnatArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NsxvDnat(string name, Input<string> id, NsxvDnatState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/nsxvDnat:NsxvDnat", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NsxvDnat resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NsxvDnat Get(string name, Input<string> id, NsxvDnatState? state = null, CustomResourceOptions? options = null)
        {
            return new NsxvDnat(name, id, state, options);
        }
    }

    public sealed class NsxvDnatArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Free text description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the edge gateway on which to apply the DNAT rule.
        /// </summary>
        [Input("edgeGateway", required: true)]
        public Input<string> EdgeGateway { get; set; } = null!;

        /// <summary>
        /// Defines if the rule is enabaled. Default `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Only when `protocol` is set to `icmp`. One of `any`,
        /// `address-mask-request`, `address-mask-reply`, `destination-unreachable`, `echo-request`,
        /// `echo-reply`, `parameter-problem`, `redirect`, `router-advertisement`, `router-solicitation`,
        /// `source-quench`, `time-exceeded`, `timestamp-request`, `timestamp-reply`. Default `any`
        /// </summary>
        [Input("icmpType")]
        public Input<string>? IcmpType { get; set; }

        /// <summary>
        /// Defines if the logging for this rule is enabaled. Default `false`.
        /// </summary>
        [Input("loggingEnabled")]
        public Input<bool>? LoggingEnabled { get; set; }

        /// <summary>
        /// The name of the network on which to apply the DNAT rule.
        /// </summary>
        [Input("networkName", required: true)]
        public Input<string> NetworkName { get; set; } = null!;

        /// <summary>
        /// Type of the network on which to apply the DNAT rule. Possible values
        /// `org` or `ext`.
        /// </summary>
        [Input("networkType", required: true)]
        public Input<string> NetworkType { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// IP address, range or subnet. This address must be the public IP
        /// address of the edge gateway for which you are configuring the DNAT rule. In the packet being
        /// inspected, this IP address or range would be those that appear as the destination IP address of the
        /// packet. These packet destination addresses are the ones translated by this DNAT rule.
        /// </summary>
        [Input("originalAddress", required: true)]
        public Input<string> OriginalAddress { get; set; } = null!;

        /// <summary>
        /// Select the port or port range that the incoming traffic uses on the
        /// edge gateway to connect to the internal network on which the virtual machines are connected. This
        /// selection is not available when the Protocol is set to `icmp` or `any`. Default `any`.
        /// </summary>
        [Input("originalPort")]
        public Input<string>? OriginalPort { get; set; }

        /// <summary>
        /// Select the protocol to which the rule applies. One of `tcp`, `udp`,
        /// `icmp`, `any`. Default `any`
        /// protocols, select Any.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// This can be used to specify user-controlled rule tag. If not specified,
        /// it will report rule ID after creation. Must be between 65537-131072.
        /// </summary>
        [Input("ruleTag")]
        public Input<int>? RuleTag { get; set; }

        /// <summary>
        /// Possible values - `user`, `internal_high`.
        /// </summary>
        [Input("ruleType")]
        public Input<string>? RuleType { get; set; }

        /// <summary>
        /// IP address, range or subnet. IP addresses to which destination
        /// addresses on inbound packets will be translated. These addresses are the IP addresses of the one or
        /// more virtual machines for which you are configuring DNAT so that they can receive traffic from the
        /// external network.
        /// </summary>
        [Input("translatedAddress")]
        public Input<string>? TranslatedAddress { get; set; }

        /// <summary>
        /// Select the port or port range that inbound traffic is connecting
        /// to on the virtual machines on the internal network. These ports are the ones into which the DNAT
        /// rule is translating for the packets inbound to the virtual machines.
        /// </summary>
        [Input("translatedPort")]
        public Input<string>? TranslatedPort { get; set; }

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level.
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public NsxvDnatArgs()
        {
        }
        public static new NsxvDnatArgs Empty => new NsxvDnatArgs();
    }

    public sealed class NsxvDnatState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Free text description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the edge gateway on which to apply the DNAT rule.
        /// </summary>
        [Input("edgeGateway")]
        public Input<string>? EdgeGateway { get; set; }

        /// <summary>
        /// Defines if the rule is enabaled. Default `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Only when `protocol` is set to `icmp`. One of `any`,
        /// `address-mask-request`, `address-mask-reply`, `destination-unreachable`, `echo-request`,
        /// `echo-reply`, `parameter-problem`, `redirect`, `router-advertisement`, `router-solicitation`,
        /// `source-quench`, `time-exceeded`, `timestamp-request`, `timestamp-reply`. Default `any`
        /// </summary>
        [Input("icmpType")]
        public Input<string>? IcmpType { get; set; }

        /// <summary>
        /// Defines if the logging for this rule is enabaled. Default `false`.
        /// </summary>
        [Input("loggingEnabled")]
        public Input<bool>? LoggingEnabled { get; set; }

        /// <summary>
        /// The name of the network on which to apply the DNAT rule.
        /// </summary>
        [Input("networkName")]
        public Input<string>? NetworkName { get; set; }

        /// <summary>
        /// Type of the network on which to apply the DNAT rule. Possible values
        /// `org` or `ext`.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// IP address, range or subnet. This address must be the public IP
        /// address of the edge gateway for which you are configuring the DNAT rule. In the packet being
        /// inspected, this IP address or range would be those that appear as the destination IP address of the
        /// packet. These packet destination addresses are the ones translated by this DNAT rule.
        /// </summary>
        [Input("originalAddress")]
        public Input<string>? OriginalAddress { get; set; }

        /// <summary>
        /// Select the port or port range that the incoming traffic uses on the
        /// edge gateway to connect to the internal network on which the virtual machines are connected. This
        /// selection is not available when the Protocol is set to `icmp` or `any`. Default `any`.
        /// </summary>
        [Input("originalPort")]
        public Input<string>? OriginalPort { get; set; }

        /// <summary>
        /// Select the protocol to which the rule applies. One of `tcp`, `udp`,
        /// `icmp`, `any`. Default `any`
        /// protocols, select Any.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// This can be used to specify user-controlled rule tag. If not specified,
        /// it will report rule ID after creation. Must be between 65537-131072.
        /// </summary>
        [Input("ruleTag")]
        public Input<int>? RuleTag { get; set; }

        /// <summary>
        /// Possible values - `user`, `internal_high`.
        /// </summary>
        [Input("ruleType")]
        public Input<string>? RuleType { get; set; }

        /// <summary>
        /// IP address, range or subnet. IP addresses to which destination
        /// addresses on inbound packets will be translated. These addresses are the IP addresses of the one or
        /// more virtual machines for which you are configuring DNAT so that they can receive traffic from the
        /// external network.
        /// </summary>
        [Input("translatedAddress")]
        public Input<string>? TranslatedAddress { get; set; }

        /// <summary>
        /// Select the port or port range that inbound traffic is connecting
        /// to on the virtual machines on the internal network. These ports are the ones into which the DNAT
        /// rule is translating for the packets inbound to the virtual machines.
        /// </summary>
        [Input("translatedPort")]
        public Input<string>? TranslatedPort { get; set; }

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level.
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public NsxvDnatState()
        {
        }
        public static new NsxvDnatState Empty => new NsxvDnatState();
    }
}
