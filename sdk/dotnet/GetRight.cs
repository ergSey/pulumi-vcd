// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetRight
    {
        /// <summary>
        /// Provides a data source for available rights.
        /// 
        /// Supported in provider *v3.3+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var some_right = Vcd.GetRight.Invoke(new()
        ///     {
        ///         Name = "Catalog: Add vApp from My Cloud",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["some-right"] = some_right,
        ///     };
        /// });
        /// ```
        /// 
        /// ```
        /// Sample output:
        /// 
        /// some-right = {
        ///   "bundle_key" = "RIGHT_CATALOG_ADD_VAPP_FROM_MY_CLOUD"
        ///   "category_id" = "urn:vcloud:rightsCategory:c32516ba-bc5b-3c47-ab8c-e1bfc223253c"
        ///   "description" = "Add a vApp from My Cloud"
        ///   "id" = "urn:vcloud:right:4886663f-ae31-37fc-9a70-3dbe2f24a8c5"
        ///   "implied_rights" = toset([
        ///     {
        ///       "id" = "urn:vcloud:right:1aa46727-6192-365d-b571-5ce51beb3b48"
        ///       "name" = "vApp Template / Media: View"
        ///     },
        ///     {
        ///       "id" = "urn:vcloud:right:3eedbfb4-c4a3-373d-b4b5-d76ca363ab50"
        ///       "name" = "vApp Template / Media: Edit"
        ///     },
        ///     {
        ///       "id" = "urn:vcloud:right:fa4ce8f8-c640-3b65-8fa5-a863b56c3d51"
        ///       "name" = "Catalog: View Private and Shared Catalogs"
        ///     },
        ///   ])
        ///   "name" = "Catalog: Add vApp from My Cloud"
        ///   "right_type" = "MODIFY"
        /// }
        /// ```
        /// 
        /// ## More information
        /// 
        /// See [Roles management](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/roles_management) for a broader description of how roles and
        /// rights work together.
        /// </summary>
        public static Task<GetRightResult> InvokeAsync(GetRightArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRightResult>("vcd:index/getRight:getRight", args ?? new GetRightArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source for available rights.
        /// 
        /// Supported in provider *v3.3+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var some_right = Vcd.GetRight.Invoke(new()
        ///     {
        ///         Name = "Catalog: Add vApp from My Cloud",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["some-right"] = some_right,
        ///     };
        /// });
        /// ```
        /// 
        /// ```
        /// Sample output:
        /// 
        /// some-right = {
        ///   "bundle_key" = "RIGHT_CATALOG_ADD_VAPP_FROM_MY_CLOUD"
        ///   "category_id" = "urn:vcloud:rightsCategory:c32516ba-bc5b-3c47-ab8c-e1bfc223253c"
        ///   "description" = "Add a vApp from My Cloud"
        ///   "id" = "urn:vcloud:right:4886663f-ae31-37fc-9a70-3dbe2f24a8c5"
        ///   "implied_rights" = toset([
        ///     {
        ///       "id" = "urn:vcloud:right:1aa46727-6192-365d-b571-5ce51beb3b48"
        ///       "name" = "vApp Template / Media: View"
        ///     },
        ///     {
        ///       "id" = "urn:vcloud:right:3eedbfb4-c4a3-373d-b4b5-d76ca363ab50"
        ///       "name" = "vApp Template / Media: Edit"
        ///     },
        ///     {
        ///       "id" = "urn:vcloud:right:fa4ce8f8-c640-3b65-8fa5-a863b56c3d51"
        ///       "name" = "Catalog: View Private and Shared Catalogs"
        ///     },
        ///   ])
        ///   "name" = "Catalog: Add vApp from My Cloud"
        ///   "right_type" = "MODIFY"
        /// }
        /// ```
        /// 
        /// ## More information
        /// 
        /// See [Roles management](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/roles_management) for a broader description of how roles and
        /// rights work together.
        /// </summary>
        public static Output<GetRightResult> Invoke(GetRightInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRightResult>("vcd:index/getRight:getRight", args ?? new GetRightInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source for available rights.
        /// 
        /// Supported in provider *v3.3+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var some_right = Vcd.GetRight.Invoke(new()
        ///     {
        ///         Name = "Catalog: Add vApp from My Cloud",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["some-right"] = some_right,
        ///     };
        /// });
        /// ```
        /// 
        /// ```
        /// Sample output:
        /// 
        /// some-right = {
        ///   "bundle_key" = "RIGHT_CATALOG_ADD_VAPP_FROM_MY_CLOUD"
        ///   "category_id" = "urn:vcloud:rightsCategory:c32516ba-bc5b-3c47-ab8c-e1bfc223253c"
        ///   "description" = "Add a vApp from My Cloud"
        ///   "id" = "urn:vcloud:right:4886663f-ae31-37fc-9a70-3dbe2f24a8c5"
        ///   "implied_rights" = toset([
        ///     {
        ///       "id" = "urn:vcloud:right:1aa46727-6192-365d-b571-5ce51beb3b48"
        ///       "name" = "vApp Template / Media: View"
        ///     },
        ///     {
        ///       "id" = "urn:vcloud:right:3eedbfb4-c4a3-373d-b4b5-d76ca363ab50"
        ///       "name" = "vApp Template / Media: Edit"
        ///     },
        ///     {
        ///       "id" = "urn:vcloud:right:fa4ce8f8-c640-3b65-8fa5-a863b56c3d51"
        ///       "name" = "Catalog: View Private and Shared Catalogs"
        ///     },
        ///   ])
        ///   "name" = "Catalog: Add vApp from My Cloud"
        ///   "right_type" = "MODIFY"
        /// }
        /// ```
        /// 
        /// ## More information
        /// 
        /// See [Roles management](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/roles_management) for a broader description of how roles and
        /// rights work together.
        /// </summary>
        public static Output<GetRightResult> Invoke(GetRightInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRightResult>("vcd:index/getRight:getRight", args ?? new GetRightInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRightArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the right.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetRightArgs()
        {
        }
        public static new GetRightArgs Empty => new GetRightArgs();
    }

    public sealed class GetRightInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the right.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetRightInvokeArgs()
        {
        }
        public static new GetRightInvokeArgs Empty => new GetRightInvokeArgs();
    }


    [OutputType]
    public sealed class GetRightResult
    {
        /// <summary>
        /// Key used for internationalization
        /// * `right type` - Type of the right (VIEW or MODIFY)
        /// </summary>
        public readonly string BundleKey;
        /// <summary>
        /// The ID of the category for this right
        /// </summary>
        public readonly string CategoryId;
        /// <summary>
        /// A description of the right
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of rights that are implied with this one
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRightImpliedRightResult> ImpliedRights;
        public readonly string Name;
        public readonly string RightType;

        [OutputConstructor]
        private GetRightResult(
            string bundleKey,

            string categoryId,

            string description,

            string id,

            ImmutableArray<Outputs.GetRightImpliedRightResult> impliedRights,

            string name,

            string rightType)
        {
            BundleKey = bundleKey;
            CategoryId = categoryId;
            Description = description;
            Id = id;
            ImpliedRights = impliedRights;
            Name = name;
            RightType = rightType;
        }
    }
}
