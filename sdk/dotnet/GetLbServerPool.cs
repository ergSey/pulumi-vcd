// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetLbServerPool
    {
        /// <summary>
        /// Provides a VMware Cloud Director Edge Gateway Load Balancer Server Pool data source. A Server Pool defines
        /// a group of backend servers (defined as pool members), manages load balancer distribution methods, and has a service 
        /// monitor attached to it for health check parameters.
        /// 
        /// &gt; **Note:** See additional support notes in [server pool resource page](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/lb_server_pool).
        /// 
        /// Supported in provider *v2.4+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sp_ds = Vcd.GetLbServerPool.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Vdc = "my-org-vdc",
        ///         EdgeGateway = "my-edge-gw",
        ///         Name = "not-managed",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLbServerPoolResult> InvokeAsync(GetLbServerPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLbServerPoolResult>("vcd:index/getLbServerPool:getLbServerPool", args ?? new GetLbServerPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a VMware Cloud Director Edge Gateway Load Balancer Server Pool data source. A Server Pool defines
        /// a group of backend servers (defined as pool members), manages load balancer distribution methods, and has a service 
        /// monitor attached to it for health check parameters.
        /// 
        /// &gt; **Note:** See additional support notes in [server pool resource page](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/lb_server_pool).
        /// 
        /// Supported in provider *v2.4+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sp_ds = Vcd.GetLbServerPool.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Vdc = "my-org-vdc",
        ///         EdgeGateway = "my-edge-gw",
        ///         Name = "not-managed",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLbServerPoolResult> Invoke(GetLbServerPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLbServerPoolResult>("vcd:index/getLbServerPool:getLbServerPool", args ?? new GetLbServerPoolInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a VMware Cloud Director Edge Gateway Load Balancer Server Pool data source. A Server Pool defines
        /// a group of backend servers (defined as pool members), manages load balancer distribution methods, and has a service 
        /// monitor attached to it for health check parameters.
        /// 
        /// &gt; **Note:** See additional support notes in [server pool resource page](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/lb_server_pool).
        /// 
        /// Supported in provider *v2.4+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sp_ds = Vcd.GetLbServerPool.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Vdc = "my-org-vdc",
        ///         EdgeGateway = "my-edge-gw",
        ///         Name = "not-managed",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLbServerPoolResult> Invoke(GetLbServerPoolInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLbServerPoolResult>("vcd:index/getLbServerPool:getLbServerPool", args ?? new GetLbServerPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLbServerPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the edge gateway on which the server pool is defined
        /// </summary>
        [Input("edgeGateway", required: true)]
        public string EdgeGateway { get; set; } = null!;

        /// <summary>
        /// Server Pool name for identifying the exact server pool
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Input("vdc")]
        public string? Vdc { get; set; }

        public GetLbServerPoolArgs()
        {
        }
        public static new GetLbServerPoolArgs Empty => new GetLbServerPoolArgs();
    }

    public sealed class GetLbServerPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the edge gateway on which the server pool is defined
        /// </summary>
        [Input("edgeGateway", required: true)]
        public Input<string> EdgeGateway { get; set; } = null!;

        /// <summary>
        /// Server Pool name for identifying the exact server pool
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public GetLbServerPoolInvokeArgs()
        {
        }
        public static new GetLbServerPoolInvokeArgs Empty => new GetLbServerPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetLbServerPoolResult
    {
        public readonly string Algorithm;
        public readonly string AlgorithmParameters;
        public readonly string Description;
        public readonly string EdgeGateway;
        public readonly bool EnableTransparency;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetLbServerPoolMemberResult> Members;
        public readonly string MonitorId;
        public readonly string Name;
        public readonly string? Org;
        public readonly string? Vdc;

        [OutputConstructor]
        private GetLbServerPoolResult(
            string algorithm,

            string algorithmParameters,

            string description,

            string edgeGateway,

            bool enableTransparency,

            string id,

            ImmutableArray<Outputs.GetLbServerPoolMemberResult> members,

            string monitorId,

            string name,

            string? org,

            string? vdc)
        {
            Algorithm = algorithm;
            AlgorithmParameters = algorithmParameters;
            Description = description;
            EdgeGateway = edgeGateway;
            EnableTransparency = enableTransparency;
            Id = id;
            Members = members;
            MonitorId = monitorId;
            Name = name;
            Org = org;
            Vdc = vdc;
        }
    }
}
