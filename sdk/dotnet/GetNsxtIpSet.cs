// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtIpSet
    {
        /// <summary>
        /// Supported in provider *v3.3+* and VCD 10.1+ with NSX-T backed VDCs.
        /// 
        /// Provides a data source to read NSX-T IP Set. IP Sets are groups of objects to which the firewall rules apply. Combining
        /// multiple objects into IP Sets helps reduce the total number of firewall rules to be created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "main-edge",
        ///     });
        /// 
        ///     var my_set_1 = Vcd.GetNsxtIpSet.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         EdgeGatewayId = main.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///         Name = "frontend-servers",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtIpSetResult> InvokeAsync(GetNsxtIpSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtIpSetResult>("vcd:index/getNsxtIpSet:getNsxtIpSet", args ?? new GetNsxtIpSetArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.3+* and VCD 10.1+ with NSX-T backed VDCs.
        /// 
        /// Provides a data source to read NSX-T IP Set. IP Sets are groups of objects to which the firewall rules apply. Combining
        /// multiple objects into IP Sets helps reduce the total number of firewall rules to be created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "main-edge",
        ///     });
        /// 
        ///     var my_set_1 = Vcd.GetNsxtIpSet.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         EdgeGatewayId = main.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///         Name = "frontend-servers",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtIpSetResult> Invoke(GetNsxtIpSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtIpSetResult>("vcd:index/getNsxtIpSet:getNsxtIpSet", args ?? new GetNsxtIpSetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.3+* and VCD 10.1+ with NSX-T backed VDCs.
        /// 
        /// Provides a data source to read NSX-T IP Set. IP Sets are groups of objects to which the firewall rules apply. Combining
        /// multiple objects into IP Sets helps reduce the total number of firewall rules to be created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "main-edge",
        ///     });
        /// 
        ///     var my_set_1 = Vcd.GetNsxtIpSet.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         EdgeGatewayId = main.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///         Name = "frontend-servers",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtIpSetResult> Invoke(GetNsxtIpSetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtIpSetResult>("vcd:index/getNsxtIpSet:getNsxtIpSet", args ?? new GetNsxtIpSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtIpSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Edge Gateway (NSX-T only). Can be looked up using
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public string EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// Unique name of existing IP Set.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level. **Deprecated**
        /// in favor of `edge_gateway_id` field.
        /// </summary>
        [Input("vdc")]
        public string? Vdc { get; set; }

        public GetNsxtIpSetArgs()
        {
        }
        public static new GetNsxtIpSetArgs Empty => new GetNsxtIpSetArgs();
    }

    public sealed class GetNsxtIpSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Edge Gateway (NSX-T only). Can be looked up using
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public Input<string> EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// Unique name of existing IP Set.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level. **Deprecated**
        /// in favor of `edge_gateway_id` field.
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public GetNsxtIpSetInvokeArgs()
        {
        }
        public static new GetNsxtIpSetInvokeArgs Empty => new GetNsxtIpSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtIpSetResult
    {
        public readonly string Description;
        public readonly string EdgeGatewayId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> IpAddresses;
        public readonly string Name;
        public readonly string? Org;
        /// <summary>
        /// Parent VDC or VDC Group ID.
        /// </summary>
        public readonly string OwnerId;
        public readonly string? Vdc;

        [OutputConstructor]
        private GetNsxtIpSetResult(
            string description,

            string edgeGatewayId,

            string id,

            ImmutableArray<string> ipAddresses,

            string name,

            string? org,

            string ownerId,

            string? vdc)
        {
            Description = description;
            EdgeGatewayId = edgeGatewayId;
            Id = id;
            IpAddresses = ipAddresses;
            Name = name;
            Org = org;
            OwnerId = ownerId;
            Vdc = vdc;
        }
    }
}
