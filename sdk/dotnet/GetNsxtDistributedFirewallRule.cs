// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtDistributedFirewallRule
    {
        /// <summary>
        /// The Distributed Firewall data source reads a single rule for a particular VDC Group.
        /// 
        /// &gt; There is a different data source
        /// [`vcd.NsxtDistributedFirewall`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_distributed_firewall)
        /// resource available that can fetch all firewall rules.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var g1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "my-vdc-group",
        ///     });
        /// 
        ///     var r1 = Vcd.GetNsxtDistributedFirewallRule.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcGroupId = g1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "rule1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtDistributedFirewallRuleResult> InvokeAsync(GetNsxtDistributedFirewallRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtDistributedFirewallRuleResult>("vcd:index/getNsxtDistributedFirewallRule:getNsxtDistributedFirewallRule", args ?? new GetNsxtDistributedFirewallRuleArgs(), options.WithDefaults());

        /// <summary>
        /// The Distributed Firewall data source reads a single rule for a particular VDC Group.
        /// 
        /// &gt; There is a different data source
        /// [`vcd.NsxtDistributedFirewall`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_distributed_firewall)
        /// resource available that can fetch all firewall rules.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var g1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "my-vdc-group",
        ///     });
        /// 
        ///     var r1 = Vcd.GetNsxtDistributedFirewallRule.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcGroupId = g1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "rule1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtDistributedFirewallRuleResult> Invoke(GetNsxtDistributedFirewallRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtDistributedFirewallRuleResult>("vcd:index/getNsxtDistributedFirewallRule:getNsxtDistributedFirewallRule", args ?? new GetNsxtDistributedFirewallRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The Distributed Firewall data source reads a single rule for a particular VDC Group.
        /// 
        /// &gt; There is a different data source
        /// [`vcd.NsxtDistributedFirewall`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_distributed_firewall)
        /// resource available that can fetch all firewall rules.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var g1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "my-vdc-group",
        ///     });
        /// 
        ///     var r1 = Vcd.GetNsxtDistributedFirewallRule.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcGroupId = g1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "rule1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtDistributedFirewallRuleResult> Invoke(GetNsxtDistributedFirewallRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtDistributedFirewallRuleResult>("vcd:index/getNsxtDistributedFirewallRule:getNsxtDistributedFirewallRule", args ?? new GetNsxtDistributedFirewallRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtDistributedFirewallRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of firewall rule
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of organization in which Distributed Firewall is located. Optional if
        /// defined at provider level.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        /// <summary>
        /// The ID of a VDC Group
        /// </summary>
        [Input("vdcGroupId", required: true)]
        public string VdcGroupId { get; set; } = null!;

        public GetNsxtDistributedFirewallRuleArgs()
        {
        }
        public static new GetNsxtDistributedFirewallRuleArgs Empty => new GetNsxtDistributedFirewallRuleArgs();
    }

    public sealed class GetNsxtDistributedFirewallRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of firewall rule
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of organization in which Distributed Firewall is located. Optional if
        /// defined at provider level.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// The ID of a VDC Group
        /// </summary>
        [Input("vdcGroupId", required: true)]
        public Input<string> VdcGroupId { get; set; } = null!;

        public GetNsxtDistributedFirewallRuleInvokeArgs()
        {
        }
        public static new GetNsxtDistributedFirewallRuleInvokeArgs Empty => new GetNsxtDistributedFirewallRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtDistributedFirewallRuleResult
    {
        public readonly string Action;
        public readonly ImmutableArray<string> AppPortProfileIds;
        public readonly string Comment;
        public readonly string Description;
        public readonly bool DestinationGroupsExcluded;
        public readonly ImmutableArray<string> DestinationIds;
        public readonly string Direction;
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpProtocol;
        public readonly bool Logging;
        public readonly string Name;
        public readonly ImmutableArray<string> NetworkContextProfileIds;
        public readonly string? Org;
        public readonly bool SourceGroupsExcluded;
        public readonly ImmutableArray<string> SourceIds;
        public readonly string VdcGroupId;

        [OutputConstructor]
        private GetNsxtDistributedFirewallRuleResult(
            string action,

            ImmutableArray<string> appPortProfileIds,

            string comment,

            string description,

            bool destinationGroupsExcluded,

            ImmutableArray<string> destinationIds,

            string direction,

            bool enabled,

            string id,

            string ipProtocol,

            bool logging,

            string name,

            ImmutableArray<string> networkContextProfileIds,

            string? org,

            bool sourceGroupsExcluded,

            ImmutableArray<string> sourceIds,

            string vdcGroupId)
        {
            Action = action;
            AppPortProfileIds = appPortProfileIds;
            Comment = comment;
            Description = description;
            DestinationGroupsExcluded = destinationGroupsExcluded;
            DestinationIds = destinationIds;
            Direction = direction;
            Enabled = enabled;
            Id = id;
            IpProtocol = ipProtocol;
            Logging = logging;
            Name = name;
            NetworkContextProfileIds = networkContextProfileIds;
            Org = org;
            SourceGroupsExcluded = sourceGroupsExcluded;
            SourceIds = sourceIds;
            VdcGroupId = vdcGroupId;
        }
    }
}
