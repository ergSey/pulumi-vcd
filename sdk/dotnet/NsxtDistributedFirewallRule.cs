// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/nsxtDistributedFirewallRule:NsxtDistributedFirewallRule")]
    public partial class NsxtDistributedFirewallRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of an existing `vcd.NsxtDistributedFirewallRule` entry, above
        /// which the newly created firewall rule will be positioned. **Note.** By default, new rule will be
        /// created at the bottom of the list
        /// 
        /// &gt; When activating Distributed Firewall with resource
        /// [`vcd.VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group), there is a default firewall
        /// rule created which can make inconvenient to use this resource. For that reason, resource
        /// [`vcd.VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group) has a parameter
        /// `remove_default_firewall_rule` which can remove default firewall rule.
        /// </summary>
        [Output("aboveRuleId")]
        public Output<string?> AboveRuleId { get; private set; } = null!;

        /// <summary>
        /// Defines if it should `ALLOW`, `DROP`, `REJECT` traffic. `REJECT` is only
        /// supported in VCD 10.2.2+
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// An optional set of Application Port Profiles.
        /// </summary>
        [Output("appPortProfileIds")]
        public Output<ImmutableArray<string>> AppPortProfileIds { get; private set; } = null!;

        /// <summary>
        /// Comment field shown in UI
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Description of firewall rule (not shown in UI)
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// reverses value of `destination_ids` for
        /// the rule to match everything except specified IDs.
        /// </summary>
        [Output("destinationGroupsExcluded")]
        public Output<bool?> DestinationGroupsExcluded { get; private set; } = null!;

        /// <summary>
        /// A set of source object Firewall Groups (`IP Sets` or `Security
        /// groups`). Leaving it empty matches `Any` (all)
        /// </summary>
        [Output("destinationIds")]
        public Output<ImmutableArray<string>> DestinationIds { get; private set; } = null!;

        /// <summary>
        /// One of `IN`, `OUT`, or `IN_OUT`. (default `IN_OUT`)
        /// </summary>
        [Output("direction")]
        public Output<string?> Direction { get; private set; } = null!;

        /// <summary>
        /// Defines if the rule is enabled (default `true`)
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// One of `IPV4`,  `IPV6`, or `IPV4_IPV6` (default `IPV4_IPV6`)
        /// </summary>
        [Output("ipProtocol")]
        public Output<string?> IpProtocol { get; private set; } = null!;

        /// <summary>
        /// Defines if logging for this rule is enabled (default `false`)
        /// </summary>
        [Output("logging")]
        public Output<bool?> Logging { get; private set; } = null!;

        /// <summary>
        /// Explanatory name for firewall rule (uniqueness not enforced)
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An optional set of Network Context Profiles. Can be
        /// looked up using `vcd.getNsxtNetworkContextProfile` data source.
        /// </summary>
        [Output("networkContextProfileIds")]
        public Output<ImmutableArray<string>> NetworkContextProfileIds { get; private set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Output("org")]
        public Output<string?> Org { get; private set; } = null!;

        /// <summary>
        /// reverses value of `source_ids` for the rule to
        /// match everything except specified IDs.
        /// </summary>
        [Output("sourceGroupsExcluded")]
        public Output<bool?> SourceGroupsExcluded { get; private set; } = null!;

        /// <summary>
        /// A set of source object Firewall Groups (`IP Sets` or `Security groups`).
        /// Leaving it empty matches `Any` (all)
        /// </summary>
        [Output("sourceIds")]
        public Output<ImmutableArray<string>> SourceIds { get; private set; } = null!;

        /// <summary>
        /// The ID of VDC Group to manage Distributed Firewall in. Can be looked
        /// up using `vcd.VdcGroup` resource or data source.
        /// </summary>
        [Output("vdcGroupId")]
        public Output<string> VdcGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a NsxtDistributedFirewallRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NsxtDistributedFirewallRule(string name, NsxtDistributedFirewallRuleArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/nsxtDistributedFirewallRule:NsxtDistributedFirewallRule", name, args ?? new NsxtDistributedFirewallRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NsxtDistributedFirewallRule(string name, Input<string> id, NsxtDistributedFirewallRuleState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/nsxtDistributedFirewallRule:NsxtDistributedFirewallRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NsxtDistributedFirewallRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NsxtDistributedFirewallRule Get(string name, Input<string> id, NsxtDistributedFirewallRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NsxtDistributedFirewallRule(name, id, state, options);
        }
    }

    public sealed class NsxtDistributedFirewallRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of an existing `vcd.NsxtDistributedFirewallRule` entry, above
        /// which the newly created firewall rule will be positioned. **Note.** By default, new rule will be
        /// created at the bottom of the list
        /// 
        /// &gt; When activating Distributed Firewall with resource
        /// [`vcd.VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group), there is a default firewall
        /// rule created which can make inconvenient to use this resource. For that reason, resource
        /// [`vcd.VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group) has a parameter
        /// `remove_default_firewall_rule` which can remove default firewall rule.
        /// </summary>
        [Input("aboveRuleId")]
        public Input<string>? AboveRuleId { get; set; }

        /// <summary>
        /// Defines if it should `ALLOW`, `DROP`, `REJECT` traffic. `REJECT` is only
        /// supported in VCD 10.2.2+
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        [Input("appPortProfileIds")]
        private InputList<string>? _appPortProfileIds;

        /// <summary>
        /// An optional set of Application Port Profiles.
        /// </summary>
        public InputList<string> AppPortProfileIds
        {
            get => _appPortProfileIds ?? (_appPortProfileIds = new InputList<string>());
            set => _appPortProfileIds = value;
        }

        /// <summary>
        /// Comment field shown in UI
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Description of firewall rule (not shown in UI)
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// reverses value of `destination_ids` for
        /// the rule to match everything except specified IDs.
        /// </summary>
        [Input("destinationGroupsExcluded")]
        public Input<bool>? DestinationGroupsExcluded { get; set; }

        [Input("destinationIds")]
        private InputList<string>? _destinationIds;

        /// <summary>
        /// A set of source object Firewall Groups (`IP Sets` or `Security
        /// groups`). Leaving it empty matches `Any` (all)
        /// </summary>
        public InputList<string> DestinationIds
        {
            get => _destinationIds ?? (_destinationIds = new InputList<string>());
            set => _destinationIds = value;
        }

        /// <summary>
        /// One of `IN`, `OUT`, or `IN_OUT`. (default `IN_OUT`)
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// Defines if the rule is enabled (default `true`)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// One of `IPV4`,  `IPV6`, or `IPV4_IPV6` (default `IPV4_IPV6`)
        /// </summary>
        [Input("ipProtocol")]
        public Input<string>? IpProtocol { get; set; }

        /// <summary>
        /// Defines if logging for this rule is enabled (default `false`)
        /// </summary>
        [Input("logging")]
        public Input<bool>? Logging { get; set; }

        /// <summary>
        /// Explanatory name for firewall rule (uniqueness not enforced)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkContextProfileIds")]
        private InputList<string>? _networkContextProfileIds;

        /// <summary>
        /// An optional set of Network Context Profiles. Can be
        /// looked up using `vcd.getNsxtNetworkContextProfile` data source.
        /// </summary>
        public InputList<string> NetworkContextProfileIds
        {
            get => _networkContextProfileIds ?? (_networkContextProfileIds = new InputList<string>());
            set => _networkContextProfileIds = value;
        }

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// reverses value of `source_ids` for the rule to
        /// match everything except specified IDs.
        /// </summary>
        [Input("sourceGroupsExcluded")]
        public Input<bool>? SourceGroupsExcluded { get; set; }

        [Input("sourceIds")]
        private InputList<string>? _sourceIds;

        /// <summary>
        /// A set of source object Firewall Groups (`IP Sets` or `Security groups`).
        /// Leaving it empty matches `Any` (all)
        /// </summary>
        public InputList<string> SourceIds
        {
            get => _sourceIds ?? (_sourceIds = new InputList<string>());
            set => _sourceIds = value;
        }

        /// <summary>
        /// The ID of VDC Group to manage Distributed Firewall in. Can be looked
        /// up using `vcd.VdcGroup` resource or data source.
        /// </summary>
        [Input("vdcGroupId", required: true)]
        public Input<string> VdcGroupId { get; set; } = null!;

        public NsxtDistributedFirewallRuleArgs()
        {
        }
        public static new NsxtDistributedFirewallRuleArgs Empty => new NsxtDistributedFirewallRuleArgs();
    }

    public sealed class NsxtDistributedFirewallRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of an existing `vcd.NsxtDistributedFirewallRule` entry, above
        /// which the newly created firewall rule will be positioned. **Note.** By default, new rule will be
        /// created at the bottom of the list
        /// 
        /// &gt; When activating Distributed Firewall with resource
        /// [`vcd.VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group), there is a default firewall
        /// rule created which can make inconvenient to use this resource. For that reason, resource
        /// [`vcd.VdcGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vdc_group) has a parameter
        /// `remove_default_firewall_rule` which can remove default firewall rule.
        /// </summary>
        [Input("aboveRuleId")]
        public Input<string>? AboveRuleId { get; set; }

        /// <summary>
        /// Defines if it should `ALLOW`, `DROP`, `REJECT` traffic. `REJECT` is only
        /// supported in VCD 10.2.2+
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("appPortProfileIds")]
        private InputList<string>? _appPortProfileIds;

        /// <summary>
        /// An optional set of Application Port Profiles.
        /// </summary>
        public InputList<string> AppPortProfileIds
        {
            get => _appPortProfileIds ?? (_appPortProfileIds = new InputList<string>());
            set => _appPortProfileIds = value;
        }

        /// <summary>
        /// Comment field shown in UI
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Description of firewall rule (not shown in UI)
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// reverses value of `destination_ids` for
        /// the rule to match everything except specified IDs.
        /// </summary>
        [Input("destinationGroupsExcluded")]
        public Input<bool>? DestinationGroupsExcluded { get; set; }

        [Input("destinationIds")]
        private InputList<string>? _destinationIds;

        /// <summary>
        /// A set of source object Firewall Groups (`IP Sets` or `Security
        /// groups`). Leaving it empty matches `Any` (all)
        /// </summary>
        public InputList<string> DestinationIds
        {
            get => _destinationIds ?? (_destinationIds = new InputList<string>());
            set => _destinationIds = value;
        }

        /// <summary>
        /// One of `IN`, `OUT`, or `IN_OUT`. (default `IN_OUT`)
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// Defines if the rule is enabled (default `true`)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// One of `IPV4`,  `IPV6`, or `IPV4_IPV6` (default `IPV4_IPV6`)
        /// </summary>
        [Input("ipProtocol")]
        public Input<string>? IpProtocol { get; set; }

        /// <summary>
        /// Defines if logging for this rule is enabled (default `false`)
        /// </summary>
        [Input("logging")]
        public Input<bool>? Logging { get; set; }

        /// <summary>
        /// Explanatory name for firewall rule (uniqueness not enforced)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkContextProfileIds")]
        private InputList<string>? _networkContextProfileIds;

        /// <summary>
        /// An optional set of Network Context Profiles. Can be
        /// looked up using `vcd.getNsxtNetworkContextProfile` data source.
        /// </summary>
        public InputList<string> NetworkContextProfileIds
        {
            get => _networkContextProfileIds ?? (_networkContextProfileIds = new InputList<string>());
            set => _networkContextProfileIds = value;
        }

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// reverses value of `source_ids` for the rule to
        /// match everything except specified IDs.
        /// </summary>
        [Input("sourceGroupsExcluded")]
        public Input<bool>? SourceGroupsExcluded { get; set; }

        [Input("sourceIds")]
        private InputList<string>? _sourceIds;

        /// <summary>
        /// A set of source object Firewall Groups (`IP Sets` or `Security groups`).
        /// Leaving it empty matches `Any` (all)
        /// </summary>
        public InputList<string> SourceIds
        {
            get => _sourceIds ?? (_sourceIds = new InputList<string>());
            set => _sourceIds = value;
        }

        /// <summary>
        /// The ID of VDC Group to manage Distributed Firewall in. Can be looked
        /// up using `vcd.VdcGroup` resource or data source.
        /// </summary>
        [Input("vdcGroupId")]
        public Input<string>? VdcGroupId { get; set; }

        public NsxtDistributedFirewallRuleState()
        {
        }
        public static new NsxtDistributedFirewallRuleState Empty => new NsxtDistributedFirewallRuleState();
    }
}
