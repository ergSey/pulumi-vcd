// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtEdgegatewayDhcpForwarding
    {
        /// <summary>
        /// Supported in provider *v3.10+* and VCD 10.3.1+ with NSX-T.
        /// 
        /// Provides a data source to read NSX-T Edge Gateway DHCP forwarding configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var v1 = Vcd.GetOrgVdc.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         Name = "nsxt-vdc-datacloud",
        ///     });
        /// 
        ///     var testing_in_vdc = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         OwnerId = v1.Apply(getOrgVdcResult =&gt; getOrgVdcResult.Id),
        ///         Name = "nsxt-gw-datacloud",
        ///     });
        /// 
        ///     var testing_in_vdcGetNsxtEdgegatewayDhcpForwarding = Vcd.GetNsxtEdgegatewayDhcpForwarding.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         EdgeGatewayId = testing_in_vdc.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtEdgegatewayDhcpForwardingResult> InvokeAsync(GetNsxtEdgegatewayDhcpForwardingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtEdgegatewayDhcpForwardingResult>("vcd:index/getNsxtEdgegatewayDhcpForwarding:getNsxtEdgegatewayDhcpForwarding", args ?? new GetNsxtEdgegatewayDhcpForwardingArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.10+* and VCD 10.3.1+ with NSX-T.
        /// 
        /// Provides a data source to read NSX-T Edge Gateway DHCP forwarding configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var v1 = Vcd.GetOrgVdc.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         Name = "nsxt-vdc-datacloud",
        ///     });
        /// 
        ///     var testing_in_vdc = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         OwnerId = v1.Apply(getOrgVdcResult =&gt; getOrgVdcResult.Id),
        ///         Name = "nsxt-gw-datacloud",
        ///     });
        /// 
        ///     var testing_in_vdcGetNsxtEdgegatewayDhcpForwarding = Vcd.GetNsxtEdgegatewayDhcpForwarding.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         EdgeGatewayId = testing_in_vdc.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtEdgegatewayDhcpForwardingResult> Invoke(GetNsxtEdgegatewayDhcpForwardingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtEdgegatewayDhcpForwardingResult>("vcd:index/getNsxtEdgegatewayDhcpForwarding:getNsxtEdgegatewayDhcpForwarding", args ?? new GetNsxtEdgegatewayDhcpForwardingInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.10+* and VCD 10.3.1+ with NSX-T.
        /// 
        /// Provides a data source to read NSX-T Edge Gateway DHCP forwarding configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var v1 = Vcd.GetOrgVdc.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         Name = "nsxt-vdc-datacloud",
        ///     });
        /// 
        ///     var testing_in_vdc = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         OwnerId = v1.Apply(getOrgVdcResult =&gt; getOrgVdcResult.Id),
        ///         Name = "nsxt-gw-datacloud",
        ///     });
        /// 
        ///     var testing_in_vdcGetNsxtEdgegatewayDhcpForwarding = Vcd.GetNsxtEdgegatewayDhcpForwarding.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         EdgeGatewayId = testing_in_vdc.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtEdgegatewayDhcpForwardingResult> Invoke(GetNsxtEdgegatewayDhcpForwardingInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtEdgegatewayDhcpForwardingResult>("vcd:index/getNsxtEdgegatewayDhcpForwarding:getNsxtEdgegatewayDhcpForwarding", args ?? new GetNsxtEdgegatewayDhcpForwardingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtEdgegatewayDhcpForwardingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T Edge Gateway ID.
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public string EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// Org in which the NSX-T Edge Gateway is located, required
        /// if not set in the provider section.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        public GetNsxtEdgegatewayDhcpForwardingArgs()
        {
        }
        public static new GetNsxtEdgegatewayDhcpForwardingArgs Empty => new GetNsxtEdgegatewayDhcpForwardingArgs();
    }

    public sealed class GetNsxtEdgegatewayDhcpForwardingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T Edge Gateway ID.
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public Input<string> EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// Org in which the NSX-T Edge Gateway is located, required
        /// if not set in the provider section.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        public GetNsxtEdgegatewayDhcpForwardingInvokeArgs()
        {
        }
        public static new GetNsxtEdgegatewayDhcpForwardingInvokeArgs Empty => new GetNsxtEdgegatewayDhcpForwardingInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtEdgegatewayDhcpForwardingResult
    {
        public readonly ImmutableArray<string> DhcpServers;
        public readonly string EdgeGatewayId;
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Org;

        [OutputConstructor]
        private GetNsxtEdgegatewayDhcpForwardingResult(
            ImmutableArray<string> dhcpServers,

            string edgeGatewayId,

            bool enabled,

            string id,

            string? org)
        {
            DhcpServers = dhcpServers;
            EdgeGatewayId = edgeGatewayId;
            Enabled = enabled;
            Id = id;
            Org = org;
        }
    }
}
