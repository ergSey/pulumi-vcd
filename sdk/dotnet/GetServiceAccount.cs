// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetServiceAccount
    {
        /// <summary>
        /// Provides a data source to read VCD Service Accounts.
        /// 
        /// Supported in provider *v3.10+* and VCD 10.4+.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Vcd.GetServiceAccount.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "my-parent-network",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServiceAccountResult> InvokeAsync(GetServiceAccountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceAccountResult>("vcd:index/getServiceAccount:getServiceAccount", args ?? new GetServiceAccountArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source to read VCD Service Accounts.
        /// 
        /// Supported in provider *v3.10+* and VCD 10.4+.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Vcd.GetServiceAccount.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "my-parent-network",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceAccountResult> Invoke(GetServiceAccountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceAccountResult>("vcd:index/getServiceAccount:getServiceAccount", args ?? new GetServiceAccountInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source to read VCD Service Accounts.
        /// 
        /// Supported in provider *v3.10+* and VCD 10.4+.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Vcd.GetServiceAccount.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "my-parent-network",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceAccountResult> Invoke(GetServiceAccountInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceAccountResult>("vcd:index/getServiceAccount:getServiceAccount", args ?? new GetServiceAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Service Account in an organisation
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        public GetServiceAccountArgs()
        {
        }
        public static new GetServiceAccountArgs Empty => new GetServiceAccountArgs();
    }

    public sealed class GetServiceAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Service Account in an organisation
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        public GetServiceAccountInvokeArgs()
        {
        }
        public static new GetServiceAccountInvokeArgs Empty => new GetServiceAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceAccountResult
    {
        public readonly bool Active;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string? Org;
        public readonly string RoleId;
        public readonly string SoftwareId;
        public readonly string SoftwareVersion;
        public readonly string Uri;

        [OutputConstructor]
        private GetServiceAccountResult(
            bool active,

            string id,

            string name,

            string? org,

            string roleId,

            string softwareId,

            string softwareVersion,

            string uri)
        {
            Active = active;
            Id = id;
            Name = name;
            Org = org;
            RoleId = roleId;
            SoftwareId = softwareId;
            SoftwareVersion = softwareVersion;
            Uri = uri;
        }
    }
}
