// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtManager
    {
        /// <summary>
        /// Provides a data source for NSX-T manager.
        /// 
        /// Supported in provider *v3.0+*
        /// 
        /// &gt; **Note:** This resource uses new VMware Cloud Director
        /// [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
        /// requires at least VCD *10.1.1+* and NSX-T *3.0+*.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxt-manager-one",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtManagerResult> InvokeAsync(GetNsxtManagerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtManagerResult>("vcd:index/getNsxtManager:getNsxtManager", args ?? new GetNsxtManagerArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source for NSX-T manager.
        /// 
        /// Supported in provider *v3.0+*
        /// 
        /// &gt; **Note:** This resource uses new VMware Cloud Director
        /// [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
        /// requires at least VCD *10.1.1+* and NSX-T *3.0+*.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxt-manager-one",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtManagerResult> Invoke(GetNsxtManagerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtManagerResult>("vcd:index/getNsxtManager:getNsxtManager", args ?? new GetNsxtManagerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source for NSX-T manager.
        /// 
        /// Supported in provider *v3.0+*
        /// 
        /// &gt; **Note:** This resource uses new VMware Cloud Director
        /// [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
        /// requires at least VCD *10.1.1+* and NSX-T *3.0+*.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxt-manager-one",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtManagerResult> Invoke(GetNsxtManagerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtManagerResult>("vcd:index/getNsxtManager:getNsxtManager", args ?? new GetNsxtManagerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtManagerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T manager name
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetNsxtManagerArgs()
        {
        }
        public static new GetNsxtManagerArgs Empty => new GetNsxtManagerArgs();
    }

    public sealed class GetNsxtManagerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T manager name
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetNsxtManagerInvokeArgs()
        {
        }
        public static new GetNsxtManagerInvokeArgs Empty => new GetNsxtManagerInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtManagerResult
    {
        /// <summary>
        /// Full URL of the manager
        /// </summary>
        public readonly string Href;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetNsxtManagerResult(
            string href,

            string id,

            string name)
        {
            Href = href;
            Id = id;
            Name = name;
        }
    }
}
