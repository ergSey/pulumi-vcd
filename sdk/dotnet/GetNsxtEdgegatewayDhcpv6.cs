// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtEdgegatewayDhcpv6
    {
        /// <summary>
        /// Provides a data source to read DHCPv6 configuration for NSX-T Edge Gateways.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testing_in_vdc = Vcd.GetNsxtEdgegatewayDhcpv6.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         EdgeGatewayId = testing_in_vdcVcdNsxtEdgegateway.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtEdgegatewayDhcpv6Result> InvokeAsync(GetNsxtEdgegatewayDhcpv6Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtEdgegatewayDhcpv6Result>("vcd:index/getNsxtEdgegatewayDhcpv6:getNsxtEdgegatewayDhcpv6", args ?? new GetNsxtEdgegatewayDhcpv6Args(), options.WithDefaults());

        /// <summary>
        /// Provides a data source to read DHCPv6 configuration for NSX-T Edge Gateways.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testing_in_vdc = Vcd.GetNsxtEdgegatewayDhcpv6.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         EdgeGatewayId = testing_in_vdcVcdNsxtEdgegateway.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtEdgegatewayDhcpv6Result> Invoke(GetNsxtEdgegatewayDhcpv6InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtEdgegatewayDhcpv6Result>("vcd:index/getNsxtEdgegatewayDhcpv6:getNsxtEdgegatewayDhcpv6", args ?? new GetNsxtEdgegatewayDhcpv6InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source to read DHCPv6 configuration for NSX-T Edge Gateways.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testing_in_vdc = Vcd.GetNsxtEdgegatewayDhcpv6.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         EdgeGatewayId = testing_in_vdcVcdNsxtEdgegateway.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtEdgegatewayDhcpv6Result> Invoke(GetNsxtEdgegatewayDhcpv6InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtEdgegatewayDhcpv6Result>("vcd:index/getNsxtEdgegatewayDhcpv6:getNsxtEdgegatewayDhcpv6", args ?? new GetNsxtEdgegatewayDhcpv6InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtEdgegatewayDhcpv6Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An ID of NSX-T Edge Gateway. Can be looked up using
        /// [vcd.NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public string EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// The name of organization to which the edge gateway belongs. Optional if defined at provider level.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        public GetNsxtEdgegatewayDhcpv6Args()
        {
        }
        public static new GetNsxtEdgegatewayDhcpv6Args Empty => new GetNsxtEdgegatewayDhcpv6Args();
    }

    public sealed class GetNsxtEdgegatewayDhcpv6InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An ID of NSX-T Edge Gateway. Can be looked up using
        /// [vcd.NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public Input<string> EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// The name of organization to which the edge gateway belongs. Optional if defined at provider level.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        public GetNsxtEdgegatewayDhcpv6InvokeArgs()
        {
        }
        public static new GetNsxtEdgegatewayDhcpv6InvokeArgs Empty => new GetNsxtEdgegatewayDhcpv6InvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtEdgegatewayDhcpv6Result
    {
        public readonly ImmutableArray<string> DnsServers;
        public readonly ImmutableArray<string> DomainNames;
        public readonly string EdgeGatewayId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Mode;
        public readonly string? Org;

        [OutputConstructor]
        private GetNsxtEdgegatewayDhcpv6Result(
            ImmutableArray<string> dnsServers,

            ImmutableArray<string> domainNames,

            string edgeGatewayId,

            string id,

            string mode,

            string? org)
        {
            DnsServers = dnsServers;
            DomainNames = domainNames;
            EdgeGatewayId = edgeGatewayId;
            Id = id;
            Mode = mode;
            Org = org;
        }
    }
}
