// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/orgVdcTemplate:OrgVdcTemplate")]
    public partial class OrgVdcTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Allocation model that the VDCs instantiated from this template will use.
        /// Must be one of: `AllocationVApp`, `AllocationPool`, `ReservationPool` or  `Flex`
        /// </summary>
        [Output("allocationModel")]
        public Output<string> AllocationModel { get; private set; } = null!;

        /// <summary>
        /// The compute configuration for the VDCs instantiated from this template:
        /// </summary>
        [Output("computeConfiguration")]
        public Output<Outputs.OrgVdcTemplateComputeConfiguration> ComputeConfiguration { get; private set; } = null!;

        /// <summary>
        /// Description of the Organization VDC Template, as seen by System administrators
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// VDCs instantiated from this template will create a new Edge Gateway with the provided setup. Required if any `provider_vdc` block
        /// has defined a `gateway_edge_cluster_id`. This **unique** block has the following properties:
        /// </summary>
        [Output("edgeGateway")]
        public Output<Outputs.OrgVdcTemplateEdgeGateway?> EdgeGateway { get; private set; } = null!;

        /// <summary>
        /// If `true`, the VDCs instantiated from this template will have Fast provisioning enabled. Defaults to `false`
        /// </summary>
        [Output("enableFastProvisioning")]
        public Output<bool?> EnableFastProvisioning { get; private set; } = null!;

        /// <summary>
        /// If `true`, the VDCs instantiated from this template will have Thin provisioning enabled. Defaults to `false`
        /// </summary>
        [Output("enableThinProvisioning")]
        public Output<bool?> EnableThinProvisioning { get; private set; } = null!;

        /// <summary>
        /// Name to give to the Organization VDC Template, as seen by System administrators
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// If set, specifies the Network pool for the instantiated VDCs. Otherwise, it is automatically chosen
        /// </summary>
        [Output("networkPoolId")]
        public Output<string?> NetworkPoolId { get; private set; } = null!;

        /// <summary>
        /// Quota for the NICs of the instantiated VDCs. Defaults to 100
        /// </summary>
        [Output("nicQuota")]
        public Output<int?> NicQuota { get; private set; } = null!;

        /// <summary>
        /// A block that defines a candidate location for the instantiated VDCs. There must be **at least one**, which has the following properties:
        /// </summary>
        [Output("providerVdcs")]
        public Output<ImmutableArray<Outputs.OrgVdcTemplateProviderVdc>> ProviderVdcs { get; private set; } = null!;

        /// <summary>
        /// Quota for the provisioned networks of the instantiated VDCs. Defaults to 1000
        /// </summary>
        [Output("provisionedNetworkQuota")]
        public Output<int?> ProvisionedNetworkQuota { get; private set; } = null!;

        /// <summary>
        /// A set of Organization IDs that will be able to view and read this VDC template, they can be obtained with
        /// [`vcd.Org` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org)
        /// </summary>
        [Output("readableByOrgIds")]
        public Output<ImmutableArray<string>> ReadableByOrgIds { get; private set; } = null!;

        /// <summary>
        /// A block that defines a storage profile that the VDCs instantiated from this template will use. Must be **at least one**, which has the following properties:
        /// </summary>
        [Output("storageProfiles")]
        public Output<ImmutableArray<Outputs.OrgVdcTemplateStorageProfile>> StorageProfiles { get; private set; } = null!;

        /// <summary>
        /// Description of the Organization VDC Template, as seen by the allowed tenants
        /// </summary>
        [Output("tenantDescription")]
        public Output<string?> TenantDescription { get; private set; } = null!;

        /// <summary>
        /// Name to give to the Organization VDC Template, as seen by the allowed tenants
        /// </summary>
        [Output("tenantName")]
        public Output<string> TenantName { get; private set; } = null!;

        /// <summary>
        /// Quota for the VMs of the instantiated VDCs. 0 means unlimited. Defaults to 0
        /// </summary>
        [Output("vmQuota")]
        public Output<int?> VmQuota { get; private set; } = null!;


        /// <summary>
        /// Create a OrgVdcTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrgVdcTemplate(string name, OrgVdcTemplateArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/orgVdcTemplate:OrgVdcTemplate", name, args ?? new OrgVdcTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrgVdcTemplate(string name, Input<string> id, OrgVdcTemplateState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/orgVdcTemplate:OrgVdcTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrgVdcTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrgVdcTemplate Get(string name, Input<string> id, OrgVdcTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new OrgVdcTemplate(name, id, state, options);
        }
    }

    public sealed class OrgVdcTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allocation model that the VDCs instantiated from this template will use.
        /// Must be one of: `AllocationVApp`, `AllocationPool`, `ReservationPool` or  `Flex`
        /// </summary>
        [Input("allocationModel", required: true)]
        public Input<string> AllocationModel { get; set; } = null!;

        /// <summary>
        /// The compute configuration for the VDCs instantiated from this template:
        /// </summary>
        [Input("computeConfiguration", required: true)]
        public Input<Inputs.OrgVdcTemplateComputeConfigurationArgs> ComputeConfiguration { get; set; } = null!;

        /// <summary>
        /// Description of the Organization VDC Template, as seen by System administrators
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// VDCs instantiated from this template will create a new Edge Gateway with the provided setup. Required if any `provider_vdc` block
        /// has defined a `gateway_edge_cluster_id`. This **unique** block has the following properties:
        /// </summary>
        [Input("edgeGateway")]
        public Input<Inputs.OrgVdcTemplateEdgeGatewayArgs>? EdgeGateway { get; set; }

        /// <summary>
        /// If `true`, the VDCs instantiated from this template will have Fast provisioning enabled. Defaults to `false`
        /// </summary>
        [Input("enableFastProvisioning")]
        public Input<bool>? EnableFastProvisioning { get; set; }

        /// <summary>
        /// If `true`, the VDCs instantiated from this template will have Thin provisioning enabled. Defaults to `false`
        /// </summary>
        [Input("enableThinProvisioning")]
        public Input<bool>? EnableThinProvisioning { get; set; }

        /// <summary>
        /// Name to give to the Organization VDC Template, as seen by System administrators
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If set, specifies the Network pool for the instantiated VDCs. Otherwise, it is automatically chosen
        /// </summary>
        [Input("networkPoolId")]
        public Input<string>? NetworkPoolId { get; set; }

        /// <summary>
        /// Quota for the NICs of the instantiated VDCs. Defaults to 100
        /// </summary>
        [Input("nicQuota")]
        public Input<int>? NicQuota { get; set; }

        [Input("providerVdcs", required: true)]
        private InputList<Inputs.OrgVdcTemplateProviderVdcArgs>? _providerVdcs;

        /// <summary>
        /// A block that defines a candidate location for the instantiated VDCs. There must be **at least one**, which has the following properties:
        /// </summary>
        public InputList<Inputs.OrgVdcTemplateProviderVdcArgs> ProviderVdcs
        {
            get => _providerVdcs ?? (_providerVdcs = new InputList<Inputs.OrgVdcTemplateProviderVdcArgs>());
            set => _providerVdcs = value;
        }

        /// <summary>
        /// Quota for the provisioned networks of the instantiated VDCs. Defaults to 1000
        /// </summary>
        [Input("provisionedNetworkQuota")]
        public Input<int>? ProvisionedNetworkQuota { get; set; }

        [Input("readableByOrgIds")]
        private InputList<string>? _readableByOrgIds;

        /// <summary>
        /// A set of Organization IDs that will be able to view and read this VDC template, they can be obtained with
        /// [`vcd.Org` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org)
        /// </summary>
        public InputList<string> ReadableByOrgIds
        {
            get => _readableByOrgIds ?? (_readableByOrgIds = new InputList<string>());
            set => _readableByOrgIds = value;
        }

        [Input("storageProfiles", required: true)]
        private InputList<Inputs.OrgVdcTemplateStorageProfileArgs>? _storageProfiles;

        /// <summary>
        /// A block that defines a storage profile that the VDCs instantiated from this template will use. Must be **at least one**, which has the following properties:
        /// </summary>
        public InputList<Inputs.OrgVdcTemplateStorageProfileArgs> StorageProfiles
        {
            get => _storageProfiles ?? (_storageProfiles = new InputList<Inputs.OrgVdcTemplateStorageProfileArgs>());
            set => _storageProfiles = value;
        }

        /// <summary>
        /// Description of the Organization VDC Template, as seen by the allowed tenants
        /// </summary>
        [Input("tenantDescription")]
        public Input<string>? TenantDescription { get; set; }

        /// <summary>
        /// Name to give to the Organization VDC Template, as seen by the allowed tenants
        /// </summary>
        [Input("tenantName", required: true)]
        public Input<string> TenantName { get; set; } = null!;

        /// <summary>
        /// Quota for the VMs of the instantiated VDCs. 0 means unlimited. Defaults to 0
        /// </summary>
        [Input("vmQuota")]
        public Input<int>? VmQuota { get; set; }

        public OrgVdcTemplateArgs()
        {
        }
        public static new OrgVdcTemplateArgs Empty => new OrgVdcTemplateArgs();
    }

    public sealed class OrgVdcTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allocation model that the VDCs instantiated from this template will use.
        /// Must be one of: `AllocationVApp`, `AllocationPool`, `ReservationPool` or  `Flex`
        /// </summary>
        [Input("allocationModel")]
        public Input<string>? AllocationModel { get; set; }

        /// <summary>
        /// The compute configuration for the VDCs instantiated from this template:
        /// </summary>
        [Input("computeConfiguration")]
        public Input<Inputs.OrgVdcTemplateComputeConfigurationGetArgs>? ComputeConfiguration { get; set; }

        /// <summary>
        /// Description of the Organization VDC Template, as seen by System administrators
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// VDCs instantiated from this template will create a new Edge Gateway with the provided setup. Required if any `provider_vdc` block
        /// has defined a `gateway_edge_cluster_id`. This **unique** block has the following properties:
        /// </summary>
        [Input("edgeGateway")]
        public Input<Inputs.OrgVdcTemplateEdgeGatewayGetArgs>? EdgeGateway { get; set; }

        /// <summary>
        /// If `true`, the VDCs instantiated from this template will have Fast provisioning enabled. Defaults to `false`
        /// </summary>
        [Input("enableFastProvisioning")]
        public Input<bool>? EnableFastProvisioning { get; set; }

        /// <summary>
        /// If `true`, the VDCs instantiated from this template will have Thin provisioning enabled. Defaults to `false`
        /// </summary>
        [Input("enableThinProvisioning")]
        public Input<bool>? EnableThinProvisioning { get; set; }

        /// <summary>
        /// Name to give to the Organization VDC Template, as seen by System administrators
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If set, specifies the Network pool for the instantiated VDCs. Otherwise, it is automatically chosen
        /// </summary>
        [Input("networkPoolId")]
        public Input<string>? NetworkPoolId { get; set; }

        /// <summary>
        /// Quota for the NICs of the instantiated VDCs. Defaults to 100
        /// </summary>
        [Input("nicQuota")]
        public Input<int>? NicQuota { get; set; }

        [Input("providerVdcs")]
        private InputList<Inputs.OrgVdcTemplateProviderVdcGetArgs>? _providerVdcs;

        /// <summary>
        /// A block that defines a candidate location for the instantiated VDCs. There must be **at least one**, which has the following properties:
        /// </summary>
        public InputList<Inputs.OrgVdcTemplateProviderVdcGetArgs> ProviderVdcs
        {
            get => _providerVdcs ?? (_providerVdcs = new InputList<Inputs.OrgVdcTemplateProviderVdcGetArgs>());
            set => _providerVdcs = value;
        }

        /// <summary>
        /// Quota for the provisioned networks of the instantiated VDCs. Defaults to 1000
        /// </summary>
        [Input("provisionedNetworkQuota")]
        public Input<int>? ProvisionedNetworkQuota { get; set; }

        [Input("readableByOrgIds")]
        private InputList<string>? _readableByOrgIds;

        /// <summary>
        /// A set of Organization IDs that will be able to view and read this VDC template, they can be obtained with
        /// [`vcd.Org` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org)
        /// </summary>
        public InputList<string> ReadableByOrgIds
        {
            get => _readableByOrgIds ?? (_readableByOrgIds = new InputList<string>());
            set => _readableByOrgIds = value;
        }

        [Input("storageProfiles")]
        private InputList<Inputs.OrgVdcTemplateStorageProfileGetArgs>? _storageProfiles;

        /// <summary>
        /// A block that defines a storage profile that the VDCs instantiated from this template will use. Must be **at least one**, which has the following properties:
        /// </summary>
        public InputList<Inputs.OrgVdcTemplateStorageProfileGetArgs> StorageProfiles
        {
            get => _storageProfiles ?? (_storageProfiles = new InputList<Inputs.OrgVdcTemplateStorageProfileGetArgs>());
            set => _storageProfiles = value;
        }

        /// <summary>
        /// Description of the Organization VDC Template, as seen by the allowed tenants
        /// </summary>
        [Input("tenantDescription")]
        public Input<string>? TenantDescription { get; set; }

        /// <summary>
        /// Name to give to the Organization VDC Template, as seen by the allowed tenants
        /// </summary>
        [Input("tenantName")]
        public Input<string>? TenantName { get; set; }

        /// <summary>
        /// Quota for the VMs of the instantiated VDCs. 0 means unlimited. Defaults to 0
        /// </summary>
        [Input("vmQuota")]
        public Input<int>? VmQuota { get; set; }

        public OrgVdcTemplateState()
        {
        }
        public static new OrgVdcTemplateState Empty => new OrgVdcTemplateState();
    }
}
