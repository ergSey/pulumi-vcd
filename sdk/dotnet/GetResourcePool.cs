// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetResourcePool
    {
        /// <summary>
        /// Provides a data source for a resource pool attached to a vCenter. A resource pool is an essential component of a Provider VDC.
        /// 
        /// 
        /// &gt; Note 1: this data source requires System Administrator privileges
        /// 
        /// &gt; Note 2: you can create or modify a resource pool using vSphere provider
        /// 
        /// Supported in provider *v3.10+*
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ### 1
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var vcenter1 = Vcd.GetVcenter.Invoke(new()
        ///     {
        ///         Name = "vc1",
        ///     });
        /// 
        ///     var rp1 = Vcd.GetResourcePool.Invoke(new()
        ///     {
        ///         Name = "resource-pool-for-vcd-01",
        ///         VcenterId = vcenter1.Apply(getVcenterResult =&gt; getVcenterResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### 2
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var rp1 = Vcd.GetResourcePool.Invoke(new()
        ///     {
        ///         Name = "common-name",
        ///         VcenterId = vcenter1.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// When you receive such error, you can run the script again, but using the resource pool ID instead of the name.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var rp1 = Vcd.GetResourcePool.Invoke(new()
        ///     {
        ///         Name = "resgroup-241",
        ///         VcenterId = vcenter1.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetResourcePoolResult> InvokeAsync(GetResourcePoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourcePoolResult>("vcd:index/getResourcePool:getResourcePool", args ?? new GetResourcePoolArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source for a resource pool attached to a vCenter. A resource pool is an essential component of a Provider VDC.
        /// 
        /// 
        /// &gt; Note 1: this data source requires System Administrator privileges
        /// 
        /// &gt; Note 2: you can create or modify a resource pool using vSphere provider
        /// 
        /// Supported in provider *v3.10+*
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ### 1
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var vcenter1 = Vcd.GetVcenter.Invoke(new()
        ///     {
        ///         Name = "vc1",
        ///     });
        /// 
        ///     var rp1 = Vcd.GetResourcePool.Invoke(new()
        ///     {
        ///         Name = "resource-pool-for-vcd-01",
        ///         VcenterId = vcenter1.Apply(getVcenterResult =&gt; getVcenterResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### 2
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var rp1 = Vcd.GetResourcePool.Invoke(new()
        ///     {
        ///         Name = "common-name",
        ///         VcenterId = vcenter1.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// When you receive such error, you can run the script again, but using the resource pool ID instead of the name.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var rp1 = Vcd.GetResourcePool.Invoke(new()
        ///     {
        ///         Name = "resgroup-241",
        ///         VcenterId = vcenter1.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResourcePoolResult> Invoke(GetResourcePoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourcePoolResult>("vcd:index/getResourcePool:getResourcePool", args ?? new GetResourcePoolInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source for a resource pool attached to a vCenter. A resource pool is an essential component of a Provider VDC.
        /// 
        /// 
        /// &gt; Note 1: this data source requires System Administrator privileges
        /// 
        /// &gt; Note 2: you can create or modify a resource pool using vSphere provider
        /// 
        /// Supported in provider *v3.10+*
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ### 1
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var vcenter1 = Vcd.GetVcenter.Invoke(new()
        ///     {
        ///         Name = "vc1",
        ///     });
        /// 
        ///     var rp1 = Vcd.GetResourcePool.Invoke(new()
        ///     {
        ///         Name = "resource-pool-for-vcd-01",
        ///         VcenterId = vcenter1.Apply(getVcenterResult =&gt; getVcenterResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### 2
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var rp1 = Vcd.GetResourcePool.Invoke(new()
        ///     {
        ///         Name = "common-name",
        ///         VcenterId = vcenter1.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// When you receive such error, you can run the script again, but using the resource pool ID instead of the name.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var rp1 = Vcd.GetResourcePool.Invoke(new()
        ///     {
        ///         Name = "resgroup-241",
        ///         VcenterId = vcenter1.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetResourcePoolResult> Invoke(GetResourcePoolInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourcePoolResult>("vcd:index/getResourcePool:getResourcePool", args ?? new GetResourcePoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourcePoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// resource pool name. The name may not be unique within the vCenter. If that happens, you will get an
        /// error message with the list of IDs for the pools with the same name, and can subsequently enter the resource pool ID instead of the name.
        /// (See Example Usage 2)
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// ID of the vCenter to which this resource pool belongs.
        /// </summary>
        [Input("vcenterId", required: true)]
        public string VcenterId { get; set; } = null!;

        public GetResourcePoolArgs()
        {
        }
        public static new GetResourcePoolArgs Empty => new GetResourcePoolArgs();
    }

    public sealed class GetResourcePoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// resource pool name. The name may not be unique within the vCenter. If that happens, you will get an
        /// error message with the list of IDs for the pools with the same name, and can subsequently enter the resource pool ID instead of the name.
        /// (See Example Usage 2)
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// ID of the vCenter to which this resource pool belongs.
        /// </summary>
        [Input("vcenterId", required: true)]
        public Input<string> VcenterId { get; set; } = null!;

        public GetResourcePoolInvokeArgs()
        {
        }
        public static new GetResourcePoolInvokeArgs Empty => new GetResourcePoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourcePoolResult
    {
        /// <summary>
        /// managed object reference of the vCenter cluster that this resource pool is hosted on.
        /// </summary>
        public readonly string ClusterMoref;
        /// <summary>
        /// default hardware version available to this resource pool.
        /// </summary>
        public readonly string HardwareVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string VcenterId;

        [OutputConstructor]
        private GetResourcePoolResult(
            string clusterMoref,

            string hardwareVersion,

            string id,

            string name,

            string vcenterId)
        {
            ClusterMoref = clusterMoref;
            HardwareVersion = hardwareVersion;
            Id = id;
            Name = name;
            VcenterId = vcenterId;
        }
    }
}
