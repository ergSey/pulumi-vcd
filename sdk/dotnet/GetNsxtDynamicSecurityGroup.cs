// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtDynamicSecurityGroup
    {
        /// <summary>
        /// Supported in provider *v3.7+* and VCD 10.3+ with NSX-T backed VDC Groups.
        /// 
        /// Provides a data source to read NSX-T Dynamic Security Groups. Dynamic Security Groups group Virtual
        /// Machines based on specific criteria (VM Names or Security tags) to which Distributed Firewall Rules
        /// apply.
        /// 
        /// ## Example Usage
        /// 
        /// ### 1 (Existing Dynamic Security Group Lookup)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var group1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "cloud",
        ///         Name = "vdc-group-cloud",
        ///     });
        /// 
        ///     var group1GetNsxtDynamicSecurityGroup = Vcd.GetNsxtDynamicSecurityGroup.Invoke(new()
        ///     {
        ///         Org = "cloud",
        ///         VdcGroupId = group1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "cloud-dynamic-security-group",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtDynamicSecurityGroupResult> InvokeAsync(GetNsxtDynamicSecurityGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtDynamicSecurityGroupResult>("vcd:index/getNsxtDynamicSecurityGroup:getNsxtDynamicSecurityGroup", args ?? new GetNsxtDynamicSecurityGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.7+* and VCD 10.3+ with NSX-T backed VDC Groups.
        /// 
        /// Provides a data source to read NSX-T Dynamic Security Groups. Dynamic Security Groups group Virtual
        /// Machines based on specific criteria (VM Names or Security tags) to which Distributed Firewall Rules
        /// apply.
        /// 
        /// ## Example Usage
        /// 
        /// ### 1 (Existing Dynamic Security Group Lookup)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var group1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "cloud",
        ///         Name = "vdc-group-cloud",
        ///     });
        /// 
        ///     var group1GetNsxtDynamicSecurityGroup = Vcd.GetNsxtDynamicSecurityGroup.Invoke(new()
        ///     {
        ///         Org = "cloud",
        ///         VdcGroupId = group1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "cloud-dynamic-security-group",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtDynamicSecurityGroupResult> Invoke(GetNsxtDynamicSecurityGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtDynamicSecurityGroupResult>("vcd:index/getNsxtDynamicSecurityGroup:getNsxtDynamicSecurityGroup", args ?? new GetNsxtDynamicSecurityGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.7+* and VCD 10.3+ with NSX-T backed VDC Groups.
        /// 
        /// Provides a data source to read NSX-T Dynamic Security Groups. Dynamic Security Groups group Virtual
        /// Machines based on specific criteria (VM Names or Security tags) to which Distributed Firewall Rules
        /// apply.
        /// 
        /// ## Example Usage
        /// 
        /// ### 1 (Existing Dynamic Security Group Lookup)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var group1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "cloud",
        ///         Name = "vdc-group-cloud",
        ///     });
        /// 
        ///     var group1GetNsxtDynamicSecurityGroup = Vcd.GetNsxtDynamicSecurityGroup.Invoke(new()
        ///     {
        ///         Org = "cloud",
        ///         VdcGroupId = group1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "cloud-dynamic-security-group",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtDynamicSecurityGroupResult> Invoke(GetNsxtDynamicSecurityGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtDynamicSecurityGroupResult>("vcd:index/getNsxtDynamicSecurityGroup:getNsxtDynamicSecurityGroup", args ?? new GetNsxtDynamicSecurityGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtDynamicSecurityGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// A unique name for existing Dynamic Security Group
        /// 
        /// All the arguments and attributes defined in
        /// [`vcd.NsxtDynamicSecurityGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_dynamic_security_group) resource are available.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        /// <summary>
        /// VDC Group ID hosting existing Dynamic Security Group.
        /// </summary>
        [Input("vdcGroupId", required: true)]
        public string VdcGroupId { get; set; } = null!;

        public GetNsxtDynamicSecurityGroupArgs()
        {
        }
        public static new GetNsxtDynamicSecurityGroupArgs Empty => new GetNsxtDynamicSecurityGroupArgs();
    }

    public sealed class GetNsxtDynamicSecurityGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A unique name for existing Dynamic Security Group
        /// 
        /// All the arguments and attributes defined in
        /// [`vcd.NsxtDynamicSecurityGroup`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_dynamic_security_group) resource are available.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organisations.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// VDC Group ID hosting existing Dynamic Security Group.
        /// </summary>
        [Input("vdcGroupId", required: true)]
        public Input<string> VdcGroupId { get; set; } = null!;

        public GetNsxtDynamicSecurityGroupInvokeArgs()
        {
        }
        public static new GetNsxtDynamicSecurityGroupInvokeArgs Empty => new GetNsxtDynamicSecurityGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtDynamicSecurityGroupResult
    {
        public readonly ImmutableArray<Outputs.GetNsxtDynamicSecurityGroupCriteriaResult> Criterias;
        public readonly string? Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetNsxtDynamicSecurityGroupMemberVmResult> MemberVms;
        public readonly string Name;
        public readonly string? Org;
        public readonly string VdcGroupId;

        [OutputConstructor]
        private GetNsxtDynamicSecurityGroupResult(
            ImmutableArray<Outputs.GetNsxtDynamicSecurityGroupCriteriaResult> criterias,

            string? description,

            string id,

            ImmutableArray<Outputs.GetNsxtDynamicSecurityGroupMemberVmResult> memberVms,

            string name,

            string? org,

            string vdcGroupId)
        {
            Criterias = criterias;
            Description = description;
            Id = id;
            MemberVms = memberVms;
            Name = name;
            Org = org;
            VdcGroupId = vdcGroupId;
        }
    }
}
