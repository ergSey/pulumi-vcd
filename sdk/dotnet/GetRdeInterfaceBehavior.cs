// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetRdeInterfaceBehavior
    {
        /// <summary>
        /// Provides the capability of fetching an existing RDE Interface Behavior from VMware Cloud Director.
        /// 
        /// Supported in provider *v3.10+*. Requires System Administrator privileges.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myInterface = Vcd.GetRdeInterface.Invoke(new()
        ///     {
        ///         Vendor = "vmware",
        ///         Nss = "k8s",
        ///         Version = "1.0.0",
        ///     });
        /// 
        ///     var myBehavior = Vcd.GetRdeInterfaceBehavior.Invoke(new()
        ///     {
        ///         RdeInterfaceId = myInterface.Apply(getRdeInterfaceResult =&gt; getRdeInterfaceResult.Id),
        ///         Name = "createKubeConfig",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["executionId"] = myBehavior.Apply(getRdeInterfaceBehaviorResult =&gt; getRdeInterfaceBehaviorResult.Execution?.Id),
        ///         ["executionType"] = myBehavior.Apply(getRdeInterfaceBehaviorResult =&gt; getRdeInterfaceBehaviorResult.Execution?.Type),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetRdeInterfaceBehaviorResult> InvokeAsync(GetRdeInterfaceBehaviorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRdeInterfaceBehaviorResult>("vcd:index/getRdeInterfaceBehavior:getRdeInterfaceBehavior", args ?? new GetRdeInterfaceBehaviorArgs(), options.WithDefaults());

        /// <summary>
        /// Provides the capability of fetching an existing RDE Interface Behavior from VMware Cloud Director.
        /// 
        /// Supported in provider *v3.10+*. Requires System Administrator privileges.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myInterface = Vcd.GetRdeInterface.Invoke(new()
        ///     {
        ///         Vendor = "vmware",
        ///         Nss = "k8s",
        ///         Version = "1.0.0",
        ///     });
        /// 
        ///     var myBehavior = Vcd.GetRdeInterfaceBehavior.Invoke(new()
        ///     {
        ///         RdeInterfaceId = myInterface.Apply(getRdeInterfaceResult =&gt; getRdeInterfaceResult.Id),
        ///         Name = "createKubeConfig",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["executionId"] = myBehavior.Apply(getRdeInterfaceBehaviorResult =&gt; getRdeInterfaceBehaviorResult.Execution?.Id),
        ///         ["executionType"] = myBehavior.Apply(getRdeInterfaceBehaviorResult =&gt; getRdeInterfaceBehaviorResult.Execution?.Type),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetRdeInterfaceBehaviorResult> Invoke(GetRdeInterfaceBehaviorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdeInterfaceBehaviorResult>("vcd:index/getRdeInterfaceBehavior:getRdeInterfaceBehavior", args ?? new GetRdeInterfaceBehaviorInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides the capability of fetching an existing RDE Interface Behavior from VMware Cloud Director.
        /// 
        /// Supported in provider *v3.10+*. Requires System Administrator privileges.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myInterface = Vcd.GetRdeInterface.Invoke(new()
        ///     {
        ///         Vendor = "vmware",
        ///         Nss = "k8s",
        ///         Version = "1.0.0",
        ///     });
        /// 
        ///     var myBehavior = Vcd.GetRdeInterfaceBehavior.Invoke(new()
        ///     {
        ///         RdeInterfaceId = myInterface.Apply(getRdeInterfaceResult =&gt; getRdeInterfaceResult.Id),
        ///         Name = "createKubeConfig",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["executionId"] = myBehavior.Apply(getRdeInterfaceBehaviorResult =&gt; getRdeInterfaceBehaviorResult.Execution?.Id),
        ///         ["executionType"] = myBehavior.Apply(getRdeInterfaceBehaviorResult =&gt; getRdeInterfaceBehaviorResult.Execution?.Type),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetRdeInterfaceBehaviorResult> Invoke(GetRdeInterfaceBehaviorInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdeInterfaceBehaviorResult>("vcd:index/getRdeInterfaceBehavior:getRdeInterfaceBehavior", args ?? new GetRdeInterfaceBehaviorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRdeInterfaceBehaviorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the RDE Interface Behavior to fetch
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the RDE Interface that owns the Behavior to fetch
        /// </summary>
        [Input("rdeInterfaceId", required: true)]
        public string RdeInterfaceId { get; set; } = null!;

        public GetRdeInterfaceBehaviorArgs()
        {
        }
        public static new GetRdeInterfaceBehaviorArgs Empty => new GetRdeInterfaceBehaviorArgs();
    }

    public sealed class GetRdeInterfaceBehaviorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the RDE Interface Behavior to fetch
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the RDE Interface that owns the Behavior to fetch
        /// </summary>
        [Input("rdeInterfaceId", required: true)]
        public Input<string> RdeInterfaceId { get; set; } = null!;

        public GetRdeInterfaceBehaviorInvokeArgs()
        {
        }
        public static new GetRdeInterfaceBehaviorInvokeArgs Empty => new GetRdeInterfaceBehaviorInvokeArgs();
    }


    [OutputType]
    public sealed class GetRdeInterfaceBehaviorResult
    {
        public readonly string Description;
        public readonly ImmutableDictionary<string, string> Execution;
        public readonly string ExecutionJson;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string RdeInterfaceId;
        public readonly string Ref;

        [OutputConstructor]
        private GetRdeInterfaceBehaviorResult(
            string description,

            ImmutableDictionary<string, string> execution,

            string executionJson,

            string id,

            string name,

            string rdeInterfaceId,

            string @ref)
        {
            Description = description;
            Execution = execution;
            ExecutionJson = executionJson;
            Id = id;
            Name = name;
            RdeInterfaceId = rdeInterfaceId;
            Ref = @ref;
        }
    }
}
