// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/apiFilter:ApiFilter")]
    public partial class ApiFilter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the [External Endpoint](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/external_endpoint) where this API Filter will process the requests to
        /// </summary>
        [Output("externalEndpointId")]
        public Output<string> ExternalEndpointId { get; private set; } = null!;

        /// <summary>
        /// Request URL pattern, written as a regular expression. This argument cannot exceed 1024 characters.
        /// In most cases, it should end with `.*` (it is like a suffix) which specifies that all the parts of the URL coming after (like parameters) will be redirected to an external endpoint.
        /// It is important to note that in the case of `url_matcher_scope=EXT_UI_TENANT`, the tenant name is not part of the pattern, it will match the request after the tenant name - if request
        /// is *"/ext-ui/tenant/testOrg/custom/test"*, the pattern will match against */custom/test*
        /// </summary>
        [Output("urlMatcherPattern")]
        public Output<string> UrlMatcherPattern { get; private set; } = null!;

        /// <summary>
        /// Allowed values are `EXT_API`, `EXT_UI_PROVIDER`, `EXT_UI_TENANT` corresponding to
        /// */ext-api*, */ext-ui/provider*, */ext-ui/tenant/&lt;tenant-name&gt;*
        /// </summary>
        [Output("urlMatcherScope")]
        public Output<string> UrlMatcherScope { get; private set; } = null!;


        /// <summary>
        /// Create a ApiFilter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiFilter(string name, ApiFilterArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/apiFilter:ApiFilter", name, args ?? new ApiFilterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiFilter(string name, Input<string> id, ApiFilterState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/apiFilter:ApiFilter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiFilter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiFilter Get(string name, Input<string> id, ApiFilterState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiFilter(name, id, state, options);
        }
    }

    public sealed class ApiFilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the [External Endpoint](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/external_endpoint) where this API Filter will process the requests to
        /// </summary>
        [Input("externalEndpointId", required: true)]
        public Input<string> ExternalEndpointId { get; set; } = null!;

        /// <summary>
        /// Request URL pattern, written as a regular expression. This argument cannot exceed 1024 characters.
        /// In most cases, it should end with `.*` (it is like a suffix) which specifies that all the parts of the URL coming after (like parameters) will be redirected to an external endpoint.
        /// It is important to note that in the case of `url_matcher_scope=EXT_UI_TENANT`, the tenant name is not part of the pattern, it will match the request after the tenant name - if request
        /// is *"/ext-ui/tenant/testOrg/custom/test"*, the pattern will match against */custom/test*
        /// </summary>
        [Input("urlMatcherPattern", required: true)]
        public Input<string> UrlMatcherPattern { get; set; } = null!;

        /// <summary>
        /// Allowed values are `EXT_API`, `EXT_UI_PROVIDER`, `EXT_UI_TENANT` corresponding to
        /// */ext-api*, */ext-ui/provider*, */ext-ui/tenant/&lt;tenant-name&gt;*
        /// </summary>
        [Input("urlMatcherScope", required: true)]
        public Input<string> UrlMatcherScope { get; set; } = null!;

        public ApiFilterArgs()
        {
        }
        public static new ApiFilterArgs Empty => new ApiFilterArgs();
    }

    public sealed class ApiFilterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the [External Endpoint](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/external_endpoint) where this API Filter will process the requests to
        /// </summary>
        [Input("externalEndpointId")]
        public Input<string>? ExternalEndpointId { get; set; }

        /// <summary>
        /// Request URL pattern, written as a regular expression. This argument cannot exceed 1024 characters.
        /// In most cases, it should end with `.*` (it is like a suffix) which specifies that all the parts of the URL coming after (like parameters) will be redirected to an external endpoint.
        /// It is important to note that in the case of `url_matcher_scope=EXT_UI_TENANT`, the tenant name is not part of the pattern, it will match the request after the tenant name - if request
        /// is *"/ext-ui/tenant/testOrg/custom/test"*, the pattern will match against */custom/test*
        /// </summary>
        [Input("urlMatcherPattern")]
        public Input<string>? UrlMatcherPattern { get; set; }

        /// <summary>
        /// Allowed values are `EXT_API`, `EXT_UI_PROVIDER`, `EXT_UI_TENANT` corresponding to
        /// */ext-api*, */ext-ui/provider*, */ext-ui/tenant/&lt;tenant-name&gt;*
        /// </summary>
        [Input("urlMatcherScope")]
        public Input<string>? UrlMatcherScope { get; set; }

        public ApiFilterState()
        {
        }
        public static new ApiFilterState Empty => new ApiFilterState();
    }
}
