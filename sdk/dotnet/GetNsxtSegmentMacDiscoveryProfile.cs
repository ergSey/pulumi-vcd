// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtSegmentMacDiscoveryProfile
    {
        /// <summary>
        /// Provides a VMware Cloud Director NSX-T MAC Discovery Profile data source. This can be used to read NSX-T Segment Profile definitions.
        /// 
        /// Supported in provider *v3.11+*.
        /// 
        /// ## Example Usage
        /// 
        /// ### MAC Discovery Profile)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var nsxt = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxManager1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtSegmentMacDiscoveryProfile.Invoke(new()
        ///     {
        ///         Name = "mac-discovery-profile-0",
        ///         NsxtManagerId = nsxt.Apply(getNsxtManagerResult =&gt; getNsxtManagerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtSegmentMacDiscoveryProfileResult> InvokeAsync(GetNsxtSegmentMacDiscoveryProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtSegmentMacDiscoveryProfileResult>("vcd:index/getNsxtSegmentMacDiscoveryProfile:getNsxtSegmentMacDiscoveryProfile", args ?? new GetNsxtSegmentMacDiscoveryProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a VMware Cloud Director NSX-T MAC Discovery Profile data source. This can be used to read NSX-T Segment Profile definitions.
        /// 
        /// Supported in provider *v3.11+*.
        /// 
        /// ## Example Usage
        /// 
        /// ### MAC Discovery Profile)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var nsxt = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxManager1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtSegmentMacDiscoveryProfile.Invoke(new()
        ///     {
        ///         Name = "mac-discovery-profile-0",
        ///         NsxtManagerId = nsxt.Apply(getNsxtManagerResult =&gt; getNsxtManagerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtSegmentMacDiscoveryProfileResult> Invoke(GetNsxtSegmentMacDiscoveryProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtSegmentMacDiscoveryProfileResult>("vcd:index/getNsxtSegmentMacDiscoveryProfile:getNsxtSegmentMacDiscoveryProfile", args ?? new GetNsxtSegmentMacDiscoveryProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a VMware Cloud Director NSX-T MAC Discovery Profile data source. This can be used to read NSX-T Segment Profile definitions.
        /// 
        /// Supported in provider *v3.11+*.
        /// 
        /// ## Example Usage
        /// 
        /// ### MAC Discovery Profile)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var nsxt = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxManager1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtSegmentMacDiscoveryProfile.Invoke(new()
        ///     {
        ///         Name = "mac-discovery-profile-0",
        ///         NsxtManagerId = nsxt.Apply(getNsxtManagerResult =&gt; getNsxtManagerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtSegmentMacDiscoveryProfileResult> Invoke(GetNsxtSegmentMacDiscoveryProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtSegmentMacDiscoveryProfileResult>("vcd:index/getNsxtSegmentMacDiscoveryProfile:getNsxtSegmentMacDiscoveryProfile", args ?? new GetNsxtSegmentMacDiscoveryProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtSegmentMacDiscoveryProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of Segment Profile
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Segment Profile search context. Use when searching by NSX-T manager
        /// </summary>
        [Input("nsxtManagerId")]
        public string? NsxtManagerId { get; set; }

        /// <summary>
        /// Segment Profile search context. Use when searching by VDC group
        /// 
        /// &gt; Note: only one of `nsxt_manager_id`, `vdc_id`, `vdc_group_id` can be used
        /// </summary>
        [Input("vdcGroupId")]
        public string? VdcGroupId { get; set; }

        /// <summary>
        /// Segment Profile search context. Use when searching by VDC
        /// </summary>
        [Input("vdcId")]
        public string? VdcId { get; set; }

        public GetNsxtSegmentMacDiscoveryProfileArgs()
        {
        }
        public static new GetNsxtSegmentMacDiscoveryProfileArgs Empty => new GetNsxtSegmentMacDiscoveryProfileArgs();
    }

    public sealed class GetNsxtSegmentMacDiscoveryProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of Segment Profile
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Segment Profile search context. Use when searching by NSX-T manager
        /// </summary>
        [Input("nsxtManagerId")]
        public Input<string>? NsxtManagerId { get; set; }

        /// <summary>
        /// Segment Profile search context. Use when searching by VDC group
        /// 
        /// &gt; Note: only one of `nsxt_manager_id`, `vdc_id`, `vdc_group_id` can be used
        /// </summary>
        [Input("vdcGroupId")]
        public Input<string>? VdcGroupId { get; set; }

        /// <summary>
        /// Segment Profile search context. Use when searching by VDC
        /// </summary>
        [Input("vdcId")]
        public Input<string>? VdcId { get; set; }

        public GetNsxtSegmentMacDiscoveryProfileInvokeArgs()
        {
        }
        public static new GetNsxtSegmentMacDiscoveryProfileInvokeArgs Empty => new GetNsxtSegmentMacDiscoveryProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtSegmentMacDiscoveryProfileResult
    {
        /// <summary>
        /// Description of MAC Discovery Profile
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Defines whether source MAC address change is enabled
        /// </summary>
        public readonly bool IsMacChangeEnabled;
        /// <summary>
        /// Defines whether source MAC address learning is enabled
        /// </summary>
        public readonly bool IsMacLearningEnabled;
        /// <summary>
        /// Defines whether unknown unicast flooding rule is enabled
        /// This allows flooding for unlearned MAC for ingress traffic
        /// </summary>
        public readonly bool IsUnknownUnicastFloodingEnabled;
        /// <summary>
        /// Aging time in seconds for learned MAC address. Indicates how long
        /// learned MAC address remain
        /// </summary>
        public readonly int MacLearningAgingTime;
        /// <summary>
        /// The maximum number of MAC addresses that can be learned on this port
        /// </summary>
        public readonly int MacLimit;
        /// <summary>
        /// The policy after MAC Limit is exceeded. It can be either `ALLOW` or `DROP`
        /// </summary>
        public readonly string MacPolicy;
        public readonly string Name;
        public readonly string? NsxtManagerId;
        public readonly string? VdcGroupId;
        public readonly string? VdcId;

        [OutputConstructor]
        private GetNsxtSegmentMacDiscoveryProfileResult(
            string description,

            string id,

            bool isMacChangeEnabled,

            bool isMacLearningEnabled,

            bool isUnknownUnicastFloodingEnabled,

            int macLearningAgingTime,

            int macLimit,

            string macPolicy,

            string name,

            string? nsxtManagerId,

            string? vdcGroupId,

            string? vdcId)
        {
            Description = description;
            Id = id;
            IsMacChangeEnabled = isMacChangeEnabled;
            IsMacLearningEnabled = isMacLearningEnabled;
            IsUnknownUnicastFloodingEnabled = isUnknownUnicastFloodingEnabled;
            MacLearningAgingTime = macLearningAgingTime;
            MacLimit = macLimit;
            MacPolicy = macPolicy;
            Name = name;
            NsxtManagerId = nsxtManagerId;
            VdcGroupId = vdcGroupId;
            VdcId = vdcId;
        }
    }
}
