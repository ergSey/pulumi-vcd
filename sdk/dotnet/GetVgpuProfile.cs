// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetVgpuProfile
    {
        /// <summary>
        /// Supported in provider *3.11* and VCD *10.4.0+*.
        /// 
        /// &gt; **Note:** This data source requires system administrator privileges.
        /// 
        /// Provides a datasource to read vGPU profiles in VMware Cloud Director.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var profile_name = Vcd.GetVgpuProfile.Invoke(new()
        ///     {
        ///         Name = "my-profile",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["profileId"] = profile_name.Apply(profile_name =&gt; profile_name.Apply(getVgpuProfileResult =&gt; getVgpuProfileResult.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetVgpuProfileResult> InvokeAsync(GetVgpuProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVgpuProfileResult>("vcd:index/getVgpuProfile:getVgpuProfile", args ?? new GetVgpuProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *3.11* and VCD *10.4.0+*.
        /// 
        /// &gt; **Note:** This data source requires system administrator privileges.
        /// 
        /// Provides a datasource to read vGPU profiles in VMware Cloud Director.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var profile_name = Vcd.GetVgpuProfile.Invoke(new()
        ///     {
        ///         Name = "my-profile",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["profileId"] = profile_name.Apply(profile_name =&gt; profile_name.Apply(getVgpuProfileResult =&gt; getVgpuProfileResult.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetVgpuProfileResult> Invoke(GetVgpuProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVgpuProfileResult>("vcd:index/getVgpuProfile:getVgpuProfile", args ?? new GetVgpuProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *3.11* and VCD *10.4.0+*.
        /// 
        /// &gt; **Note:** This data source requires system administrator privileges.
        /// 
        /// Provides a datasource to read vGPU profiles in VMware Cloud Director.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var profile_name = Vcd.GetVgpuProfile.Invoke(new()
        ///     {
        ///         Name = "my-profile",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["profileId"] = profile_name.Apply(profile_name =&gt; profile_name.Apply(getVgpuProfileResult =&gt; getVgpuProfileResult.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetVgpuProfileResult> Invoke(GetVgpuProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVgpuProfileResult>("vcd:index/getVgpuProfile:getVgpuProfile", args ?? new GetVgpuProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVgpuProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the vGPU profile.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetVgpuProfileArgs()
        {
        }
        public static new GetVgpuProfileArgs Empty => new GetVgpuProfileArgs();
    }

    public sealed class GetVgpuProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the vGPU profile.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetVgpuProfileInvokeArgs()
        {
        }
        public static new GetVgpuProfileInvokeArgs Empty => new GetVgpuProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetVgpuProfileResult
    {
        /// <summary>
        /// ID of the vGPU profile.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Instructions for the vGPU profile.
        /// </summary>
        public readonly string Instructions;
        public readonly string Name;
        /// <summary>
        /// Tenant facing name of the vGPU profile.
        /// </summary>
        public readonly string TenantFacingName;

        [OutputConstructor]
        private GetVgpuProfileResult(
            string id,

            string instructions,

            string name,

            string tenantFacingName)
        {
            Id = id;
            Instructions = instructions;
            Name = name;
            TenantFacingName = tenantFacingName;
        }
    }
}
