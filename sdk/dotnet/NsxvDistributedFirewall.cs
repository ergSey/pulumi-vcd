// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/nsxvDistributedFirewall:NsxvDistributedFirewall")]
    public partial class NsxvDistributedFirewall : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Shows whether the NSX-V Distributed Firewall is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// One or more blocks with Firewall Rule definitions. **Order
        /// defines firewall rule precedence**. If no rules are defined, all will be removed from the firewall
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.NsxvDistributedFirewallRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// The ID of VDC to manage the Distributed Firewall in. Can be looked up using a `vcd.OrgVdc` data source
        /// </summary>
        [Output("vdcId")]
        public Output<string> VdcId { get; private set; } = null!;


        /// <summary>
        /// Create a NsxvDistributedFirewall resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NsxvDistributedFirewall(string name, NsxvDistributedFirewallArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/nsxvDistributedFirewall:NsxvDistributedFirewall", name, args ?? new NsxvDistributedFirewallArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NsxvDistributedFirewall(string name, Input<string> id, NsxvDistributedFirewallState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/nsxvDistributedFirewall:NsxvDistributedFirewall", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NsxvDistributedFirewall resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NsxvDistributedFirewall Get(string name, Input<string> id, NsxvDistributedFirewallState? state = null, CustomResourceOptions? options = null)
        {
            return new NsxvDistributedFirewall(name, id, state, options);
        }
    }

    public sealed class NsxvDistributedFirewallArgs : global::Pulumi.ResourceArgs
    {
        [Input("rules")]
        private InputList<Inputs.NsxvDistributedFirewallRuleArgs>? _rules;

        /// <summary>
        /// One or more blocks with Firewall Rule definitions. **Order
        /// defines firewall rule precedence**. If no rules are defined, all will be removed from the firewall
        /// </summary>
        public InputList<Inputs.NsxvDistributedFirewallRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.NsxvDistributedFirewallRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The ID of VDC to manage the Distributed Firewall in. Can be looked up using a `vcd.OrgVdc` data source
        /// </summary>
        [Input("vdcId", required: true)]
        public Input<string> VdcId { get; set; } = null!;

        public NsxvDistributedFirewallArgs()
        {
        }
        public static new NsxvDistributedFirewallArgs Empty => new NsxvDistributedFirewallArgs();
    }

    public sealed class NsxvDistributedFirewallState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Shows whether the NSX-V Distributed Firewall is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("rules")]
        private InputList<Inputs.NsxvDistributedFirewallRuleGetArgs>? _rules;

        /// <summary>
        /// One or more blocks with Firewall Rule definitions. **Order
        /// defines firewall rule precedence**. If no rules are defined, all will be removed from the firewall
        /// </summary>
        public InputList<Inputs.NsxvDistributedFirewallRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.NsxvDistributedFirewallRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The ID of VDC to manage the Distributed Firewall in. Can be looked up using a `vcd.OrgVdc` data source
        /// </summary>
        [Input("vdcId")]
        public Input<string>? VdcId { get; set; }

        public NsxvDistributedFirewallState()
        {
        }
        public static new NsxvDistributedFirewallState Empty => new NsxvDistributedFirewallState();
    }
}
