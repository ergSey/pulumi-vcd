// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/externalEndpoint:ExternalEndpoint")]
    public partial class ExternalEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the External Endpoint
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
        /// It is `false` by default
        /// </summary>
        [Output("disableOnRemoval")]
        public Output<bool?> DisableOnRemoval { get; private set; } = null!;

        /// <summary>
        /// Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
        /// To disable it automatically on removal, set `disable_on_removal=true` (see below)
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The endpoint which requests will be redirected to. Must use HTTPS protocol
        /// </summary>
        [Output("rootUrl")]
        public Output<string> RootUrl { get; private set; } = null!;

        /// <summary>
        /// The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
        /// </summary>
        [Output("vendor")]
        public Output<string> Vendor { get; private set; } = null!;

        /// <summary>
        /// The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ExternalEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExternalEndpoint(string name, ExternalEndpointArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/externalEndpoint:ExternalEndpoint", name, args ?? new ExternalEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExternalEndpoint(string name, Input<string> id, ExternalEndpointState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/externalEndpoint:ExternalEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExternalEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExternalEndpoint Get(string name, Input<string> id, ExternalEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new ExternalEndpoint(name, id, state, options);
        }
    }

    public sealed class ExternalEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the External Endpoint
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
        /// It is `false` by default
        /// </summary>
        [Input("disableOnRemoval")]
        public Input<bool>? DisableOnRemoval { get; set; }

        /// <summary>
        /// Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
        /// To disable it automatically on removal, set `disable_on_removal=true` (see below)
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The endpoint which requests will be redirected to. Must use HTTPS protocol
        /// </summary>
        [Input("rootUrl", required: true)]
        public Input<string> RootUrl { get; set; } = null!;

        /// <summary>
        /// The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
        /// </summary>
        [Input("vendor", required: true)]
        public Input<string> Vendor { get; set; } = null!;

        /// <summary>
        /// The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public ExternalEndpointArgs()
        {
        }
        public static new ExternalEndpointArgs Empty => new ExternalEndpointArgs();
    }

    public sealed class ExternalEndpointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the External Endpoint
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether the External Endpoint should be disabled before a delete operation, to flawlessly remove it even if it is enabled.
        /// It is `false` by default
        /// </summary>
        [Input("disableOnRemoval")]
        public Input<bool>? DisableOnRemoval { get; set; }

        /// <summary>
        /// Whether the External Endpoint is enabled or not. **Must be `false` before removing this resource**, otherwise deletion will fail.
        /// To disable it automatically on removal, set `disable_on_removal=true` (see below)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The endpoint which requests will be redirected to. Must use HTTPS protocol
        /// </summary>
        [Input("rootUrl")]
        public Input<string>? RootUrl { get; set; }

        /// <summary>
        /// The vendor name of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
        /// </summary>
        [Input("vendor")]
        public Input<string>? Vendor { get; set; }

        /// <summary>
        /// The version of the External Endpoint. The combination of `vendor` + `name` + `version` must be unique. Can't be modified after creation
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ExternalEndpointState()
        {
        }
        public static new ExternalEndpointState Empty => new ExternalEndpointState();
    }
}
