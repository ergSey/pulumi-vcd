// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetVmGroup
    {
        /// <summary>
        /// Provides a VMware Cloud Director VM Group data source. This can be used to fetch vSphere VM Groups and create VM Placement Policies with them.
        /// 
        /// Supported in provider *v3.8+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_vdc = Vcd.GetProviderVdc.Invoke(new()
        ///     {
        ///         Name = "my-pvdc",
        ///     });
        /// 
        ///     var vm_group = Vcd.GetVmGroup.Invoke(new()
        ///     {
        ///         Name = "vmware-license-group",
        ///         ProviderVdcId = my_vdc.Apply(getProviderVdcResult =&gt; getProviderVdcResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Attributes reference
        /// 
        /// * `cluster_name` - Name of the vSphere cluster associated to this VM Group.
        /// * `named_vm_group_id` - ID of the named VM Group. Used to create Logical VM Groups.
        /// * `vcenter_id` - ID of the vCenter server.
        /// * `cluster_moref` - Managed object reference of the vSphere cluster associated to this VM Group.
        /// </summary>
        public static Task<GetVmGroupResult> InvokeAsync(GetVmGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVmGroupResult>("vcd:index/getVmGroup:getVmGroup", args ?? new GetVmGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a VMware Cloud Director VM Group data source. This can be used to fetch vSphere VM Groups and create VM Placement Policies with them.
        /// 
        /// Supported in provider *v3.8+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_vdc = Vcd.GetProviderVdc.Invoke(new()
        ///     {
        ///         Name = "my-pvdc",
        ///     });
        /// 
        ///     var vm_group = Vcd.GetVmGroup.Invoke(new()
        ///     {
        ///         Name = "vmware-license-group",
        ///         ProviderVdcId = my_vdc.Apply(getProviderVdcResult =&gt; getProviderVdcResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Attributes reference
        /// 
        /// * `cluster_name` - Name of the vSphere cluster associated to this VM Group.
        /// * `named_vm_group_id` - ID of the named VM Group. Used to create Logical VM Groups.
        /// * `vcenter_id` - ID of the vCenter server.
        /// * `cluster_moref` - Managed object reference of the vSphere cluster associated to this VM Group.
        /// </summary>
        public static Output<GetVmGroupResult> Invoke(GetVmGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVmGroupResult>("vcd:index/getVmGroup:getVmGroup", args ?? new GetVmGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a VMware Cloud Director VM Group data source. This can be used to fetch vSphere VM Groups and create VM Placement Policies with them.
        /// 
        /// Supported in provider *v3.8+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_vdc = Vcd.GetProviderVdc.Invoke(new()
        ///     {
        ///         Name = "my-pvdc",
        ///     });
        /// 
        ///     var vm_group = Vcd.GetVmGroup.Invoke(new()
        ///     {
        ///         Name = "vmware-license-group",
        ///         ProviderVdcId = my_vdc.Apply(getProviderVdcResult =&gt; getProviderVdcResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Attributes reference
        /// 
        /// * `cluster_name` - Name of the vSphere cluster associated to this VM Group.
        /// * `named_vm_group_id` - ID of the named VM Group. Used to create Logical VM Groups.
        /// * `vcenter_id` - ID of the vCenter server.
        /// * `cluster_moref` - Managed object reference of the vSphere cluster associated to this VM Group.
        /// </summary>
        public static Output<GetVmGroupResult> Invoke(GetVmGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVmGroupResult>("vcd:index/getVmGroup:getVmGroup", args ?? new GetVmGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVmGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of VM Group to fetch from vSphere.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of [Provider VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc) to which the VM Group belongs.
        /// </summary>
        [Input("providerVdcId", required: true)]
        public string ProviderVdcId { get; set; } = null!;

        public GetVmGroupArgs()
        {
        }
        public static new GetVmGroupArgs Empty => new GetVmGroupArgs();
    }

    public sealed class GetVmGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of VM Group to fetch from vSphere.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of [Provider VDC](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/provider_vdc) to which the VM Group belongs.
        /// </summary>
        [Input("providerVdcId", required: true)]
        public Input<string> ProviderVdcId { get; set; } = null!;

        public GetVmGroupInvokeArgs()
        {
        }
        public static new GetVmGroupInvokeArgs Empty => new GetVmGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetVmGroupResult
    {
        public readonly string ClusterMoref;
        public readonly string ClusterName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string NamedVmGroupId;
        public readonly string ProviderVdcId;
        public readonly string VcenterId;

        [OutputConstructor]
        private GetVmGroupResult(
            string clusterMoref,

            string clusterName,

            string id,

            string name,

            string namedVmGroupId,

            string providerVdcId,

            string vcenterId)
        {
            ClusterMoref = clusterMoref;
            ClusterName = clusterName;
            Id = id;
            Name = name;
            NamedVmGroupId = namedVmGroupId;
            ProviderVdcId = providerVdcId;
            VcenterId = vcenterId;
        }
    }
}
