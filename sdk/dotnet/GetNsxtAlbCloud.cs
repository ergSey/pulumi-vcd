// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtAlbCloud
    {
        /// <summary>
        /// Supported in provider *v3.4+* and VCD 10.2+ with NSX-T and ALB.
        /// 
        /// Provides a data source to manage ALB Clouds for Providers. An NSX-T Cloud is a service provider-level construct that
        /// consists of an NSX-T Manager and an NSX-T Data Center transport zone.
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// &gt; VCD 10.3.0 has a caching bug which prevents listing importable clouds immediately (retrieved using
        /// [`vcd.getNsxtAlbImportableCloud`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_importable_cloud)) after ALB
        /// Controller is created. This data should be available 15 minutes after the Controller is created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtAlbCloud.Invoke(new()
        ///     {
        ///         Name = "cloud-one",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtAlbCloudResult> InvokeAsync(GetNsxtAlbCloudArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtAlbCloudResult>("vcd:index/getNsxtAlbCloud:getNsxtAlbCloud", args ?? new GetNsxtAlbCloudArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.4+* and VCD 10.2+ with NSX-T and ALB.
        /// 
        /// Provides a data source to manage ALB Clouds for Providers. An NSX-T Cloud is a service provider-level construct that
        /// consists of an NSX-T Manager and an NSX-T Data Center transport zone.
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// &gt; VCD 10.3.0 has a caching bug which prevents listing importable clouds immediately (retrieved using
        /// [`vcd.getNsxtAlbImportableCloud`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_importable_cloud)) after ALB
        /// Controller is created. This data should be available 15 minutes after the Controller is created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtAlbCloud.Invoke(new()
        ///     {
        ///         Name = "cloud-one",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtAlbCloudResult> Invoke(GetNsxtAlbCloudInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtAlbCloudResult>("vcd:index/getNsxtAlbCloud:getNsxtAlbCloud", args ?? new GetNsxtAlbCloudInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.4+* and VCD 10.2+ with NSX-T and ALB.
        /// 
        /// Provides a data source to manage ALB Clouds for Providers. An NSX-T Cloud is a service provider-level construct that
        /// consists of an NSX-T Manager and an NSX-T Data Center transport zone.
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// &gt; VCD 10.3.0 has a caching bug which prevents listing importable clouds immediately (retrieved using
        /// [`vcd.getNsxtAlbImportableCloud`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_importable_cloud)) after ALB
        /// Controller is created. This data should be available 15 minutes after the Controller is created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtAlbCloud.Invoke(new()
        ///     {
        ///         Name = "cloud-one",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtAlbCloudResult> Invoke(GetNsxtAlbCloudInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtAlbCloudResult>("vcd:index/getNsxtAlbCloud:getNsxtAlbCloud", args ?? new GetNsxtAlbCloudInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtAlbCloudArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of ALB Cloud
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetNsxtAlbCloudArgs()
        {
        }
        public static new GetNsxtAlbCloudArgs Empty => new GetNsxtAlbCloudArgs();
    }

    public sealed class GetNsxtAlbCloudInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of ALB Cloud
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetNsxtAlbCloudInvokeArgs()
        {
        }
        public static new GetNsxtAlbCloudInvokeArgs Empty => new GetNsxtAlbCloudInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtAlbCloudResult
    {
        public readonly string ControllerId;
        public readonly string Description;
        public readonly string HealthMessage;
        public readonly string HealthStatus;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ImportableCloudId;
        public readonly string Name;
        public readonly string NetworkPoolId;
        public readonly string NetworkPoolName;

        [OutputConstructor]
        private GetNsxtAlbCloudResult(
            string controllerId,

            string description,

            string healthMessage,

            string healthStatus,

            string id,

            string importableCloudId,

            string name,

            string networkPoolId,

            string networkPoolName)
        {
            ControllerId = controllerId;
            Description = description;
            HealthMessage = healthMessage;
            HealthStatus = healthStatus;
            Id = id;
            ImportableCloudId = importableCloudId;
            Name = name;
            NetworkPoolId = networkPoolId;
            NetworkPoolName = networkPoolName;
        }
    }
}
