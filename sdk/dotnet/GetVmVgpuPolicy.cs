// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetVmVgpuPolicy
    {
        /// <summary>
        /// Experimental in provider *3.11*.
        /// 
        /// Provides a data source to read vGPU policies in VMware Cloud Director.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var tf_policy_name = Vcd.GetVmVgpuPolicy.Invoke(new()
        ///     {
        ///         Name = "my-rule",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["policyId"] = tf_policy_name.Apply(tf_policy_name =&gt; tf_policy_name.Apply(getVmVgpuPolicyResult =&gt; getVmVgpuPolicyResult.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetVmVgpuPolicyResult> InvokeAsync(GetVmVgpuPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVmVgpuPolicyResult>("vcd:index/getVmVgpuPolicy:getVmVgpuPolicy", args ?? new GetVmVgpuPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Experimental in provider *3.11*.
        /// 
        /// Provides a data source to read vGPU policies in VMware Cloud Director.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var tf_policy_name = Vcd.GetVmVgpuPolicy.Invoke(new()
        ///     {
        ///         Name = "my-rule",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["policyId"] = tf_policy_name.Apply(tf_policy_name =&gt; tf_policy_name.Apply(getVmVgpuPolicyResult =&gt; getVmVgpuPolicyResult.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetVmVgpuPolicyResult> Invoke(GetVmVgpuPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVmVgpuPolicyResult>("vcd:index/getVmVgpuPolicy:getVmVgpuPolicy", args ?? new GetVmVgpuPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Experimental in provider *3.11*.
        /// 
        /// Provides a data source to read vGPU policies in VMware Cloud Director.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var tf_policy_name = Vcd.GetVmVgpuPolicy.Invoke(new()
        ///     {
        ///         Name = "my-rule",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["policyId"] = tf_policy_name.Apply(tf_policy_name =&gt; tf_policy_name.Apply(getVmVgpuPolicyResult =&gt; getVmVgpuPolicyResult.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetVmVgpuPolicyResult> Invoke(GetVmVgpuPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVmVgpuPolicyResult>("vcd:index/getVmVgpuPolicy:getVmVgpuPolicy", args ?? new GetVmVgpuPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVmVgpuPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the VM vGPU policy.
        /// 
        /// All arguments defined in [`vcd.VmVgpuPolicy`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vm_vgpu_policy#argument-reference) are supported.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetVmVgpuPolicyArgs()
        {
        }
        public static new GetVmVgpuPolicyArgs Empty => new GetVmVgpuPolicyArgs();
    }

    public sealed class GetVmVgpuPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the VM vGPU policy.
        /// 
        /// All arguments defined in [`vcd.VmVgpuPolicy`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/vm_vgpu_policy#argument-reference) are supported.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetVmVgpuPolicyInvokeArgs()
        {
        }
        public static new GetVmVgpuPolicyInvokeArgs Empty => new GetVmVgpuPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetVmVgpuPolicyResult
    {
        public readonly ImmutableArray<Outputs.GetVmVgpuPolicyCpusResult> Cpus;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetVmVgpuPolicyMemoryResult> Memories;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetVmVgpuPolicyProviderVdcScopeResult> ProviderVdcScopes;
        public readonly ImmutableArray<Outputs.GetVmVgpuPolicyVgpuProfileResult> VgpuProfiles;

        [OutputConstructor]
        private GetVmVgpuPolicyResult(
            ImmutableArray<Outputs.GetVmVgpuPolicyCpusResult> cpus,

            string description,

            string id,

            ImmutableArray<Outputs.GetVmVgpuPolicyMemoryResult> memories,

            string name,

            ImmutableArray<Outputs.GetVmVgpuPolicyProviderVdcScopeResult> providerVdcScopes,

            ImmutableArray<Outputs.GetVmVgpuPolicyVgpuProfileResult> vgpuProfiles)
        {
            Cpus = cpus;
            Description = description;
            Id = id;
            Memories = memories;
            Name = name;
            ProviderVdcScopes = providerVdcScopes;
            VgpuProfiles = vgpuProfiles;
        }
    }
}
