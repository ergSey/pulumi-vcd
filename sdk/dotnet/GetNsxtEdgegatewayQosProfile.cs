// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtEdgegatewayQosProfile
    {
        /// <summary>
        /// Supported in provider *v3.9+* and VCD 10.3.2+ with NSX-T.
        /// 
        /// Provides a data source to read NSX-T Edge Gateway QoS profiles, which can be used to modify NSX-T
        /// Edge Gateway Rate Limiting (QoS) configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxt-manager-name",
        ///     });
        /// 
        ///     var qos_1 = Vcd.GetNsxtEdgegatewayQosProfile.Invoke(new()
        ///     {
        ///         NsxtManagerId = firstNsxtManagerId.Id,
        ///         Name = "qos-profile-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtEdgegatewayQosProfileResult> InvokeAsync(GetNsxtEdgegatewayQosProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtEdgegatewayQosProfileResult>("vcd:index/getNsxtEdgegatewayQosProfile:getNsxtEdgegatewayQosProfile", args ?? new GetNsxtEdgegatewayQosProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.9+* and VCD 10.3.2+ with NSX-T.
        /// 
        /// Provides a data source to read NSX-T Edge Gateway QoS profiles, which can be used to modify NSX-T
        /// Edge Gateway Rate Limiting (QoS) configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxt-manager-name",
        ///     });
        /// 
        ///     var qos_1 = Vcd.GetNsxtEdgegatewayQosProfile.Invoke(new()
        ///     {
        ///         NsxtManagerId = firstNsxtManagerId.Id,
        ///         Name = "qos-profile-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtEdgegatewayQosProfileResult> Invoke(GetNsxtEdgegatewayQosProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtEdgegatewayQosProfileResult>("vcd:index/getNsxtEdgegatewayQosProfile:getNsxtEdgegatewayQosProfile", args ?? new GetNsxtEdgegatewayQosProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.9+* and VCD 10.3.2+ with NSX-T.
        /// 
        /// Provides a data source to read NSX-T Edge Gateway QoS profiles, which can be used to modify NSX-T
        /// Edge Gateway Rate Limiting (QoS) configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxt-manager-name",
        ///     });
        /// 
        ///     var qos_1 = Vcd.GetNsxtEdgegatewayQosProfile.Invoke(new()
        ///     {
        ///         NsxtManagerId = firstNsxtManagerId.Id,
        ///         Name = "qos-profile-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtEdgegatewayQosProfileResult> Invoke(GetNsxtEdgegatewayQosProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtEdgegatewayQosProfileResult>("vcd:index/getNsxtEdgegatewayQosProfile:getNsxtEdgegatewayQosProfile", args ?? new GetNsxtEdgegatewayQosProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtEdgegatewayQosProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// QoS Profile Name
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// NSX-T Manager where the QoS profile is defined in (can be looked up
        /// using `vcd.getNsxtManager` data source)
        /// </summary>
        [Input("nsxtManagerId", required: true)]
        public string NsxtManagerId { get; set; } = null!;

        public GetNsxtEdgegatewayQosProfileArgs()
        {
        }
        public static new GetNsxtEdgegatewayQosProfileArgs Empty => new GetNsxtEdgegatewayQosProfileArgs();
    }

    public sealed class GetNsxtEdgegatewayQosProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// QoS Profile Name
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// NSX-T Manager where the QoS profile is defined in (can be looked up
        /// using `vcd.getNsxtManager` data source)
        /// </summary>
        [Input("nsxtManagerId", required: true)]
        public Input<string> NsxtManagerId { get; set; } = null!;

        public GetNsxtEdgegatewayQosProfileInvokeArgs()
        {
        }
        public static new GetNsxtEdgegatewayQosProfileInvokeArgs Empty => new GetNsxtEdgegatewayQosProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtEdgegatewayQosProfileResult
    {
        /// <summary>
        /// Burst size defined in bytes
        /// </summary>
        public readonly int BurstSize;
        /// <summary>
        /// Committed bandwith specificd in Mb/s
        /// </summary>
        public readonly int CommittedBandwidth;
        /// <summary>
        /// Description of QoS Profile
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Excess action defines action on traffic exceeding bandwidth
        /// </summary>
        public readonly string ExcessAction;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string NsxtManagerId;

        [OutputConstructor]
        private GetNsxtEdgegatewayQosProfileResult(
            int burstSize,

            int committedBandwidth,

            string description,

            string excessAction,

            string id,

            string name,

            string nsxtManagerId)
        {
            BurstSize = burstSize;
            CommittedBandwidth = committedBandwidth;
            Description = description;
            ExcessAction = excessAction;
            Id = id;
            Name = name;
            NsxtManagerId = nsxtManagerId;
        }
    }
}
