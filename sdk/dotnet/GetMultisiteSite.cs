// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetMultisiteSite
    {
        /// <summary>
        /// Provides a data source to read a VMware Cloud Director Site in the context of multi-site operatioos
        /// 
        /// Supported in provider *v3.13+*
        /// 
        /// &gt; Note: this data source requires System Administrator privileges
        /// 
        /// ## Example Usage
        /// 
        /// Note: there is only one site available for each VCD. No ID or name is necessary to identify it.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var currentSite = Vcd.GetMultisiteSite.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ## More information
        /// 
        /// See [Site and Org association](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/site_org_association) for a broader description
        /// of association workflows.
        /// </summary>
        public static Task<GetMultisiteSiteResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMultisiteSiteResult>("vcd:index/getMultisiteSite:getMultisiteSite", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Provides a data source to read a VMware Cloud Director Site in the context of multi-site operatioos
        /// 
        /// Supported in provider *v3.13+*
        /// 
        /// &gt; Note: this data source requires System Administrator privileges
        /// 
        /// ## Example Usage
        /// 
        /// Note: there is only one site available for each VCD. No ID or name is necessary to identify it.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var currentSite = Vcd.GetMultisiteSite.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ## More information
        /// 
        /// See [Site and Org association](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/site_org_association) for a broader description
        /// of association workflows.
        /// </summary>
        public static Output<GetMultisiteSiteResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMultisiteSiteResult>("vcd:index/getMultisiteSite:getMultisiteSite", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Provides a data source to read a VMware Cloud Director Site in the context of multi-site operatioos
        /// 
        /// Supported in provider *v3.13+*
        /// 
        /// &gt; Note: this data source requires System Administrator privileges
        /// 
        /// ## Example Usage
        /// 
        /// Note: there is only one site available for each VCD. No ID or name is necessary to identify it.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var currentSite = Vcd.GetMultisiteSite.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ## More information
        /// 
        /// See [Site and Org association](https://www.terraform.io/providers/vmware/vcd/latest/docs/guides/site_org_association) for a broader description
        /// of association workflows.
        /// </summary>
        public static Output<GetMultisiteSiteResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMultisiteSiteResult>("vcd:index/getMultisiteSite:getMultisiteSite", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetMultisiteSiteResult
    {
        /// <summary>
        /// An alphabetically sorted list of current associations.
        /// </summary>
        public readonly ImmutableArray<string> Associations;
        /// <summary>
        /// An optional description of the site.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the site, which usually corresponds to its host name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The number of current associations with other sites.
        /// </summary>
        public readonly int NumberOfAssociations;

        [OutputConstructor]
        private GetMultisiteSiteResult(
            ImmutableArray<string> associations,

            string description,

            string id,

            string name,

            int numberOfAssociations)
        {
            Associations = associations;
            Description = description;
            Id = id;
            Name = name;
            NumberOfAssociations = numberOfAssociations;
        }
    }
}
