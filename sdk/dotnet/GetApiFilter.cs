// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetApiFilter
    {
        /// <summary>
        /// Supported in provider *v3.14+* and VCD 10.4.3+.
        /// 
        /// Provides a data source to read API Filters in VMware Cloud Director. An API Filter allows to extend VCD API with customised URLs
        /// that can be redirected to an [`vcd.ExternalEndpoint`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/external_endpoint).
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var apiFilter1 = Vcd.GetApiFilter.Invoke(new()
        ///     {
        ///         ApiFilterId = "urn:vcloud:apiFilter:4252ab09-eed8-4bc6-86d7-6019090273f5",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApiFilterResult> InvokeAsync(GetApiFilterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiFilterResult>("vcd:index/getApiFilter:getApiFilter", args ?? new GetApiFilterArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.14+* and VCD 10.4.3+.
        /// 
        /// Provides a data source to read API Filters in VMware Cloud Director. An API Filter allows to extend VCD API with customised URLs
        /// that can be redirected to an [`vcd.ExternalEndpoint`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/external_endpoint).
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var apiFilter1 = Vcd.GetApiFilter.Invoke(new()
        ///     {
        ///         ApiFilterId = "urn:vcloud:apiFilter:4252ab09-eed8-4bc6-86d7-6019090273f5",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiFilterResult> Invoke(GetApiFilterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiFilterResult>("vcd:index/getApiFilter:getApiFilter", args ?? new GetApiFilterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.14+* and VCD 10.4.3+.
        /// 
        /// Provides a data source to read API Filters in VMware Cloud Director. An API Filter allows to extend VCD API with customised URLs
        /// that can be redirected to an [`vcd.ExternalEndpoint`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/external_endpoint).
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var apiFilter1 = Vcd.GetApiFilter.Invoke(new()
        ///     {
        ///         ApiFilterId = "urn:vcloud:apiFilter:4252ab09-eed8-4bc6-86d7-6019090273f5",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiFilterResult> Invoke(GetApiFilterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiFilterResult>("vcd:index/getApiFilter:getApiFilter", args ?? new GetApiFilterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiFilterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the API Filter. This is the only way of unequivocally identify an API Filter. A list of
        /// available API Filters can be obtained by using the `list@` option of the import mechanism of the [resource](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/api_filter#importing)
        /// </summary>
        [Input("apiFilterId", required: true)]
        public string ApiFilterId { get; set; } = null!;

        public GetApiFilterArgs()
        {
        }
        public static new GetApiFilterArgs Empty => new GetApiFilterArgs();
    }

    public sealed class GetApiFilterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the API Filter. This is the only way of unequivocally identify an API Filter. A list of
        /// available API Filters can be obtained by using the `list@` option of the import mechanism of the [resource](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/api_filter#importing)
        /// </summary>
        [Input("apiFilterId", required: true)]
        public Input<string> ApiFilterId { get; set; } = null!;

        public GetApiFilterInvokeArgs()
        {
        }
        public static new GetApiFilterInvokeArgs Empty => new GetApiFilterInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiFilterResult
    {
        public readonly string ApiFilterId;
        public readonly string ExternalEndpointId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string UrlMatcherPattern;
        public readonly string UrlMatcherScope;

        [OutputConstructor]
        private GetApiFilterResult(
            string apiFilterId,

            string externalEndpointId,

            string id,

            string urlMatcherPattern,

            string urlMatcherScope)
        {
            ApiFilterId = apiFilterId;
            ExternalEndpointId = externalEndpointId;
            Id = id;
            UrlMatcherPattern = urlMatcherPattern;
            UrlMatcherScope = urlMatcherScope;
        }
    }
}
