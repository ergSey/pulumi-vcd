// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtAlbController
    {
        /// <summary>
        /// Supported in provider *v3.4+* and VCD 10.2+ with NSX-T and ALB.
        /// 
        /// Provides a data source to read ALB Controller for Providers. It helps to integrate VMware Cloud Director with
        /// Avi Load Balancer deployment. Controller instances are registered with VMware Cloud Director instance.
        /// Controller instances serve as a central control plane for the load-balancing services provided by Avi Load
        /// Balancer.
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// &gt; VCD 10.3.0 has a caching bug which prevents listing importable clouds immediately (retrieved using
        /// [`vcd.getNsxtAlbImportableCloud`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_importable_cloud)) after ALB
        /// Controller is created. This data should be available 15 minutes after the Controller is created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtAlbController.Invoke(new()
        ///     {
        ///         Name = "avi controller",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtAlbControllerResult> InvokeAsync(GetNsxtAlbControllerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtAlbControllerResult>("vcd:index/getNsxtAlbController:getNsxtAlbController", args ?? new GetNsxtAlbControllerArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.4+* and VCD 10.2+ with NSX-T and ALB.
        /// 
        /// Provides a data source to read ALB Controller for Providers. It helps to integrate VMware Cloud Director with
        /// Avi Load Balancer deployment. Controller instances are registered with VMware Cloud Director instance.
        /// Controller instances serve as a central control plane for the load-balancing services provided by Avi Load
        /// Balancer.
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// &gt; VCD 10.3.0 has a caching bug which prevents listing importable clouds immediately (retrieved using
        /// [`vcd.getNsxtAlbImportableCloud`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_importable_cloud)) after ALB
        /// Controller is created. This data should be available 15 minutes after the Controller is created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtAlbController.Invoke(new()
        ///     {
        ///         Name = "avi controller",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtAlbControllerResult> Invoke(GetNsxtAlbControllerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtAlbControllerResult>("vcd:index/getNsxtAlbController:getNsxtAlbController", args ?? new GetNsxtAlbControllerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.4+* and VCD 10.2+ with NSX-T and ALB.
        /// 
        /// Provides a data source to read ALB Controller for Providers. It helps to integrate VMware Cloud Director with
        /// Avi Load Balancer deployment. Controller instances are registered with VMware Cloud Director instance.
        /// Controller instances serve as a central control plane for the load-balancing services provided by Avi Load
        /// Balancer.
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// &gt; VCD 10.3.0 has a caching bug which prevents listing importable clouds immediately (retrieved using
        /// [`vcd.getNsxtAlbImportableCloud`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_importable_cloud)) after ALB
        /// Controller is created. This data should be available 15 minutes after the Controller is created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtAlbController.Invoke(new()
        ///     {
        ///         Name = "avi controller",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtAlbControllerResult> Invoke(GetNsxtAlbControllerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtAlbControllerResult>("vcd:index/getNsxtAlbController:getNsxtAlbController", args ?? new GetNsxtAlbControllerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtAlbControllerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique name of existing ALB Controller.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetNsxtAlbControllerArgs()
        {
        }
        public static new GetNsxtAlbControllerArgs Empty => new GetNsxtAlbControllerArgs();
    }

    public sealed class GetNsxtAlbControllerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique name of existing ALB Controller.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetNsxtAlbControllerInvokeArgs()
        {
        }
        public static new GetNsxtAlbControllerInvokeArgs Empty => new GetNsxtAlbControllerInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtAlbControllerResult
    {
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LicenseType;
        public readonly string Name;
        public readonly string Url;
        public readonly string Username;
        public readonly string Version;

        [OutputConstructor]
        private GetNsxtAlbControllerResult(
            string description,

            string id,

            string licenseType,

            string name,

            string url,

            string username,

            string version)
        {
            Description = description;
            Id = id;
            LicenseType = licenseType;
            Name = name;
            Url = url;
            Username = username;
            Version = version;
        }
    }
}
