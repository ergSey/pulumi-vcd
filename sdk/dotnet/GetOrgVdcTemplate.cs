// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetOrgVdcTemplate
    {
        /// <summary>
        /// Provides a data source to read Organization VDC Templates from VMware Cloud Director.
        /// Can be used by System Administrators or tenants, only if the template is published in that tenant.
        /// 
        /// Supported in provider *v3.13+*
        /// 
        /// &gt; VDC Templates that do not use NSX-T can be read, but may be missing some details.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Vcd.GetOrgVdcTemplate.Invoke(new()
        ///     {
        ///         Name = "myTemplate",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// &gt; Note that when using the data source as a tenant, `name` is the VDC Template name as seen by tenants
        /// </summary>
        public static Task<GetOrgVdcTemplateResult> InvokeAsync(GetOrgVdcTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrgVdcTemplateResult>("vcd:index/getOrgVdcTemplate:getOrgVdcTemplate", args ?? new GetOrgVdcTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source to read Organization VDC Templates from VMware Cloud Director.
        /// Can be used by System Administrators or tenants, only if the template is published in that tenant.
        /// 
        /// Supported in provider *v3.13+*
        /// 
        /// &gt; VDC Templates that do not use NSX-T can be read, but may be missing some details.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Vcd.GetOrgVdcTemplate.Invoke(new()
        ///     {
        ///         Name = "myTemplate",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// &gt; Note that when using the data source as a tenant, `name` is the VDC Template name as seen by tenants
        /// </summary>
        public static Output<GetOrgVdcTemplateResult> Invoke(GetOrgVdcTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrgVdcTemplateResult>("vcd:index/getOrgVdcTemplate:getOrgVdcTemplate", args ?? new GetOrgVdcTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source to read Organization VDC Templates from VMware Cloud Director.
        /// Can be used by System Administrators or tenants, only if the template is published in that tenant.
        /// 
        /// Supported in provider *v3.13+*
        /// 
        /// &gt; VDC Templates that do not use NSX-T can be read, but may be missing some details.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Vcd.GetOrgVdcTemplate.Invoke(new()
        ///     {
        ///         Name = "myTemplate",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// &gt; Note that when using the data source as a tenant, `name` is the VDC Template name as seen by tenants
        /// </summary>
        public static Output<GetOrgVdcTemplateResult> Invoke(GetOrgVdcTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrgVdcTemplateResult>("vcd:index/getOrgVdcTemplate:getOrgVdcTemplate", args ?? new GetOrgVdcTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrgVdcTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the existing Organization VDC Template to read
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetOrgVdcTemplateArgs()
        {
        }
        public static new GetOrgVdcTemplateArgs Empty => new GetOrgVdcTemplateArgs();
    }

    public sealed class GetOrgVdcTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the existing Organization VDC Template to read
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetOrgVdcTemplateInvokeArgs()
        {
        }
        public static new GetOrgVdcTemplateInvokeArgs Empty => new GetOrgVdcTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrgVdcTemplateResult
    {
        public readonly string AllocationModel;
        public readonly ImmutableArray<Outputs.GetOrgVdcTemplateComputeConfigurationResult> ComputeConfigurations;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetOrgVdcTemplateEdgeGatewayResult> EdgeGateways;
        public readonly bool EnableFastProvisioning;
        public readonly bool EnableThinProvisioning;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string NetworkPoolId;
        public readonly int NicQuota;
        public readonly ImmutableArray<Outputs.GetOrgVdcTemplateProviderVdcResult> ProviderVdcs;
        public readonly int ProvisionedNetworkQuota;
        public readonly ImmutableArray<string> ReadableByOrgIds;
        public readonly ImmutableArray<Outputs.GetOrgVdcTemplateStorageProfileResult> StorageProfiles;
        public readonly string TenantDescription;
        public readonly string TenantName;
        public readonly int VmQuota;

        [OutputConstructor]
        private GetOrgVdcTemplateResult(
            string allocationModel,

            ImmutableArray<Outputs.GetOrgVdcTemplateComputeConfigurationResult> computeConfigurations,

            string description,

            ImmutableArray<Outputs.GetOrgVdcTemplateEdgeGatewayResult> edgeGateways,

            bool enableFastProvisioning,

            bool enableThinProvisioning,

            string id,

            string name,

            string networkPoolId,

            int nicQuota,

            ImmutableArray<Outputs.GetOrgVdcTemplateProviderVdcResult> providerVdcs,

            int provisionedNetworkQuota,

            ImmutableArray<string> readableByOrgIds,

            ImmutableArray<Outputs.GetOrgVdcTemplateStorageProfileResult> storageProfiles,

            string tenantDescription,

            string tenantName,

            int vmQuota)
        {
            AllocationModel = allocationModel;
            ComputeConfigurations = computeConfigurations;
            Description = description;
            EdgeGateways = edgeGateways;
            EnableFastProvisioning = enableFastProvisioning;
            EnableThinProvisioning = enableThinProvisioning;
            Id = id;
            Name = name;
            NetworkPoolId = networkPoolId;
            NicQuota = nicQuota;
            ProviderVdcs = providerVdcs;
            ProvisionedNetworkQuota = provisionedNetworkQuota;
            ReadableByOrgIds = readableByOrgIds;
            StorageProfiles = storageProfiles;
            TenantDescription = tenantDescription;
            TenantName = tenantName;
            VmQuota = vmQuota;
        }
    }
}
