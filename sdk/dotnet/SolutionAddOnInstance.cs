// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/solutionAddOnInstance:SolutionAddOnInstance")]
    public partial class SolutionAddOnInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Solution Add-On Instance cannot be create if EULA is not accepted.
        /// Supplying a `false` value will print EULA.
        /// </summary>
        [Output("acceptEula")]
        public Output<bool> AcceptEula { get; private set; } = null!;

        /// <summary>
        /// Existing Solution Add-On ID
        /// [`vcd.SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
        /// </summary>
        [Output("addOnId")]
        public Output<string> AddOnId { get; private set; } = null!;

        /// <summary>
        /// Just like `input` field for creation, it is a map of keys and values
        /// as required for removal of a particular Solution Add-On. It will require all values that are
        /// specified in a particular Add-On schema unless `validate_only_required_inputs=true` is set. Missing
        /// a value will print an error message with all field descriptions and missing value. Update is a no-op
        /// operation
        /// </summary>
        [Output("deleteInput")]
        public Output<ImmutableDictionary<string, string>?> DeleteInput { get; private set; } = null!;

        /// <summary>
        /// A map of keys and values as required for a particular Solution Add-On
        /// Instance. It will require all values that are specified in a particular Add-On schema unless
        /// `validate_only_required_inputs=true` is set. Missing a value will print an error message with all
        /// field descriptions and missing value.
        /// </summary>
        [Output("input")]
        public Output<ImmutableDictionary<string, string>?> Input { get; private set; } = null!;

        /// <summary>
        /// Name of Solution Add-On Instance
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// reports the state of parent [Runtime Defined
        /// Entity](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)
        /// </summary>
        [Output("rdeState")]
        public Output<string> RdeState { get; private set; } = null!;

        /// <summary>
        /// By default (`false`) will check that all fields are
        /// defined in `input` and `delete_input` fields. It will only validate fields that are marked as
        /// required when set to `true`. Update is a noop that will affect further operation.
        /// </summary>
        [Output("validateOnlyRequiredInputs")]
        public Output<bool?> ValidateOnlyRequiredInputs { get; private set; } = null!;


        /// <summary>
        /// Create a SolutionAddOnInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SolutionAddOnInstance(string name, SolutionAddOnInstanceArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/solutionAddOnInstance:SolutionAddOnInstance", name, args ?? new SolutionAddOnInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SolutionAddOnInstance(string name, Input<string> id, SolutionAddOnInstanceState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/solutionAddOnInstance:SolutionAddOnInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SolutionAddOnInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SolutionAddOnInstance Get(string name, Input<string> id, SolutionAddOnInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new SolutionAddOnInstance(name, id, state, options);
        }
    }

    public sealed class SolutionAddOnInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Solution Add-On Instance cannot be create if EULA is not accepted.
        /// Supplying a `false` value will print EULA.
        /// </summary>
        [Input("acceptEula", required: true)]
        public Input<bool> AcceptEula { get; set; } = null!;

        /// <summary>
        /// Existing Solution Add-On ID
        /// [`vcd.SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
        /// </summary>
        [Input("addOnId", required: true)]
        public Input<string> AddOnId { get; set; } = null!;

        [Input("deleteInput")]
        private InputMap<string>? _deleteInput;

        /// <summary>
        /// Just like `input` field for creation, it is a map of keys and values
        /// as required for removal of a particular Solution Add-On. It will require all values that are
        /// specified in a particular Add-On schema unless `validate_only_required_inputs=true` is set. Missing
        /// a value will print an error message with all field descriptions and missing value. Update is a no-op
        /// operation
        /// </summary>
        public InputMap<string> DeleteInput
        {
            get => _deleteInput ?? (_deleteInput = new InputMap<string>());
            set => _deleteInput = value;
        }

        [Input("input")]
        private InputMap<string>? _input;

        /// <summary>
        /// A map of keys and values as required for a particular Solution Add-On
        /// Instance. It will require all values that are specified in a particular Add-On schema unless
        /// `validate_only_required_inputs=true` is set. Missing a value will print an error message with all
        /// field descriptions and missing value.
        /// </summary>
        public InputMap<string> Input
        {
            get => _input ?? (_input = new InputMap<string>());
            set => _input = value;
        }

        /// <summary>
        /// Name of Solution Add-On Instance
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// By default (`false`) will check that all fields are
        /// defined in `input` and `delete_input` fields. It will only validate fields that are marked as
        /// required when set to `true`. Update is a noop that will affect further operation.
        /// </summary>
        [Input("validateOnlyRequiredInputs")]
        public Input<bool>? ValidateOnlyRequiredInputs { get; set; }

        public SolutionAddOnInstanceArgs()
        {
        }
        public static new SolutionAddOnInstanceArgs Empty => new SolutionAddOnInstanceArgs();
    }

    public sealed class SolutionAddOnInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Solution Add-On Instance cannot be create if EULA is not accepted.
        /// Supplying a `false` value will print EULA.
        /// </summary>
        [Input("acceptEula")]
        public Input<bool>? AcceptEula { get; set; }

        /// <summary>
        /// Existing Solution Add-On ID
        /// [`vcd.SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
        /// </summary>
        [Input("addOnId")]
        public Input<string>? AddOnId { get; set; }

        [Input("deleteInput")]
        private InputMap<string>? _deleteInput;

        /// <summary>
        /// Just like `input` field for creation, it is a map of keys and values
        /// as required for removal of a particular Solution Add-On. It will require all values that are
        /// specified in a particular Add-On schema unless `validate_only_required_inputs=true` is set. Missing
        /// a value will print an error message with all field descriptions and missing value. Update is a no-op
        /// operation
        /// </summary>
        public InputMap<string> DeleteInput
        {
            get => _deleteInput ?? (_deleteInput = new InputMap<string>());
            set => _deleteInput = value;
        }

        [Input("input")]
        private InputMap<string>? _input;

        /// <summary>
        /// A map of keys and values as required for a particular Solution Add-On
        /// Instance. It will require all values that are specified in a particular Add-On schema unless
        /// `validate_only_required_inputs=true` is set. Missing a value will print an error message with all
        /// field descriptions and missing value.
        /// </summary>
        public InputMap<string> Input
        {
            get => _input ?? (_input = new InputMap<string>());
            set => _input = value;
        }

        /// <summary>
        /// Name of Solution Add-On Instance
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// reports the state of parent [Runtime Defined
        /// Entity](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)
        /// </summary>
        [Input("rdeState")]
        public Input<string>? RdeState { get; set; }

        /// <summary>
        /// By default (`false`) will check that all fields are
        /// defined in `input` and `delete_input` fields. It will only validate fields that are marked as
        /// required when set to `true`. Update is a noop that will affect further operation.
        /// </summary>
        [Input("validateOnlyRequiredInputs")]
        public Input<bool>? ValidateOnlyRequiredInputs { get; set; }

        public SolutionAddOnInstanceState()
        {
        }
        public static new SolutionAddOnInstanceState Empty => new SolutionAddOnInstanceState();
    }
}
