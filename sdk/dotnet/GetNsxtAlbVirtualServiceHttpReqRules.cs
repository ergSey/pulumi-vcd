// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtAlbVirtualServiceHttpReqRules
    {
        /// <summary>
        /// Supported in provider *v3.14+* and VCD 10.5+ with NSX-T and ALB.
        /// 
        /// Provides a data source to read ALB Service Engine Groups policies for HTTP requests. HTTP request 
        /// rules modify requests before they are either forwarded to the application, used as a basis for 
        /// content switching, or discarded.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var request_rules = Vcd.GetNsxtAlbVirtualServiceHttpReqRules.Invoke(new()
        ///     {
        ///         VirtualServiceId = test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtAlbVirtualServiceHttpReqRulesResult> InvokeAsync(GetNsxtAlbVirtualServiceHttpReqRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtAlbVirtualServiceHttpReqRulesResult>("vcd:index/getNsxtAlbVirtualServiceHttpReqRules:getNsxtAlbVirtualServiceHttpReqRules", args ?? new GetNsxtAlbVirtualServiceHttpReqRulesArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.14+* and VCD 10.5+ with NSX-T and ALB.
        /// 
        /// Provides a data source to read ALB Service Engine Groups policies for HTTP requests. HTTP request 
        /// rules modify requests before they are either forwarded to the application, used as a basis for 
        /// content switching, or discarded.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var request_rules = Vcd.GetNsxtAlbVirtualServiceHttpReqRules.Invoke(new()
        ///     {
        ///         VirtualServiceId = test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtAlbVirtualServiceHttpReqRulesResult> Invoke(GetNsxtAlbVirtualServiceHttpReqRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtAlbVirtualServiceHttpReqRulesResult>("vcd:index/getNsxtAlbVirtualServiceHttpReqRules:getNsxtAlbVirtualServiceHttpReqRules", args ?? new GetNsxtAlbVirtualServiceHttpReqRulesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.14+* and VCD 10.5+ with NSX-T and ALB.
        /// 
        /// Provides a data source to read ALB Service Engine Groups policies for HTTP requests. HTTP request 
        /// rules modify requests before they are either forwarded to the application, used as a basis for 
        /// content switching, or discarded.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var request_rules = Vcd.GetNsxtAlbVirtualServiceHttpReqRules.Invoke(new()
        ///     {
        ///         VirtualServiceId = test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtAlbVirtualServiceHttpReqRulesResult> Invoke(GetNsxtAlbVirtualServiceHttpReqRulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtAlbVirtualServiceHttpReqRulesResult>("vcd:index/getNsxtAlbVirtualServiceHttpReqRules:getNsxtAlbVirtualServiceHttpReqRules", args ?? new GetNsxtAlbVirtualServiceHttpReqRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtAlbVirtualServiceHttpReqRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An ID of existing ALB Virtual Service.
        /// </summary>
        [Input("virtualServiceId", required: true)]
        public string VirtualServiceId { get; set; } = null!;

        public GetNsxtAlbVirtualServiceHttpReqRulesArgs()
        {
        }
        public static new GetNsxtAlbVirtualServiceHttpReqRulesArgs Empty => new GetNsxtAlbVirtualServiceHttpReqRulesArgs();
    }

    public sealed class GetNsxtAlbVirtualServiceHttpReqRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An ID of existing ALB Virtual Service.
        /// </summary>
        [Input("virtualServiceId", required: true)]
        public Input<string> VirtualServiceId { get; set; } = null!;

        public GetNsxtAlbVirtualServiceHttpReqRulesInvokeArgs()
        {
        }
        public static new GetNsxtAlbVirtualServiceHttpReqRulesInvokeArgs Empty => new GetNsxtAlbVirtualServiceHttpReqRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtAlbVirtualServiceHttpReqRulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetNsxtAlbVirtualServiceHttpReqRulesRuleResult> Rules;
        public readonly string VirtualServiceId;

        [OutputConstructor]
        private GetNsxtAlbVirtualServiceHttpReqRulesResult(
            string id,

            ImmutableArray<Outputs.GetNsxtAlbVirtualServiceHttpReqRulesRuleResult> rules,

            string virtualServiceId)
        {
            Id = id;
            Rules = rules;
            VirtualServiceId = virtualServiceId;
        }
    }
}
