// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtTier0Router
    {
        /// <summary>
        /// Provides a data source for available NSX-T Tier-0 routers.
        /// 
        /// Supported in provider *v3.0+*
        /// 
        /// &gt; **Note:** This resource uses new VMware Cloud Director
        /// [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
        /// requires at least VCD *10.1.1+* and NSX-T *3.0+*.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxt-manager-one",
        ///     });
        /// 
        ///     var router = Vcd.GetNsxtTier0Router.Invoke(new()
        ///     {
        ///         Name = "nsxt-tier0-router",
        ///         NsxtManagerId = main.Apply(getNsxtManagerResult =&gt; getNsxtManagerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtTier0RouterResult> InvokeAsync(GetNsxtTier0RouterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtTier0RouterResult>("vcd:index/getNsxtTier0Router:getNsxtTier0Router", args ?? new GetNsxtTier0RouterArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source for available NSX-T Tier-0 routers.
        /// 
        /// Supported in provider *v3.0+*
        /// 
        /// &gt; **Note:** This resource uses new VMware Cloud Director
        /// [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
        /// requires at least VCD *10.1.1+* and NSX-T *3.0+*.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxt-manager-one",
        ///     });
        /// 
        ///     var router = Vcd.GetNsxtTier0Router.Invoke(new()
        ///     {
        ///         Name = "nsxt-tier0-router",
        ///         NsxtManagerId = main.Apply(getNsxtManagerResult =&gt; getNsxtManagerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtTier0RouterResult> Invoke(GetNsxtTier0RouterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtTier0RouterResult>("vcd:index/getNsxtTier0Router:getNsxtTier0Router", args ?? new GetNsxtTier0RouterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source for available NSX-T Tier-0 routers.
        /// 
        /// Supported in provider *v3.0+*
        /// 
        /// &gt; **Note:** This resource uses new VMware Cloud Director
        /// [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
        /// requires at least VCD *10.1.1+* and NSX-T *3.0+*.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxt-manager-one",
        ///     });
        /// 
        ///     var router = Vcd.GetNsxtTier0Router.Invoke(new()
        ///     {
        ///         Name = "nsxt-tier0-router",
        ///         NsxtManagerId = main.Apply(getNsxtManagerResult =&gt; getNsxtManagerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtTier0RouterResult> Invoke(GetNsxtTier0RouterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtTier0RouterResult>("vcd:index/getNsxtTier0Router:getNsxtTier0Router", args ?? new GetNsxtTier0RouterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtTier0RouterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T Tier-0 router name. **Note**. Tier-0 router name must be unique inside NSX-T manager because
        /// API does not allow to filter by other fields.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// NSX-T manager should be referenced.
        /// </summary>
        [Input("nsxtManagerId", required: true)]
        public string NsxtManagerId { get; set; } = null!;

        public GetNsxtTier0RouterArgs()
        {
        }
        public static new GetNsxtTier0RouterArgs Empty => new GetNsxtTier0RouterArgs();
    }

    public sealed class GetNsxtTier0RouterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T Tier-0 router name. **Note**. Tier-0 router name must be unique inside NSX-T manager because
        /// API does not allow to filter by other fields.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// NSX-T manager should be referenced.
        /// </summary>
        [Input("nsxtManagerId", required: true)]
        public Input<string> NsxtManagerId { get; set; } = null!;

        public GetNsxtTier0RouterInvokeArgs()
        {
        }
        public static new GetNsxtTier0RouterInvokeArgs Empty => new GetNsxtTier0RouterInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtTier0RouterResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Boolean value reflecting if Tier-0 router is already consumed by external network.
        /// </summary>
        public readonly bool IsAssigned;
        public readonly string Name;
        public readonly string NsxtManagerId;

        [OutputConstructor]
        private GetNsxtTier0RouterResult(
            string id,

            bool isAssigned,

            string name,

            string nsxtManagerId)
        {
            Id = id;
            IsAssigned = isAssigned;
            Name = name;
            NsxtManagerId = nsxtManagerId;
        }
    }
}
