// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/edgegatewaySettings:EdgegatewaySettings")]
    public partial class EdgegatewaySettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The edge gateway ID. (Required if `edge_gateway_name` is not set)
        /// </summary>
        [Output("edgeGatewayId")]
        public Output<string> EdgeGatewayId { get; private set; } = null!;

        /// <summary>
        /// A unique name for the edge gateway. (Required if `edge_gateway_id` is not set)
        /// </summary>
        [Output("edgeGatewayName")]
        public Output<string> EdgeGatewayName { get; private set; } = null!;

        /// <summary>
        /// Default firewall rule (last in the processing order) action.
        /// One of `accept` or `deny`. Default `deny`.
        /// </summary>
        [Output("fwDefaultRuleAction")]
        public Output<string?> FwDefaultRuleAction { get; private set; } = null!;

        /// <summary>
        /// Enable default firewall rule (last in the processing 
        /// order) logging. Default `false`.
        /// </summary>
        [Output("fwDefaultRuleLoggingEnabled")]
        public Output<bool?> FwDefaultRuleLoggingEnabled { get; private set; } = null!;

        /// <summary>
        /// Enable firewall. Default `true`.
        /// </summary>
        [Output("fwEnabled")]
        public Output<bool?> FwEnabled { get; private set; } = null!;

        /// <summary>
        /// Enable to configure the load balancer.
        /// </summary>
        [Output("lbAccelerationEnabled")]
        public Output<bool?> LbAccelerationEnabled { get; private set; } = null!;

        /// <summary>
        /// Enable load balancing. Default is `false`.
        /// </summary>
        [Output("lbEnabled")]
        public Output<bool?> LbEnabled { get; private set; } = null!;

        /// <summary>
        /// Enables the edge gateway load balancer to collect traffic logs.
        /// Default is `false`. Note: **only System administrators can change this property**. It is ignored by API for Org users.
        /// </summary>
        [Output("lbLoggingEnabled")]
        public Output<bool?> LbLoggingEnabled { get; private set; } = null!;

        /// <summary>
        /// Choose the severity of events to be logged. One of `emergency`,
        /// `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`. Note: **only System administrators can change this property**. It is ignored by API for Org users.
        /// </summary>
        [Output("lbLoglevel")]
        public Output<string?> LbLoglevel { get; private set; } = null!;

        /// <summary>
        /// The name of organization to which the VDC belongs. Optional if defined at provider level.
        /// </summary>
        [Output("org")]
        public Output<string?> Org { get; private set; } = null!;

        /// <summary>
        /// The name of VDC that owns the edge gateway. Optional if defined at provider level.
        /// </summary>
        [Output("vdc")]
        public Output<string?> Vdc { get; private set; } = null!;


        /// <summary>
        /// Create a EdgegatewaySettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgegatewaySettings(string name, EdgegatewaySettingsArgs? args = null, CustomResourceOptions? options = null)
            : base("vcd:index/edgegatewaySettings:EdgegatewaySettings", name, args ?? new EdgegatewaySettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgegatewaySettings(string name, Input<string> id, EdgegatewaySettingsState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/edgegatewaySettings:EdgegatewaySettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgegatewaySettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgegatewaySettings Get(string name, Input<string> id, EdgegatewaySettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgegatewaySettings(name, id, state, options);
        }
    }

    public sealed class EdgegatewaySettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The edge gateway ID. (Required if `edge_gateway_name` is not set)
        /// </summary>
        [Input("edgeGatewayId")]
        public Input<string>? EdgeGatewayId { get; set; }

        /// <summary>
        /// A unique name for the edge gateway. (Required if `edge_gateway_id` is not set)
        /// </summary>
        [Input("edgeGatewayName")]
        public Input<string>? EdgeGatewayName { get; set; }

        /// <summary>
        /// Default firewall rule (last in the processing order) action.
        /// One of `accept` or `deny`. Default `deny`.
        /// </summary>
        [Input("fwDefaultRuleAction")]
        public Input<string>? FwDefaultRuleAction { get; set; }

        /// <summary>
        /// Enable default firewall rule (last in the processing 
        /// order) logging. Default `false`.
        /// </summary>
        [Input("fwDefaultRuleLoggingEnabled")]
        public Input<bool>? FwDefaultRuleLoggingEnabled { get; set; }

        /// <summary>
        /// Enable firewall. Default `true`.
        /// </summary>
        [Input("fwEnabled")]
        public Input<bool>? FwEnabled { get; set; }

        /// <summary>
        /// Enable to configure the load balancer.
        /// </summary>
        [Input("lbAccelerationEnabled")]
        public Input<bool>? LbAccelerationEnabled { get; set; }

        /// <summary>
        /// Enable load balancing. Default is `false`.
        /// </summary>
        [Input("lbEnabled")]
        public Input<bool>? LbEnabled { get; set; }

        /// <summary>
        /// Enables the edge gateway load balancer to collect traffic logs.
        /// Default is `false`. Note: **only System administrators can change this property**. It is ignored by API for Org users.
        /// </summary>
        [Input("lbLoggingEnabled")]
        public Input<bool>? LbLoggingEnabled { get; set; }

        /// <summary>
        /// Choose the severity of events to be logged. One of `emergency`,
        /// `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`. Note: **only System administrators can change this property**. It is ignored by API for Org users.
        /// </summary>
        [Input("lbLoglevel")]
        public Input<string>? LbLoglevel { get; set; }

        /// <summary>
        /// The name of organization to which the VDC belongs. Optional if defined at provider level.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// The name of VDC that owns the edge gateway. Optional if defined at provider level.
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public EdgegatewaySettingsArgs()
        {
        }
        public static new EdgegatewaySettingsArgs Empty => new EdgegatewaySettingsArgs();
    }

    public sealed class EdgegatewaySettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The edge gateway ID. (Required if `edge_gateway_name` is not set)
        /// </summary>
        [Input("edgeGatewayId")]
        public Input<string>? EdgeGatewayId { get; set; }

        /// <summary>
        /// A unique name for the edge gateway. (Required if `edge_gateway_id` is not set)
        /// </summary>
        [Input("edgeGatewayName")]
        public Input<string>? EdgeGatewayName { get; set; }

        /// <summary>
        /// Default firewall rule (last in the processing order) action.
        /// One of `accept` or `deny`. Default `deny`.
        /// </summary>
        [Input("fwDefaultRuleAction")]
        public Input<string>? FwDefaultRuleAction { get; set; }

        /// <summary>
        /// Enable default firewall rule (last in the processing 
        /// order) logging. Default `false`.
        /// </summary>
        [Input("fwDefaultRuleLoggingEnabled")]
        public Input<bool>? FwDefaultRuleLoggingEnabled { get; set; }

        /// <summary>
        /// Enable firewall. Default `true`.
        /// </summary>
        [Input("fwEnabled")]
        public Input<bool>? FwEnabled { get; set; }

        /// <summary>
        /// Enable to configure the load balancer.
        /// </summary>
        [Input("lbAccelerationEnabled")]
        public Input<bool>? LbAccelerationEnabled { get; set; }

        /// <summary>
        /// Enable load balancing. Default is `false`.
        /// </summary>
        [Input("lbEnabled")]
        public Input<bool>? LbEnabled { get; set; }

        /// <summary>
        /// Enables the edge gateway load balancer to collect traffic logs.
        /// Default is `false`. Note: **only System administrators can change this property**. It is ignored by API for Org users.
        /// </summary>
        [Input("lbLoggingEnabled")]
        public Input<bool>? LbLoggingEnabled { get; set; }

        /// <summary>
        /// Choose the severity of events to be logged. One of `emergency`,
        /// `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`. Note: **only System administrators can change this property**. It is ignored by API for Org users.
        /// </summary>
        [Input("lbLoglevel")]
        public Input<string>? LbLoglevel { get; set; }

        /// <summary>
        /// The name of organization to which the VDC belongs. Optional if defined at provider level.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// The name of VDC that owns the edge gateway. Optional if defined at provider level.
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public EdgegatewaySettingsState()
        {
        }
        public static new EdgegatewaySettingsState Empty => new EdgegatewaySettingsState();
    }
}
