// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtAlbVirtualServiceHttpRespRules
    {
        /// <summary>
        /// Supported in provider *v3.14+* and VCD 10.5+ with NSX-T and ALB.
        /// 
        /// Provides a data source to read ALB Service Engine Groups policies for HTTP responses. HTTP response 
        /// rules can be used to to evaluate and modify the response and response attributes that the
        /// application returns.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var response_rules = Vcd.GetNsxtAlbVirtualServiceHttpRespRules.Invoke(new()
        ///     {
        ///         VirtualServiceId = test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtAlbVirtualServiceHttpRespRulesResult> InvokeAsync(GetNsxtAlbVirtualServiceHttpRespRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtAlbVirtualServiceHttpRespRulesResult>("vcd:index/getNsxtAlbVirtualServiceHttpRespRules:getNsxtAlbVirtualServiceHttpRespRules", args ?? new GetNsxtAlbVirtualServiceHttpRespRulesArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.14+* and VCD 10.5+ with NSX-T and ALB.
        /// 
        /// Provides a data source to read ALB Service Engine Groups policies for HTTP responses. HTTP response 
        /// rules can be used to to evaluate and modify the response and response attributes that the
        /// application returns.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var response_rules = Vcd.GetNsxtAlbVirtualServiceHttpRespRules.Invoke(new()
        ///     {
        ///         VirtualServiceId = test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtAlbVirtualServiceHttpRespRulesResult> Invoke(GetNsxtAlbVirtualServiceHttpRespRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtAlbVirtualServiceHttpRespRulesResult>("vcd:index/getNsxtAlbVirtualServiceHttpRespRules:getNsxtAlbVirtualServiceHttpRespRules", args ?? new GetNsxtAlbVirtualServiceHttpRespRulesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.14+* and VCD 10.5+ with NSX-T and ALB.
        /// 
        /// Provides a data source to read ALB Service Engine Groups policies for HTTP responses. HTTP response 
        /// rules can be used to to evaluate and modify the response and response attributes that the
        /// application returns.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var response_rules = Vcd.GetNsxtAlbVirtualServiceHttpRespRules.Invoke(new()
        ///     {
        ///         VirtualServiceId = test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtAlbVirtualServiceHttpRespRulesResult> Invoke(GetNsxtAlbVirtualServiceHttpRespRulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtAlbVirtualServiceHttpRespRulesResult>("vcd:index/getNsxtAlbVirtualServiceHttpRespRules:getNsxtAlbVirtualServiceHttpRespRules", args ?? new GetNsxtAlbVirtualServiceHttpRespRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtAlbVirtualServiceHttpRespRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An ID of existing ALB Virtual Service.
        /// </summary>
        [Input("virtualServiceId", required: true)]
        public string VirtualServiceId { get; set; } = null!;

        public GetNsxtAlbVirtualServiceHttpRespRulesArgs()
        {
        }
        public static new GetNsxtAlbVirtualServiceHttpRespRulesArgs Empty => new GetNsxtAlbVirtualServiceHttpRespRulesArgs();
    }

    public sealed class GetNsxtAlbVirtualServiceHttpRespRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An ID of existing ALB Virtual Service.
        /// </summary>
        [Input("virtualServiceId", required: true)]
        public Input<string> VirtualServiceId { get; set; } = null!;

        public GetNsxtAlbVirtualServiceHttpRespRulesInvokeArgs()
        {
        }
        public static new GetNsxtAlbVirtualServiceHttpRespRulesInvokeArgs Empty => new GetNsxtAlbVirtualServiceHttpRespRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtAlbVirtualServiceHttpRespRulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetNsxtAlbVirtualServiceHttpRespRulesRuleResult> Rules;
        public readonly string VirtualServiceId;

        [OutputConstructor]
        private GetNsxtAlbVirtualServiceHttpRespRulesResult(
            string id,

            ImmutableArray<Outputs.GetNsxtAlbVirtualServiceHttpRespRulesRuleResult> rules,

            string virtualServiceId)
        {
            Id = id;
            Rules = rules;
            VirtualServiceId = virtualServiceId;
        }
    }
}
