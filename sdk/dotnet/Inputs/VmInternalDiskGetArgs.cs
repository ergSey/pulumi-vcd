// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd.Inputs
{

    public sealed class VmInternalDiskGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of the SCSI or IDE controller itself.
        /// </summary>
        [Input("busNumber")]
        public Input<int>? BusNumber { get; set; }

        /// <summary>
        /// The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
        /// </summary>
        [Input("busType")]
        public Input<string>? BusType { get; set; }

        /// <summary>
        /// The disk ID.
        /// </summary>
        [Input("diskId")]
        public Input<string>? DiskId { get; set; }

        /// <summary>
        /// Specifies the IOPS for the disk. Default is 0.
        /// </summary>
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        /// <summary>
        /// The size of the disk in MB.
        /// </summary>
        [Input("sizeInMb")]
        public Input<int>? SizeInMb { get; set; }

        /// <summary>
        /// Storage profile to override the VM default one
        /// </summary>
        [Input("storageProfile")]
        public Input<string>? StorageProfile { get; set; }

        /// <summary>
        /// Specifies whether the disk storage is pre-allocated or allocated on demand.
        /// </summary>
        [Input("thinProvisioned")]
        public Input<bool>? ThinProvisioned { get; set; }

        /// <summary>
        /// The device number on the SCSI or IDE controller of the disk.
        /// </summary>
        [Input("unitNumber")]
        public Input<int>? UnitNumber { get; set; }

        public VmInternalDiskGetArgs()
        {
        }
        public static new VmInternalDiskGetArgs Empty => new VmInternalDiskGetArgs();
    }
}
