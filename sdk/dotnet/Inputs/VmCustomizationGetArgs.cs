// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd.Inputs
{

    public sealed class VmCustomizationGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("adminPassword")]
        private Input<string>? _adminPassword;

        /// <summary>
        /// Manually specify admin password
        /// </summary>
        public Input<string>? AdminPassword
        {
            get => _adminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _adminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Allow local administrator password
        /// </summary>
        [Input("allowLocalAdminPassword")]
        public Input<bool>? AllowLocalAdminPassword { get; set; }

        /// <summary>
        /// Auto generate password
        /// </summary>
        [Input("autoGeneratePassword")]
        public Input<bool>? AutoGeneratePassword { get; set; }

        /// <summary>
        /// 'true' value will change SID. Applicable only for Windows VMs
        /// </summary>
        [Input("changeSid")]
        public Input<bool>? ChangeSid { get; set; }

        /// <summary>
        /// 'true' value will enable guest customization. It may occur on first boot or when 'force' is used
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// 'true' value will cause the VM to reboot on every 'apply' operation
        /// </summary>
        [Input("force")]
        public Input<bool>? Force { get; set; }

        /// <summary>
        /// Script to run on initial boot or with customization.force=true set
        /// </summary>
        [Input("initscript")]
        public Input<string>? Initscript { get; set; }

        /// <summary>
        /// Enable this VM to join a domain
        /// </summary>
        [Input("joinDomain")]
        public Input<bool>? JoinDomain { get; set; }

        /// <summary>
        /// Account organizational unit for domain name join
        /// </summary>
        [Input("joinDomainAccountOu")]
        public Input<string>? JoinDomainAccountOu { get; set; }

        /// <summary>
        /// Custom domain name for join
        /// </summary>
        [Input("joinDomainName")]
        public Input<string>? JoinDomainName { get; set; }

        [Input("joinDomainPassword")]
        private Input<string>? _joinDomainPassword;

        /// <summary>
        /// Password for custom domain name join
        /// </summary>
        public Input<string>? JoinDomainPassword
        {
            get => _joinDomainPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _joinDomainPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Username for custom domain name join
        /// </summary>
        [Input("joinDomainUser")]
        public Input<string>? JoinDomainUser { get; set; }

        /// <summary>
        /// Use organization's domain for joining
        /// </summary>
        [Input("joinOrgDomain")]
        public Input<bool>? JoinOrgDomain { get; set; }

        /// <summary>
        /// Require Administrator to change password on first login
        /// </summary>
        [Input("mustChangePasswordOnFirstLogin")]
        public Input<bool>? MustChangePasswordOnFirstLogin { get; set; }

        /// <summary>
        /// Number of times to log on automatically. '0' - disabled.
        /// </summary>
        [Input("numberOfAutoLogons")]
        public Input<int>? NumberOfAutoLogons { get; set; }

        public VmCustomizationGetArgs()
        {
        }
        public static new VmCustomizationGetArgs Empty => new VmCustomizationGetArgs();
    }
}
