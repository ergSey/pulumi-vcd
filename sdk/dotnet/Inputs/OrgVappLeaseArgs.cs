// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd.Inputs
{

    public sealed class OrgVappLeaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted.
        /// </summary>
        [Input("deleteOnStorageLeaseExpiration", required: true)]
        public Input<bool> DeleteOnStorageLeaseExpiration { get; set; } = null!;

        /// <summary>
        /// How long vApps can run before they are automatically stopped (in seconds). 0 means never expires
        /// </summary>
        [Input("maximumRuntimeLeaseInSec", required: true)]
        public Input<int> MaximumRuntimeLeaseInSec { get; set; } = null!;

        /// <summary>
        /// How long stopped vApps are available before being automatically cleaned up (in seconds). 0 means never expires
        /// </summary>
        [Input("maximumStorageLeaseInSec", required: true)]
        public Input<int> MaximumStorageLeaseInSec { get; set; } = null!;

        /// <summary>
        /// When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires
        /// </summary>
        [Input("powerOffOnRuntimeLeaseExpiration", required: true)]
        public Input<bool> PowerOffOnRuntimeLeaseExpiration { get; set; } = null!;

        public OrgVappLeaseArgs()
        {
        }
        public static new OrgVappLeaseArgs Empty => new OrgVappLeaseArgs();
    }
}
