// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd.Inputs
{

    public sealed class NsxvDistributedFirewallRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action of the rule (allow, deny)
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        [Input("applications")]
        private InputList<Inputs.NsxvDistributedFirewallRuleApplicationArgs>? _applications;

        /// <summary>
        /// Application definitions for this rule. An empty value means 'any'
        /// </summary>
        public InputList<Inputs.NsxvDistributedFirewallRuleApplicationArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.NsxvDistributedFirewallRuleApplicationArgs>());
            set => _applications = value;
        }

        [Input("appliedTos", required: true)]
        private InputList<Inputs.NsxvDistributedFirewallRuleAppliedToArgs>? _appliedTos;

        /// <summary>
        /// List of elements to which this rule applies
        /// </summary>
        public InputList<Inputs.NsxvDistributedFirewallRuleAppliedToArgs> AppliedTos
        {
            get => _appliedTos ?? (_appliedTos = new InputList<Inputs.NsxvDistributedFirewallRuleAppliedToArgs>());
            set => _appliedTos = value;
        }

        [Input("destinations")]
        private InputList<Inputs.NsxvDistributedFirewallRuleDestinationArgs>? _destinations;

        /// <summary>
        /// List of destination traffic for this rule. An empty value means 'any'
        /// </summary>
        public InputList<Inputs.NsxvDistributedFirewallRuleDestinationArgs> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<Inputs.NsxvDistributedFirewallRuleDestinationArgs>());
            set => _destinations = value;
        }

        /// <summary>
        /// Direction of the rule (in, out, inout)
        /// </summary>
        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        /// <summary>
        /// Shows whether the NSX-V Distributed Firewall is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// If true, the content of the destination elements is reversed
        /// </summary>
        [Input("excludeDestination")]
        public Input<bool>? ExcludeDestination { get; set; }

        /// <summary>
        /// If true, the content of the source elements is reversed
        /// </summary>
        [Input("excludeSource")]
        public Input<bool>? ExcludeSource { get; set; }

        /// <summary>
        /// Firewall Rule ID
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// Whether the rule traffic is logged
        /// </summary>
        [Input("logged")]
        public Input<bool>? Logged { get; set; }

        /// <summary>
        /// Firewall Rule name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Packet type of the rule (any, ipv4, ipv6)
        /// </summary>
        [Input("packetType")]
        public Input<string>? PacketType { get; set; }

        [Input("sources")]
        private InputList<Inputs.NsxvDistributedFirewallRuleSourceArgs>? _sources;

        /// <summary>
        /// List of source traffic for this rule. An empty value means 'any'
        /// </summary>
        public InputList<Inputs.NsxvDistributedFirewallRuleSourceArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.NsxvDistributedFirewallRuleSourceArgs>());
            set => _sources = value;
        }

        public NsxvDistributedFirewallRuleArgs()
        {
        }
        public static new NsxvDistributedFirewallRuleArgs Empty => new NsxvDistributedFirewallRuleArgs();
    }
}
