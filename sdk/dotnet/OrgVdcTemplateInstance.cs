// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/orgVdcTemplateInstance:OrgVdcTemplateInstance")]
    public partial class OrgVdcTemplateInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defaults to `false`. If this flag is set to `true`, it forcefully deletes the VDC, only when `delete_instantiated_vdc_on_removal=true`
        /// </summary>
        [Output("deleteForce")]
        public Output<bool?> DeleteForce { get; private set; } = null!;

        /// <summary>
        /// If this flag is set to `true`, removing this resource will attempt to delete the instantiated VDC
        /// </summary>
        [Output("deleteInstantiatedVdcOnRemoval")]
        public Output<bool> DeleteInstantiatedVdcOnRemoval { get; private set; } = null!;

        /// <summary>
        /// Defaults to `false`. If this flag is set to `true`, it recursively deletes the VDC, only when `delete_instantiated_vdc_on_removal=true`
        /// </summary>
        [Output("deleteRecursive")]
        public Output<bool?> DeleteRecursive { get; private set; } = null!;

        /// <summary>
        /// Description of the instantiated Organization VDC
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name to give to the instantiated Organization VDC
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ID of the Organization where the VDC will be instantiated
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// The ID of the VDC Template to instantiate
        /// </summary>
        [Output("orgVdcTemplateId")]
        public Output<string> OrgVdcTemplateId { get; private set; } = null!;


        /// <summary>
        /// Create a OrgVdcTemplateInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrgVdcTemplateInstance(string name, OrgVdcTemplateInstanceArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/orgVdcTemplateInstance:OrgVdcTemplateInstance", name, args ?? new OrgVdcTemplateInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrgVdcTemplateInstance(string name, Input<string> id, OrgVdcTemplateInstanceState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/orgVdcTemplateInstance:OrgVdcTemplateInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrgVdcTemplateInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrgVdcTemplateInstance Get(string name, Input<string> id, OrgVdcTemplateInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new OrgVdcTemplateInstance(name, id, state, options);
        }
    }

    public sealed class OrgVdcTemplateInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `false`. If this flag is set to `true`, it forcefully deletes the VDC, only when `delete_instantiated_vdc_on_removal=true`
        /// </summary>
        [Input("deleteForce")]
        public Input<bool>? DeleteForce { get; set; }

        /// <summary>
        /// If this flag is set to `true`, removing this resource will attempt to delete the instantiated VDC
        /// </summary>
        [Input("deleteInstantiatedVdcOnRemoval", required: true)]
        public Input<bool> DeleteInstantiatedVdcOnRemoval { get; set; } = null!;

        /// <summary>
        /// Defaults to `false`. If this flag is set to `true`, it recursively deletes the VDC, only when `delete_instantiated_vdc_on_removal=true`
        /// </summary>
        [Input("deleteRecursive")]
        public Input<bool>? DeleteRecursive { get; set; }

        /// <summary>
        /// Description of the instantiated Organization VDC
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name to give to the instantiated Organization VDC
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the Organization where the VDC will be instantiated
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        /// <summary>
        /// The ID of the VDC Template to instantiate
        /// </summary>
        [Input("orgVdcTemplateId", required: true)]
        public Input<string> OrgVdcTemplateId { get; set; } = null!;

        public OrgVdcTemplateInstanceArgs()
        {
        }
        public static new OrgVdcTemplateInstanceArgs Empty => new OrgVdcTemplateInstanceArgs();
    }

    public sealed class OrgVdcTemplateInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `false`. If this flag is set to `true`, it forcefully deletes the VDC, only when `delete_instantiated_vdc_on_removal=true`
        /// </summary>
        [Input("deleteForce")]
        public Input<bool>? DeleteForce { get; set; }

        /// <summary>
        /// If this flag is set to `true`, removing this resource will attempt to delete the instantiated VDC
        /// </summary>
        [Input("deleteInstantiatedVdcOnRemoval")]
        public Input<bool>? DeleteInstantiatedVdcOnRemoval { get; set; }

        /// <summary>
        /// Defaults to `false`. If this flag is set to `true`, it recursively deletes the VDC, only when `delete_instantiated_vdc_on_removal=true`
        /// </summary>
        [Input("deleteRecursive")]
        public Input<bool>? DeleteRecursive { get; set; }

        /// <summary>
        /// Description of the instantiated Organization VDC
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name to give to the instantiated Organization VDC
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the Organization where the VDC will be instantiated
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// The ID of the VDC Template to instantiate
        /// </summary>
        [Input("orgVdcTemplateId")]
        public Input<string>? OrgVdcTemplateId { get; set; }

        public OrgVdcTemplateInstanceState()
        {
        }
        public static new OrgVdcTemplateInstanceState Empty => new OrgVdcTemplateInstanceState();
    }
}
