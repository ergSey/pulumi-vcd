// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/ipSpaceUplink:IpSpaceUplink")]
    public partial class IpSpaceUplink : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A set of Tier-0 Router Interfaces to associate with this uplink
        /// </summary>
        [Output("associatedInterfaceIds")]
        public Output<ImmutableArray<string>> AssociatedInterfaceIds { get; private set; } = null!;

        /// <summary>
        /// An optional description for IP Space Uplink
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// External Network ID For IP Space Uplink configuration
        /// </summary>
        [Output("externalNetworkId")]
        public Output<string> ExternalNetworkId { get; private set; } = null!;

        /// <summary>
        /// IP Space ID configuration
        /// </summary>
        [Output("ipSpaceId")]
        public Output<string> IpSpaceId { get; private set; } = null!;

        /// <summary>
        /// Backing IP Space type
        /// </summary>
        [Output("ipSpaceType")]
        public Output<string> IpSpaceType { get; private set; } = null!;

        /// <summary>
        /// A tenant facing name for IP Space Uplink
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Status of IP Space Uplink
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a IpSpaceUplink resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IpSpaceUplink(string name, IpSpaceUplinkArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/ipSpaceUplink:IpSpaceUplink", name, args ?? new IpSpaceUplinkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IpSpaceUplink(string name, Input<string> id, IpSpaceUplinkState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/ipSpaceUplink:IpSpaceUplink", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IpSpaceUplink resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IpSpaceUplink Get(string name, Input<string> id, IpSpaceUplinkState? state = null, CustomResourceOptions? options = null)
        {
            return new IpSpaceUplink(name, id, state, options);
        }
    }

    public sealed class IpSpaceUplinkArgs : global::Pulumi.ResourceArgs
    {
        [Input("associatedInterfaceIds")]
        private InputList<string>? _associatedInterfaceIds;

        /// <summary>
        /// A set of Tier-0 Router Interfaces to associate with this uplink
        /// </summary>
        public InputList<string> AssociatedInterfaceIds
        {
            get => _associatedInterfaceIds ?? (_associatedInterfaceIds = new InputList<string>());
            set => _associatedInterfaceIds = value;
        }

        /// <summary>
        /// An optional description for IP Space Uplink
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// External Network ID For IP Space Uplink configuration
        /// </summary>
        [Input("externalNetworkId", required: true)]
        public Input<string> ExternalNetworkId { get; set; } = null!;

        /// <summary>
        /// IP Space ID configuration
        /// </summary>
        [Input("ipSpaceId", required: true)]
        public Input<string> IpSpaceId { get; set; } = null!;

        /// <summary>
        /// A tenant facing name for IP Space Uplink
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public IpSpaceUplinkArgs()
        {
        }
        public static new IpSpaceUplinkArgs Empty => new IpSpaceUplinkArgs();
    }

    public sealed class IpSpaceUplinkState : global::Pulumi.ResourceArgs
    {
        [Input("associatedInterfaceIds")]
        private InputList<string>? _associatedInterfaceIds;

        /// <summary>
        /// A set of Tier-0 Router Interfaces to associate with this uplink
        /// </summary>
        public InputList<string> AssociatedInterfaceIds
        {
            get => _associatedInterfaceIds ?? (_associatedInterfaceIds = new InputList<string>());
            set => _associatedInterfaceIds = value;
        }

        /// <summary>
        /// An optional description for IP Space Uplink
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// External Network ID For IP Space Uplink configuration
        /// </summary>
        [Input("externalNetworkId")]
        public Input<string>? ExternalNetworkId { get; set; }

        /// <summary>
        /// IP Space ID configuration
        /// </summary>
        [Input("ipSpaceId")]
        public Input<string>? IpSpaceId { get; set; }

        /// <summary>
        /// Backing IP Space type
        /// </summary>
        [Input("ipSpaceType")]
        public Input<string>? IpSpaceType { get; set; }

        /// <summary>
        /// A tenant facing name for IP Space Uplink
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Status of IP Space Uplink
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public IpSpaceUplinkState()
        {
        }
        public static new IpSpaceUplinkState Empty => new IpSpaceUplinkState();
    }
}
