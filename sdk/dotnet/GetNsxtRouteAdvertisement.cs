// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtRouteAdvertisement
    {
        /// <summary>
        /// Provides a VMware Cloud Director data source for reading route advertisement in an NSX-T Edge Gateway.
        /// 
        /// ## Example Usage
        /// 
        /// ### Reading Route Advertisement From NSX-T Edge Gateway)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var group1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Name = "my-vdc-group",
        ///     });
        /// 
        ///     var t1 = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         OwnerId = group1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "my-nsxt-edge-gateway",
        ///     });
        /// 
        ///     var routeAdvertisement = Vcd.GetNsxtRouteAdvertisement.Invoke(new()
        ///     {
        ///         EdgeGatewayId = t1.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtRouteAdvertisementResult> InvokeAsync(GetNsxtRouteAdvertisementArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtRouteAdvertisementResult>("vcd:index/getNsxtRouteAdvertisement:getNsxtRouteAdvertisement", args ?? new GetNsxtRouteAdvertisementArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a VMware Cloud Director data source for reading route advertisement in an NSX-T Edge Gateway.
        /// 
        /// ## Example Usage
        /// 
        /// ### Reading Route Advertisement From NSX-T Edge Gateway)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var group1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Name = "my-vdc-group",
        ///     });
        /// 
        ///     var t1 = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         OwnerId = group1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "my-nsxt-edge-gateway",
        ///     });
        /// 
        ///     var routeAdvertisement = Vcd.GetNsxtRouteAdvertisement.Invoke(new()
        ///     {
        ///         EdgeGatewayId = t1.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtRouteAdvertisementResult> Invoke(GetNsxtRouteAdvertisementInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtRouteAdvertisementResult>("vcd:index/getNsxtRouteAdvertisement:getNsxtRouteAdvertisement", args ?? new GetNsxtRouteAdvertisementInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a VMware Cloud Director data source for reading route advertisement in an NSX-T Edge Gateway.
        /// 
        /// ## Example Usage
        /// 
        /// ### Reading Route Advertisement From NSX-T Edge Gateway)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var group1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Name = "my-vdc-group",
        ///     });
        /// 
        ///     var t1 = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         OwnerId = group1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "my-nsxt-edge-gateway",
        ///     });
        /// 
        ///     var routeAdvertisement = Vcd.GetNsxtRouteAdvertisement.Invoke(new()
        ///     {
        ///         EdgeGatewayId = t1.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtRouteAdvertisementResult> Invoke(GetNsxtRouteAdvertisementInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtRouteAdvertisementResult>("vcd:index/getNsxtRouteAdvertisement:getNsxtRouteAdvertisement", args ?? new GetNsxtRouteAdvertisementInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtRouteAdvertisementArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T Edge Gateway ID in which route advertisement is located.
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public string EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organizations.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        public GetNsxtRouteAdvertisementArgs()
        {
        }
        public static new GetNsxtRouteAdvertisementArgs Empty => new GetNsxtRouteAdvertisementArgs();
    }

    public sealed class GetNsxtRouteAdvertisementInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T Edge Gateway ID in which route advertisement is located.
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public Input<string> EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organizations.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        public GetNsxtRouteAdvertisementInvokeArgs()
        {
        }
        public static new GetNsxtRouteAdvertisementInvokeArgs Empty => new GetNsxtRouteAdvertisementInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtRouteAdvertisementResult
    {
        public readonly string EdgeGatewayId;
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Org;
        public readonly ImmutableArray<string> Subnets;

        [OutputConstructor]
        private GetNsxtRouteAdvertisementResult(
            string edgeGatewayId,

            bool enabled,

            string id,

            string? org,

            ImmutableArray<string> subnets)
        {
            EdgeGatewayId = edgeGatewayId;
            Enabled = enabled;
            Id = id;
            Org = org;
            Subnets = subnets;
        }
    }
}
