// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/rdeType:RdeType")]
    public partial class RdeType : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the Runtime Defined Entity Type.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// An external entity's ID that this Runtime Defined Entity Type may apply to.
        /// </summary>
        [Output("externalId")]
        public Output<string?> ExternalId { get; private set; } = null!;

        /// <summary>
        /// Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)  
        /// to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
        /// automatically invoked when the corresponding event is triggered. These blocks have the following properties:
        /// </summary>
        [Output("hooks")]
        public Output<ImmutableArray<Outputs.RdeTypeHook>> Hooks { get; private set; } = null!;

        /// <summary>
        /// To be used when creating a new version of a Runtime Defined Entity Type.
        /// Specifies the version of the type that will be the template for the authorization configuration of the new version.
        /// The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
        /// If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
        /// </summary>
        [Output("inheritedVersion")]
        public Output<string?> InheritedVersion { get; private set; } = null!;

        /// <summary>
        /// The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
        /// </summary>
        [Output("interfaceIds")]
        public Output<ImmutableArray<string>> InterfaceIds { get; private set; } = null!;

        /// <summary>
        /// The name of the Runtime Defined Entity Type.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        /// </summary>
        [Output("nss")]
        public Output<string> Nss { get; private set; } = null!;

        /// <summary>
        /// True if the Runtime Defined Entity Type cannot be modified.
        /// </summary>
        [Output("readonly")]
        public Output<bool> Readonly { get; private set; } = null!;

        /// <summary>
        /// The JSON-Schema valid definition of the Runtime Defined Entity Type
        /// </summary>
        [Output("schema")]
        public Output<string> Schema { get; private set; } = null!;

        /// <summary>
        /// URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
        /// </summary>
        [Output("schemaUrl")]
        public Output<string?> SchemaUrl { get; private set; } = null!;

        /// <summary>
        /// The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        /// </summary>
        [Output("vendor")]
        public Output<string> Vendor { get; private set; } = null!;

        /// <summary>
        /// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a RdeType resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RdeType(string name, RdeTypeArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/rdeType:RdeType", name, args ?? new RdeTypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RdeType(string name, Input<string> id, RdeTypeState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/rdeType:RdeType", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RdeType resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RdeType Get(string name, Input<string> id, RdeTypeState? state = null, CustomResourceOptions? options = null)
        {
            return new RdeType(name, id, state, options);
        }
    }

    public sealed class RdeTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Runtime Defined Entity Type.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// An external entity's ID that this Runtime Defined Entity Type may apply to.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("hooks")]
        private InputList<Inputs.RdeTypeHookArgs>? _hooks;

        /// <summary>
        /// Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)  
        /// to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
        /// automatically invoked when the corresponding event is triggered. These blocks have the following properties:
        /// </summary>
        public InputList<Inputs.RdeTypeHookArgs> Hooks
        {
            get => _hooks ?? (_hooks = new InputList<Inputs.RdeTypeHookArgs>());
            set => _hooks = value;
        }

        /// <summary>
        /// To be used when creating a new version of a Runtime Defined Entity Type.
        /// Specifies the version of the type that will be the template for the authorization configuration of the new version.
        /// The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
        /// If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
        /// </summary>
        [Input("inheritedVersion")]
        public Input<string>? InheritedVersion { get; set; }

        [Input("interfaceIds")]
        private InputList<string>? _interfaceIds;

        /// <summary>
        /// The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
        /// </summary>
        public InputList<string> InterfaceIds
        {
            get => _interfaceIds ?? (_interfaceIds = new InputList<string>());
            set => _interfaceIds = value;
        }

        /// <summary>
        /// The name of the Runtime Defined Entity Type.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        /// </summary>
        [Input("nss", required: true)]
        public Input<string> Nss { get; set; } = null!;

        /// <summary>
        /// The JSON-Schema valid definition of the Runtime Defined Entity Type
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
        /// </summary>
        [Input("schemaUrl")]
        public Input<string>? SchemaUrl { get; set; }

        /// <summary>
        /// The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        /// </summary>
        [Input("vendor", required: true)]
        public Input<string> Vendor { get; set; } = null!;

        /// <summary>
        /// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public RdeTypeArgs()
        {
        }
        public static new RdeTypeArgs Empty => new RdeTypeArgs();
    }

    public sealed class RdeTypeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Runtime Defined Entity Type.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// An external entity's ID that this Runtime Defined Entity Type may apply to.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("hooks")]
        private InputList<Inputs.RdeTypeHookGetArgs>? _hooks;

        /// <summary>
        /// Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)  
        /// to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
        /// automatically invoked when the corresponding event is triggered. These blocks have the following properties:
        /// </summary>
        public InputList<Inputs.RdeTypeHookGetArgs> Hooks
        {
            get => _hooks ?? (_hooks = new InputList<Inputs.RdeTypeHookGetArgs>());
            set => _hooks = value;
        }

        /// <summary>
        /// To be used when creating a new version of a Runtime Defined Entity Type.
        /// Specifies the version of the type that will be the template for the authorization configuration of the new version.
        /// The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
        /// If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
        /// </summary>
        [Input("inheritedVersion")]
        public Input<string>? InheritedVersion { get; set; }

        [Input("interfaceIds")]
        private InputList<string>? _interfaceIds;

        /// <summary>
        /// The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
        /// </summary>
        public InputList<string> InterfaceIds
        {
            get => _interfaceIds ?? (_interfaceIds = new InputList<string>());
            set => _interfaceIds = value;
        }

        /// <summary>
        /// The name of the Runtime Defined Entity Type.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        /// </summary>
        [Input("nss")]
        public Input<string>? Nss { get; set; }

        /// <summary>
        /// True if the Runtime Defined Entity Type cannot be modified.
        /// </summary>
        [Input("readonly")]
        public Input<bool>? Readonly { get; set; }

        /// <summary>
        /// The JSON-Schema valid definition of the Runtime Defined Entity Type
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
        /// </summary>
        [Input("schemaUrl")]
        public Input<string>? SchemaUrl { get; set; }

        /// <summary>
        /// The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        /// </summary>
        [Input("vendor")]
        public Input<string>? Vendor { get; set; }

        /// <summary>
        /// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public RdeTypeState()
        {
        }
        public static new RdeTypeState Empty => new RdeTypeState();
    }
}
