// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtSegmentSpoofGuardProfile
    {
        /// <summary>
        /// Provides a VMware Cloud Director Spoof Guard Profile data source. This can be used to read NSX-T Segment Profile definitions.
        /// 
        /// Supported in provider *v3.11+*.
        /// 
        /// ## Example Usage
        /// 
        /// ### IP Discovery Profile)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var nsxt = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxManager1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtSegmentSpoofGuardProfile.Invoke(new()
        ///     {
        ///         Name = "spoof-guard-profile-0",
        ///         NsxtManagerId = nsxt.Apply(getNsxtManagerResult =&gt; getNsxtManagerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtSegmentSpoofGuardProfileResult> InvokeAsync(GetNsxtSegmentSpoofGuardProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtSegmentSpoofGuardProfileResult>("vcd:index/getNsxtSegmentSpoofGuardProfile:getNsxtSegmentSpoofGuardProfile", args ?? new GetNsxtSegmentSpoofGuardProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a VMware Cloud Director Spoof Guard Profile data source. This can be used to read NSX-T Segment Profile definitions.
        /// 
        /// Supported in provider *v3.11+*.
        /// 
        /// ## Example Usage
        /// 
        /// ### IP Discovery Profile)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var nsxt = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxManager1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtSegmentSpoofGuardProfile.Invoke(new()
        ///     {
        ///         Name = "spoof-guard-profile-0",
        ///         NsxtManagerId = nsxt.Apply(getNsxtManagerResult =&gt; getNsxtManagerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtSegmentSpoofGuardProfileResult> Invoke(GetNsxtSegmentSpoofGuardProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtSegmentSpoofGuardProfileResult>("vcd:index/getNsxtSegmentSpoofGuardProfile:getNsxtSegmentSpoofGuardProfile", args ?? new GetNsxtSegmentSpoofGuardProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a VMware Cloud Director Spoof Guard Profile data source. This can be used to read NSX-T Segment Profile definitions.
        /// 
        /// Supported in provider *v3.11+*.
        /// 
        /// ## Example Usage
        /// 
        /// ### IP Discovery Profile)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var nsxt = Vcd.GetNsxtManager.Invoke(new()
        ///     {
        ///         Name = "nsxManager1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtSegmentSpoofGuardProfile.Invoke(new()
        ///     {
        ///         Name = "spoof-guard-profile-0",
        ///         NsxtManagerId = nsxt.Apply(getNsxtManagerResult =&gt; getNsxtManagerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtSegmentSpoofGuardProfileResult> Invoke(GetNsxtSegmentSpoofGuardProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtSegmentSpoofGuardProfileResult>("vcd:index/getNsxtSegmentSpoofGuardProfile:getNsxtSegmentSpoofGuardProfile", args ?? new GetNsxtSegmentSpoofGuardProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtSegmentSpoofGuardProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of Segment Profile
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Segment Profile search context. Use when searching by NSX-T manager
        /// </summary>
        [Input("nsxtManagerId")]
        public string? NsxtManagerId { get; set; }

        /// <summary>
        /// Segment Profile search context. Use when searching by VDC group
        /// 
        /// &gt; Note: only one of `nsxt_manager_id`, `vdc_id`, `vdc_group_id` can be used
        /// </summary>
        [Input("vdcGroupId")]
        public string? VdcGroupId { get; set; }

        /// <summary>
        /// Segment Profile search context. Use when searching by VDC
        /// </summary>
        [Input("vdcId")]
        public string? VdcId { get; set; }

        public GetNsxtSegmentSpoofGuardProfileArgs()
        {
        }
        public static new GetNsxtSegmentSpoofGuardProfileArgs Empty => new GetNsxtSegmentSpoofGuardProfileArgs();
    }

    public sealed class GetNsxtSegmentSpoofGuardProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of Segment Profile
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Segment Profile search context. Use when searching by NSX-T manager
        /// </summary>
        [Input("nsxtManagerId")]
        public Input<string>? NsxtManagerId { get; set; }

        /// <summary>
        /// Segment Profile search context. Use when searching by VDC group
        /// 
        /// &gt; Note: only one of `nsxt_manager_id`, `vdc_id`, `vdc_group_id` can be used
        /// </summary>
        [Input("vdcGroupId")]
        public Input<string>? VdcGroupId { get; set; }

        /// <summary>
        /// Segment Profile search context. Use when searching by VDC
        /// </summary>
        [Input("vdcId")]
        public Input<string>? VdcId { get; set; }

        public GetNsxtSegmentSpoofGuardProfileInvokeArgs()
        {
        }
        public static new GetNsxtSegmentSpoofGuardProfileInvokeArgs Empty => new GetNsxtSegmentSpoofGuardProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtSegmentSpoofGuardProfileResult
    {
        /// <summary>
        /// Description of Spoof Guard profile
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether Spoof Guard is enabled. If true, it only allows
        /// VM sending traffic with the IPs in the whitelist
        /// </summary>
        public readonly bool IsAddressBindingWhitelistEnabled;
        public readonly string Name;
        public readonly string? NsxtManagerId;
        public readonly string? VdcGroupId;
        public readonly string? VdcId;

        [OutputConstructor]
        private GetNsxtSegmentSpoofGuardProfileResult(
            string description,

            string id,

            bool isAddressBindingWhitelistEnabled,

            string name,

            string? nsxtManagerId,

            string? vdcGroupId,

            string? vdcId)
        {
            Description = description;
            Id = id;
            IsAddressBindingWhitelistEnabled = isAddressBindingWhitelistEnabled;
            Name = name;
            NsxtManagerId = nsxtManagerId;
            VdcGroupId = vdcGroupId;
            VdcId = vdcId;
        }
    }
}
