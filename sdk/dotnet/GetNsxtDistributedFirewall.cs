// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtDistributedFirewall
    {
        /// <summary>
        /// The Distributed Firewall data source reads all defined rules for a particular VDC Group.
        /// 
        /// &gt; There is a different data source
        /// [`vcd.NsxtDistributedFirewallRule`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_distributed_firewall_rule)
        /// resource are available that can fetch a single firewall rule by name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var g1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "my-vdc-group",
        ///     });
        /// 
        ///     var t1 = Vcd.GetNsxtDistributedFirewall.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcGroupId = g1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtDistributedFirewallResult> InvokeAsync(GetNsxtDistributedFirewallArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtDistributedFirewallResult>("vcd:index/getNsxtDistributedFirewall:getNsxtDistributedFirewall", args ?? new GetNsxtDistributedFirewallArgs(), options.WithDefaults());

        /// <summary>
        /// The Distributed Firewall data source reads all defined rules for a particular VDC Group.
        /// 
        /// &gt; There is a different data source
        /// [`vcd.NsxtDistributedFirewallRule`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_distributed_firewall_rule)
        /// resource are available that can fetch a single firewall rule by name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var g1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "my-vdc-group",
        ///     });
        /// 
        ///     var t1 = Vcd.GetNsxtDistributedFirewall.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcGroupId = g1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtDistributedFirewallResult> Invoke(GetNsxtDistributedFirewallInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtDistributedFirewallResult>("vcd:index/getNsxtDistributedFirewall:getNsxtDistributedFirewall", args ?? new GetNsxtDistributedFirewallInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The Distributed Firewall data source reads all defined rules for a particular VDC Group.
        /// 
        /// &gt; There is a different data source
        /// [`vcd.NsxtDistributedFirewallRule`](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_distributed_firewall_rule)
        /// resource are available that can fetch a single firewall rule by name.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var g1 = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "my-vdc-group",
        ///     });
        /// 
        ///     var t1 = Vcd.GetNsxtDistributedFirewall.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcGroupId = g1.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtDistributedFirewallResult> Invoke(GetNsxtDistributedFirewallInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtDistributedFirewallResult>("vcd:index/getNsxtDistributedFirewall:getNsxtDistributedFirewall", args ?? new GetNsxtDistributedFirewallInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtDistributedFirewallArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of organization in which Distributed Firewall is located. Optional if
        /// defined at provider level.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        /// <summary>
        /// The ID of a VDC Group
        /// </summary>
        [Input("vdcGroupId", required: true)]
        public string VdcGroupId { get; set; } = null!;

        public GetNsxtDistributedFirewallArgs()
        {
        }
        public static new GetNsxtDistributedFirewallArgs Empty => new GetNsxtDistributedFirewallArgs();
    }

    public sealed class GetNsxtDistributedFirewallInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of organization in which Distributed Firewall is located. Optional if
        /// defined at provider level.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// The ID of a VDC Group
        /// </summary>
        [Input("vdcGroupId", required: true)]
        public Input<string> VdcGroupId { get; set; } = null!;

        public GetNsxtDistributedFirewallInvokeArgs()
        {
        }
        public static new GetNsxtDistributedFirewallInvokeArgs Empty => new GetNsxtDistributedFirewallInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtDistributedFirewallResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Org;
        public readonly ImmutableArray<Outputs.GetNsxtDistributedFirewallRuleResult> Rules;
        public readonly string VdcGroupId;

        [OutputConstructor]
        private GetNsxtDistributedFirewallResult(
            string id,

            string? org,

            ImmutableArray<Outputs.GetNsxtDistributedFirewallRuleResult> rules,

            string vdcGroupId)
        {
            Id = id;
            Org = org;
            Rules = rules;
            VdcGroupId = vdcGroupId;
        }
    }
}
