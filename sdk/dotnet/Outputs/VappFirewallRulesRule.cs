// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd.Outputs
{

    [OutputType]
    public sealed class VappFirewallRulesRule
    {
        /// <summary>
        /// Destination IP address to which the rule applies. A value of `Any` matches any IP address.
        /// </summary>
        public readonly string? DestinationIp;
        /// <summary>
        /// Destination port to which this rule applies.
        /// </summary>
        public readonly string? DestinationPort;
        /// <summary>
        /// Destination VM identifier
        /// </summary>
        public readonly string? DestinationVmId;
        /// <summary>
        /// The value can be one of: `assigned` - assigned internal IP will be automatically chosen. `NAT`: NATed external IP will be automatically chosen.
        /// </summary>
        public readonly string? DestinationVmIpType;
        /// <summary>
        /// Destination VM NIC ID to which this rule applies.
        /// </summary>
        public readonly int? DestinationVmNicId;
        /// <summary>
        /// 'true' value will enable rule logging. Default is false
        /// </summary>
        public readonly bool? EnableLogging;
        /// <summary>
        /// Enable or disable firewall. Default is `true`.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Rule name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// One of: `drop` (drop packets that match the rule), `allow` (allow packets that match the rule to pass through the firewall)
        /// </summary>
        public readonly string? Policy;
        /// <summary>
        /// Specify the protocols to which the rule should be applied. One of: `any`, `icmp`, `tcp`, `udp`, `tcp&amp;udp`
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// Source IP address to which the rule applies. A value of `Any` matches any IP address.
        /// </summary>
        public readonly string? SourceIp;
        /// <summary>
        /// Source port to which this rule applies.
        /// </summary>
        public readonly string? SourcePort;
        /// <summary>
        /// Source VM identifier
        /// </summary>
        public readonly string? SourceVmId;
        /// <summary>
        /// The value can be one of: `assigned` - assigned internal IP will be automatically chosen. `NAT`: NATed external IP will be automatically chosen.
        /// </summary>
        public readonly string? SourceVmIpType;
        /// <summary>
        /// Source VM NIC ID to which this rule applies.
        /// </summary>
        public readonly int? SourceVmNicId;

        [OutputConstructor]
        private VappFirewallRulesRule(
            string? destinationIp,

            string? destinationPort,

            string? destinationVmId,

            string? destinationVmIpType,

            int? destinationVmNicId,

            bool? enableLogging,

            bool? enabled,

            string? name,

            string? policy,

            string? protocol,

            string? sourceIp,

            string? sourcePort,

            string? sourceVmId,

            string? sourceVmIpType,

            int? sourceVmNicId)
        {
            DestinationIp = destinationIp;
            DestinationPort = destinationPort;
            DestinationVmId = destinationVmId;
            DestinationVmIpType = destinationVmIpType;
            DestinationVmNicId = destinationVmNicId;
            EnableLogging = enableLogging;
            Enabled = enabled;
            Name = name;
            Policy = policy;
            Protocol = protocol;
            SourceIp = sourceIp;
            SourcePort = sourcePort;
            SourceVmId = sourceVmId;
            SourceVmIpType = sourceVmIpType;
            SourceVmNicId = sourceVmNicId;
        }
    }
}
