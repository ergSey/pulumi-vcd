// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd.Outputs
{

    [OutputType]
    public sealed class GetCseKubernetesClusterWorkerPoolResult
    {
        /// <summary>
        /// Maximum replicas of the autoscaling capabilities of this worker pool
        /// </summary>
        public readonly int AutoscalerMaxReplicas;
        /// <summary>
        /// Minimum replicas of the autoscaling capabilities of this worker pool
        /// </summary>
        public readonly int AutoscalerMinReplicas;
        /// <summary>
        /// Disk size, in Gibibytes (Gi), of the control plane nodes
        /// </summary>
        public readonly int DiskSizeGi;
        /// <summary>
        /// The number of nodes that this node pool has
        /// </summary>
        public readonly int MachineCount;
        /// <summary>
        /// Allows to find a Kubernetes cluster by name inside the given Organization with ID `org_id`. Either `cluster_id` or `name` must be set. This argument requires `cse_version` and `org_id` to be set.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// VM Placement policy of the control plane nodes
        /// </summary>
        public readonly string PlacementPolicyId;
        /// <summary>
        /// VM Sizing policy of the control plane nodes
        /// </summary>
        public readonly string SizingPolicyId;
        /// <summary>
        /// Storage profile of the control plane nodes
        /// </summary>
        public readonly string StorageProfileId;
        /// <summary>
        /// vGPU policy of the control plane nodes
        /// </summary>
        public readonly string VgpuPolicyId;

        [OutputConstructor]
        private GetCseKubernetesClusterWorkerPoolResult(
            int autoscalerMaxReplicas,

            int autoscalerMinReplicas,

            int diskSizeGi,

            int machineCount,

            string name,

            string placementPolicyId,

            string sizingPolicyId,

            string storageProfileId,

            string vgpuPolicyId)
        {
            AutoscalerMaxReplicas = autoscalerMaxReplicas;
            AutoscalerMinReplicas = autoscalerMinReplicas;
            DiskSizeGi = diskSizeGi;
            MachineCount = machineCount;
            Name = name;
            PlacementPolicyId = placementPolicyId;
            SizingPolicyId = sizingPolicyId;
            StorageProfileId = storageProfileId;
            VgpuPolicyId = vgpuPolicyId;
        }
    }
}
