// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd.Outputs
{

    [OutputType]
    public sealed class LbServerPoolMember
    {
        /// <summary>
        /// Defines member state. One of enabled, drain, disabled.
        /// </summary>
        public readonly string Condition;
        /// <summary>
        /// The NSX ID of the load balancer server pool
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// IP address of member in server pool
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released
        /// </summary>
        public readonly int? MaxConnections;
        /// <summary>
        /// Minimum number of concurrent connections a member must always accept
        /// </summary>
        public readonly int? MinConnections;
        /// <summary>
        /// Port at which the member is to receive health monitor requests. Can be the same as port
        /// </summary>
        public readonly int MonitorPort;
        /// <summary>
        /// Server Pool name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Port at which the member is to receive traffic from the load balancer
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// Proportion of traffic this member is to handle. Must be an integer in the range 1-256
        /// </summary>
        public readonly int Weight;

        [OutputConstructor]
        private LbServerPoolMember(
            string condition,

            string? id,

            string ipAddress,

            int? maxConnections,

            int? minConnections,

            int monitorPort,

            string name,

            int port,

            int weight)
        {
            Condition = condition;
            Id = id;
            IpAddress = ipAddress;
            MaxConnections = maxConnections;
            MinConnections = minConnections;
            MonitorPort = monitorPort;
            Name = name;
            Port = port;
            Weight = weight;
        }
    }
}
