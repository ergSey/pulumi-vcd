// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd.Outputs
{

    [OutputType]
    public sealed class OrgVappLease
    {
        /// <summary>
        /// If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted.
        /// </summary>
        public readonly bool DeleteOnStorageLeaseExpiration;
        /// <summary>
        /// How long vApps can run before they are automatically stopped (in seconds). 0 means never expires
        /// </summary>
        public readonly int MaximumRuntimeLeaseInSec;
        /// <summary>
        /// How long stopped vApps are available before being automatically cleaned up (in seconds). 0 means never expires
        /// </summary>
        public readonly int MaximumStorageLeaseInSec;
        /// <summary>
        /// When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires
        /// </summary>
        public readonly bool PowerOffOnRuntimeLeaseExpiration;

        [OutputConstructor]
        private OrgVappLease(
            bool deleteOnStorageLeaseExpiration,

            int maximumRuntimeLeaseInSec,

            int maximumStorageLeaseInSec,

            bool powerOffOnRuntimeLeaseExpiration)
        {
            DeleteOnStorageLeaseExpiration = deleteOnStorageLeaseExpiration;
            MaximumRuntimeLeaseInSec = maximumRuntimeLeaseInSec;
            MaximumStorageLeaseInSec = maximumStorageLeaseInSec;
            PowerOffOnRuntimeLeaseExpiration = powerOffOnRuntimeLeaseExpiration;
        }
    }
}
