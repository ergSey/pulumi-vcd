// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd.Outputs
{

    [OutputType]
    public sealed class NsxtDistributedFirewallRule
    {
        /// <summary>
        /// Defines if the rule should 'ALLOW', 'DROP', 'REJECT' matching traffic
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// A set of Application Port Profile IDs. Leaving it empty means 'Any'
        /// </summary>
        public readonly ImmutableArray<string> AppPortProfileIds;
        /// <summary>
        /// Comment that is shown next to rule in UI (VCD 10.3.2+)
        /// </summary>
        public readonly string? Comment;
        /// <summary>
        /// Description is not shown in UI
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Reverses firewall matching for to match all except Destinations Groups specified in 'destination_ids' (VCD 10.3.2+)
        /// </summary>
        public readonly bool? DestinationGroupsExcluded;
        /// <summary>
        /// A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
        /// </summary>
        public readonly ImmutableArray<string> DestinationIds;
        /// <summary>
        /// Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')
        /// </summary>
        public readonly string? Direction;
        /// <summary>
        /// Defined if Firewall Rule is active
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Firewall Rule ID
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')
        /// </summary>
        public readonly string? IpProtocol;
        /// <summary>
        /// Defines if matching traffic should be logged
        /// </summary>
        public readonly bool? Logging;
        /// <summary>
        /// Firewall Rule name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A set of Network Context Profile IDs. Leaving it empty means 'Any'
        /// </summary>
        public readonly ImmutableArray<string> NetworkContextProfileIds;
        /// <summary>
        /// Reverses firewall matching for to match all except Source Groups specified in 'source_ids' (VCD 10.3.2+)
        /// </summary>
        public readonly bool? SourceGroupsExcluded;
        /// <summary>
        /// A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'
        /// </summary>
        public readonly ImmutableArray<string> SourceIds;

        [OutputConstructor]
        private NsxtDistributedFirewallRule(
            string action,

            ImmutableArray<string> appPortProfileIds,

            string? comment,

            string? description,

            bool? destinationGroupsExcluded,

            ImmutableArray<string> destinationIds,

            string? direction,

            bool? enabled,

            string? id,

            string? ipProtocol,

            bool? logging,

            string name,

            ImmutableArray<string> networkContextProfileIds,

            bool? sourceGroupsExcluded,

            ImmutableArray<string> sourceIds)
        {
            Action = action;
            AppPortProfileIds = appPortProfileIds;
            Comment = comment;
            Description = description;
            DestinationGroupsExcluded = destinationGroupsExcluded;
            DestinationIds = destinationIds;
            Direction = direction;
            Enabled = enabled;
            Id = id;
            IpProtocol = ipProtocol;
            Logging = logging;
            Name = name;
            NetworkContextProfileIds = networkContextProfileIds;
            SourceGroupsExcluded = sourceGroupsExcluded;
            SourceIds = sourceIds;
        }
    }
}
