// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd.Outputs
{

    [OutputType]
    public sealed class GetNsxtIpsecVpnTunnelSecurityProfileCustomizationResult
    {
        /// <summary>
        /// Value in seconds of dead probe detection interval. Minimum is 3 seconds and the maximum is 60 seconds
        /// </summary>
        public readonly int DpdProbeInternal;
        /// <summary>
        /// Diffie-Hellman groups to be used if Perfect Forward Secrecy is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
        /// </summary>
        public readonly ImmutableArray<string> IkeDhGroups;
        /// <summary>
        /// Secure hashing algorithms to use during the IKE negotiation. One of SHA1, SHA2_256, SHA2_384, SHA2_512
        /// </summary>
        public readonly ImmutableArray<string> IkeDigestAlgorithms;
        /// <summary>
        /// Encryption algorithms. One of SHA1, SHA2_256, SHA2_384, SHA2_512
        /// </summary>
        public readonly ImmutableArray<string> IkeEncryptionAlgorithms;
        /// <summary>
        /// Security Association life time (in seconds). It is number of seconds before the IPsec tunnel needs to reestablish
        /// </summary>
        public readonly int IkeSaLifetime;
        /// <summary>
        /// IKE version one of IKE_V1, IKE_V2, IKE_FLEX
        /// </summary>
        public readonly string IkeVersion;
        /// <summary>
        /// Policy for handling defragmentation bit. One of COPY, CLEAR
        /// </summary>
        public readonly string TunnelDfPolicy;
        /// <summary>
        /// Diffie-Hellman groups to be used is PFS is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21
        /// </summary>
        public readonly ImmutableArray<string> TunnelDhGroups;
        /// <summary>
        /// Digest algorithms to be used for message digest. One of SHA1, SHA2_256, SHA2_384, SHA2_512
        /// </summary>
        public readonly ImmutableArray<string> TunnelDigestAlgorithms;
        /// <summary>
        /// Encryption algorithms to use in IPSec tunnel establishment. One of AES_128, AES_256, AES_GCM_128, AES_GCM_192, AES_GCM_256, NO_ENCRYPTION_AUTH_AES_GMAC_128, NO_ENCRYPTION_AUTH_AES_GMAC_192, NO_ENCRYPTION_AUTH_AES_GMAC_256, NO_ENCRYPTION
        /// </summary>
        public readonly ImmutableArray<string> TunnelEncryptionAlgorithms;
        /// <summary>
        /// Perfect Forward Secrecy Enabled or Disabled. Default (enabled)
        /// </summary>
        public readonly bool TunnelPfsEnabled;
        /// <summary>
        /// Security Association life time (in seconds)
        /// </summary>
        public readonly int TunnelSaLifetime;

        [OutputConstructor]
        private GetNsxtIpsecVpnTunnelSecurityProfileCustomizationResult(
            int dpdProbeInternal,

            ImmutableArray<string> ikeDhGroups,

            ImmutableArray<string> ikeDigestAlgorithms,

            ImmutableArray<string> ikeEncryptionAlgorithms,

            int ikeSaLifetime,

            string ikeVersion,

            string tunnelDfPolicy,

            ImmutableArray<string> tunnelDhGroups,

            ImmutableArray<string> tunnelDigestAlgorithms,

            ImmutableArray<string> tunnelEncryptionAlgorithms,

            bool tunnelPfsEnabled,

            int tunnelSaLifetime)
        {
            DpdProbeInternal = dpdProbeInternal;
            IkeDhGroups = ikeDhGroups;
            IkeDigestAlgorithms = ikeDigestAlgorithms;
            IkeEncryptionAlgorithms = ikeEncryptionAlgorithms;
            IkeSaLifetime = ikeSaLifetime;
            IkeVersion = ikeVersion;
            TunnelDfPolicy = tunnelDfPolicy;
            TunnelDhGroups = tunnelDhGroups;
            TunnelDigestAlgorithms = tunnelDigestAlgorithms;
            TunnelEncryptionAlgorithms = tunnelEncryptionAlgorithms;
            TunnelPfsEnabled = tunnelPfsEnabled;
            TunnelSaLifetime = tunnelSaLifetime;
        }
    }
}
