// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetRdeType
    {
        /// <summary>
        /// Provides the capability of fetching an existing Runtime Defined Entity Type from VMware Cloud Director.
        /// 
        /// Supported in provider *v3.9+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myRdeType = Vcd.GetRdeType.Invoke(new()
        ///     {
        ///         Vendor = "bigcorp",
        ///         Nss = "tech",
        ///         Version = "1.2.3",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["type-name"] = myRdeType.Apply(getRdeTypeResult =&gt; getRdeTypeResult.Name),
        ///         ["type-id"] = myRdeType.Apply(getRdeTypeResult =&gt; getRdeTypeResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetRdeTypeResult> InvokeAsync(GetRdeTypeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRdeTypeResult>("vcd:index/getRdeType:getRdeType", args ?? new GetRdeTypeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides the capability of fetching an existing Runtime Defined Entity Type from VMware Cloud Director.
        /// 
        /// Supported in provider *v3.9+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myRdeType = Vcd.GetRdeType.Invoke(new()
        ///     {
        ///         Vendor = "bigcorp",
        ///         Nss = "tech",
        ///         Version = "1.2.3",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["type-name"] = myRdeType.Apply(getRdeTypeResult =&gt; getRdeTypeResult.Name),
        ///         ["type-id"] = myRdeType.Apply(getRdeTypeResult =&gt; getRdeTypeResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetRdeTypeResult> Invoke(GetRdeTypeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdeTypeResult>("vcd:index/getRdeType:getRdeType", args ?? new GetRdeTypeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides the capability of fetching an existing Runtime Defined Entity Type from VMware Cloud Director.
        /// 
        /// Supported in provider *v3.9+*
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myRdeType = Vcd.GetRdeType.Invoke(new()
        ///     {
        ///         Vendor = "bigcorp",
        ///         Nss = "tech",
        ///         Version = "1.2.3",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["type-name"] = myRdeType.Apply(getRdeTypeResult =&gt; getRdeTypeResult.Name),
        ///         ["type-id"] = myRdeType.Apply(getRdeTypeResult =&gt; getRdeTypeResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetRdeTypeResult> Invoke(GetRdeTypeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRdeTypeResult>("vcd:index/getRdeType:getRdeType", args ?? new GetRdeTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRdeTypeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique namespace associated with the Runtime Defined Entity Type.
        /// </summary>
        [Input("nss", required: true)]
        public string Nss { get; set; } = null!;

        /// <summary>
        /// The vendor of the Runtime Defined Entity Type.
        /// </summary>
        [Input("vendor", required: true)]
        public string Vendor { get; set; } = null!;

        /// <summary>
        /// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        /// </summary>
        [Input("version", required: true)]
        public string Version { get; set; } = null!;

        public GetRdeTypeArgs()
        {
        }
        public static new GetRdeTypeArgs Empty => new GetRdeTypeArgs();
    }

    public sealed class GetRdeTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique namespace associated with the Runtime Defined Entity Type.
        /// </summary>
        [Input("nss", required: true)]
        public Input<string> Nss { get; set; } = null!;

        /// <summary>
        /// The vendor of the Runtime Defined Entity Type.
        /// </summary>
        [Input("vendor", required: true)]
        public Input<string> Vendor { get; set; } = null!;

        /// <summary>
        /// The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public GetRdeTypeInvokeArgs()
        {
        }
        public static new GetRdeTypeInvokeArgs Empty => new GetRdeTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetRdeTypeResult
    {
        public readonly string Description;
        public readonly string ExternalId;
        public readonly ImmutableArray<Outputs.GetRdeTypeHookResult> Hooks;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InheritedVersion;
        public readonly ImmutableArray<string> InterfaceIds;
        public readonly string Name;
        public readonly string Nss;
        public readonly bool Readonly;
        public readonly string Schema;
        public readonly string Vendor;
        public readonly string Version;

        [OutputConstructor]
        private GetRdeTypeResult(
            string description,

            string externalId,

            ImmutableArray<Outputs.GetRdeTypeHookResult> hooks,

            string id,

            string inheritedVersion,

            ImmutableArray<string> interfaceIds,

            string name,

            string nss,

            bool @readonly,

            string schema,

            string vendor,

            string version)
        {
            Description = description;
            ExternalId = externalId;
            Hooks = hooks;
            Id = id;
            InheritedVersion = inheritedVersion;
            InterfaceIds = interfaceIds;
            Name = name;
            Nss = nss;
            Readonly = @readonly;
            Schema = schema;
            Vendor = vendor;
            Version = version;
        }
    }
}
