// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/nsxtAlbVirtualServiceHttpSecRules:NsxtAlbVirtualServiceHttpSecRules")]
    public partial class NsxtAlbVirtualServiceHttpSecRules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// One or more rule blocks with matching criteria and actions.
        /// 
        /// 
        /// 
        /// &lt;a id="rule-block"&gt;&lt;/a&gt;
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.NsxtAlbVirtualServiceHttpSecRulesRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// An ID of existing ALB Virtual Service.
        /// </summary>
        [Output("virtualServiceId")]
        public Output<string> VirtualServiceId { get; private set; } = null!;


        /// <summary>
        /// Create a NsxtAlbVirtualServiceHttpSecRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NsxtAlbVirtualServiceHttpSecRules(string name, NsxtAlbVirtualServiceHttpSecRulesArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/nsxtAlbVirtualServiceHttpSecRules:NsxtAlbVirtualServiceHttpSecRules", name, args ?? new NsxtAlbVirtualServiceHttpSecRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NsxtAlbVirtualServiceHttpSecRules(string name, Input<string> id, NsxtAlbVirtualServiceHttpSecRulesState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/nsxtAlbVirtualServiceHttpSecRules:NsxtAlbVirtualServiceHttpSecRules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NsxtAlbVirtualServiceHttpSecRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NsxtAlbVirtualServiceHttpSecRules Get(string name, Input<string> id, NsxtAlbVirtualServiceHttpSecRulesState? state = null, CustomResourceOptions? options = null)
        {
            return new NsxtAlbVirtualServiceHttpSecRules(name, id, state, options);
        }
    }

    public sealed class NsxtAlbVirtualServiceHttpSecRulesArgs : global::Pulumi.ResourceArgs
    {
        [Input("rules", required: true)]
        private InputList<Inputs.NsxtAlbVirtualServiceHttpSecRulesRuleArgs>? _rules;

        /// <summary>
        /// One or more rule blocks with matching criteria and actions.
        /// 
        /// 
        /// 
        /// &lt;a id="rule-block"&gt;&lt;/a&gt;
        /// </summary>
        public InputList<Inputs.NsxtAlbVirtualServiceHttpSecRulesRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.NsxtAlbVirtualServiceHttpSecRulesRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// An ID of existing ALB Virtual Service.
        /// </summary>
        [Input("virtualServiceId", required: true)]
        public Input<string> VirtualServiceId { get; set; } = null!;

        public NsxtAlbVirtualServiceHttpSecRulesArgs()
        {
        }
        public static new NsxtAlbVirtualServiceHttpSecRulesArgs Empty => new NsxtAlbVirtualServiceHttpSecRulesArgs();
    }

    public sealed class NsxtAlbVirtualServiceHttpSecRulesState : global::Pulumi.ResourceArgs
    {
        [Input("rules")]
        private InputList<Inputs.NsxtAlbVirtualServiceHttpSecRulesRuleGetArgs>? _rules;

        /// <summary>
        /// One or more rule blocks with matching criteria and actions.
        /// 
        /// 
        /// 
        /// &lt;a id="rule-block"&gt;&lt;/a&gt;
        /// </summary>
        public InputList<Inputs.NsxtAlbVirtualServiceHttpSecRulesRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.NsxtAlbVirtualServiceHttpSecRulesRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// An ID of existing ALB Virtual Service.
        /// </summary>
        [Input("virtualServiceId")]
        public Input<string>? VirtualServiceId { get; set; }

        public NsxtAlbVirtualServiceHttpSecRulesState()
        {
        }
        public static new NsxtAlbVirtualServiceHttpSecRulesState Empty => new NsxtAlbVirtualServiceHttpSecRulesState();
    }
}
