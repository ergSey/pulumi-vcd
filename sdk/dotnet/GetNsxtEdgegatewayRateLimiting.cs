// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtEdgegatewayRateLimiting
    {
        /// <summary>
        /// Supported in provider *v3.9+* and VCD 10.3.2+ with NSX-T.
        /// 
        /// Provides a data source to read NSX-T Edge Gateway Rate Limiting (QoS) configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var v1 = Vcd.GetOrgVdc.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         Name = "nsxt-vdc-datacloud",
        ///     });
        /// 
        ///     var in_vdc = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         OwnerId = v1.Apply(getOrgVdcResult =&gt; getOrgVdcResult.Id),
        ///         Name = "nsxt-gw-datacloud",
        ///     });
        /// 
        ///     var in_vdcGetNsxtEdgegatewayRateLimiting = Vcd.GetNsxtEdgegatewayRateLimiting.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         EdgeGatewayId = in_vdc.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtEdgegatewayRateLimitingResult> InvokeAsync(GetNsxtEdgegatewayRateLimitingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtEdgegatewayRateLimitingResult>("vcd:index/getNsxtEdgegatewayRateLimiting:getNsxtEdgegatewayRateLimiting", args ?? new GetNsxtEdgegatewayRateLimitingArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.9+* and VCD 10.3.2+ with NSX-T.
        /// 
        /// Provides a data source to read NSX-T Edge Gateway Rate Limiting (QoS) configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var v1 = Vcd.GetOrgVdc.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         Name = "nsxt-vdc-datacloud",
        ///     });
        /// 
        ///     var in_vdc = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         OwnerId = v1.Apply(getOrgVdcResult =&gt; getOrgVdcResult.Id),
        ///         Name = "nsxt-gw-datacloud",
        ///     });
        /// 
        ///     var in_vdcGetNsxtEdgegatewayRateLimiting = Vcd.GetNsxtEdgegatewayRateLimiting.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         EdgeGatewayId = in_vdc.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtEdgegatewayRateLimitingResult> Invoke(GetNsxtEdgegatewayRateLimitingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtEdgegatewayRateLimitingResult>("vcd:index/getNsxtEdgegatewayRateLimiting:getNsxtEdgegatewayRateLimiting", args ?? new GetNsxtEdgegatewayRateLimitingInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.9+* and VCD 10.3.2+ with NSX-T.
        /// 
        /// Provides a data source to read NSX-T Edge Gateway Rate Limiting (QoS) configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var v1 = Vcd.GetOrgVdc.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         Name = "nsxt-vdc-datacloud",
        ///     });
        /// 
        ///     var in_vdc = Vcd.GetNsxtEdgegateway.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         OwnerId = v1.Apply(getOrgVdcResult =&gt; getOrgVdcResult.Id),
        ///         Name = "nsxt-gw-datacloud",
        ///     });
        /// 
        ///     var in_vdcGetNsxtEdgegatewayRateLimiting = Vcd.GetNsxtEdgegatewayRateLimiting.Invoke(new()
        ///     {
        ///         Org = "datacloud",
        ///         EdgeGatewayId = in_vdc.Apply(getNsxtEdgegatewayResult =&gt; getNsxtEdgegatewayResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtEdgegatewayRateLimitingResult> Invoke(GetNsxtEdgegatewayRateLimitingInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtEdgegatewayRateLimitingResult>("vcd:index/getNsxtEdgegatewayRateLimiting:getNsxtEdgegatewayRateLimiting", args ?? new GetNsxtEdgegatewayRateLimitingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtEdgegatewayRateLimitingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T Edge Gateway ID
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public string EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// Org in which the NSX-T Edge Gateway is located
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        public GetNsxtEdgegatewayRateLimitingArgs()
        {
        }
        public static new GetNsxtEdgegatewayRateLimitingArgs Empty => new GetNsxtEdgegatewayRateLimitingArgs();
    }

    public sealed class GetNsxtEdgegatewayRateLimitingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T Edge Gateway ID
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public Input<string> EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// Org in which the NSX-T Edge Gateway is located
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        public GetNsxtEdgegatewayRateLimitingInvokeArgs()
        {
        }
        public static new GetNsxtEdgegatewayRateLimitingInvokeArgs Empty => new GetNsxtEdgegatewayRateLimitingInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtEdgegatewayRateLimitingResult
    {
        public readonly string EdgeGatewayId;
        public readonly string EgressProfileId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IngressProfileId;
        public readonly string? Org;

        [OutputConstructor]
        private GetNsxtEdgegatewayRateLimitingResult(
            string edgeGatewayId,

            string egressProfileId,

            string id,

            string ingressProfileId,

            string? org)
        {
            EdgeGatewayId = edgeGatewayId;
            EgressProfileId = egressProfileId;
            Id = id;
            IngressProfileId = ingressProfileId;
            Org = org;
        }
    }
}
