// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/orgSaml:OrgSaml")]
    public partial class OrgSaml : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the SAML attribute that returns the email address of the user
        /// </summary>
        [Output("email")]
        public Output<string?> Email { get; private set; } = null!;

        /// <summary>
        /// If true, the organization will use SAML for authentication
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Your service provider entity ID. Once you set this field, it cannot be changed back to empty
        /// </summary>
        [Output("entityId")]
        public Output<string?> EntityId { get; private set; } = null!;

        /// <summary>
        /// The name of the SAML attribute that returns the first name of the user
        /// </summary>
        [Output("firstName")]
        public Output<string?> FirstName { get; private set; } = null!;

        /// <summary>
        /// The name of the SAML attribute that returns the full name of the user
        /// </summary>
        [Output("fullName")]
        public Output<string?> FullName { get; private set; } = null!;

        /// <summary>
        /// The name of the SAML attribute that returns the identifiers of all the groups of which the user is a member
        /// </summary>
        [Output("group")]
        public Output<string?> Group { get; private set; } = null!;

        /// <summary>
        /// Name of a file containing the metadata text from a SAML Identity Provider. Required if `identity_provider_metadata_text` is not defined
        /// </summary>
        [Output("identityProviderMetadataFile")]
        public Output<string?> IdentityProviderMetadataFile { get; private set; } = null!;

        /// <summary>
        /// Text of the metadata text from a SAML Identity Provider. Required if `identity_provider_metadata_file` is not defined
        /// </summary>
        [Output("identityProviderMetadataText")]
        public Output<string?> IdentityProviderMetadataText { get; private set; } = null!;

        /// <summary>
        /// Since there is only one SAML configuration available for an organization, the resource can be identified by the Org itself
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// The name of the SAML attribute that returns the identifiers of all roles of the user
        /// </summary>
        [Output("role")]
        public Output<string?> Role { get; private set; } = null!;

        /// <summary>
        /// The name of the SAML attribute that returns the surname of the user
        /// </summary>
        [Output("surname")]
        public Output<string?> Surname { get; private set; } = null!;

        /// <summary>
        /// The name of the SAML attribute that returns the username of the user
        /// </summary>
        [Output("userName")]
        public Output<string?> UserName { get; private set; } = null!;


        /// <summary>
        /// Create a OrgSaml resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrgSaml(string name, OrgSamlArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/orgSaml:OrgSaml", name, args ?? new OrgSamlArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrgSaml(string name, Input<string> id, OrgSamlState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/orgSaml:OrgSaml", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrgSaml resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrgSaml Get(string name, Input<string> id, OrgSamlState? state = null, CustomResourceOptions? options = null)
        {
            return new OrgSaml(name, id, state, options);
        }
    }

    public sealed class OrgSamlArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the SAML attribute that returns the email address of the user
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// If true, the organization will use SAML for authentication
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Your service provider entity ID. Once you set this field, it cannot be changed back to empty
        /// </summary>
        [Input("entityId")]
        public Input<string>? EntityId { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the first name of the user
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the full name of the user
        /// </summary>
        [Input("fullName")]
        public Input<string>? FullName { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the identifiers of all the groups of which the user is a member
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// Name of a file containing the metadata text from a SAML Identity Provider. Required if `identity_provider_metadata_text` is not defined
        /// </summary>
        [Input("identityProviderMetadataFile")]
        public Input<string>? IdentityProviderMetadataFile { get; set; }

        /// <summary>
        /// Text of the metadata text from a SAML Identity Provider. Required if `identity_provider_metadata_file` is not defined
        /// </summary>
        [Input("identityProviderMetadataText")]
        public Input<string>? IdentityProviderMetadataText { get; set; }

        /// <summary>
        /// Since there is only one SAML configuration available for an organization, the resource can be identified by the Org itself
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        /// <summary>
        /// The name of the SAML attribute that returns the identifiers of all roles of the user
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the surname of the user
        /// </summary>
        [Input("surname")]
        public Input<string>? Surname { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the username of the user
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public OrgSamlArgs()
        {
        }
        public static new OrgSamlArgs Empty => new OrgSamlArgs();
    }

    public sealed class OrgSamlState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the SAML attribute that returns the email address of the user
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// If true, the organization will use SAML for authentication
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Your service provider entity ID. Once you set this field, it cannot be changed back to empty
        /// </summary>
        [Input("entityId")]
        public Input<string>? EntityId { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the first name of the user
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the full name of the user
        /// </summary>
        [Input("fullName")]
        public Input<string>? FullName { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the identifiers of all the groups of which the user is a member
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// Name of a file containing the metadata text from a SAML Identity Provider. Required if `identity_provider_metadata_text` is not defined
        /// </summary>
        [Input("identityProviderMetadataFile")]
        public Input<string>? IdentityProviderMetadataFile { get; set; }

        /// <summary>
        /// Text of the metadata text from a SAML Identity Provider. Required if `identity_provider_metadata_file` is not defined
        /// </summary>
        [Input("identityProviderMetadataText")]
        public Input<string>? IdentityProviderMetadataText { get; set; }

        /// <summary>
        /// Since there is only one SAML configuration available for an organization, the resource can be identified by the Org itself
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the identifiers of all roles of the user
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the surname of the user
        /// </summary>
        [Input("surname")]
        public Input<string>? Surname { get; set; }

        /// <summary>
        /// The name of the SAML attribute that returns the username of the user
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public OrgSamlState()
        {
        }
        public static new OrgSamlState Empty => new OrgSamlState();
    }
}
