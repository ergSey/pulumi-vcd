// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/orgVdcNsxtNetworkProfile:OrgVdcNsxtNetworkProfile")]
    public partial class OrgVdcNsxtNetworkProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Edge Cluster ID to be used for this VDC
        /// </summary>
        [Output("edgeClusterId")]
        public Output<string?> EdgeClusterId { get; private set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        /// different organizations
        /// </summary>
        [Output("org")]
        public Output<string?> Org { get; private set; } = null!;

        /// <summary>
        /// Default Segment Profile
        /// Template ID for all vApp Networks in a VDC
        /// </summary>
        [Output("vappNetworksDefaultSegmentProfileTemplateId")]
        public Output<string?> VappNetworksDefaultSegmentProfileTemplateId { get; private set; } = null!;

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Output("vdc")]
        public Output<string?> Vdc { get; private set; } = null!;

        /// <summary>
        /// Default Segment Profile
        /// Template ID for all VDC Networks in a VDC
        /// </summary>
        [Output("vdcNetworksDefaultSegmentProfileTemplateId")]
        public Output<string?> VdcNetworksDefaultSegmentProfileTemplateId { get; private set; } = null!;


        /// <summary>
        /// Create a OrgVdcNsxtNetworkProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrgVdcNsxtNetworkProfile(string name, OrgVdcNsxtNetworkProfileArgs? args = null, CustomResourceOptions? options = null)
            : base("vcd:index/orgVdcNsxtNetworkProfile:OrgVdcNsxtNetworkProfile", name, args ?? new OrgVdcNsxtNetworkProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrgVdcNsxtNetworkProfile(string name, Input<string> id, OrgVdcNsxtNetworkProfileState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/orgVdcNsxtNetworkProfile:OrgVdcNsxtNetworkProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrgVdcNsxtNetworkProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrgVdcNsxtNetworkProfile Get(string name, Input<string> id, OrgVdcNsxtNetworkProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new OrgVdcNsxtNetworkProfile(name, id, state, options);
        }
    }

    public sealed class OrgVdcNsxtNetworkProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Edge Cluster ID to be used for this VDC
        /// </summary>
        [Input("edgeClusterId")]
        public Input<string>? EdgeClusterId { get; set; }

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        /// different organizations
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// Default Segment Profile
        /// Template ID for all vApp Networks in a VDC
        /// </summary>
        [Input("vappNetworksDefaultSegmentProfileTemplateId")]
        public Input<string>? VappNetworksDefaultSegmentProfileTemplateId { get; set; }

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        /// <summary>
        /// Default Segment Profile
        /// Template ID for all VDC Networks in a VDC
        /// </summary>
        [Input("vdcNetworksDefaultSegmentProfileTemplateId")]
        public Input<string>? VdcNetworksDefaultSegmentProfileTemplateId { get; set; }

        public OrgVdcNsxtNetworkProfileArgs()
        {
        }
        public static new OrgVdcNsxtNetworkProfileArgs Empty => new OrgVdcNsxtNetworkProfileArgs();
    }

    public sealed class OrgVdcNsxtNetworkProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Edge Cluster ID to be used for this VDC
        /// </summary>
        [Input("edgeClusterId")]
        public Input<string>? EdgeClusterId { get; set; }

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        /// different organizations
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// Default Segment Profile
        /// Template ID for all vApp Networks in a VDC
        /// </summary>
        [Input("vappNetworksDefaultSegmentProfileTemplateId")]
        public Input<string>? VappNetworksDefaultSegmentProfileTemplateId { get; set; }

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        /// <summary>
        /// Default Segment Profile
        /// Template ID for all VDC Networks in a VDC
        /// </summary>
        [Input("vdcNetworksDefaultSegmentProfileTemplateId")]
        public Input<string>? VdcNetworksDefaultSegmentProfileTemplateId { get; set; }

        public OrgVdcNsxtNetworkProfileState()
        {
        }
        public static new OrgVdcNsxtNetworkProfileState Empty => new OrgVdcNsxtNetworkProfileState();
    }
}
