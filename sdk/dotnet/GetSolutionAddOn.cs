// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetSolutionAddOn
    {
        /// <summary>
        /// Supported in provider *v3.13+* and VCD 10.4.1+.
        /// 
        /// Provides a data source to read Solution Add-Ons in Cloud Director. A Solution Add-On is the
        /// representation of a solution that is custom built for Cloud Director in the Cloud
        /// Director extensibility ecosystem. A Solution Add-On can encapsulate UI and API Cloud Director
        /// extensions together with their backend services and lifecycle management. Solution аdd-оns are
        /// distributed as .iso files. A Solution Add-On can contain numerous elements: UI plugins, vApps,
        /// users, roles, runtime defined entities, and more.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dse14 = Vcd.GetSolutionAddOn.Invoke(new()
        ///     {
        ///         Name = "vmware.ds-1.4.0-23376809",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSolutionAddOnResult> InvokeAsync(GetSolutionAddOnArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSolutionAddOnResult>("vcd:index/getSolutionAddOn:getSolutionAddOn", args ?? new GetSolutionAddOnArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.13+* and VCD 10.4.1+.
        /// 
        /// Provides a data source to read Solution Add-Ons in Cloud Director. A Solution Add-On is the
        /// representation of a solution that is custom built for Cloud Director in the Cloud
        /// Director extensibility ecosystem. A Solution Add-On can encapsulate UI and API Cloud Director
        /// extensions together with their backend services and lifecycle management. Solution аdd-оns are
        /// distributed as .iso files. A Solution Add-On can contain numerous elements: UI plugins, vApps,
        /// users, roles, runtime defined entities, and more.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dse14 = Vcd.GetSolutionAddOn.Invoke(new()
        ///     {
        ///         Name = "vmware.ds-1.4.0-23376809",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSolutionAddOnResult> Invoke(GetSolutionAddOnInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSolutionAddOnResult>("vcd:index/getSolutionAddOn:getSolutionAddOn", args ?? new GetSolutionAddOnInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.13+* and VCD 10.4.1+.
        /// 
        /// Provides a data source to read Solution Add-Ons in Cloud Director. A Solution Add-On is the
        /// representation of a solution that is custom built for Cloud Director in the Cloud
        /// Director extensibility ecosystem. A Solution Add-On can encapsulate UI and API Cloud Director
        /// extensions together with their backend services and lifecycle management. Solution аdd-оns are
        /// distributed as .iso files. A Solution Add-On can contain numerous elements: UI plugins, vApps,
        /// users, roles, runtime defined entities, and more.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dse14 = Vcd.GetSolutionAddOn.Invoke(new()
        ///     {
        ///         Name = "vmware.ds-1.4.0-23376809",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSolutionAddOnResult> Invoke(GetSolutionAddOnInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSolutionAddOnResult>("vcd:index/getSolutionAddOn:getSolutionAddOn", args ?? new GetSolutionAddOnInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSolutionAddOnArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Solution Add-On name, e.g. `vmware.ds-1.4.0-23376809`. Solution Add-On
        /// resource [`vcd.SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
        /// `import` with `list@` capability can help listing available names.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetSolutionAddOnArgs()
        {
        }
        public static new GetSolutionAddOnArgs Empty => new GetSolutionAddOnArgs();
    }

    public sealed class GetSolutionAddOnInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Solution Add-On name, e.g. `vmware.ds-1.4.0-23376809`. Solution Add-On
        /// resource [`vcd.SolutionAddOn`](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/solution_add_on)
        /// `import` with `list@` capability can help listing available names.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetSolutionAddOnInvokeArgs()
        {
        }
        public static new GetSolutionAddOnInvokeArgs Empty => new GetSolutionAddOnInvokeArgs();
    }


    [OutputType]
    public sealed class GetSolutionAddOnResult
    {
        public readonly string CatalogItemId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string RdeState;

        [OutputConstructor]
        private GetSolutionAddOnResult(
            string catalogItemId,

            string id,

            string name,

            string rdeState)
        {
            CatalogItemId = catalogItemId;
            Id = id;
            Name = name;
            RdeState = rdeState;
        }
    }
}
