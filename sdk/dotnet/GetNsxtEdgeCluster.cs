// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtEdgeCluster
    {
        /// <summary>
        /// Provides a data source for available NSX-T Edge Clusters.
        /// 
        /// Supported in provider *v3.1+*
        /// 
        /// &gt; **Note:** This data source uses new VMware Cloud Director
        /// [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
        /// requires at least VCD *10.1.1+* and NSX-T *3.0+*.
        /// 
        /// ## Example Usage
        /// 
        /// ### With VDC ID)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var existing = Vcd.GetOrgVdc.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "nsxt-vdc-1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtEdgeCluster.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcId = existing.Apply(getOrgVdcResult =&gt; getOrgVdcResult.Id),
        ///         Name = "edge-cluster-one",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### With VDC Group ID)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var existing = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "nsxt-vdc-group-1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtEdgeCluster.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcGroupId = existing.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "edge-cluster-one",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### With Provider VDC ID)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var nsxt_pvdc = Vcd.GetProviderVdc.Invoke(new()
        ///     {
        ///         Name = "nsxt-provider-vdc",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtEdgeCluster.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         ProviderVdcId = nsxt_pvdc.Apply(getProviderVdcResult =&gt; getProviderVdcResult.Id),
        ///         Name = "edge-cluster-one",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtEdgeClusterResult> InvokeAsync(GetNsxtEdgeClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtEdgeClusterResult>("vcd:index/getNsxtEdgeCluster:getNsxtEdgeCluster", args ?? new GetNsxtEdgeClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source for available NSX-T Edge Clusters.
        /// 
        /// Supported in provider *v3.1+*
        /// 
        /// &gt; **Note:** This data source uses new VMware Cloud Director
        /// [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
        /// requires at least VCD *10.1.1+* and NSX-T *3.0+*.
        /// 
        /// ## Example Usage
        /// 
        /// ### With VDC ID)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var existing = Vcd.GetOrgVdc.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "nsxt-vdc-1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtEdgeCluster.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcId = existing.Apply(getOrgVdcResult =&gt; getOrgVdcResult.Id),
        ///         Name = "edge-cluster-one",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### With VDC Group ID)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var existing = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "nsxt-vdc-group-1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtEdgeCluster.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcGroupId = existing.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "edge-cluster-one",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### With Provider VDC ID)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var nsxt_pvdc = Vcd.GetProviderVdc.Invoke(new()
        ///     {
        ///         Name = "nsxt-provider-vdc",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtEdgeCluster.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         ProviderVdcId = nsxt_pvdc.Apply(getProviderVdcResult =&gt; getProviderVdcResult.Id),
        ///         Name = "edge-cluster-one",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtEdgeClusterResult> Invoke(GetNsxtEdgeClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtEdgeClusterResult>("vcd:index/getNsxtEdgeCluster:getNsxtEdgeCluster", args ?? new GetNsxtEdgeClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a data source for available NSX-T Edge Clusters.
        /// 
        /// Supported in provider *v3.1+*
        /// 
        /// &gt; **Note:** This data source uses new VMware Cloud Director
        /// [OpenAPI](https://code.vmware.com/docs/11982/getting-started-with-vmware-cloud-director-openapi) and
        /// requires at least VCD *10.1.1+* and NSX-T *3.0+*.
        /// 
        /// ## Example Usage
        /// 
        /// ### With VDC ID)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var existing = Vcd.GetOrgVdc.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "nsxt-vdc-1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtEdgeCluster.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcId = existing.Apply(getOrgVdcResult =&gt; getOrgVdcResult.Id),
        ///         Name = "edge-cluster-one",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### With VDC Group ID)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var existing = Vcd.GetVdcGroup.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         Name = "nsxt-vdc-group-1",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtEdgeCluster.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         VdcGroupId = existing.Apply(getVdcGroupResult =&gt; getVdcGroupResult.Id),
        ///         Name = "edge-cluster-one",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### With Provider VDC ID)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var nsxt_pvdc = Vcd.GetProviderVdc.Invoke(new()
        ///     {
        ///         Name = "nsxt-provider-vdc",
        ///     });
        /// 
        ///     var first = Vcd.GetNsxtEdgeCluster.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         ProviderVdcId = nsxt_pvdc.Apply(getProviderVdcResult =&gt; getProviderVdcResult.Id),
        ///         Name = "edge-cluster-one",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtEdgeClusterResult> Invoke(GetNsxtEdgeClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtEdgeClusterResult>("vcd:index/getNsxtEdgeCluster:getNsxtEdgeCluster", args ?? new GetNsxtEdgeClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtEdgeClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T Edge Cluster name. **Note.** NSX-T does allow to have duplicate names therefore to be able
        /// to correctly use this data source there should not be multiple NSX-T Edge Clusters with the same name defined.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of organization to which edge cluster belongs. Optional if defined at provider level.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        /// <summary>
        /// The ID of VDC Group for lookup. Data source `vcd.ProviderVdc` can be used to get ID.
        /// </summary>
        [Input("providerVdcId")]
        public string? ProviderVdcId { get; set; }

        /// <summary>
        /// The name of VDC that owns the edge cluster. Optional if defined at provider level.
        /// </summary>
        [Input("vdc")]
        public string? Vdc { get; set; }

        /// <summary>
        /// The ID of VDC Group for lookup. Data source `vcd.VdcGroup` can be used to get ID.
        /// </summary>
        [Input("vdcGroupId")]
        public string? VdcGroupId { get; set; }

        /// <summary>
        /// The ID of VDC for lookup. Data source `vcd.OrgVdc` can be used to get ID.
        /// </summary>
        [Input("vdcId")]
        public string? VdcId { get; set; }

        public GetNsxtEdgeClusterArgs()
        {
        }
        public static new GetNsxtEdgeClusterArgs Empty => new GetNsxtEdgeClusterArgs();
    }

    public sealed class GetNsxtEdgeClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// NSX-T Edge Cluster name. **Note.** NSX-T does allow to have duplicate names therefore to be able
        /// to correctly use this data source there should not be multiple NSX-T Edge Clusters with the same name defined.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of organization to which edge cluster belongs. Optional if defined at provider level.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// The ID of VDC Group for lookup. Data source `vcd.ProviderVdc` can be used to get ID.
        /// </summary>
        [Input("providerVdcId")]
        public Input<string>? ProviderVdcId { get; set; }

        /// <summary>
        /// The name of VDC that owns the edge cluster. Optional if defined at provider level.
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        /// <summary>
        /// The ID of VDC Group for lookup. Data source `vcd.VdcGroup` can be used to get ID.
        /// </summary>
        [Input("vdcGroupId")]
        public Input<string>? VdcGroupId { get; set; }

        /// <summary>
        /// The ID of VDC for lookup. Data source `vcd.OrgVdc` can be used to get ID.
        /// </summary>
        [Input("vdcId")]
        public Input<string>? VdcId { get; set; }

        public GetNsxtEdgeClusterInvokeArgs()
        {
        }
        public static new GetNsxtEdgeClusterInvokeArgs Empty => new GetNsxtEdgeClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtEdgeClusterResult
    {
        /// <summary>
        /// Deployment type of Edge Cluster.
        /// </summary>
        public readonly string DeploymentType;
        /// <summary>
        /// Edge Cluster description in NSX-T manager.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Number of nodes in Edge Cluster.
        /// </summary>
        public readonly int NodeCount;
        /// <summary>
        /// Type of nodes in Edge Cluster.
        /// </summary>
        public readonly string NodeType;
        public readonly string? Org;
        public readonly string? ProviderVdcId;
        public readonly string? Vdc;
        public readonly string? VdcGroupId;
        public readonly string? VdcId;

        [OutputConstructor]
        private GetNsxtEdgeClusterResult(
            string deploymentType,

            string description,

            string id,

            string name,

            int nodeCount,

            string nodeType,

            string? org,

            string? providerVdcId,

            string? vdc,

            string? vdcGroupId,

            string? vdcId)
        {
            DeploymentType = deploymentType;
            Description = description;
            Id = id;
            Name = name;
            NodeCount = nodeCount;
            NodeType = nodeType;
            Org = org;
            ProviderVdcId = providerVdcId;
            Vdc = vdc;
            VdcGroupId = vdcGroupId;
            VdcId = vdcId;
        }
    }
}
