// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/solutionLandingZone:SolutionLandingZone")]
    public partial class SolutionLandingZone : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This catalog stores all executable .ISO files for solution add-ons. There
        /// can be a single `catalog` element and the required field is `id`.
        /// </summary>
        [Output("catalog")]
        public Output<Outputs.SolutionLandingZoneCatalog> Catalog { get; private set; } = null!;

        /// <summary>
        /// Destination Organization name for Solution Add-ons
        /// </summary>
        [Output("org")]
        public Output<string?> Org { get; private set; } = null!;

        /// <summary>
        /// reports the state of parent [Runtime Defined
        /// Entity](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// A single vdc block that defines landing VDC configuration
        /// 
        /// &lt;a id="vdc"&gt;&lt;/a&gt;
        /// </summary>
        [Output("vdcs")]
        public Output<ImmutableArray<Outputs.SolutionLandingZoneVdc>> Vdcs { get; private set; } = null!;


        /// <summary>
        /// Create a SolutionLandingZone resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SolutionLandingZone(string name, SolutionLandingZoneArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/solutionLandingZone:SolutionLandingZone", name, args ?? new SolutionLandingZoneArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SolutionLandingZone(string name, Input<string> id, SolutionLandingZoneState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/solutionLandingZone:SolutionLandingZone", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/vmware/terraform-provider-vcd/releases/download/v3.14.1/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SolutionLandingZone resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SolutionLandingZone Get(string name, Input<string> id, SolutionLandingZoneState? state = null, CustomResourceOptions? options = null)
        {
            return new SolutionLandingZone(name, id, state, options);
        }
    }

    public sealed class SolutionLandingZoneArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This catalog stores all executable .ISO files for solution add-ons. There
        /// can be a single `catalog` element and the required field is `id`.
        /// </summary>
        [Input("catalog", required: true)]
        public Input<Inputs.SolutionLandingZoneCatalogArgs> Catalog { get; set; } = null!;

        /// <summary>
        /// Destination Organization name for Solution Add-ons
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        [Input("vdcs", required: true)]
        private InputList<Inputs.SolutionLandingZoneVdcArgs>? _vdcs;

        /// <summary>
        /// A single vdc block that defines landing VDC configuration
        /// 
        /// &lt;a id="vdc"&gt;&lt;/a&gt;
        /// </summary>
        public InputList<Inputs.SolutionLandingZoneVdcArgs> Vdcs
        {
            get => _vdcs ?? (_vdcs = new InputList<Inputs.SolutionLandingZoneVdcArgs>());
            set => _vdcs = value;
        }

        public SolutionLandingZoneArgs()
        {
        }
        public static new SolutionLandingZoneArgs Empty => new SolutionLandingZoneArgs();
    }

    public sealed class SolutionLandingZoneState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This catalog stores all executable .ISO files for solution add-ons. There
        /// can be a single `catalog` element and the required field is `id`.
        /// </summary>
        [Input("catalog")]
        public Input<Inputs.SolutionLandingZoneCatalogGetArgs>? Catalog { get; set; }

        /// <summary>
        /// Destination Organization name for Solution Add-ons
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// reports the state of parent [Runtime Defined
        /// Entity](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("vdcs")]
        private InputList<Inputs.SolutionLandingZoneVdcGetArgs>? _vdcs;

        /// <summary>
        /// A single vdc block that defines landing VDC configuration
        /// 
        /// &lt;a id="vdc"&gt;&lt;/a&gt;
        /// </summary>
        public InputList<Inputs.SolutionLandingZoneVdcGetArgs> Vdcs
        {
            get => _vdcs ?? (_vdcs = new InputList<Inputs.SolutionLandingZoneVdcGetArgs>());
            set => _vdcs = value;
        }

        public SolutionLandingZoneState()
        {
        }
        public static new SolutionLandingZoneState Empty => new SolutionLandingZoneState();
    }
}
