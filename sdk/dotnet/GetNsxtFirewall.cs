// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtFirewall
    {
        /// <summary>
        /// Supported in provider *v3.3+* and VCD 10.1+ with NSX-T backed Edge Gateways.
        /// 
        /// Provides a data source to read NSX-T Firewall configuration of an Edge Gateway. Firewalls allow 
        /// user to control the incoming and outgoing network traffic to and from an NSX-T Data Center 
        /// Edge Gateway.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ### Read A List Of Firewall Rules On Edge Gateway)
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testing = Vcd.GetNsxtFirewall.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         EdgeGatewayId = testingVcdNsxtEdgegateway.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtFirewallResult> InvokeAsync(GetNsxtFirewallArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtFirewallResult>("vcd:index/getNsxtFirewall:getNsxtFirewall", args ?? new GetNsxtFirewallArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.3+* and VCD 10.1+ with NSX-T backed Edge Gateways.
        /// 
        /// Provides a data source to read NSX-T Firewall configuration of an Edge Gateway. Firewalls allow 
        /// user to control the incoming and outgoing network traffic to and from an NSX-T Data Center 
        /// Edge Gateway.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ### Read A List Of Firewall Rules On Edge Gateway)
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testing = Vcd.GetNsxtFirewall.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         EdgeGatewayId = testingVcdNsxtEdgegateway.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtFirewallResult> Invoke(GetNsxtFirewallInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtFirewallResult>("vcd:index/getNsxtFirewall:getNsxtFirewall", args ?? new GetNsxtFirewallInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.3+* and VCD 10.1+ with NSX-T backed Edge Gateways.
        /// 
        /// Provides a data source to read NSX-T Firewall configuration of an Edge Gateway. Firewalls allow 
        /// user to control the incoming and outgoing network traffic to and from an NSX-T Data Center 
        /// Edge Gateway.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ### Read A List Of Firewall Rules On Edge Gateway)
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testing = Vcd.GetNsxtFirewall.Invoke(new()
        ///     {
        ///         Org = "my-org",
        ///         EdgeGatewayId = testingVcdNsxtEdgegateway.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtFirewallResult> Invoke(GetNsxtFirewallInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtFirewallResult>("vcd:index/getNsxtFirewall:getNsxtFirewall", args ?? new GetNsxtFirewallInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtFirewallArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Edge Gateway (NSX-T only). Can be looked up using
        /// `vcd.NsxtEdgegateway` data source
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public string EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organizations.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        [Input("vdc")]
        public string? Vdc { get; set; }

        public GetNsxtFirewallArgs()
        {
        }
        public static new GetNsxtFirewallArgs Empty => new GetNsxtFirewallArgs();
    }

    public sealed class GetNsxtFirewallInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Edge Gateway (NSX-T only). Can be looked up using
        /// `vcd.NsxtEdgegateway` data source
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public Input<string> EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful
        /// when connected as sysadmin working across different organizations.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public GetNsxtFirewallInvokeArgs()
        {
        }
        public static new GetNsxtFirewallInvokeArgs Empty => new GetNsxtFirewallInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtFirewallResult
    {
        public readonly string EdgeGatewayId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Org;
        public readonly ImmutableArray<Outputs.GetNsxtFirewallRuleResult> Rules;
        public readonly string? Vdc;

        [OutputConstructor]
        private GetNsxtFirewallResult(
            string edgeGatewayId,

            string id,

            string? org,

            ImmutableArray<Outputs.GetNsxtFirewallRuleResult> rules,

            string? vdc)
        {
            EdgeGatewayId = edgeGatewayId;
            Id = id;
            Org = org;
            Rules = rules;
            Vdc = vdc;
        }
    }
}
