// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetOrgSaml
    {
        /// <summary>
        /// Supported in provider *v3.10+*.
        /// 
        /// Provides a data source to read SAML configuration for an organization.
        /// 
        /// &gt; **Note:** This data source requires system administrator privileges.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_org = Vcd.GetOrg.Invoke(new()
        ///     {
        ///         Name = "my-org",
        ///     });
        /// 
        ///     var first = Vcd.GetOrgSaml.Invoke(new()
        ///     {
        ///         OrgId = my_org.Apply(getOrgResult =&gt; getOrgResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrgSamlResult> InvokeAsync(GetOrgSamlArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrgSamlResult>("vcd:index/getOrgSaml:getOrgSaml", args ?? new GetOrgSamlArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.10+*.
        /// 
        /// Provides a data source to read SAML configuration for an organization.
        /// 
        /// &gt; **Note:** This data source requires system administrator privileges.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_org = Vcd.GetOrg.Invoke(new()
        ///     {
        ///         Name = "my-org",
        ///     });
        /// 
        ///     var first = Vcd.GetOrgSaml.Invoke(new()
        ///     {
        ///         OrgId = my_org.Apply(getOrgResult =&gt; getOrgResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrgSamlResult> Invoke(GetOrgSamlInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrgSamlResult>("vcd:index/getOrgSaml:getOrgSaml", args ?? new GetOrgSamlInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.10+*.
        /// 
        /// Provides a data source to read SAML configuration for an organization.
        /// 
        /// &gt; **Note:** This data source requires system administrator privileges.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_org = Vcd.GetOrg.Invoke(new()
        ///     {
        ///         Name = "my-org",
        ///     });
        /// 
        ///     var first = Vcd.GetOrgSaml.Invoke(new()
        ///     {
        ///         OrgId = my_org.Apply(getOrgResult =&gt; getOrgResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrgSamlResult> Invoke(GetOrgSamlInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrgSamlResult>("vcd:index/getOrgSaml:getOrgSaml", args ?? new GetOrgSamlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrgSamlArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the organization containing the SAML settings
        /// </summary>
        [Input("orgId", required: true)]
        public string OrgId { get; set; } = null!;

        public GetOrgSamlArgs()
        {
        }
        public static new GetOrgSamlArgs Empty => new GetOrgSamlArgs();
    }

    public sealed class GetOrgSamlInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the organization containing the SAML settings
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        public GetOrgSamlInvokeArgs()
        {
        }
        public static new GetOrgSamlInvokeArgs Empty => new GetOrgSamlInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrgSamlResult
    {
        /// <summary>
        /// The name of the SAML attribute that returns the email address of the user
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// Shows whether the SAML identity service is used for authentication
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Your service provider entity ID
        /// </summary>
        public readonly string EntityId;
        /// <summary>
        /// The name of the SAML attribute that returns the first name of the user
        /// </summary>
        public readonly string FirstName;
        /// <summary>
        /// The name of the SAML attribute that returns the full name of the user
        /// </summary>
        public readonly string FullName;
        /// <summary>
        /// The name of the SAML attribute that returns the identifiers of all the groups of which the user is a member
        /// </summary>
        public readonly string Group;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string OrgId;
        /// <summary>
        /// The name of the SAML attribute that returns the identifiers of all roles of the user
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// The name of the SAML attribute that returns the surname of the user
        /// </summary>
        public readonly string Surname;
        /// <summary>
        /// The name of the SAML attribute that returns the username of the user
        /// </summary>
        public readonly string UserName;

        [OutputConstructor]
        private GetOrgSamlResult(
            string email,

            bool enabled,

            string entityId,

            string firstName,

            string fullName,

            string group,

            string id,

            string orgId,

            string role,

            string surname,

            string userName)
        {
            Email = email;
            Enabled = enabled;
            EntityId = entityId;
            FirstName = firstName;
            FullName = fullName;
            Group = group;
            Id = id;
            OrgId = orgId;
            Role = role;
            Surname = surname;
            UserName = userName;
        }
    }
}
