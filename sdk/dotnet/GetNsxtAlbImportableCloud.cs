// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtAlbImportableCloud
    {
        /// <summary>
        /// Supported in provider *v3.4+* and VCD 10.2+ with NSX-T and ALB.
        /// 
        /// Provides a data source to reference existing ALB Importable Clouds. An NSX-T Importable Cloud is a reference to a
        /// Cloud configured in ALB Controller.
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// &gt; VCD 10.3.0 has a caching bug which prevents listing importable clouds immediately after [ALB
        /// Controller](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_alb_controller) is created. This data should be
        /// available 15 minutes after the Controller is created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtAlbController.Invoke(new()
        ///     {
        ///         Name = "alb-controller",
        ///     });
        /// 
        ///     var cld = Vcd.GetNsxtAlbImportableCloud.Invoke(new()
        ///     {
        ///         Name = "NSXT Importable Cloud",
        ///         ControllerId = first.Apply(getNsxtAlbControllerResult =&gt; getNsxtAlbControllerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNsxtAlbImportableCloudResult> InvokeAsync(GetNsxtAlbImportableCloudArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNsxtAlbImportableCloudResult>("vcd:index/getNsxtAlbImportableCloud:getNsxtAlbImportableCloud", args ?? new GetNsxtAlbImportableCloudArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.4+* and VCD 10.2+ with NSX-T and ALB.
        /// 
        /// Provides a data source to reference existing ALB Importable Clouds. An NSX-T Importable Cloud is a reference to a
        /// Cloud configured in ALB Controller.
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// &gt; VCD 10.3.0 has a caching bug which prevents listing importable clouds immediately after [ALB
        /// Controller](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_alb_controller) is created. This data should be
        /// available 15 minutes after the Controller is created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtAlbController.Invoke(new()
        ///     {
        ///         Name = "alb-controller",
        ///     });
        /// 
        ///     var cld = Vcd.GetNsxtAlbImportableCloud.Invoke(new()
        ///     {
        ///         Name = "NSXT Importable Cloud",
        ///         ControllerId = first.Apply(getNsxtAlbControllerResult =&gt; getNsxtAlbControllerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtAlbImportableCloudResult> Invoke(GetNsxtAlbImportableCloudInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtAlbImportableCloudResult>("vcd:index/getNsxtAlbImportableCloud:getNsxtAlbImportableCloud", args ?? new GetNsxtAlbImportableCloudInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Supported in provider *v3.4+* and VCD 10.2+ with NSX-T and ALB.
        /// 
        /// Provides a data source to reference existing ALB Importable Clouds. An NSX-T Importable Cloud is a reference to a
        /// Cloud configured in ALB Controller.
        /// 
        /// &gt; Only `System Administrator` can use this data source.
        /// 
        /// &gt; VCD 10.3.0 has a caching bug which prevents listing importable clouds immediately after [ALB
        /// Controller](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/nsxt_alb_controller) is created. This data should be
        /// available 15 minutes after the Controller is created.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vcd = Pulumi.Vcd;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var first = Vcd.GetNsxtAlbController.Invoke(new()
        ///     {
        ///         Name = "alb-controller",
        ///     });
        /// 
        ///     var cld = Vcd.GetNsxtAlbImportableCloud.Invoke(new()
        ///     {
        ///         Name = "NSXT Importable Cloud",
        ///         ControllerId = first.Apply(getNsxtAlbControllerResult =&gt; getNsxtAlbControllerResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNsxtAlbImportableCloudResult> Invoke(GetNsxtAlbImportableCloudInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNsxtAlbImportableCloudResult>("vcd:index/getNsxtAlbImportableCloud:getNsxtAlbImportableCloud", args ?? new GetNsxtAlbImportableCloudInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtAlbImportableCloudArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ALB Controller ID
        /// </summary>
        [Input("controllerId", required: true)]
        public string ControllerId { get; set; } = null!;

        /// <summary>
        /// Name of ALB Importable Cloud
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetNsxtAlbImportableCloudArgs()
        {
        }
        public static new GetNsxtAlbImportableCloudArgs Empty => new GetNsxtAlbImportableCloudArgs();
    }

    public sealed class GetNsxtAlbImportableCloudInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ALB Controller ID
        /// </summary>
        [Input("controllerId", required: true)]
        public Input<string> ControllerId { get; set; } = null!;

        /// <summary>
        /// Name of ALB Importable Cloud
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetNsxtAlbImportableCloudInvokeArgs()
        {
        }
        public static new GetNsxtAlbImportableCloudInvokeArgs Empty => new GetNsxtAlbImportableCloudInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtAlbImportableCloudResult
    {
        /// <summary>
        /// boolean value which displays if the ALB Importable Cloud is already consumed
        /// </summary>
        public readonly bool AlreadyImported;
        public readonly string ControllerId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// backing network pool ID
        /// </summary>
        public readonly string NetworkPoolId;
        /// <summary>
        /// backing network pool ID
        /// </summary>
        public readonly string NetworkPoolName;
        /// <summary>
        /// backing transport zone name
        /// </summary>
        public readonly string TransportZoneName;

        [OutputConstructor]
        private GetNsxtAlbImportableCloudResult(
            bool alreadyImported,

            string controllerId,

            string id,

            string name,

            string networkPoolId,

            string networkPoolName,

            string transportZoneName)
        {
            AlreadyImported = alreadyImported;
            ControllerId = controllerId;
            Id = id;
            Name = name;
            NetworkPoolId = networkPoolId;
            NetworkPoolName = networkPoolName;
            TransportZoneName = transportZoneName;
        }
    }
}
